/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(1);
	var Application_1 = __webpack_require__(5);
	var App_1 = __webpack_require__(100);
	var app = Application_1.default.getInstance();
	app.run(App_1.default, '#app', true);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(2);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../.0.23.1@css-loader/index.js!./vue-beauty.min.css", function() {
				var newContent = require("!!./../../../.0.23.1@css-loader/index.js!./vue-beauty.min.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}*{-webkit-tap-highlight-color:rgba(0,0,0,0)}*,:after,:before{box-sizing:border-box}body,html{width:100%;height:100%}body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:12px;line-height:1.5;color:#333;background-color:#fff}article,aside,blockquote,body,button,code,dd,details,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,hr,input,legend,li,menu,nav,ol,p,pre,section,td,textarea,th,ul{margin:0;padding:0}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit;color:inherit}ol,ul{list-style:none}input::-ms-clear,input::-ms-reveal{display:none}::selection{background:#369be9;color:#fff}a{color:#369be9;background:transparent;text-decoration:none;outline:none;cursor:pointer;transition:color .3s ease}a:hover{color:#66b3ee}a:active{color:#2c83cd}a:active,a:hover{outline:0;text-decoration:none}a[disabled]{color:rgba(0,0,0,.25);cursor:not-allowed;pointer-events:none}.ant-divider{margin:0 6px;display:inline-block;height:8px;width:1px;background:#ccc}.clearfix,.container,.container-fluid{zoom:1}.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before{content:\" \";display:table}.clearfix:after,.container-fluid:after,.container:after{clear:both;visibility:hidden;font-size:0;height:0}.pull-left{float:left}.pull-right{float:right}.hide{display:none!important}.show{display:block!important}.invisible{visibility:hidden}.ant-divider{margin:0 4px;color:#999;display:inline-block;height:8px;width:1px;background:#ccc}code,kbd,pre,samp{font-family:Consolas,Menlo,Courier,monospace}.container{margin-right:auto;margin-left:auto;padding-left:0;padding-right:0}@media (min-width:768px){.container{width:720px}}@media (min-width:992px){.container{width:940px}}@media (min-width:1200px){.container{width:1140px}}.container-fluid{margin-right:auto;margin-left:auto;padding-left:0;padding-right:0}.text-left{text-align:left}.text-right{text-align:right}.text-center{text-align:center}.text-justify{text-align:justify}.text-nowrap{white-space:nowrap}.text-muted{color:#d9d9d9}.text-primary{color:#369be9}.text-success{color:#16c294}.text-warning{color:#fa0}.text-error{color:#e95471}.text-dark{color:#000}.text-md{font-size:12px}.text-lg{font-size:14px}.text-xl{font-size:16px}.text-xxl{font-size:18px}.bg-primary{color:#fff;background-color:#369be9}.bg-success{color:#fff;background-color:#16c294}.bg-warning{color:#fff;background-color:#fa0}.bg-error{color:#fff;background-color:#e95471}.bg-muted{background-color:#d9d9d9}.margin-5{margin:5px!important}.margin-10{margin:10px!important}.margin-15{margin:15px!important}.margin-20{margin:20px!important}.margin-25{margin:25px!important}.margin-left-5{margin-left:5px!important}.margin-left-10{margin-left:10px!important}.margin-left-15{margin-left:15px!important}.margin-left-20{margin-left:20px!important}.margin-left-25{margin-left:25px!important}.margin-right-5{margin-right:5px!important}.margin-right-10{margin-right:10px!important}.margin-right-15{margin-right:15px!important}.margin-right-20{margin-right:20px!important}.margin-right-25{margin-right:25px!important}.margin-top-5{margin-top:5px!important}.margin-top-10{margin-top:10px!important}.margin-top-15{margin-top:15px!important}.margin-top-20{margin-top:20px!important}.margin-top-25{margin-top:25px!important}.margin-bottom-5{margin-bottom:5px!important}.margin-bottom-10{margin-bottom:10px!important}.margin-bottom-15{margin-bottom:15px!important}.margin-bottom-20{margin-bottom:20px!important}.margin-bottom-25{margin-bottom:25px!important}.padding-5{padding:5px!important}.padding-10{padding:10px!important}.padding-15{padding:15px!important}.padding-20{padding:20px!important}.padding-25{padding:25px!important}.padding-left-5{padding-left:5px!important}.padding-left-10{padding-left:10px!important}.padding-left-15{padding-left:15px!important}.padding-left-20{padding-left:20px!important}.padding-left-25{padding-left:25px!important}.padding-right-5{padding-right:5px!important}.padding-right-10{padding-right:10px!important}.padding-right-15{padding-right:15px!important}.padding-right-20{padding-right:20px!important}.padding-right-25{padding-right:25px!important}.padding-top-5{padding-top:5px!important}.padding-top-10{padding-top:10px!important}.padding-top-15{padding-top:15px!important}.padding-top-20{padding-top:20px!important}.padding-top-25{padding-top:25px!important}.padding-bottom-5{padding-bottom:5px!important}.padding-bottom-10{padding-bottom:10px!important}.padding-bottom-15{padding-bottom:15px!important}.padding-bottom-20{padding-bottom:20px!important}.padding-bottom-25{padding-bottom:25px!important}@font-face{font-family:anticon;src:url(\"https://at.alicdn.com/t/font_r5u29ls31bgldi.eot\");src:url(\"https://at.alicdn.com/t/font_r5u29ls31bgldi.eot?#iefix\") format(\"embedded-opentype\"),url(\"https://at.alicdn.com/t/font_r5u29ls31bgldi.woff\") format(\"woff\"),url(\"https://at.alicdn.com/t/font_r5u29ls31bgldi.ttf\") format(\"truetype\"),url(\"https://at.alicdn.com/t/font_r5u29ls31bgldi.svg#iconfont\") format(\"svg\")}.anticon{display:inline-block;font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;line-height:1;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.anticon:before{display:block;font-family:anticon!important}.anticon-step-forward:before{content:\"\\E600\"}.anticon-step-backward:before{content:\"\\E601\"}.anticon-forward:before{content:\"\\E602\"}.anticon-backward:before{content:\"\\E603\"}.anticon-caret-right:before{content:\"\\E604\"}.anticon-caret-left:before{content:\"\\E605\"}.anticon-caret-down:before{content:\"\\E606\"}.anticon-caret-up:before{content:\"\\E607\"}.anticon-caret-circle-right:before,.anticon-circle-right:before,.anticon-right-circle:before{content:\"\\E608\"}.anticon-caret-circle-left:before,.anticon-circle-left:before,.anticon-left-circle:before{content:\"\\E609\"}.anticon-caret-circle-up:before,.anticon-circle-up:before,.anticon-up-circle:before{content:\"\\E60A\"}.anticon-caret-circle-down:before,.anticon-circle-down:before,.anticon-down-circle:before{content:\"\\E60B\"}.anticon-right-circle-o:before{content:\"\\E60C\"}.anticon-caret-circle-o-right:before,.anticon-circle-o-right:before{content:\"\\E60C\"}.anticon-left-circle-o:before{content:\"\\E60D\"}.anticon-caret-circle-o-left:before,.anticon-circle-o-left:before{content:\"\\E60D\"}.anticon-up-circle-o:before{content:\"\\E60E\"}.anticon-caret-circle-o-up:before,.anticon-circle-o-up:before{content:\"\\E60E\"}.anticon-down-circle-o:before{content:\"\\E60F\"}.anticon-caret-circle-o-down:before,.anticon-circle-o-down:before{content:\"\\E60F\"}.anticon-verticle-left:before{content:\"\\E610\"}.anticon-verticle-right:before{content:\"\\E611\"}.anticon-rollback:before{content:\"\\E612\"}.anticon-retweet:before{content:\"\\E613\"}.anticon-shrink:before{content:\"\\E614\"}.anticon-arrow-salt:before,.anticon-arrows-alt:before{content:\"\\E615\"}.anticon-reload:before{content:\"\\E616\"}.anticon-double-right:before{content:\"\\E617\"}.anticon-double-left:before{content:\"\\E618\"}.anticon-arrow-down:before{content:\"\\E619\"}.anticon-arrow-up:before{content:\"\\E61A\"}.anticon-arrow-right:before{content:\"\\E61B\"}.anticon-arrow-left:before{content:\"\\E61C\"}.anticon-down:before{content:\"\\E61D\"}.anticon-up:before{content:\"\\E61E\"}.anticon-right:before{content:\"\\E61F\"}.anticon-left:before{content:\"\\E620\"}.anticon-minus-square-o:before{content:\"\\E621\"}.anticon-minus-circle:before{content:\"\\E622\"}.anticon-minus-circle-o:before{content:\"\\E623\"}.anticon-minus:before{content:\"\\E624\"}.anticon-plus-circle-o:before{content:\"\\E625\"}.anticon-plus-circle:before{content:\"\\E626\"}.anticon-plus:before{content:\"\\E627\"}.anticon-info-circle:before{content:\"\\E628\"}.anticon-info-circle-o:before{content:\"\\E629\"}.anticon-info:before{content:\"\\E62A\"}.anticon-exclamation:before{content:\"\\E62B\"}.anticon-exclamation-circle:before{content:\"\\E62C\"}.anticon-exclamation-circle-o:before{content:\"\\E62D\"}.anticon-close-circle:before,.anticon-cross-circle:before{content:\"\\E62E\"}.anticon-close-circle-o:before,.anticon-cross-circle-o:before{content:\"\\E62F\"}.anticon-check-circle:before{content:\"\\E630\"}.anticon-check-circle-o:before{content:\"\\E631\"}.anticon-check:before{content:\"\\E632\"}.anticon-close:before,.anticon-cross:before{content:\"\\E633\"}.anticon-customer-service:before,.anticon-customerservice:before{content:\"\\E634\"}.anticon-credit-card:before{content:\"\\E635\"}.anticon-code-o:before{content:\"\\E636\"}.anticon-book:before{content:\"\\E637\"}.anticon-bar-chart:before{content:\"\\E638\"}.anticon-bars:before{content:\"\\E639\"}.anticon-question:before{content:\"\\E63A\"}.anticon-question-circle:before{content:\"\\E63B\"}.anticon-question-circle-o:before{content:\"\\E63C\"}.anticon-pause:before{content:\"\\E63D\"}.anticon-pause-circle:before{content:\"\\E63E\"}.anticon-pause-circle-o:before{content:\"\\E63F\"}.anticon-clock-circle:before{content:\"\\E640\"}.anticon-clock-circle-o:before{content:\"\\E641\"}.anticon-swap:before{content:\"\\E642\"}.anticon-swap-left:before{content:\"\\E643\"}.anticon-swap-right:before{content:\"\\E644\"}.anticon-plus-square-o:before{content:\"\\E645\"}.anticon-frown-circle:before,.anticon-frown:before{content:\"\\E646\"}.anticon-ellipsis:before{content:\"\\E647\"}.anticon-copy:before{content:\"\\E648\"}.anticon-menu-fold:before{content:\"\\E658\"}.anticon-mail:before{content:\"\\E659\"}.anticon-logout:before{content:\"\\E65A\"}.anticon-link:before{content:\"\\E65B\"}.anticon-area-chart:before{content:\"\\E65C\"}.anticon-line-chart:before{content:\"\\E65D\"}.anticon-home:before{content:\"\\E65E\"}.anticon-laptop:before{content:\"\\E65F\"}.anticon-star:before{content:\"\\E660\"}.anticon-star-o:before{content:\"\\E661\"}.anticon-folder:before{content:\"\\E662\"}.anticon-filter:before{content:\"\\E663\"}.anticon-file:before{content:\"\\E664\"}.anticon-exception:before{content:\"\\E665\"}.anticon-meh-circle:before,.anticon-meh:before{content:\"\\E666\"}.anticon-meh-o:before{content:\"\\E667\"}.anticon-shopping-cart:before{content:\"\\E668\"}.anticon-save:before{content:\"\\E669\"}.anticon-user:before{content:\"\\E66A\"}.anticon-video-camera:before{content:\"\\E66B\"}.anticon-to-top:before{content:\"\\E66C\"}.anticon-team:before{content:\"\\E66D\"}.anticon-tablet:before{content:\"\\E66E\"}.anticon-solution:before{content:\"\\E66F\"}.anticon-search:before{content:\"\\E670\"}.anticon-share-alt:before{content:\"\\E671\"}.anticon-setting:before{content:\"\\E672\"}.anticon-poweroff:before{content:\"\\E6D5\"}.anticon-picture:before{content:\"\\E674\"}.anticon-phone:before{content:\"\\E675\"}.anticon-paper-clip:before{content:\"\\E676\"}.anticon-notification:before{content:\"\\E677\"}.anticon-mobile:before{content:\"\\E678\"}.anticon-menu-unfold:before{content:\"\\E679\"}.anticon-inbox:before{content:\"\\E67A\"}.anticon-lock:before{content:\"\\E67B\"}.anticon-qrcode:before{content:\"\\E67C\"}.anticon-play-circle:before{content:\"\\E6D0\"}.anticon-play-circle-o:before{content:\"\\E6D1\"}.anticon-tag:before{content:\"\\E6D2\"}.anticon-tag-o:before{content:\"\\E6D3\"}.anticon-tags:before{content:\"\\E67D\"}.anticon-tags-o:before{content:\"\\E67E\"}.anticon-cloud-o:before{content:\"\\E67F\"}.anticon-cloud:before{content:\"\\E680\"}.anticon-cloud-upload:before{content:\"\\E681\"}.anticon-cloud-download:before{content:\"\\E682\"}.anticon-cloud-download-o:before{content:\"\\E683\"}.anticon-cloud-upload-o:before{content:\"\\E684\"}.anticon-environment:before{content:\"\\E685\"}.anticon-environment-o:before{content:\"\\E686\"}.anticon-eye:before{content:\"\\E687\"}.anticon-eye-o:before{content:\"\\E688\"}.anticon-camera:before{content:\"\\E689\"}.anticon-camera-o:before{content:\"\\E68A\"}.anticon-windows:before{content:\"\\E68B\"}.anticon-apple:before{content:\"\\E68C\"}.anticon-apple-o:before{content:\"\\E6D4\"}.anticon-android:before{content:\"\\E68D\"}.anticon-aliwangwang:before{content:\"\\E68E\"}.anticon-aliwangwang-o:before{content:\"\\E68F\"}.anticon-export:before{content:\"\\E691\"}.anticon-edit:before{content:\"\\E692\"}.anticon-circle-down-o:before{content:\"\\E693\"}.anticon-circle-down-:before{content:\"\\E694\"}.anticon-appstore-o:before{content:\"\\E695\"}.anticon-appstore:before{content:\"\\E696\"}.anticon-scan:before{content:\"\\E697\"}.anticon-file-text:before{content:\"\\E698\"}.anticon-folder-open:before{content:\"\\E699\"}.anticon-hdd:before{content:\"\\E69A\"}.anticon-ie:before{content:\"\\E69B\"}.anticon-file-jpg:before{content:\"\\E69C\"}.anticon-like:before{content:\"\\E64C\"}.anticon-like-o:before{content:\"\\E69D\"}.anticon-dislike:before{content:\"\\E64B\"}.anticon-dislike-o:before{content:\"\\E69E\"}.anticon-delete:before{content:\"\\E69F\"}.anticon-enter:before{content:\"\\E6A0\"}.anticon-pushpin-o:before{content:\"\\E6A1\"}.anticon-pushpin:before{content:\"\\E6A2\"}.anticon-heart:before{content:\"\\E6A3\"}.anticon-heart-o:before{content:\"\\E6A4\"}.anticon-pay-circle:before{content:\"\\E6A5\"}.anticon-pay-circle-o:before{content:\"\\E6A6\"}.anticon-smile-circle:before,.anticon-smile:before{content:\"\\E6A7\"}.anticon-smile-o:before{content:\"\\E6A8\"}.anticon-frown-o:before{content:\"\\E6A9\"}.anticon-calculator:before{content:\"\\E6AA\"}.anticon-message:before{content:\"\\E6AB\"}.anticon-chrome:before{content:\"\\E6AC\"}.anticon-github:before{content:\"\\E6AD\"}.anticon-file-unknown:before{content:\"\\E6AF\"}.anticon-file-excel:before{content:\"\\E6B0\"}.anticon-file-ppt:before{content:\"\\E6B1\"}.anticon-file-word:before{content:\"\\E6B2\"}.anticon-file-pdf:before{content:\"\\E6B3\"}.anticon-desktop:before{content:\"\\E6B4\"}.anticon-upload:before{content:\"\\E6B6\"}.anticon-download:before{content:\"\\E6B7\"}.anticon-pie-chart:before{content:\"\\E6B8\"}.anticon-unlock:before{content:\"\\E6BA\"}.anticon-calendar:before{content:\"\\E6BB\"}.anticon-windows-o:before{content:\"\\E6BC\"}.anticon-dot-chart:before{content:\"\\E6BD\"}.anticon-bar-chart:before{content:\"\\E6BE\"}.anticon-code:before{content:\"\\E6BF\"}.anticon-plus-square:before{content:\"\\E6C0\"}.anticon-minus-square:before{content:\"\\E6C1\"}.anticon-close-square:before{content:\"\\E6C2\"}.anticon-close-square-o:before{content:\"\\E6C3\"}.anticon-check-square:before{content:\"\\E6C4\"}.anticon-check-square-o:before{content:\"\\E6C5\"}.anticon-fast-backward:before{content:\"\\E6C6\"}.anticon-fast-forward:before{content:\"\\E6C7\"}.anticon-up-square:before{content:\"\\E6C8\"}.anticon-down-square:before{content:\"\\E6C9\"}.anticon-left-square:before{content:\"\\E6CA\"}.anticon-right-square:before{content:\"\\E6CB\"}.anticon-right-square-o:before{content:\"\\E6CC\"}.anticon-left-square-o:before{content:\"\\E6CD\"}.anticon-down-square-o:before{content:\"\\E6CE\"}.anticon-up-square-o:before{content:\"\\E6CF\"}.anticon-loading:before{content:\"\\E64D\"}.anticon-loading-3-quarters:before{content:\"\\E6AE\"}.anticon-bulb:before{content:\"\\E649\"}.anticon-select:before{content:\"\\E64A\"}.anticon-addfile:before{content:\"\\E910\"}.anticon-addfolder:before{content:\"\\E914\"}.anticon-switcher:before{content:\"\\E913\"}.anticon-rocket:before{content:\"\\E90F\"}.anticon-dingding:before{content:\"\\E923\"}.anticon-dingding-o:before{content:\"\\E925\"}.anticon-spin:before{display:inline-block;animation:loadingCircle 1s infinite linear}.fade-appear,.fade-enter,.fade-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.fade-appear,.fade-enter{animation-name:antFadeIn;animation-play-state:running}.fade-leave{animation-name:antFadeOut;animation-play-state:running}.fade-appear,.fade-enter{opacity:0}.fade-appear,.fade-enter,.fade-leave{animation-timing-function:linear}@keyframes antFadeIn{0%{opacity:0}to{opacity:1}}@keyframes antFadeOut{0%{opacity:1}to{opacity:0}}.move-up-appear,.move-up-enter,.move-up-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.move-up-appear,.move-up-enter{animation-name:antMoveUpIn;animation-play-state:running}.move-up-leave{animation-name:antMoveUpOut;animation-play-state:running}.move-up-appear,.move-up-enter{opacity:0;animation-timing-function:cubic-bezier(.08,.82,.17,1)}.move-up-leave{animation-timing-function:cubic-bezier(.6,.04,.98,.34)}.move-down-appear,.move-down-enter,.move-down-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.move-down-appear,.move-down-enter{animation-name:antMoveDownIn;animation-play-state:running}.move-down-leave{animation-name:antMoveDownOut;animation-play-state:running}.move-down-appear,.move-down-enter{opacity:0;animation-timing-function:cubic-bezier(.08,.82,.17,1)}.move-down-leave{animation-timing-function:cubic-bezier(.6,.04,.98,.34)}.move-left-appear,.move-left-enter,.move-left-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.move-left-appear,.move-left-enter{animation-name:antMoveLeftIn;animation-play-state:running}.move-left-leave{animation-name:antMoveLeftOut;animation-play-state:running}.move-left-appear,.move-left-enter{opacity:0;animation-timing-function:cubic-bezier(.08,.82,.17,1)}.move-left-leave{animation-timing-function:cubic-bezier(.6,.04,.98,.34)}.move-right-appear,.move-right-enter,.move-right-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.move-right-appear,.move-right-enter{animation-name:antMoveRightIn;animation-play-state:running}.move-right-leave{animation-name:antMoveRightOut;animation-play-state:running}.move-right-appear,.move-right-enter{opacity:0;animation-timing-function:cubic-bezier(.08,.82,.17,1)}.move-right-leave{animation-timing-function:cubic-bezier(.6,.04,.98,.34)}@keyframes antMoveDownIn{0%{transform-origin:0 0;transform:translateY(100%);opacity:0}to{transform-origin:0 0;transform:translateY(0);opacity:1}}@keyframes antMoveDownOut{0%{transform-origin:0 0;transform:translateY(0);opacity:1}to{transform-origin:0 0;transform:translateY(100%);opacity:0}}@keyframes antMoveLeftIn{0%{transform-origin:0 0;transform:translateX(-100%);opacity:0}to{transform-origin:0 0;transform:translateX(0);opacity:1}}@keyframes antMoveLeftOut{0%{transform-origin:0 0;transform:translateX(0);opacity:1}to{transform-origin:0 0;transform:translateX(-100%);opacity:0}}@keyframes antMoveRightIn{0%{opacity:0;transform-origin:0 0;transform:translateX(100%)}to{opacity:1;transform-origin:0 0;transform:translateX(0)}}@keyframes antMoveRightOut{0%{transform-origin:0 0;transform:translateX(0);opacity:1}to{transform-origin:0 0;transform:translateX(100%);opacity:0}}@keyframes antMoveUpIn{0%{transform-origin:0 0;transform:translateY(-100%);opacity:0}to{transform-origin:0 0;transform:translateY(0);opacity:1}}@keyframes antMoveUpOut{0%{transform-origin:0 0;transform:translateY(0);opacity:1}to{transform-origin:0 0;transform:translateY(-100%);opacity:0}}@keyframes loadingCircle{0%{transform-origin:50% 50%;transform:rotate(0deg)}to{transform-origin:50% 50%;transform:rotate(1turn)}}.slide-up-appear,.slide-up-enter,.slide-up-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.slide-up-appear,.slide-up-enter{animation-name:antSlideUpIn;animation-play-state:running}.slide-up-leave{animation-name:antSlideUpOut;animation-play-state:running}.slide-up-appear,.slide-up-enter{opacity:0;animation-timing-function:cubic-bezier(.23,1,.32,1)}.slide-up-leave{animation-timing-function:cubic-bezier(.755,.05,.855,.06)}.slide-down-appear,.slide-down-enter,.slide-down-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.slide-down-appear,.slide-down-enter{animation-name:antSlideDownIn;animation-play-state:running}.slide-down-leave{animation-name:antSlideDownOut;animation-play-state:running}.slide-down-appear,.slide-down-enter{opacity:0;animation-timing-function:cubic-bezier(.23,1,.32,1)}.slide-down-leave{animation-timing-function:cubic-bezier(.755,.05,.855,.06)}.slide-left-appear,.slide-left-enter,.slide-left-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.slide-left-appear,.slide-left-enter{animation-name:antSlideLeftIn;animation-play-state:running}.slide-left-leave{animation-name:antSlideLeftOut;animation-play-state:running}.slide-left-appear,.slide-left-enter{opacity:0;animation-timing-function:cubic-bezier(.23,1,.32,1)}.slide-left-leave{animation-timing-function:cubic-bezier(.755,.05,.855,.06)}.slide-right-appear,.slide-right-enter,.slide-right-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.slide-right-appear,.slide-right-enter{animation-name:antSlideRightIn;animation-play-state:running}.slide-right-leave{animation-name:antSlideRightOut;animation-play-state:running}.slide-right-appear,.slide-right-enter{opacity:0;animation-timing-function:cubic-bezier(.23,1,.32,1)}.slide-right-leave{animation-timing-function:cubic-bezier(.755,.05,.855,.06)}@keyframes antSlideUpIn{0%{opacity:0;transform-origin:0 0;transform:scaleY(.8)}to{opacity:1;transform-origin:0 0;transform:scaleY(1)}}@keyframes antSlideUpOut{0%{opacity:1;transform-origin:0 0;transform:scaleY(1)}to{opacity:0;transform-origin:0 0;transform:scaleY(.8)}}@keyframes antSlideDownIn{0%{opacity:0;transform-origin:100% 100%;transform:scaleY(.8)}to{opacity:1;transform-origin:100% 100%;transform:scaleY(1)}}@keyframes antSlideDownOut{0%{opacity:1;transform-origin:100% 100%;transform:scaleY(1)}to{opacity:0;transform-origin:100% 100%;transform:scaleY(.8)}}@keyframes antSlideLeftIn{0%{opacity:0;transform-origin:0 0;transform:scaleX(.8)}to{opacity:1;transform-origin:0 0;transform:scaleX(1)}}@keyframes antSlideLeftOut{0%{opacity:1;transform-origin:0 0;transform:scaleX(1)}to{opacity:0;transform-origin:0 0;transform:scaleX(.8)}}@keyframes antSlideRightIn{0%{opacity:0;transform-origin:100% 0;transform:scaleX(.8)}to{opacity:1;transform-origin:100% 0;transform:scaleX(1)}}@keyframes antSlideRightOut{0%{opacity:1;transform-origin:100% 0;transform:scaleX(1)}to{opacity:0;transform-origin:100% 0;transform:scaleX(.8)}}.swing-appear,.swing-enter{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.swing-appear.swing-appear-active,.swing-enter.swing-enter-active{animation-name:antSwingIn;animation-play-state:running}@keyframes antSwingIn{0%,to{transform:translateX(0)}20%{transform:translateX(-10px)}40%{transform:translateX(10px)}60%{transform:translateX(-5px)}80%{transform:translateX(5px)}}.zoom-appear,.zoom-enter,.zoom-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.zoom-appear,.zoom-enter{animation-name:antZoomIn;animation-play-state:running}.zoom-leave{animation-name:antZoomOut;animation-play-state:running}.zoom-appear,.zoom-enter{transform:scale(0);animation-timing-function:cubic-bezier(.08,.82,.17,1)}.zoom-leave{animation-timing-function:cubic-bezier(.78,.14,.15,.86)}.zoom-big-appear,.zoom-big-enter,.zoom-big-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.zoom-big-appear,.zoom-big-enter{animation-name:antZoomBigIn;animation-play-state:running}.zoom-big-leave{animation-name:antZoomBigOut;animation-play-state:running}.zoom-big-appear,.zoom-big-enter{transform:scale(0);animation-timing-function:cubic-bezier(.08,.82,.17,1)}.zoom-big-leave{animation-timing-function:cubic-bezier(.78,.14,.15,.86)}.zoom-big-fast-appear,.zoom-big-fast-enter,.zoom-big-fast-leave{animation-duration:.1s;animation-fill-mode:both;animation-play-state:paused}.zoom-big-fast-appear,.zoom-big-fast-enter{animation-name:antZoomBigIn;animation-play-state:running}.zoom-big-fast-leave{animation-name:antZoomBigOut;animation-play-state:running}.zoom-big-fast-appear,.zoom-big-fast-enter{transform:scale(0);animation-timing-function:cubic-bezier(.08,.82,.17,1)}.zoom-big-fast-leave{animation-timing-function:cubic-bezier(.78,.14,.15,.86)}.zoom-up-appear,.zoom-up-enter,.zoom-up-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.zoom-up-appear,.zoom-up-enter{animation-name:antZoomUpIn;animation-play-state:running}.zoom-up-leave{animation-name:antZoomUpOut;animation-play-state:running}.zoom-up-appear,.zoom-up-enter{transform:scale(0);animation-timing-function:cubic-bezier(.08,.82,.17,1)}.zoom-up-leave{animation-timing-function:cubic-bezier(.78,.14,.15,.86)}.zoom-down-appear,.zoom-down-enter,.zoom-down-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.zoom-down-appear,.zoom-down-enter{animation-name:antZoomDownIn;animation-play-state:running}.zoom-down-leave{animation-name:antZoomDownOut;animation-play-state:running}.zoom-down-appear,.zoom-down-enter{transform:scale(0);animation-timing-function:cubic-bezier(.08,.82,.17,1)}.zoom-down-leave{animation-timing-function:cubic-bezier(.78,.14,.15,.86)}.zoom-left-appear,.zoom-left-enter,.zoom-left-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.zoom-left-appear,.zoom-left-enter{animation-name:antZoomLeftIn;animation-play-state:running}.zoom-left-leave{animation-name:antZoomLeftOut;animation-play-state:running}.zoom-left-appear,.zoom-left-enter{transform:scale(0);animation-timing-function:cubic-bezier(.08,.82,.17,1)}.zoom-left-leave{animation-timing-function:cubic-bezier(.78,.14,.15,.86)}.zoom-right-appear,.zoom-right-enter,.zoom-right-leave{animation-duration:.2s;animation-fill-mode:both;animation-play-state:paused}.zoom-right-appear,.zoom-right-enter{animation-name:antZoomRightIn;animation-play-state:running}.zoom-right-leave{animation-name:antZoomRightOut;animation-play-state:running}.zoom-right-appear,.zoom-right-enter{transform:scale(0);animation-timing-function:cubic-bezier(.08,.82,.17,1)}.zoom-right-leave{animation-timing-function:cubic-bezier(.78,.14,.15,.86)}@keyframes antZoomIn{0%{opacity:0;transform:scale(.2)}to{opacity:1;transform:scale(1)}}@keyframes antZoomOut{0%{transform:scale(1)}to{opacity:0;transform:scale(.2)}}@keyframes antZoomBigIn{0%{opacity:0;transform:scale(.8)}to{transform:scale(1)}}@keyframes antZoomBigOut{0%{transform:scale(1)}to{opacity:0;transform:scale(.8)}}@keyframes antZoomUpIn{0%{opacity:0;transform-origin:50% 0;transform:scale(.8)}to{transform-origin:50% 0;transform:scale(1)}}@keyframes antZoomUpOut{0%{transform-origin:50% 0;transform:scale(1)}to{opacity:0;transform-origin:50% 0;transform:scale(.8)}}@keyframes antZoomLeftIn{0%{opacity:0;transform-origin:0 50%;transform:scale(.8)}to{transform-origin:0 50%;transform:scale(1)}}@keyframes antZoomLeftOut{0%{transform-origin:0 50%;transform:scale(1)}to{opacity:0;transform-origin:0 50%;transform:scale(.8)}}@keyframes antZoomRightIn{0%{opacity:0;transform-origin:100% 50%;transform:scale(.8)}to{transform-origin:100% 50%;transform:scale(1)}}@keyframes antZoomRightOut{0%{transform-origin:100% 50%;transform:scale(1)}to{opacity:0;transform-origin:100% 50%;transform:scale(.8)}}@keyframes antZoomDownIn{0%{opacity:0;transform-origin:50% 100%;transform:scale(.8)}to{transform-origin:50% 100%;transform:scale(1)}}@keyframes antZoomDownOut{0%{transform-origin:50% 100%;transform:scale(1)}to{opacity:0;transform-origin:50% 100%;transform:scale(.8)}}.ant-motion-collapse{overflow:hidden}.ant-motion-collapse-active{transition:height .2s cubic-bezier(.215,.61,.355,1)}.ant-alert{position:relative;padding:8px 48px 8px 38px;border-radius:4px;color:#333;font-size:12px;line-height:16px;margin-bottom:10px}.ant-alert.ant-alert-no-icon{padding:8px 48px 8px 16px}.ant-alert-icon{font-size:14px;top:9px;left:16px;position:absolute}.ant-alert-description{font-size:12px;line-height:21px;display:none}.ant-alert-success{border:1px solid #d0f3ea;background-color:#e8f9f4}.ant-alert-success .ant-alert-icon{color:#16c294}.ant-alert-info{border:1px solid #d7ebfb;background-color:#ebf5fd}.ant-alert-info .ant-alert-icon{color:#369be9}.ant-alert-warning{border:1px solid #fec;background-color:#fff7e6}.ant-alert-warning .ant-alert-icon{color:#fa0}.ant-alert-error{border:1px solid #fbdde3;background-color:#fdeef1}.ant-alert-error .ant-alert-icon{color:#e95471}.ant-alert-close-icon{font-size:12px;position:absolute;right:16px;top:10px;height:12px;line-height:12px;overflow:hidden;cursor:pointer}.ant-alert-close-icon .anticon-cross{color:#999;transition:color .3s ease}.ant-alert-close-icon .anticon-cross:hover{color:#404040}.ant-alert-close-text{position:absolute;right:16px}.ant-alert-with-description{padding:16px 16px 16px 60px;position:relative;border-radius:4px;margin-bottom:10px;color:#333;line-height:1.5}.ant-alert-with-description.ant-alert-no-icon{padding:16px}.ant-alert-with-description .ant-alert-icon{position:absolute;top:16px;left:20px;font-size:24px}.ant-alert-with-description .ant-alert-close-icon{position:absolute;top:16px;right:16px;cursor:pointer;font-size:12px}.ant-alert-with-description .ant-alert-message{font-size:14px;color:rgba(0,0,0,.75);display:block;margin-bottom:4px}.ant-alert-with-description .ant-alert-description{display:block}.ant-alert.ant-alert-close{height:0!important;margin:0;padding-top:0;padding-bottom:0;transition:all .3s cubic-bezier(.78,.14,.15,.86);transform-origin:50% 0}.ant-alert-slide-up-leave{animation:antAlertSlideUpOut .3s cubic-bezier(.78,.14,.15,.86);animation-fill-mode:both}.ant-alert-banner{border-radius:0;border:0;margin-bottom:0}@keyframes antAlertSlideUpIn{0%{opacity:0;transform-origin:0 0;transform:scaleY(0)}to{opacity:1;transform-origin:0 0;transform:scaleY(1)}}@keyframes antAlertSlideUpOut{0%{opacity:1;transform-origin:0 0;transform:scaleY(1)}to{opacity:0;transform-origin:0 0;transform:scaleY(0)}}.ant-badge{position:relative;display:inline-block;line-height:1;vertical-align:middle}.ant-badge-count{position:absolute;transform:translateX(-50%);top:-10px;height:20px;border-radius:10px;min-width:20px;background:#e95471;border:1px solid transparent;color:#fff;line-height:18px;text-align:center;padding:0 6px;font-size:12px;white-space:nowrap;transform-origin:-10% center;z-index:10;font-family:tahoma;box-shadow:0 0 0 1px #fff}.ant-badge-count a,.ant-badge-count a:hover{color:#fff}.ant-badge-dot{position:absolute;transform:translateX(-50%);transform-origin:0 center;top:-4px;height:8px;width:8px;border-radius:100%;background:#e95471;z-index:10;box-shadow:0 0 0 1px #fff}.ant-badge-status{line-height:inherit;vertical-align:baseline}.ant-badge-status-dot{width:8px;height:8px;display:inline-block;border-radius:50%}.ant-badge-status-success{background-color:#16c294}.ant-badge-status-processing{background-color:#369be9;animation:antStatusProcessing 1.2s infinite ease-in-out}.ant-badge-status-default{background-color:#d9d9d9}.ant-badge-status-error{background-color:#e95471}.ant-badge-status-warning{background-color:#fa0}.ant-badge-status-text{color:#333;font-size:12px;margin-left:8px}.ant-badge-zoom-appear,.ant-badge-zoom-enter{animation:antZoomBadgeIn .3s cubic-bezier(.12,.4,.29,1.46);animation-fill-mode:both}.ant-badge-zoom-leave{animation:antZoomBadgeOut .3s cubic-bezier(.71,-.46,.88,.6);animation-fill-mode:both}.ant-badge-not-a-wrapper .ant-badge-count{top:auto;display:block;position:relative;transform:none!important}@keyframes antStatusProcessing{0%,to{opacity:1}50%{opacity:0}}a -count:hover{background:#ed768d}a -count:active{background:#dd506b}.ant-scroll-number{overflow:hidden}.ant-scroll-number-only{display:inline-block;transition:transform .3s cubic-bezier(.645,.045,.355,1)}.ant-scroll-number.not-support-css-animation .ant-scroll-number-only>p{display:none}.ant-scroll-number.not-support-css-animation .ant-scroll-number-only>p.current{display:block}@keyframes antZoomBadgeIn{0%{opacity:0;transform:scale(0) translateX(-50%)}to{transform:scale(1) translateX(-50%)}}@keyframes antZoomBadgeOut{0%{transform:scale(1) translateX(-50%)}to{opacity:0;transform:scale(0) translateX(-50%)}}.ant-card{background:#fff;border-radius:2px;font-size:12px;position:relative;overflow:hidden;transition:all .3s}.ant-card:hover{box-shadow:0 1px 6px rgba(0,0,0,.2);border-color:#eee}.ant-card-bordered{border:1px solid #e9e9e9}.ant-card-head{height:48px;line-height:48px;border-bottom:1px solid #e9e9e9;padding:0 24px}.ant-card-head-title{font-size:14px;display:inline-block;text-overflow:ellipsis;width:100%;overflow:hidden;white-space:nowrap}.ant-card-extra{position:absolute;right:24px;top:14px}.ant-card-body{padding:24px}.ant-card-loading .ant-card-body{letter-spacing:-2px;color:#eee;font-size:.75rem}.ant-card-loading .ant-card-body p{word-break:break-all;line-height:10px;margin:5px 0 0;height:10px;border-radius:4px;overflow:hidden;display:inline-block;user-select:none;color:#f3f5f8}.ant-menu{outline:none;margin-bottom:0;padding-left:0;list-style:none;z-index:1050;box-shadow:0 1px 6px rgba(0,0,0,.2);color:#333;background:#fff;line-height:46px}.ant-menu-hidden{display:none}.ant-menu-item-group-list{margin:0;padding:0}.ant-menu-item-group-title{color:#999;font-size:12px;line-height:1.5;padding:8px 16px}.ant-menu-item,.ant-menu-submenu,.ant-menu-submenu-title{cursor:pointer;transition:all .3s ease}.ant-menu-submenu .ant-menu-sub{cursor:auto}.ant-menu-item>a{display:block;color:#333}.ant-menu-item>a:hover{color:#333}.ant-menu-item>a:before{position:absolute;background-color:transparent;width:100%;height:100%;top:0;left:0;bottom:0;right:0;content:\"\"}.ant-menu-item-active,.ant-menu-item:hover,.ant-menu-submenu-active,.ant-menu-submenu-title:hover{background-color:#ebf5fd}.ant-menu-horizontal .ant-menu-item,.ant-menu-horizontal .ant-menu-submenu{margin-top:-1px}.ant-menu-horizontal>.ant-menu-item-active,.ant-menu-horizontal>.ant-menu-item:hover,.ant-menu-horizontal>.ant-menu-submenu .ant-menu-submenu-title:hover{background-color:transparent}.ant-menu-item-selected{color:#369be9;transform:translateZ(0)}.ant-menu-item-selected>a,.ant-menu-item-selected>a:hover{color:#369be9}.ant-menu-horizontal,.ant-menu-inline,.ant-menu-vertical{z-index:auto}.ant-menu-inline,.ant-menu-vertical{border-right:1px solid #e9e9e9}.ant-menu-inline .ant-menu-item,.ant-menu-vertical .ant-menu-item{border-right:1px solid #e9e9e9;margin-left:-1px;left:1px;position:relative;z-index:1}.ant-menu-vertical .ant-menu-sub,.ant-menu-vertical .ant-menu-sub .ant-menu-item{border-right:0}.ant-menu-inline .ant-menu-item-selected,.ant-menu-inline .ant-menu-selected{border-right:2px solid #369be9;transform:translateZ(0)}.ant-menu-submenu-horizontal>.ant-menu{top:100%;left:0;position:absolute;min-width:100%;margin-top:7px;z-index:1050}.ant-menu-submenu-vertical{z-index:1}.ant-menu-submenu-vertical>.ant-menu{top:0;left:100%;position:absolute;min-width:160px;margin-left:4px;z-index:1050}.ant-menu-item,.ant-menu-submenu-title{margin:0;padding:0 20px;position:relative;display:block;white-space:nowrap}.ant-menu-item.ant-menu-item-disabled,.ant-menu-item.ant-menu-submenu-disabled,.ant-menu-submenu-title.ant-menu-item-disabled,.ant-menu-submenu-title.ant-menu-submenu-disabled{color:#999!important;cursor:not-allowed;background:none}.ant-menu-item.ant-menu-item-disabled>a,.ant-menu-item.ant-menu-submenu-disabled>a,.ant-menu-submenu-title.ant-menu-item-disabled>a,.ant-menu-submenu-title.ant-menu-submenu-disabled>a{color:#999!important;pointer-events:none}.ant-menu-item .anticon,.ant-menu-submenu-title .anticon{min-width:14px;margin-right:8px}.ant-menu>.ant-menu-item-divider{height:1px;margin:1px 0;overflow:hidden;padding:0;line-height:0;background-color:#e5e5e5}.ant-menu-submenu{position:relative}.ant-menu-submenu>.ant-menu{background-color:#fff;border-radius:4px}.ant-menu-submenu-vertical>.ant-menu-submenu-title:after{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";transform:rotate(270deg) scale(.75)}.ant-menu-submenu-inline>.ant-menu-submenu-title:after,.ant-menu-submenu-vertical>.ant-menu-submenu-title:after{font-family:anticon!important;font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;position:absolute;transition:transform .3s ease;content:\"\\E61D\";right:16px}.ant-menu-submenu-inline>.ant-menu-submenu-title:after{top:0;display:inline-block;font-size:12px;font-size:8px\\9;transform:scale(.66666667) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-menu-submenu-inline>.ant-menu-submenu-title:after{filter:none;font-size:12px}.ant-menu-submenu-open.ant-menu-submenu-inline>.ant-menu-submenu-title:after{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";transform:rotate(180deg) scale(.75)}.ant-menu-vertical .ant-menu-submenu-selected,.ant-menu-vertical .ant-menu-submenu-selected>a{color:#369be9}.ant-menu-horizontal{border:0;border-bottom:1px solid #e9e9e9;box-shadow:none;z-index:0}.ant-menu-horizontal>.ant-menu-item,.ant-menu-horizontal>.ant-menu-submenu{position:relative;top:1px;float:left;border-bottom:2px solid transparent}.ant-menu-horizontal>.ant-menu-item-active,.ant-menu-horizontal>.ant-menu-item-selected,.ant-menu-horizontal>.ant-menu-item:hover,.ant-menu-horizontal>.ant-menu-submenu-active,.ant-menu-horizontal>.ant-menu-submenu-selected,.ant-menu-horizontal>.ant-menu-submenu:hover{border-bottom:2px solid #369be9;color:#369be9}.ant-menu-horizontal>.ant-menu-item>a,.ant-menu-horizontal>.ant-menu-submenu>a{display:block;color:#333}.ant-menu-horizontal>.ant-menu-item>a:hover,.ant-menu-horizontal>.ant-menu-submenu>a:hover{color:#369be9}.ant-menu-horizontal:after{content:\" \";display:block;height:0;clear:both}.ant-menu-inline>.ant-menu-item,.ant-menu-inline>.ant-menu-submenu>.ant-menu-submenu-title,.ant-menu-item-group-list>.ant-menu-item,.ant-menu-item-group-list>.ant-menu-submenu>.ant-menu-submenu-title,.ant-menu-vertical>.ant-menu-item,.ant-menu-vertical>.ant-menu-submenu>.ant-menu-submenu-title{padding:0 16px 0 28px;font-size:12px;line-height:42px;height:42px}.ant-menu-vertical.ant-menu-sub{padding:0;transform-origin:0 0}.ant-menu-vertical.ant-menu-sub>.ant-menu-item,.ant-menu-vertical.ant-menu-sub>.ant-menu-submenu{transform-origin:0 0}.ant-menu-root.ant-menu-inline,.ant-menu-root.ant-menu-vertical{box-shadow:none}.ant-menu-sub.ant-menu-inline{padding:0;border:0;box-shadow:none;border-radius:0}.ant-menu-sub.ant-menu-inline>.ant-menu-item,.ant-menu-sub.ant-menu-inline>.ant-menu-submenu>.ant-menu-submenu-title{line-height:42px;height:42px;list-style-type:disc;list-style-position:inside}.ant-menu-sub.ant-menu-inline .ant-menu-item-group-title{padding-left:32px}.ant-menu-dark,.ant-menu-dark .ant-menu-sub{color:#999;background:#404040}.ant-menu-dark .ant-menu-inline.ant-menu-sub{background:#333}.ant-menu-dark.ant-menu-horizontal{border-bottom-color:#404040}.ant-menu-dark.ant-menu-horizontal>.ant-menu-item,.ant-menu-dark.ant-menu-horizontal>.ant-menu-submenu{border-color:#404040;border-bottom:0;top:0}.ant-menu-dark .ant-menu-item,.ant-menu-dark .ant-menu-item>a{color:#999}.ant-menu-dark.ant-menu-inline,.ant-menu-dark.ant-menu-vertical{border-right:0}.ant-menu-dark.ant-menu-inline .ant-menu-item,.ant-menu-dark.ant-menu-vertical .ant-menu-item{border-right:0;margin-left:0;left:0}.ant-menu-dark .ant-menu-item-active,.ant-menu-dark .ant-menu-item:hover,.ant-menu-dark .ant-menu-submenu-active,.ant-menu-dark .ant-menu-submenu-selected,.ant-menu-dark .ant-menu-submenu-title:hover,.ant-menu-dark .ant-menu-submenu:hover{background-color:transparent;color:#fff}.ant-menu-dark .ant-menu-item-active>a,.ant-menu-dark .ant-menu-item:hover>a,.ant-menu-dark .ant-menu-submenu-active>a,.ant-menu-dark .ant-menu-submenu-selected>a,.ant-menu-dark .ant-menu-submenu-title:hover>a,.ant-menu-dark .ant-menu-submenu:hover>a{color:#fff}.ant-menu-dark .ant-menu-item-selected{border-right:0;color:#fff}.ant-menu-dark .ant-menu-item-selected>a,.ant-menu-dark .ant-menu-item-selected>a:hover{color:#fff}.ant-menu-dark.ant-menu-inline .ant-menu-item-selected{background-color:#369be9}.ant-collapse{background-color:#f7f7f7;border-radius:3px;border:1px solid #d9d9d9}.ant-collapse>.ant-collapse-item{border-top:1px solid #d9d9d9}.ant-collapse>.ant-collapse-item:first-child{border-top:0}.ant-collapse>.ant-collapse-item>.ant-collapse-header{height:38px;line-height:38px;padding-left:32px;color:#666;cursor:pointer;position:relative}.ant-collapse>.ant-collapse-item>.ant-collapse-header .arrow{font-size:12px;font-size:7px\\9;transform:scale(.58333333) rotate(270deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=-0.0000000000000001837, M12=1, M21=-1, M22=-0.0000000000000001837)\";zoom:1;font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;line-height:1;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;position:absolute;color:#666;display:inline-block;margin-right:8px;line-height:40px;content:\"\\E606\";vertical-align:middle;transition:transform .24s ease;top:0;left:16px;top:16px\\9;left:0\\9}:root .ant-collapse>.ant-collapse-item>.ant-collapse-header .arrow{filter:none;font-size:12px}.ant-collapse>.ant-collapse-item>.ant-collapse-header .arrow:before{display:block;font-family:anticon!important;content:\"\\E606\"}.ant-collapse-anim-active{transition:height .2s cubic-bezier(.215,.61,.355,1)}.ant-collapse-content{overflow:hidden;color:#333;padding:0 16px;background-color:#fff}.ant-collapse-content>.ant-collapse-content-box{padding-top:16px;padding-bottom:16px}.ant-collapse-content-inactive{display:none}.ant-collapse-item:last-child>.ant-collapse-content{border-radius:0 0 3px 3px}.ant-collapse>.ant-collapse-item>.ant-collapse-header[aria-expanded=true] .arrow{display:inline-block;font-size:12px;font-size:7px\\9;transform:scale(.58333333) rotate(1turn);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0.00000000000000024493, M21=-0.00000000000000024493, M22=1)\";zoom:1}:root .ant-collapse>.ant-collapse-item>.ant-collapse-header[aria-expanded=true] .arrow{filter:none;font-size:12px}.ant-switch{position:relative;display:inline-block;box-sizing:border-box;height:22px;min-width:44px;line-height:20px;vertical-align:middle;border-radius:20px;border:1px solid #ccc;background-color:#ccc;cursor:pointer;transition:all .3s;user-select:none}.ant-switch-inner{color:#fff;font-size:12px;margin-left:24px;margin-right:6px;display:block}.ant-switch:after{position:absolute;width:18px;height:18px;left:2px;top:1px;border-radius:18px;background-color:#fff;content:\" \";cursor:pointer;transition:all .3s,width .3s}.ant-switch:active:after{width:24px}.ant-switch:focus{box-shadow:0 0 0 2px rgba(54,155,233,.2);outline:0}.ant-switch:focus:hover{box-shadow:none}.ant-switch-small{height:14px;min-width:28px;line-height:12px}.ant-switch-small .ant-switch-inner{margin-left:18px;margin-right:3px}.ant-switch-small:after{width:12px;height:12px;top:0;left:0}.ant-switch-small:active:after{width:16px}.ant-switch-small.ant-switch-checked:after{left:100%;margin-left:-12px}.ant-switch-small.ant-switch-checked .ant-switch-inner{margin-left:3px;margin-right:18px}.ant-switch-small:active.ant-switch-checked:after{left:10px}.ant-switch-checked{border-color:#369be9;background-color:#369be9}.ant-switch-checked .ant-switch-inner{margin-left:6px;margin-right:24px}.ant-switch-checked:after{left:100%;margin-left:-20px}.ant-switch-checked:active:after{left:16px}.ant-switch-disabled{cursor:not-allowed;background:#f4f4f4;border-color:#f4f4f4}.ant-switch-disabled:after{background:#ccc;cursor:not-allowed}.ant-switch-disabled .ant-switch-inner{color:#ccc}.ant-slider{position:relative;margin:10px 8px;height:12px;border-radius:5px;background-color:#e9e9e9;cursor:pointer;border-top:4px solid #fff;border-bottom:4px solid #fff}.ant-slider,.ant-slider-track{transition:background-color .3s ease}.ant-slider-track{position:absolute;left:0;height:4px;border-radius:4px;background-color:#afd7f6;z-index:1}.ant-slider:hover{background-color:#e1e1e1}.ant-slider:hover .ant-slider-handle{border-color:#5eafed}.ant-slider:hover .ant-slider-track{background-color:#86c3f2}.ant-slider-handle{position:absolute;margin-left:-7px;margin-top:-5px;width:14px;height:14px;cursor:pointer;border-radius:50%;border:2px solid #9bcdf4;background-color:#fff;z-index:2;transition:border-color .3s ease,transform .3s cubic-bezier(.18,.89,.32,1.28)}.ant-slider-handle:hover{border-color:#5eafed;transform:scale(1.2);transform-origin:center center}.ant-slider-handle:active{box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-slider-mark{position:absolute;top:10px;left:0;width:100%;font-size:12px;z-index:3}.ant-slider-mark-text{position:absolute;display:inline-block;vertical-align:middle;text-align:center;cursor:pointer;color:#999}.ant-slider-mark-text-active{color:#666}.ant-slider-step{position:absolute;width:100%;height:4px;background:transparent;z-index:1}.ant-slider-dot{position:absolute;top:-2px;width:8px;height:8px;border:2px solid #e9e9e9;background-color:#fff;cursor:pointer;border-radius:50%;vertical-align:middle}.ant-slider-dot,.ant-slider-dot:first-child,.ant-slider-dot:last-child{margin-left:-4px}.ant-slider-dot-active{border-color:#9bcdf4}.ant-slider-disabled{background-color:#e9e9e9!important}.ant-slider-disabled .ant-slider-track{background-color:#ccc!important}.ant-slider-disabled .ant-slider-dot,.ant-slider-disabled .ant-slider-handle{border-color:#ccc!important;background-color:#fff;cursor:not-allowed}.ant-slider-disabled .ant-slider-dot,.ant-slider-disabled .ant-slider-mark-text{cursor:not-allowed!important}.ant-slider-tooltip{position:absolute;left:-9999px;top:-9999px;z-index:4;visibility:visible}.ant-slider-tooltip-hidden{display:none}.ant-slider-tooltip-placement-points-bc-tc{padding:4px 0 8px}.ant-slider-tooltip-inner{padding:6px;min-width:24px;height:24px;font-size:12px;line-height:1;color:#fff;text-align:center;text-decoration:none;background-color:#6c6c6c;border-radius:4px}.ant-slider-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.ant-slider-tooltip-placement-points-bc-tc .ant-slider-tooltip-arrow{bottom:4px;left:50%;margin-left:-4px;border-width:4px 4px 0;border-top-color:#6c6c6c}.ant-message{font-size:12px;position:fixed;z-index:1010;width:100%;top:16px;left:0}.ant-message-notice{width:auto;vertical-align:middle;position:absolute;left:50%}.ant-message-notice-content{position:relative;right:50%;padding:8px 16px;border-radius:4px;border:1px solid #d9d9d9;box-shadow:0 2px 8px rgba(0,0,0,.2);background:#fff;display:block}.ant-message-success .anticon{color:#16c294}.ant-message-error .anticon{color:#e95471}.ant-message-warning .anticon{color:#fa0}.ant-message-info .anticon,.ant-message-loading .anticon{color:#369be9}.ant-message .anticon{margin-right:8px;font-size:14px;top:1px;position:relative}.message-transition{transition:all .3s ease}.message-enter,.message-leave{opacity:0;transform:translateY(-50px)}.ant-steps{font-size:0;width:100%;line-height:1.5}.ant-steps .ant-steps-item{position:relative;display:inline-block;vertical-align:top}.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-head-inner{border-color:#ccc;background-color:#fff}.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-head-inner>.ant-steps-icon{color:#ccc}.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-description,.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-title{color:#999}.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-tail>i{background-color:#e9e9e9}.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-head-inner{border-color:#369be9;background-color:#369be9}.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-head-inner>.ant-steps-icon{color:#fff}.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-description,.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-title{color:#666}.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-tail>i{background-color:#e9e9e9}.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-head-inner{border-color:#369be9;background-color:#fff}.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-head-inner>.ant-steps-icon{color:#369be9}.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-tail>i:after{width:100%;background:#369be9;transition:all .4s ease;opacity:1}.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-description,.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-title{color:#999}.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-head-inner{border-color:#e95471;background-color:#fff}.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-description,.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-head-inner>.ant-steps-icon,.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-title{color:#e95471}.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-tail>i{background-color:#e9e9e9}.ant-steps .ant-steps-item.ant-steps-next-error .ant-steps-tail>i,.ant-steps .ant-steps-item.ant-steps-next-error .ant-steps-tail>i:after{background-color:#e95471}.ant-steps .ant-steps-item.ant-steps-custom .ant-steps-head-inner{background:none;border:0;width:auto;height:auto}.ant-steps .ant-steps-item.ant-steps-custom .ant-steps-head-inner>.ant-steps-icon{font-size:20px;top:2px;width:20px;height:20px}.ant-steps .ant-steps-item.ant-steps-custom.ant-steps-status-process .ant-steps-head-inner>.ant-steps-icon{color:#369be9}.ant-steps .ant-steps-head,.ant-steps .ant-steps-main{position:relative;display:inline-block;vertical-align:top}.ant-steps .ant-steps-head{background:#fff}.ant-steps .ant-steps-head-inner{display:block;border:1px solid #ccc;width:26px;height:26px;line-height:26px;text-align:center;border-radius:26px;font-size:14px;margin-right:8px;transition:background-color .3s ease,border-color .3s ease}.ant-steps .ant-steps-head-inner>.ant-steps-icon{line-height:1;top:-1.5px;color:#369be9;position:relative}.ant-steps .ant-steps-head-inner>.ant-steps-icon.anticon{font-size:12px}.ant-steps .ant-steps-head-inner>.ant-steps-icon.anticon-check,.ant-steps .ant-steps-head-inner>.ant-steps-icon.anticon-cross{font-weight:700}.ant-steps .ant-steps-main{margin-top:2.5px}.ant-steps .ant-steps-title{font-size:14px;margin-bottom:4px;color:#666;font-weight:700;background:#fff;display:inline-block;padding-right:10px}.ant-steps .ant-steps-title>a:first-child:last-child{color:#666}.ant-steps .ant-steps-item-last .ant-steps-title{padding-right:0;width:100%}.ant-steps .ant-steps-description{font-size:12px;color:#999}.ant-steps .ant-steps-tail{position:absolute;left:0;width:100%;top:13px;padding:0 10px}.ant-steps .ant-steps-tail>i{display:inline-block;vertical-align:top;background:#e9e9e9;height:1px;border-radius:1px;width:100%;position:relative}.ant-steps .ant-steps-tail>i:after{position:absolute;content:\"\";top:0;width:0;background:#e9e9e9;height:100%;opacity:0}.ant-steps.ant-steps-small .ant-steps-head-inner{border:1px solid #ccc;width:18px;height:18px;line-height:18px;text-align:center;border-radius:18px;font-size:12px;margin-right:10px}.ant-steps.ant-steps-small .ant-steps-head-inner>.ant-steps-icon.anticon{display:inline-block;font-size:12px;font-size:9px\\9;transform:scale(.75) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;top:0}:root .ant-steps.ant-steps-small .ant-steps-head-inner>.ant-steps-icon.anticon{filter:none;font-size:12px}.ant-steps.ant-steps-small .ant-steps-main{margin-top:0}.ant-steps.ant-steps-small .ant-steps-title{font-size:12px;margin-bottom:4px;color:#666;font-weight:700}.ant-steps.ant-steps-small .ant-steps-description{font-size:12px;color:#999}.ant-steps.ant-steps-small .ant-steps-tail{top:8px;padding:0 8px}.ant-steps.ant-steps-small .ant-steps-tail>i{height:1px;border-radius:1px;width:100%}.ant-steps .ant-steps-item.ant-steps-custom .ant-steps-head-inner,.ant-steps.ant-steps-small .ant-steps-item.ant-steps-custom .ant-steps-head-inner{width:inherit;height:inherit;line-height:inherit;border-radius:0;border:0;background:none}.ant-steps-vertical .ant-steps-item{display:block}.ant-steps-vertical .ant-steps-tail{position:absolute;left:13px;top:0;height:100%;width:1px;padding:30px 0 4px}.ant-steps-vertical .ant-steps-tail>i{height:100%;width:1px}.ant-steps-vertical .ant-steps-tail>i:after{height:0;width:100%}.ant-steps-vertical .ant-steps-status-finish .ant-steps-tail>i:after{height:100%}.ant-steps-vertical .ant-steps-head{float:left}.ant-steps-vertical .ant-steps-head-inner{margin-right:16px}.ant-steps-vertical .ant-steps-main{min-height:47px;overflow:hidden;display:block}.ant-steps-vertical .ant-steps-main .ant-steps-title{line-height:26px}.ant-steps-vertical .ant-steps-main .ant-steps-description{padding-bottom:12px}.ant-steps-vertical.ant-steps-small .ant-steps-tail{position:absolute;left:9px;top:0;padding:22px 0 4px}.ant-steps-vertical.ant-steps-small .ant-steps-tail>i{height:100%}.ant-steps-vertical.ant-steps-small .ant-steps-title{line-height:18px}.ant-steps-horizontal.ant-steps-hidden{visibility:hidden}.ant-steps-horizontal .ant-steps-description{max-width:100px}.ant-steps-horizontal .ant-steps-item:not(:first-child) .ant-steps-head{padding-left:10px;margin-left:-10px}.ant-notification{position:fixed;z-index:1010;width:335px;right:0;margin-right:24px}.ant-notification-notice{padding:16px;border-radius:4px;box-shadow:0 2px 8px rgba(0,0,0,.2);border:1px solid #d9d9d9;background:#fff;line-height:1.5;position:relative;margin-bottom:10px;overflow:hidden}.ant-notification-notice-message{font-size:14px;color:#333;margin-bottom:4px}.ant-notification-notice-description{font-size:12px;color:#999}.ant-notification-notice-with-icon .ant-notification-notice-message{font-size:14px;color:#333;margin-left:51px;margin-bottom:4px}.ant-notification-notice-with-icon .ant-notification-notice-description{margin-left:51px;font-size:12px;color:#999}.ant-notification-notice-icon{position:absolute;left:16px;top:50%;margin-top:-17px;font-size:34px}.ant-notification-notice-icon-success{color:#16c294}.ant-notification-notice-icon-info{color:#369be9}.ant-notification-notice-icon-warning{color:#fa0}.ant-notification-notice-icon-error{color:#e95471}.ant-notification-notice-close-x:after{font-size:12px;content:\"\\E633\";font-family:anticon;cursor:pointer}.ant-notification-notice-close{position:absolute;right:16px;top:10px;color:#999;outline:none}.ant-notification-notice-btn{float:right;margin-top:16px}.ant-notification .notification-transition{transition:all .3s ease}.ant-notification .notification-enter{transform:translateX(335px)}.ant-notification .notification-leave{opacity:0;margin-bottom:0;padding-top:0;padding-bottom:0;max-height:0}.ant-modal{position:relative;width:auto;margin:0 auto;top:100px;padding-bottom:24px}.ant-modal-wrap{position:fixed;overflow:auto;top:0;right:0;bottom:0;left:0;z-index:1000;-webkit-overflow-scrolling:touch;outline:0}.ant-modal-title{margin:0;font-size:14px;line-height:21px;font-weight:700}.ant-modal-content{position:relative;background-color:#fff;border:0;border-radius:4px;background-clip:padding-box;box-shadow:0 2px 8px rgba(0,0,0,.2)}.ant-modal-close{cursor:pointer;border:0;background:transparent;position:absolute;right:18px;top:16px;z-index:10;font-weight:700;line-height:1;text-decoration:none;transition:color .3s ease;color:#999;outline:0}.ant-modal-close-x{display:block;font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;width:14px;height:14px;font-size:14px;line-height:1}.ant-modal-close-x:before{content:\"\\E633\";display:block;font-family:anticon!important}.ant-modal-close:focus,.ant-modal-close:hover{color:#444;text-decoration:none}.ant-modal-header{padding:14px 16px;border-radius:4px 4px 0 0;background:#fff;color:#666;border-bottom:1px solid #e9e9e9}.ant-modal-body{padding:16px;font-size:12px;line-height:1.5}.ant-modal-footer{border-top:1px solid #e9e9e9;padding:10px 18px 10px 10px;text-align:right;border-radius:0 0 4px 4px}.ant-modal-footer button+button{margin-left:8px;margin-bottom:0}.ant-modal.zoom-appear,.ant-modal.zoom-enter{animation-duration:.3s;transform:none;opacity:0}.ant-modal-mask{position:fixed;top:0;right:0;left:0;bottom:0;background-color:#373737;background-color:rgba(55,55,55,.6);height:100%;z-index:1000;filter:alpha(opacity=50)}.ant-modal-mask-hidden{display:none}.ant-modal-open{overflow:hidden}@media (max-width:768px){.ant-modal{width:auto!important;margin:10px}.vertical-center-modal .ant-modal{flex:1}}.ant-confirm .ant-modal-close,.ant-confirm .ant-modal-header{display:none}.ant-confirm .ant-modal-body{padding:30px 40px}.ant-confirm-body-wrapper{zoom:1}.ant-confirm-body-wrapper:after,.ant-confirm-body-wrapper:before{content:\" \";display:table}.ant-confirm-body-wrapper:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-confirm-body .ant-confirm-title{color:#333;font-weight:700;font-size:14px}.ant-confirm-body .ant-confirm-content{margin-left:42px;font-size:12px;color:#333;margin-top:8px}.ant-confirm-body>.anticon{font-size:24px;margin-right:16px;padding:0 1px;float:left}.ant-confirm .ant-confirm-btns{margin-top:30px;float:right}.ant-confirm .ant-confirm-btns button+button{margin-left:10px;margin-bottom:0}.ant-confirm-error .ant-confirm-body>.anticon{color:#e95471}.ant-confirm-confirm .ant-confirm-body>.anticon,.ant-confirm-warning .ant-confirm-body>.anticon{color:#fa0}.ant-confirm-info .ant-confirm-body>.anticon{color:#369be9}.ant-confirm-success .ant-confirm-body>.anticon{color:#16c294}.ant-pagination{font-size:12px}.ant-pagination:after{content:\" \";display:block;height:0;clear:both;overflow:hidden;visibility:hidden}.ant-pagination-total-text{float:left;height:30px;line-height:30px;margin-right:10px}.ant-pagination-item{cursor:pointer;border-radius:4px;user-select:none;min-width:28px;height:28px;line-height:28px;text-align:center;list-style:none;float:left;border:1px solid #d9d9d9;background-color:#fff;margin-right:8px;font-family:Arial}.ant-pagination-item a{text-decoration:none;color:#666;transition:none;margin:0 6px}.ant-pagination-item:hover{transition:all .3s ease;border-color:#369be9}.ant-pagination-item:hover a{color:#369be9}.ant-pagination-item-active{background-color:#369be9;border-color:#369be9}.ant-pagination-item-active:hover a,.ant-pagination-item-active a{color:#fff}.ant-pagination-jump-next:after,.ant-pagination-jump-prev:after{content:\"\\2022\\2022\\2022\";display:block;letter-spacing:2px;color:#ccc;text-align:center}.ant-pagination-jump-next:hover:after,.ant-pagination-jump-prev:hover:after{color:#369be9;display:inline-block;font-size:12px;font-size:8px\\9;transform:scale(.66666667) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;letter-spacing:-1px;font-family:anticon}:root .ant-pagination-jump-next:hover:after,:root .ant-pagination-jump-prev:hover:after{filter:none;font-size:12px}.ant-pagination-jump-prev:hover:after{content:\"\\E620\\E620\"}.ant-pagination-jump-next:hover:after{content:\"\\E61F\\E61F\"}.ant-pagination-jump-next,.ant-pagination-jump-prev,.ant-pagination-prev{margin-right:8px}.ant-pagination-jump-next,.ant-pagination-jump-prev,.ant-pagination-next,.ant-pagination-prev{font-family:Arial;cursor:pointer;color:#666;border-radius:4px;list-style:none;min-width:28px;height:28px;line-height:28px;float:left;text-align:center;transition:all .3s ease;display:inline-block}.ant-pagination-next,.ant-pagination-prev{border:1px solid #d9d9d9;background-color:#fff}.ant-pagination-next a,.ant-pagination-prev a{color:#666}.ant-pagination-next a:after,.ant-pagination-prev a:after{display:inline-block;font-size:12px;font-size:8px\\9;transform:scale(.66666667) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;display:block;height:26px;line-height:26px;font-family:anticon;text-align:center}:root .ant-pagination-next a:after,:root .ant-pagination-prev a:after{filter:none;font-size:12px}.ant-pagination-next:hover,.ant-pagination-prev:hover{border-color:#369be9}.ant-pagination-next:hover a,.ant-pagination-prev:hover a{color:#369be9}.ant-pagination-prev a:after{margin-top:-.5px;content:\"\\E620\";display:block}.ant-pagination-next a:after{content:\"\\E61F\";display:block}.ant-pagination-disabled{cursor:not-allowed}.ant-pagination-disabled:hover{border-color:#d9d9d9}.ant-pagination-disabled:hover a{color:#ccc;cursor:not-allowed}.ant-pagination-disabled a{color:#ccc}.ant-pagination-slash{margin:0 10px 0 5px}.ant-pagination-options{float:left;margin-left:15px}.ant-pagination-options-size-changer{float:left;margin-right:10px}.ant-pagination-options-quick-jumper{float:left;height:28px;line-height:28px}.ant-pagination-options-quick-jumper input{position:relative;display:inline-block;padding:4px 7px;width:100%;height:28px;cursor:text;font-size:12px;line-height:1.5;color:#333;background-color:#fff;background-image:none;border:1px solid #d9d9d9;border-radius:4px;transition:all .3s;margin:0 8px;width:50px}.ant-pagination-options-quick-jumper input::-moz-placeholder{color:#ccc;opacity:1}.ant-pagination-options-quick-jumper input:-ms-input-placeholder{color:#ccc}.ant-pagination-options-quick-jumper input::-webkit-input-placeholder{color:#ccc}.ant-pagination-options-quick-jumper input:hover{border-color:#5eafed}.ant-pagination-options-quick-jumper input:focus{border-color:#5eafed;outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-pagination-options-quick-jumper input[disabled]{background-color:#f7f7f7;opacity:1;cursor:not-allowed;color:#ccc}.ant-pagination-options-quick-jumper input[disabled]:hover{border-color:#e1e1e1}textarea.ant-pagination-options-quick-jumper input{max-width:100%;height:auto;vertical-align:bottom}.ant-pagination-options-quick-jumper input-lg{padding:6px 7px;height:32px}.ant-pagination-options-quick-jumper input-sm{padding:1px 7px;height:22px;border-radius:2px}.ant-pagination-simple .ant-pagination-next,.ant-pagination-simple .ant-pagination-prev{border:0;height:24px;line-height:24px;margin:0;font-size:18px}.ant-pagination-simple .ant-pagination-simple-pager{float:left;margin-right:8px}.ant-pagination-simple .ant-pagination-simple-pager input{margin:0 8px;box-sizing:border-box;background-color:#fff;border-radius:4px;border:1px solid #d9d9d9;outline:none;padding:5px 8px;width:30px;height:24px;text-align:center;transition:border-color .3s ease}.ant-pagination-simple .ant-pagination-simple-pager input:hover{border-color:#369be9}.ant-pagination.mini .ant-pagination-total-text{height:20px;line-height:20px}.ant-pagination.mini .ant-pagination-item,.ant-pagination.mini .ant-pagination-next,.ant-pagination.mini .ant-pagination-prev{border:0;margin:0;min-width:20px;height:20px;line-height:20px}.ant-pagination.mini .ant-pagination-jump-next,.ant-pagination.mini .ant-pagination-jump-prev,.ant-pagination.mini .ant-pagination-next a:after,.ant-pagination.mini .ant-pagination-prev a:after{height:20px;line-height:20px}.ant-pagination.mini .ant-pagination-options{margin-left:8px}.ant-pagination.mini .ant-pagination-options-quick-jumper{height:20px;line-height:20px}.ant-pagination.mini .ant-pagination-options-quick-jumper input{padding:1px 7px;height:22px;border-radius:2px;width:44px}.ant-transfer-checkbox{white-space:nowrap;cursor:pointer;outline:none;display:inline-block;line-height:1;position:relative;vertical-align:middle}.ant-transfer-checkbox-focused .ant-transfer-checkbox-inner,.ant-transfer-checkbox-wrapper:hover .ant-transfer-checkbox .ant-transfer-checkbox-inner,.ant-transfer-checkbox:hover .ant-transfer-checkbox-inner{border-color:#bbb}.ant-transfer-checkbox-inner{position:relative;top:0;left:0;display:inline-block;width:14px;height:14px;border:1px solid #d9d9d9;border-radius:3px;background-color:#fff;transition:all .3s}.ant-transfer-checkbox-inner:after{transform:rotate(45deg) scale(0);position:absolute;left:4px;top:1px;display:table;width:5px;height:8px;border:2px solid #fff;border-top:0;border-left:0;content:\" \";transition:all .1s cubic-bezier(.71,-.46,.88,.6)}.ant-transfer-checkbox-input{position:absolute;left:0;z-index:1;cursor:pointer;opacity:0;filter:alpha(opacity=0);top:0;bottom:0;right:0;width:100%;height:100%}.ant-transfer-checkbox-indeterminate .ant-transfer-checkbox-inner:after{content:\" \";transform:scale(1);position:absolute;left:2px;top:5px;width:8px;height:1px}.ant-transfer-checkbox-checked .ant-transfer-checkbox-inner:after{transform:rotate(45deg) scale(1);position:absolute;left:4px;top:1px;display:table;width:5px;height:8px;border:2px solid #fff;border-top:0;border-left:0;content:\" \";transition:all .2s cubic-bezier(.12,.4,.29,1.46) .1s}.ant-transfer-checkbox-checked .ant-transfer-checkbox-inner,.ant-transfer-checkbox-indeterminate .ant-transfer-checkbox-inner{border-color:#369be9;background-color:#369be9}.ant-transfer-checkbox-checked:hover .ant-transfer-checkbox-inner,.ant-transfer-checkbox-indeterminate:hover .ant-transfer-checkbox-inner,.ant-transfer-checkbox-wrapper:hover .ant-transfer-checkbox-checked .ant-transfer-checkbox-inner,.ant-transfer-checkbox-wrapper:hover .ant-transfer-checkbox-indeterminate .ant-transfer-checkbox-inner{border-color:#369be9}.ant-transfer-checkbox-disabled.ant-transfer-checkbox-checked .ant-transfer-checkbox-inner:after{animation-name:none;border-color:#ccc}.ant-transfer-checkbox-disabled .ant-transfer-checkbox-inner{border-color:#d9d9d9!important;background-color:#f3f3f3}.ant-transfer-checkbox-disabled .ant-transfer-checkbox-inner:after{animation-name:none;border-color:#f3f3f3}.ant-transfer-checkbox-disabled+span{color:#ccc;cursor:not-allowed}.ant-transfer-checkbox-wrapper{cursor:pointer;font-size:12px;display:inline-block}.ant-transfer-checkbox+span,.ant-transfer-checkbox-wrapper+span{padding-left:8px;padding-right:8px}.ant-transfer-checkbox-group{font-size:12px}.ant-transfer-checkbox-group-item{display:inline-block;margin-right:8px}@media \\0screen{.ant-transfer-checkbox-checked .ant-transfer-checkbox-inner:after,.ant-transfer-checkbox-checked .ant-transfer-checkbox-inner:before{font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E632\";font-weight:700;font-size:8px;border:0;color:#fff;left:2px;top:3px;position:absolute}}.ant-transfer{position:relative;line-height:1.5}.ant-transfer-list{font-size:12px;border:1px solid #d9d9d9;display:inline-block;border-radius:4px;vertical-align:middle;position:relative;width:180px;height:200px;padding-top:33px}.ant-transfer-list-with-footer{padding-bottom:33px}.ant-transfer-list-search-action{color:#ccc;position:absolute;top:2px;right:2px;width:32px;height:32px;line-height:32px;text-align:center;font-size:14px}.ant-transfer-list-search-action .anticon{transition:all .3s;font-size:12px;color:#ccc}.ant-transfer-list-search-action .anticon:hover{color:#999}.ant-transfer-list-header{padding:7px 16px;border-radius:4px 4px 0 0;background:#fff;color:#666;border-bottom:1px solid #e9e9e9;overflow:hidden;position:absolute;top:0;left:0;width:100%}.ant-transfer-list-header-title{float:right}.ant-transfer-list-body{font-size:12px;position:relative;height:100%}.ant-transfer-list-body-search-wrapper{position:absolute;top:0;left:0;height:28px;padding:4px;width:100%}.ant-transfer-list-body-not-found{padding-top:24px;color:#ccc;text-align:center;height:100%}.ant-transfer-list-body-with-search{padding-top:34px}.ant-transfer-list-content{height:100%;overflow:auto}.ant-transfer-list-content-item{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;padding:7px 16px;transition:all .3s ease}.ant-transfer-list-content-item:not(.ant-transfer-list-content-item-disabled):hover{cursor:pointer;background-color:#ebf5fd}.ant-transfer-list-content-item-disabled{cursor:not-allowed;color:rgba(0,0,0,.25)}.ant-transfer-list-content-item-highlight-enter{animation:transferHighlightIn 1s ease;transition:none}.ant-transfer-list-footer{border-top:1px solid #e9e9e9;border-radius:0 0 4px 4px;position:absolute;bottom:0;left:0;width:100%}.ant-transfer-operation{display:inline-block;overflow:hidden;margin:0 8px;vertical-align:middle}.ant-transfer-operation .ant-btn{display:block}.ant-transfer-operation .ant-btn:first-child{margin-bottom:4px}.ant-transfer-operation .ant-btn .anticon{display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-transfer-operation .ant-btn .anticon{filter:none;font-size:12px}@keyframes transferHighlightIn{0%{background:#d7ebfb}to{background:transparent}}.ant-rate{margin:0;padding:0;list-style:none;font-size:20px;display:inline-block;vertical-align:middle;font-family:anticon;font-weight:400;font-style:normal}.ant-rate-disabled .ant-rate-star-content:before,.ant-rate-disabled .ant-rate-star:before{cursor:default}.ant-rate-disabled .ant-rate-star:hover{transform:scale(1)}.ant-rate-star{margin:0;padding:0;display:inline-block;margin-right:8px;position:relative;transition:all .3s ease}.ant-rate-star:hover{transform:scale(1.1)}.ant-rate-star-content:before,.ant-rate-star:before{color:#e9e9e9;cursor:pointer;content:\"\\E660\";transition:all .3s ease;display:block}.ant-rate-star-content{position:absolute;left:0;top:0;width:50%;height:100%;overflow:hidden}.ant-rate-star-content:before{color:transparent}.ant-rate-star-full:before,.ant-rate-star-half .ant-rate-star-content:before{color:#f5a623}.ant-rate-star-full:hover:before,.ant-rate-star-half:hover .ant-rate-star-content:before{color:#f7b84f}.ant-rate-text{margin-left:8px;vertical-align:middle}.ant-radio-group,.ant-rate-text{display:inline-block;font-size:12px}.ant-radio-wrapper{font-size:12px;margin-right:8px}.ant-radio,.ant-radio-wrapper{vertical-align:middle;display:inline-block;position:relative;white-space:nowrap;cursor:pointer}.ant-radio{outline:none;line-height:1}.ant-radio-focused .ant-radio-inner,.ant-radio-wrapper:hover .ant-radio .ant-radio-inner,.ant-radio:hover .ant-radio-inner{border-color:#bbb}.ant-radio-inner{position:relative;top:0;left:0;display:inline-block;width:14px;height:14px;border-radius:14px;border:1px solid #d9d9d9;background-color:#fff;transition:all .3s}.ant-radio-inner:after{position:absolute;width:6px;height:6px;left:3px;top:3px;border-radius:4px;display:table;border-top:0;border-left:0;content:\" \";background-color:#369be9;opacity:0;transform:scale(0);transition:all .3s cubic-bezier(.78,.14,.15,.86)}.ant-radio-input{position:absolute;left:0;z-index:1;cursor:pointer;opacity:0;top:0;bottom:0;right:0}.ant-radio-checked .ant-radio-inner{border-color:#d9d9d9}.ant-radio-checked .ant-radio-inner:after{transform:scale(1);opacity:1;transition:all .3s cubic-bezier(.78,.14,.15,.86)}.ant-radio-disabled .ant-radio-inner{border-color:#d9d9d9!important;background-color:#f3f3f3}.ant-radio-disabled .ant-radio-inner:after{background-color:#ccc}.ant-radio-disabled+span{color:#ccc;cursor:not-allowed}span.ant-radio+*{padding-left:8px;padding-right:8px}.ant-radio-button-wrapper{margin:0;height:28px;line-height:26px;color:#333;display:inline-block;transition:all .3s ease;cursor:pointer;border:1px solid #d9d9d9;border-left:0;background:#fff;padding:0 16px}.ant-radio-button-wrapper a{color:#333}.ant-radio-button-wrapper>.ant-radio-button{margin-left:0;display:block;width:0;height:0}.ant-radio-group-large .ant-radio-button-wrapper{height:32px;line-height:30px}.ant-radio-group-small .ant-radio-button-wrapper{height:22px;line-height:20px;padding:0 12px}.ant-radio-group-small .ant-radio-button-wrapper:first-child{border-radius:2px 0 0 2px}.ant-radio-group-small .ant-radio-button-wrapper:last-child{border-radius:0 2px 2px 0}.ant-radio-button-wrapper:first-child{border-radius:4px 0 0 4px;border-left:1px solid #d9d9d9}.ant-radio-button-wrapper:last-child{border-radius:0 4px 4px 0}.ant-radio-button-wrapper:first-child:last-child{border-radius:4px}.ant-radio-button-wrapper-focused,.ant-radio-button-wrapper:hover{color:#369be9;position:relative}.ant-radio-button-wrapper .ant-radio-inner,.ant-radio-button-wrapper input[type=checkbox],.ant-radio-button-wrapper input[type=radio]{opacity:0;filter:alpha(opacity=0);width:0;height:0}.ant-radio-button-wrapper-checked{background:#fff;border-color:#369be9;color:#369be9;box-shadow:-1px 0 0 0 #369be9}.ant-radio-button-wrapper-checked:first-child{border-color:#369be9;box-shadow:none!important}.ant-radio-button-wrapper-checked:hover{border-color:#5eafed;box-shadow:-1px 0 0 0 #5eafed;color:#5eafed}.ant-radio-button-wrapper-checked:active{border-color:#3393dd;box-shadow:-1px 0 0 0 #3393dd;color:#3393dd}.ant-radio-button-wrapper-disabled{cursor:not-allowed}.ant-radio-button-wrapper-disabled,.ant-radio-button-wrapper-disabled:first-child,.ant-radio-button-wrapper-disabled:hover{border-color:#d9d9d9;background-color:#f7f7f7;color:#ccc}.ant-radio-button-wrapper-disabled:first-child{border-left-color:#d9d9d9}.ant-radio-button-wrapper-disabled.ant-radio-button-wrapper-checked{color:#fff;background-color:#e6e6e6;border-color:#d9d9d9}.ant-input-number{position:relative;padding:4px 7px;width:100%;cursor:text;line-height:1.5;color:#333;background-color:#fff;background-image:none;transition:all .3s;margin:0;padding:0;line-height:28px;font-size:12px;height:28px;display:inline-block;vertical-align:middle;border:1px solid #d9d9d9;border-radius:4px;overflow:hidden;width:80px}.ant-input-number::-moz-placeholder{color:#ccc;opacity:1}.ant-input-number:-ms-input-placeholder{color:#ccc}.ant-input-number::-webkit-input-placeholder{color:#ccc}.ant-input-number:focus{border-color:#5eafed;outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-input-number[disabled]{background-color:#f7f7f7;opacity:1;cursor:not-allowed;color:#ccc}.ant-input-number[disabled]:hover{border-color:#e1e1e1}textarea.ant-input-number{max-width:100%;height:auto;vertical-align:bottom}.ant-input-number-lg{padding:6px 7px;height:32px}.ant-input-number-sm{padding:1px 7px;height:22px;border-radius:2px}.ant-input-number-handler{text-align:center;line-height:0;height:14px;overflow:hidden;color:#999;position:relative;transition:all .1s linear;display:block;width:100%;font-weight:700}.ant-input-number-handler:active{background:#f4f4f4}.ant-input-number-handler:hover .ant-input-number-handler-down-inner,.ant-input-number-handler:hover .ant-input-number-handler-up-inner{color:#5eafed}.ant-input-number-handler-down-inner,.ant-input-number-handler-up-inner{font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;line-height:1;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;line-height:12px;user-select:none;position:absolute;width:12px;height:12px;transition:all .1s linear;display:inline-block;font-size:12px;font-size:7px\\9;transform:scale(.58333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;right:4px;color:#999}.ant-input-number-handler-down-inner:before,.ant-input-number-handler-up-inner:before{display:block;font-family:anticon!important}:root .ant-input-number-handler-down-inner,:root .ant-input-number-handler-up-inner{filter:none;font-size:12px}.ant-input-number:hover{border-color:#5eafed}.ant-input-number-focused{border-color:#5eafed;outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-input-number-disabled{background-color:#f7f7f7;opacity:1;cursor:not-allowed;color:#ccc}.ant-input-number-disabled:hover{border-color:#e1e1e1}.ant-input-number-input-wrap{overflow:hidden;height:28px}.ant-input-number-input{width:100%;text-align:left;outline:0;-moz-appearance:textfield;line-height:28px;height:28px;transition:all .3s linear;color:#666;border:0;border-radius:4px;padding:0 7px}.ant-input-number-input[disabled]{background-color:#f7f7f7;opacity:1;cursor:not-allowed;color:#ccc}.ant-input-number-input[disabled]:hover{border-color:#e1e1e1}.ant-input-number-lg{padding:0}.ant-input-number-lg .ant-input-number-handler-wrap,.ant-input-number-lg .ant-input-number-input-wrap{height:32px}.ant-input-number-lg .ant-input-number-handler{height:16px}.ant-input-number-lg input{height:32px;line-height:32px}.ant-input-number-lg .ant-input-number-handler-up-inner{top:2px}.ant-input-number-lg .ant-input-number-handler-down-inner{bottom:2px}.ant-input-number-lg .ant-input-number-handler-up:hover{height:18px}.ant-input-number-sm{padding:0}.ant-input-number-sm .ant-input-number-handler-wrap,.ant-input-number-sm .ant-input-number-input-wrap{height:22px}.ant-input-number-sm .ant-input-number-handler{height:11px}.ant-input-number-sm input{height:22px;line-height:22px;margin-top:-1px;vertical-align:top}.ant-input-number-sm .ant-input-number-handler-up-inner{top:-1px}.ant-input-number-sm .ant-input-number-handler-down-inner{bottom:-1px}.ant-input-number-sm .ant-input-number-handler-up:hover{height:13px}.ant-input-number-sm .ant-input-number-handler-down:hover .ant-input-number-handler-down-inner{bottom:4px}.ant-input-number-handler-wrap{border-left:1px solid #d9d9d9;width:22px;height:100%;background:#fff;position:absolute;top:-1px;right:0;opacity:0;border-radius:0 4px 4px 0;transition:opacity .24s linear .1s}.ant-input-number:hover .ant-input-number-handler-wrap{opacity:1}.ant-input-number-handler-up{cursor:pointer}.ant-input-number-handler-up-inner{top:1px}.ant-input-number-handler-up-inner:before{text-align:center;content:\"\\E61E\"}.ant-input-number-handler-up:hover{height:16px}.ant-input-number-handler-up:hover .ant-input-number-handler-up-inner{margin-top:2px}.ant-input-number-handler-down{border-top:1px solid #d9d9d9;top:-1px;cursor:pointer}.ant-input-number-handler-down-inner:before{text-align:center;content:\"\\E61D\"}.ant-input-number-handler-down:hover{height:16px;margin-top:-2px}.ant-input-number-disabled .ant-input-number-handler-down-inner,.ant-input-number-disabled .ant-input-number-handler-up-inner,.ant-input-number-handler-down-disabled .ant-input-number-handler-down-inner,.ant-input-number-handler-down-disabled .ant-input-number-handler-up-inner,.ant-input-number-handler-up-disabled .ant-input-number-handler-down-inner,.ant-input-number-handler-up-disabled .ant-input-number-handler-up-inner{opacity:.72;color:#ccc!important;cursor:not-allowed}.ant-input-number-disabled .ant-input-number-input{opacity:.72;cursor:not-allowed;background-color:#f3f3f3}.ant-input-number-disabled .ant-input-number-handler-wrap{display:none}.ant-input-number-disabled .ant-input-number-handler{opacity:.72;color:#ccc!important;cursor:not-allowed}.ant-back-top{z-index:10;position:fixed;right:100px;bottom:50px;height:40px;width:40px;cursor:pointer}.ant-back-top-content{height:40px;width:40px;border-radius:20px;background-color:rgba(64,64,64,.4);color:#fff;text-align:center;transition:all .3s cubic-bezier(.645,.045,.355,1)}.ant-back-top-content:hover{background-color:rgba(64,64,64,.6);transition:all .3s cubic-bezier(.645,.045,.355,1)}.ant-back-top-icon{font-size:20px;margin-top:10px}.ant-spin{color:#369be9;vertical-align:middle;text-align:center;opacity:0;position:absolute;transition:transform .3s cubic-bezier(.78,.14,.15,.86);font-size:12px;display:none}.ant-spin-spinning{opacity:1;position:static;display:inline-block}.ant-spin-nested-loading{position:relative}.ant-spin-nested-loading .ant-spin{position:absolute;height:100%;width:100%;z-index:4}.ant-spin-nested-loading .ant-spin-dot{position:absolute;top:50%;left:50%;margin:-10px}.ant-spin-nested-loading .ant-spin-sm .ant-spin-dot{margin:-7px}.ant-spin-nested-loading .ant-spin-lg .ant-spin-dot{margin:-15px}.ant-spin-nested-loading .ant-spin-show-text .ant-spin-dot{margin:-16px}.ant-spin-nested-loading .ant-spin-show-text.ant-spin-sm .ant-spin-dot{margin:-13px}.ant-spin-nested-loading .ant-spin-show-text.ant-spin-lg .ant-spin-dot{margin:-21px}.ant-spin-nested-loading .ant-spin-text{position:absolute;top:50%;width:100%;padding-top:4px}.ant-spin-nested-loading .ant-spin-sm .ant-spin-text{padding-top:1px}.ant-spin-nested-loading .ant-spin-lg .ant-spin-text{padding-top:9px}.ant-spin-container{transition:all .3s cubic-bezier(.645,.045,.355,1);position:relative}.ant-spin-blur{opacity:.7;-webkit-filter:blur(1px);filter:blur(1px);filter:progid\\:DXImageTransform\\.Microsoft\\.Blur(PixelRadius\\=1,MakeShadow\\=false)}.ant-spin-blur:after{content:\"\";position:absolute;left:0;right:0;top:0;bottom:0;background:transparent}.ant-spin-tip{color:rgba(0,0,0,.43)}.ant-spin-dot{position:relative;display:block;width:20px;height:20px;transform:rotate(45deg);animation:antRotate 3.2s infinite linear}.ant-spin-dot i{width:8px;height:8px;border-radius:50%;background-color:#369be9;transform:scale(.6);display:block;position:absolute;opacity:.3;animation:antSpinMove .8s infinite linear alternate;transform-origin:0 0}.ant-spin-dot i:first-child{left:0;top:0}.ant-spin-dot i:nth-child(2){right:0;top:0;animation-delay:.4s}.ant-spin-dot i:nth-child(3){right:0;bottom:0;animation-delay:.8s}.ant-spin-dot i:nth-child(4){left:0;bottom:0;animation-delay:1.2s}.ant-spin-sm .ant-spin-dot{width:14px;height:14px}.ant-spin-sm .ant-spin-dot i{width:6px;height:6px}.ant-spin-lg .ant-spin-dot{width:30px;height:30px}.ant-spin-lg .ant-spin-dot i{width:12px;height:12px}.ant-spin.ant-spin-show-text .ant-spin-text{display:block}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.ant-spin-blur{background:#fff;opacity:.5}}@keyframes antSpinMove{to{transform:scale(1);opacity:1}}@keyframes antRotate{to{transform:rotate(405deg)}}.ant-progress{display:inline-block}.ant-progress-line{width:100%;font-size:12px;position:relative}.ant-progress-outer{display:inline-block;width:100%;margin-right:0;padding-right:0}.ant-progress-show-info .ant-progress-outer{padding-right:45px;margin-right:-45px}.ant-progress-inner{display:inline-block;width:100%;background-color:#f3f3f3;border-radius:100px;vertical-align:middle}.ant-progress-bg{border-radius:100px;background-color:#369be9;transition:all .4s cubic-bezier(.08,.82,.17,1) 0s;position:relative}.ant-progress-text{width:35px;text-align:left;font-size:1em;margin-left:10px;vertical-align:middle;display:inline-block;font-family:tahoma;position:relative;float:right;top:-1px}.ant-progress-text .anticon{font-size:12px}.ant-progress-status-active .ant-progress-bg:before{content:\"\";opacity:0;position:absolute;top:0;left:0;right:0;bottom:0;background:#fff;border-radius:10px;animation:ant-progress-active 2s cubic-bezier(.23,1,.32,1) infinite}.ant-progress-status-exception .ant-progress-bg{background-color:#e95471}.ant-progress-status-exception .ant-progress-text{color:#e95471}.ant-progress-status-success .ant-progress-bg{background-color:#16c294}.ant-progress-status-success .ant-progress-text{color:#16c294}.ant-progress-circle .ant-progress-inner{position:relative;line-height:1;background-color:transparent}.ant-progress-circle .ant-progress-text{display:block;position:absolute;width:100%;text-align:center;line-height:1;top:50%;transform:translateY(-50%);left:0;font-family:tahoma;margin:0}.ant-progress-circle .ant-progress-text .anticon{font-size:1.16666667em}.ant-progress-circle .ant-progress-status-exception .ant-progress-text{color:#e95471}.ant-progress-circle .ant-progress-status-success .ant-progress-text{color:#16c294}@keyframes ant-progress-active{0%{opacity:.8;width:0}to{opacity:0;width:100%}}.ant-upload{font-size:12px;outline:0}.ant-upload-btn{display:block;width:100%;outline:none}.ant-upload input[type=file]{cursor:pointer}.ant-upload.ant-upload-select{display:inline-block}.ant-upload.ant-upload-select-picture-card{border:1px dashed #d9d9d9;width:96px;height:96px;border-radius:4px;background-color:#fbfbfb;text-align:center;cursor:pointer;transition:border-color .3s ease;display:inline-block;vertical-align:top;margin-right:8px;margin-bottom:8px}.ant-upload.ant-upload-select-picture-card>.ant-upload{display:block;width:100%;height:100%;padding:20px 0}.ant-upload.ant-upload-select-picture-card:hover{border-color:#369be9}.ant-upload.ant-upload-drag{border:1px dashed #d9d9d9;transition:border-color .3s ease;cursor:pointer;border-radius:4px;text-align:center;width:100%;height:100%;position:relative}.ant-upload.ant-upload-drag.ant-upload-drag-hover:not(.ant-upload-disabled){border:2px dashed #5eafed}.ant-upload.ant-upload-drag.ant-upload-disabled{cursor:not-allowed}.ant-upload.ant-upload-drag .ant-upload-btn{display:table;height:100%}.ant-upload.ant-upload-drag .ant-upload-drag-container{display:table-cell;vertical-align:middle}.ant-upload.ant-upload-drag:not(.ant-upload-disabled):hover{border-color:#5eafed}.ant-upload.ant-upload-drag p.ant-upload-drag-icon{height:60px;margin-bottom:24px}.ant-upload.ant-upload-drag p.ant-upload-drag-icon .anticon{font-size:80px;margin-top:-5px;color:#5eafed}.ant-upload.ant-upload-drag p.ant-upload-text{font-size:14px}.ant-upload.ant-upload-drag p.ant-upload-hint{font-size:12px;color:#999}.ant-upload.ant-upload-drag .anticon-plus{font-size:30px;transition:all .3s ease;color:#ccc}.ant-upload.ant-upload-drag .anticon-plus:hover,.ant-upload.ant-upload-drag:hover .anticon-plus{color:#999}.ant-upload-list{overflow:hidden}.ant-upload-list-item{overflow:hidden;margin-top:8px;font-size:12px}.ant-upload-list-item-info{height:22px;line-height:22px;padding:0 4px;transition:background-color .3s ease}.ant-upload-list-item-info .anticon-paper-clip{margin-right:4px;font-size:12px;color:#999}.ant-upload-list-item-info .anticon-cross{display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;transition:all .3s ease;opacity:0;cursor:pointer;float:right;color:#999;line-height:22px}:root .ant-upload-list-item-info .anticon-cross{filter:none;font-size:12px}.ant-upload-list-item-info .anticon-cross:hover{color:#666}.ant-upload-list-item:hover .ant-upload-list-item-info{background-color:#ebf5fd}.ant-upload-list-item:hover .anticon-cross{opacity:1}.ant-upload-list-item-error,.ant-upload-list-item-error .anticon-paper-clip{color:#e95471}.ant-upload-list-item-error .anticon-cross{opacity:1}.ant-upload-list-item-progress{padding:0 8px 0 20px;margin-top:-2px;margin-bottom:1px;font-size:12px}.ant-upload-list-item-progress .ant-progress-line-inner{vertical-align:middle}.ant-upload-list-picture-card .ant-upload-list-item,.ant-upload-list-picture .ant-upload-list-item{padding:8px;border-radius:4px;border:1px solid #d9d9d9;height:66px;position:relative}.ant-upload-list-picture-card .ant-upload-list-item:hover,.ant-upload-list-picture .ant-upload-list-item:hover{background:transparent}.ant-upload-list-picture-card .ant-upload-list-item-info,.ant-upload-list-picture .ant-upload-list-item-info{padding:0}.ant-upload-list-picture-card .ant-upload-list-item:hover .ant-upload-list-item-info,.ant-upload-list-picture .ant-upload-list-item:hover .ant-upload-list-item-info{background:transparent}.ant-upload-list-picture-card .ant-upload-list-item-uploading,.ant-upload-list-picture .ant-upload-list-item-uploading{border-style:dashed}.ant-upload-list-picture-card .ant-upload-list-item-thumbnail,.ant-upload-list-picture .ant-upload-list-item-thumbnail{width:48px;height:48px;position:absolute;top:8px;left:8px}.ant-upload-list-picture-card .ant-upload-list-item-thumbnail img,.ant-upload-list-picture .ant-upload-list-item-thumbnail img{width:48px;height:48px;display:block}.ant-upload-list-picture-card .ant-upload-list-item-thumbnail.anticon:before,.ant-upload-list-picture .ant-upload-list-item-thumbnail.anticon:before{line-height:48px;font-size:24px;color:#999}.ant-upload-list-picture-card .ant-upload-list-item-name,.ant-upload-list-picture .ant-upload-list-item-name{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;margin:0 0 0 8px;line-height:42px;transition:all .3s ease;padding-left:48px;padding-right:8px;max-width:100%;display:inline-block;box-sizing:border-box}.ant-upload-list-picture-card .ant-upload-list-item-uploading .ant-upload-list-item-name,.ant-upload-list-picture .ant-upload-list-item-uploading .ant-upload-list-item-name{line-height:28px}.ant-upload-list-picture-card .ant-upload-list-item-progress,.ant-upload-list-picture .ant-upload-list-item-progress{padding-left:56px;margin-top:0}.ant-upload-list-picture-card .anticon-cross,.ant-upload-list-picture .anticon-cross{position:absolute;right:8px;top:8px;line-height:1}.ant-upload-list-picture-card{display:inline}.ant-upload-list-picture-card .ant-upload-list-item{display:inline-block;width:96px;height:96px;margin:0 8px 8px 0}.ant-upload-list-picture-card .ant-upload-list-item-info{height:100%;position:relative}.ant-upload-list-picture-card .ant-upload-list-item-info:before{content:\" \";position:absolute;z-index:1;background-color:gray;transition:all .3s ease;opacity:0;width:100%;height:100%}.ant-upload-list-picture-card .ant-upload-list-item-info .anticon-delete,.ant-upload-list-picture-card .ant-upload-list-item-info .anticon-eye-o{position:absolute;left:50%;top:50%;z-index:10;-webkit-transition:all .3s ease;transition:all .3s ease;cursor:pointer;font-size:16px;width:16px;line-height:1;color:#eee;opacity:0;margin-top:-8px;margin-left:-22px}.ant-upload-list-picture-card .ant-upload-list-item-info .anticon-delete:hover,.ant-upload-list-picture-card .ant-upload-list-item-info .anticon-eye-o:hover{color:#fff}.ant-upload-list-picture-card .ant-upload-list-item-info .anticon-delete{left:50%;margin-left:6px}.ant-upload-list-picture-card .ant-upload-list-item-info:hover:before{opacity:.8}.ant-upload-list-picture-card .ant-upload-list-item-info:hover .anticon-delete,.ant-upload-list-picture-card .ant-upload-list-item-info:hover .anticon-eye-o{opacity:1}.ant-upload-list-picture-card .ant-upload-list-item-thumbnail,.ant-upload-list-picture-card .ant-upload-list-item-thumbnail img{display:block;width:100%;height:100%;position:static}.ant-upload-list-picture-card .ant-upload-list-item-name{display:none}.ant-upload-list-picture-card .ant-upload-list-item-uploading.ant-upload-list-item{background-color:#fbfbfb}.ant-upload-list-picture-card .ant-upload-list-item-uploading .ant-upload-list-item-info{height:auto}.ant-upload-list-picture-card .ant-upload-list-item-uploading .ant-upload-list-item-info .anticon-delete,.ant-upload-list-picture-card .ant-upload-list-item-uploading .ant-upload-list-item-info .anticon-eye-o,.ant-upload-list-picture-card .ant-upload-list-item-uploading .ant-upload-list-item-info:before{display:none}.ant-upload-list-picture-card .ant-upload-list-item-uploading-text{margin-top:18px;color:#999}.ant-upload-list-picture-card .ant-upload-list-item-progress{padding-left:0}.ant-upload-list .ant-upload-success-icon{color:#16c294;font-weight:700}.ant-upload-list .ant-upload-margin-top-enter{animation:uploadMarginTopIn .3s cubic-bezier(.78,.14,.15,.86)}.ant-upload-list .ant-upload-margin-top-leave{animation:uploadMarginTopOut .3s cubic-bezier(.78,.14,.15,.86)}@keyframes uploadMarginTopIn{0%{margin-top:-25px;opacity:0}}@keyframes uploadMarginTopOut{to{margin-top:-25px;opacity:0}}.ant-tag{display:inline-block;line-height:20px;height:22px;padding:0 8px;border-radius:4px;border:1px solid #e9e9e9;background:#f7f7f7;font-size:12px;vertical-align:middle;opacity:1;overflow:hidden;margin:2px 4px 2px 0;cursor:pointer}.ant-tag:hover{opacity:.85}.ant-tag,.ant-tag a,.ant-tag a:hover{color:#333}.ant-tag-text a:first-child:last-child{display:inline-block;margin:0 -8px;padding:0 8px}.ant-tag .anticon-cross{display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;cursor:pointer;font-weight:700;margin-left:3px;color:#666;transition:all .3s ease;opacity:.66}:root .ant-tag .anticon-cross{filter:none;font-size:12px}.ant-tag .anticon-cross:hover{opacity:1}.ant-tag-has-color{border-color:transparent}.ant-tag-blue,.ant-tag-blue .anticon-cross,.ant-tag-blue .anticon-cross:hover,.ant-tag-blue a,.ant-tag-blue a:hover,.ant-tag-green,.ant-tag-green .anticon-cross,.ant-tag-green .anticon-cross:hover,.ant-tag-green a,.ant-tag-green a:hover,.ant-tag-red,.ant-tag-red .anticon-cross,.ant-tag-red .anticon-cross:hover,.ant-tag-red a,.ant-tag-red a:hover,.ant-tag-yellow,.ant-tag-yellow .anticon-cross,.ant-tag-yellow .anticon-cross:hover,.ant-tag-yellow a,.ant-tag-yellow a:hover{color:#fff}.ant-tag-blue{background:#369be9}.ant-tag-green{background:#16c294}.ant-tag-yellow{background:#fa0}.ant-tag-red{background:#e95471}.ant-tag-close{width:0!important;padding:0;margin:0}.ant-tag-zoom-appear,.ant-tag-zoom-enter{animation:antFadeIn .2s cubic-bezier(.78,.14,.15,.86);animation-fill-mode:both}.ant-tag-zoom-leave{animation:antZoomOut .3s cubic-bezier(.78,.14,.15,.86);animation-fill-mode:both}.ant-tabs{box-sizing:border-box;position:relative;overflow:hidden;zoom:1;color:#333}.ant-tabs:after,.ant-tabs:before{content:\" \";display:table}.ant-tabs:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-tabs-bar{outline:none}.ant-tabs-ink-bar{z-index:1;position:absolute;left:0;bottom:1px;box-sizing:border-box;height:2px;background-color:#369be9;transition:transform .3s cubic-bezier(.645,.045,.355,1);transform-origin:0 0}.ant-tabs-bar{border-bottom:1px solid #d9d9d9;margin-bottom:16px}.ant-tabs-nav-container{overflow:hidden;font-size:14px;line-height:1.5;box-sizing:border-box;position:relative;white-space:nowrap;margin-bottom:-1px;zoom:1}.ant-tabs-nav-container:after,.ant-tabs-nav-container:before{content:\" \";display:table}.ant-tabs-nav-container:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-tabs-nav-container-scrolling{padding-left:32px;padding-right:32px}.ant-tabs-tab-next,.ant-tabs-tab-prev{user-select:none;z-index:2;margin-right:-2px;margin-top:3px;width:32px;height:100%;line-height:32px;cursor:pointer;border:0;background-color:transparent;position:absolute;text-align:center;color:rgba(0,0,0,.43);transition:color .3s ease}.ant-tabs-tab-next:hover,.ant-tabs-tab-prev:hover{color:#333}.ant-tabs-tab-next-icon,.ant-tabs-tab-prev-icon{position:relative;font-style:normal;font-weight:700;font-variant:normal;line-height:inherit;vertical-align:baseline;text-align:center;text-transform:none;font-family:sans-serif;display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-tabs-tab-next-icon,:root .ant-tabs-tab-prev-icon{filter:none;font-size:12px}.ant-tabs-tab-next-icon:before,.ant-tabs-tab-prev-icon:before{display:block;font-family:anticon!important}.ant-tabs-tab-btn-disabled{cursor:not-allowed}.ant-tabs-tab-btn-disabled,.ant-tabs-tab-btn-disabled:hover{color:#ccc}.ant-tabs-tab-next{right:2px}.ant-tabs-tab-next-icon:before{content:\"\\E61F\"}.ant-tabs-tab-prev{left:0}.ant-tabs-tab-prev-icon:before{content:\"\\E620\"}:root .ant-tabs-tab-prev{filter:none}.ant-tabs-nav-wrap{overflow:hidden;margin-bottom:-1px}.ant-tabs-nav-scroll{overflow:hidden;white-space:nowrap}.ant-tabs-nav{box-sizing:border-box;padding-left:0;transition:transform .5s cubic-bezier(.645,.045,.355,1);position:relative;margin:0;list-style:none;float:left}.ant-tabs-nav:after,.ant-tabs-nav:before{display:table;content:\" \"}.ant-tabs-nav:after{clear:both}.ant-tabs-nav .ant-tabs-tab-disabled{pointer-events:none;cursor:default;color:#ccc}.ant-tabs-nav .ant-tabs-tab{display:inline-block;height:100%;margin-right:24px;box-sizing:border-box;position:relative;padding:8px 20px;transition:color .3s cubic-bezier(.645,.045,.355,1);cursor:pointer;text-decoration:none}.ant-tabs-nav .ant-tabs-tab:hover{color:#5eafed}.ant-tabs-nav .ant-tabs-tab:active{color:#3393dd}.ant-tabs-nav .ant-tabs-tab .anticon{width:14px;height:14px;margin-right:8px}.ant-tabs-nav .ant-tabs-tab-active{color:#369be9}.ant-tabs-mini .ant-tabs-nav-container{font-size:12px}.ant-tabs-mini .ant-tabs-tab{margin-right:0;padding:8px 16px}.ant-tabs:not(.ant-tabs-vertical)>.ant-tabs-content{width:100%}.ant-tabs:not(.ant-tabs-vertical)>.ant-tabs-content>.ant-tabs-tabpane{flex-shrink:0;width:100%;transition:opacity .3s;opacity:1}.ant-tabs:not(.ant-tabs-vertical)>.ant-tabs-content>.ant-tabs-tabpane-inactive{opacity:0;height:0}.ant-tabs:not(.ant-tabs-vertical)>.ant-tabs-content-animated{display:flex;flex-direction:row;will-change:margin-left;transition:margin-left .3s cubic-bezier(.645,.045,.355,1)}.ant-tabs-vertical>.ant-tabs-bar{border-bottom:0}.ant-tabs-vertical>.ant-tabs-bar .ant-tabs-tab{float:none;margin-right:0;margin-bottom:16px;display:block;padding:8px 24px}.ant-tabs-vertical>.ant-tabs-bar .ant-tabs-tab:last-child{margin-bottom:0}.ant-tabs-vertical>.ant-tabs-bar .ant-tabs-nav-scroll{width:auto}.ant-tabs-vertical>.ant-tabs-bar .ant-tabs-nav-container,.ant-tabs-vertical>.ant-tabs-bar .ant-tabs-nav-wrap{margin-bottom:0}.ant-tabs-vertical>.ant-tabs-bar .ant-tabs-ink-bar{width:2px;left:auto;height:auto;top:0}.ant-tabs-vertical>.ant-tabs-content{overflow:hidden;width:auto;margin-top:0!important}.ant-tabs-vertical.ant-tabs-left>.ant-tabs-bar{float:left;border-right:1px solid #e9e9e9;margin-right:-1px;margin-bottom:0}.ant-tabs-vertical.ant-tabs-left>.ant-tabs-bar .ant-tabs-tab{text-align:right}.ant-tabs-vertical.ant-tabs-left>.ant-tabs-bar .ant-tabs-nav-container,.ant-tabs-vertical.ant-tabs-left>.ant-tabs-bar .ant-tabs-nav-wrap{margin-right:-1px}.ant-tabs-vertical.ant-tabs-left>.ant-tabs-bar .ant-tabs-ink-bar{right:1px}.ant-tabs-vertical.ant-tabs-left>.ant-tabs-content{padding-left:24px;border-left:1px solid #e9e9e9}.ant-tabs-vertical.ant-tabs-right>.ant-tabs-bar{float:right;border-left:1px solid #e9e9e9;margin-left:-1px;margin-bottom:0}.ant-tabs-vertical.ant-tabs-right>.ant-tabs-bar .ant-tabs-nav-container,.ant-tabs-vertical.ant-tabs-right>.ant-tabs-bar .ant-tabs-nav-wrap{margin-left:-1px}.ant-tabs-vertical.ant-tabs-right>.ant-tabs-bar .ant-tabs-ink-bar{left:1px}.ant-tabs-vertical.ant-tabs-right>.ant-tabs-content{padding-right:24px;border-right:1px solid #e9e9e9}.ant-tabs-bottom>.ant-tabs-bar{margin-bottom:0;margin-top:16px}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-nav-container{height:32px}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-ink-bar{visibility:hidden}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-tab{margin:0;border:1px solid #d9d9d9;border-bottom:0;border-radius:6px 6px 0 0;transition:all .3s cubic-bezier(.645,.045,.355,1);background:#f9f9f9;margin-right:2px;padding:5px 16px 4px}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-tab-active{background:#fff;transform:translateZ(0);border-color:#d9d9d9;color:#369be9;padding-bottom:5px}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-nav-wrap{margin-bottom:0}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-tab .anticon-close{margin-right:0;color:rgba(0,0,0,.43);transition:all .3s cubic-bezier(.645,.045,.355,1);display:inline-block;font-size:12px;font-size:9px\\9;transform:scale(.75) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;transform-origin:100% 50%;width:0;text-align:right;vertical-align:middle;overflow:hidden}:root .ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-tab .anticon-close{filter:none;font-size:12px}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-tab .anticon-close:hover{color:#404040;font-weight:700}.ant-tabs.ant-tabs-editable-card>.ant-tabs-bar .ant-tabs-tab:not(.ant-tabs-tab-active):hover{padding-left:8px;padding-right:8px}.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-tab-active .anticon-close,.ant-tabs.ant-tabs-card>.ant-tabs-bar .ant-tabs-tab:hover .anticon-close{width:16px;transform:translateZ(0)}.ant-tabs-extra-content{float:right;line-height:32px}.ant-tabs-extra-content .ant-tabs-new-tab{width:20px;height:20px;line-height:20px;text-align:center;cursor:pointer;border-radius:3px;border:1px solid #d9d9d9;display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;color:rgba(0,0,0,.43);transition:color .3s ease}:root .ant-tabs-extra-content .ant-tabs-new-tab{filter:none;font-size:12px}.ant-tabs-extra-content .ant-tabs-new-tab:hover{color:#404040}>.ant-tabs-no-animation>.ant-tabs-content-animated,>.ant-tabs-vertical>.ant-tabs-content-animated,>.no-flex>.ant-tabs-content-animated{transform:none!important}.ant-tabs-no-animation>.ant-tabs-content>.ant-tabs-tabpane-inactive,.ant-tabs-vertical>.ant-tabs-content>.ant-tabs-tabpane-inactive,.no-flex>.ant-tabs-content>.ant-tabs-tabpane-inactive{display:none}.ant-tooltip{position:absolute;z-index:1060;display:block;visibility:visible;font-size:12px;line-height:1.5;opacity:.9}.ant-tooltip-hidden{display:none}.ant-tooltip-placement-top{padding:5px 0 8px;transform:translate(-50%,-100%)}.ant-tooltip-placement-topleft{padding:5px 0 8px;transform:translateY(-100%)}.ant-tooltip-placement-topright{padding:5px 0 8px;transform:translate(-100%,-100%)}.ant-tooltip-placement-right{padding:0 5px 0 8px;transform:translateY(-50%)}.ant-tooltip-placement-bottom{padding:8px 0 5px;transform:translateX(-50%)}.ant-tooltip-placement-bottomleft{padding:8px 0 5px}.ant-tooltip-placement-bottomright{padding:8px 0 5px;transform:translate(-100%)}.ant-tooltip-placement-left{padding:0 8px 0 5px;transform:translate(-100%,-50%)}.ant-tooltip-inner{max-width:250px;padding:8px 10px;color:#fff;text-align:left;text-decoration:none;background-color:#373737;border-radius:4px;box-shadow:0 1px 6px rgba(0,0,0,.2);min-height:34px}.ant-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.ant-tooltip-placement-top .ant-tooltip-arrow,.ant-tooltip-placement-topleft .ant-tooltip-arrow,.ant-tooltip-placement-topright .ant-tooltip-arrow{bottom:3px;border-width:5px 5px 0;border-top-color:#373737}.ant-tooltip-placement-top .ant-tooltip-arrow{left:50%;margin-left:-5px}.ant-tooltip-placement-topleft .ant-tooltip-arrow{left:16px}.ant-tooltip-placement-topright .ant-tooltip-arrow{right:16px}.ant-tooltip-placement-right .ant-tooltip-arrow,.ant-tooltip-placement-rightBottom .ant-tooltip-arrow,.ant-tooltip-placement-rightTop .ant-tooltip-arrow{left:3px;border-width:5px 5px 5px 0;border-right-color:#373737}.ant-tooltip-placement-right .ant-tooltip-arrow{top:50%;margin-top:-5px}.ant-tooltip-placement-rightTop .ant-tooltip-arrow{top:8px}.ant-tooltip-placement-rightBottom .ant-tooltip-arrow{bottom:8px}.ant-tooltip-placement-left .ant-tooltip-arrow,.ant-tooltip-placement-leftBottom .ant-tooltip-arrow,.ant-tooltip-placement-leftTop .ant-tooltip-arrow{right:3px;border-width:5px 0 5px 5px;border-left-color:#373737}.ant-tooltip-placement-left .ant-tooltip-arrow{top:50%;margin-top:-5px}.ant-tooltip-placement-leftTop .ant-tooltip-arrow{top:8px}.ant-tooltip-placement-leftBottom .ant-tooltip-arrow{bottom:8px}.ant-tooltip-placement-bottom .ant-tooltip-arrow,.ant-tooltip-placement-bottomleft .ant-tooltip-arrow,.ant-tooltip-placement-bottomright .ant-tooltip-arrow{top:3px;border-width:0 5px 5px;border-bottom-color:#373737}.ant-tooltip-placement-bottom .ant-tooltip-arrow{left:50%;margin-left:-5px}.ant-tooltip-placement-bottomleft .ant-tooltip-arrow{left:16px}.ant-tooltip-placement-bottomright .ant-tooltip-arrow{right:16px}.ant-popover{position:absolute;top:0;left:0;z-index:1030;cursor:auto;user-select:text;white-space:normal;font-size:12px;line-height:1.5;font-weight:400;text-align:left}.ant-popover:after{content:\"\";position:absolute;background:hsla(0,0%,100%,.01)}.ant-popover-hidden{display:none}.ant-popover-placement-top,.ant-popover-placement-topLeft,.ant-popover-placement-topRight{padding-bottom:4px}.ant-popover-placement-right,.ant-popover-placement-rightBottom,.ant-popover-placement-rightTop{padding-left:4px}.ant-popover-placement-bottom,.ant-popover-placement-bottomLeft,.ant-popover-placement-bottomRight{padding-top:4px}.ant-popover-placement-left,.ant-popover-placement-leftBottom,.ant-popover-placement-leftTop{padding-right:4px}.ant-popover-placement-top{transform:translate(-50%,-100%);margin-top:-4px}.ant-popover-placement-topLeft{transform:translateY(-100%);margin-top:-4px}.ant-popover-placement-topRight{transform:translate(-100%,-100%);margin-top:-4px}.ant-popover-placement-right{transform:translateY(-50%);margin-left:4px}.ant-popover-placement-bottom{transform:translateX(-50%);margin-top:4px}.ant-popover-placement-bottomLeft{margin-top:4px}.ant-popover-placement-bottomRight{transform:translate(-100%);margin-top:4px}.ant-popover-placement-left{transform:translate(-100%,-50%);margin-left:-4px}.ant-popover-inner{background-color:#fff;background-clip:padding-box;border-radius:4px;box-shadow:0 1px 6px rgba(0,0,0,.2)}.ant-popover-title{min-width:177px;margin:0;padding:0 16px;line-height:32px;height:32px;border-bottom:1px solid #e9e9e9;color:#666}.ant-popover-inner-content{padding:8px 16px;color:#333}.ant-popover-message{padding:8px 0 16px;font-size:12px;color:#333}.ant-popover-message>.anticon{color:#fa0;line-height:17px;position:absolute}.ant-popover-message-title{padding-left:20px}.ant-popover-buttons{text-align:right;margin-bottom:8px}.ant-popover-buttons button{margin-left:8px}.ant-popover-arrow,.ant-popover-arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.ant-popover-arrow{border-width:5px}.ant-popover-arrow:after{border-width:4px;content:\"\"}.ant-popover-placement-top>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-topLeft>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-topRight>.ant-popover-content>.ant-popover-arrow{border-bottom-width:0;border-top-color:#d9d9d9;bottom:-1px}.ant-popover-placement-top>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-topLeft>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-topRight>.ant-popover-content>.ant-popover-arrow:after{content:\" \";bottom:1px;margin-left:-4px;border-bottom-width:0;border-top-color:#fff}.ant-popover-placement-top>.ant-popover-content>.ant-popover-arrow{left:50%;margin-left:-5px}.ant-popover-placement-topLeft>.ant-popover-content>.ant-popover-arrow{left:16px}.ant-popover-placement-topRight>.ant-popover-content>.ant-popover-arrow{right:16px}.ant-popover-placement-right>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-rightBottom>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-rightTop>.ant-popover-content>.ant-popover-arrow{left:-1px;border-left-width:0;border-right-color:#d9d9d9}.ant-popover-placement-right>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-rightBottom>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-rightTop>.ant-popover-content>.ant-popover-arrow:after{content:\" \";left:1px;bottom:-4px;border-left-width:0;border-right-color:#fff}.ant-popover-placement-right>.ant-popover-content>.ant-popover-arrow{top:50%;margin-top:-5px}.ant-popover-placement-rightTop>.ant-popover-content>.ant-popover-arrow{top:12px}.ant-popover-placement-rightBottom>.ant-popover-content>.ant-popover-arrow{bottom:12px}.ant-popover-placement-bottom>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-bottomLeft>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-bottomRight>.ant-popover-content>.ant-popover-arrow{border-top-width:0;border-bottom-color:#d9d9d9;top:-1px}.ant-popover-placement-bottom>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-bottomLeft>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-bottomRight>.ant-popover-content>.ant-popover-arrow:after{content:\" \";top:1px;margin-left:-4px;border-top-width:0;border-bottom-color:#fff}.ant-popover-placement-bottom>.ant-popover-content>.ant-popover-arrow{left:50%;margin-left:-5px}.ant-popover-placement-bottomLeft>.ant-popover-content>.ant-popover-arrow{left:16px}.ant-popover-placement-bottomRight>.ant-popover-content>.ant-popover-arrow{right:16px}.ant-popover-placement-left>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-leftBottom>.ant-popover-content>.ant-popover-arrow,.ant-popover-placement-leftTop>.ant-popover-content>.ant-popover-arrow{right:-1px;border-right-width:0;border-left-color:#d9d9d9}.ant-popover-placement-left>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-leftBottom>.ant-popover-content>.ant-popover-arrow:after,.ant-popover-placement-leftTop>.ant-popover-content>.ant-popover-arrow:after{content:\" \";right:1px;border-right-width:0;border-left-color:#fff;bottom:-4px}.ant-popover-placement-left>.ant-popover-content>.ant-popover-arrow{top:50%;margin-top:-5px}.ant-popover-placement-leftTop>.ant-popover-content>.ant-popover-arrow{top:12px}.ant-popover-placement-leftBottom>.ant-popover-content>.ant-popover-arrow{bottom:12px}.ant-breadcrumb{color:#999;font-size:12px}.ant-breadcrumb a{color:#333;transition:color .3s}.ant-breadcrumb a:hover{color:#5eafed}.ant-breadcrumb>span:last-child{font-weight:700;color:#333}.ant-breadcrumb>span:last-child .ant-breadcrumb-separator{display:none}.ant-breadcrumb-separator{margin:0 8px;color:#d9d9d9}.ant-breadcrumb-link>.anticon+span{margin-left:4px}.ant-dropdown{position:absolute;left:-9999px;top:-9999px;z-index:1050;display:block;font-size:12px;font-weight:400;line-height:1.5}.ant-dropdown-wrap{position:relative}.ant-dropdown-wrap .ant-btn>.anticon-down{display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-dropdown-wrap .ant-btn>.anticon-down{filter:none;font-size:12px}.ant-dropdown-wrap .anticon-down:before{transition:transform .2s ease}.ant-dropdown-wrap-open .anticon-down:before{transform:rotate(180deg)}.ant-dropdown-hidden,.ant-dropdown-menu-hidden{display:none}.ant-dropdown-menu{outline:none;position:relative;list-style-type:none;padding:0;margin:0;text-align:left;background-color:#fff;border-radius:4px;box-shadow:0 1px 6px rgba(0,0,0,.2);background-clip:padding-box}.ant-dropdown-menu-item,.ant-dropdown-menu-submenu-title{padding:7px 16px;margin:0;clear:both;font-size:12px;font-weight:400;color:#333;white-space:nowrap;cursor:pointer;transition:background .3s ease}.ant-dropdown-menu-item>a,.ant-dropdown-menu-submenu-title>a{color:#333;display:block;padding:7px 16px;margin:-7px -16px}.ant-dropdown-menu-item:hover,.ant-dropdown-menu-submenu-title:hover{background-color:#ebf5fd}.ant-dropdown-menu-item-disabled,.ant-dropdown-menu-submenu-title-disabled{color:#ccc;cursor:not-allowed;pointer-events:none}.ant-dropdown-menu-item-disabled:hover,.ant-dropdown-menu-submenu-title-disabled:hover{color:#ccc;background-color:#fff;cursor:not-allowed}.ant-dropdown-menu-item:first-child,.ant-dropdown-menu-submenu-title:first-child{border-radius:4px 4px 0 0}.ant-dropdown-menu-item:last-child,.ant-dropdown-menu-submenu-title:last-child{border-radius:0 0 4px 4px}.ant-dropdown-menu-item:only-child,.ant-dropdown-menu-submenu-title:only-child{border-radius:4px}.ant-dropdown-menu-item-divider,.ant-dropdown-menu-submenu-title-divider{height:1px;overflow:hidden;background-color:#e9e9e9;line-height:0}.ant-dropdown-menu-submenu-title:after{font-family:anticon!important;position:absolute;content:\"\\E61F\";right:16px;color:rgba(0,0,0,.43);display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-dropdown-menu-submenu-title:after{filter:none;font-size:12px}.ant-dropdown-menu-submenu-vertical{position:relative}.ant-dropdown-menu-submenu-vertical>.ant-dropdown-menu{top:0;left:100%;position:absolute;min-width:100%;margin-left:4px;transform-origin:0 0}.ant-dropdown-menu-submenu:first-child .ant-dropdown-menu-submenu-title{border-radius:4px 4px 0 0}.ant-dropdown-menu-submenu:last-child .ant-dropdown-menu-submenu-title{border-radius:0 0 4px 4px}.ant-dropdown.slide-up-appear.slide-up-appear-active.ant-dropdown-placement-bottomLeft,.ant-dropdown.slide-up-enter.slide-up-enter-active.ant-dropdown-placement-bottomLeft{animation-name:antSlideUpIn}.ant-dropdown.slide-up-appear.slide-up-appear-active.ant-dropdown-placement-topLeft,.ant-dropdown.slide-up-enter.slide-up-enter-active.ant-dropdown-placement-topLeft{animation-name:antSlideDownIn}.ant-dropdown.slide-up-leave.slide-up-leave-active.ant-dropdown-placement-bottomLeft{animation-name:antSlideUpOut}.ant-dropdown.slide-up-leave.slide-up-leave-active.ant-dropdown-placement-topLeft{animation-name:antSlideDownOut}.ant-dropdown-link,.ant-dropdown-trigger{font-size:12px}.ant-dropdown-link .anticon-down,.ant-dropdown-trigger .anticon-down{display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-dropdown-link .anticon-down,:root .ant-dropdown-trigger .anticon-down{filter:none;font-size:12px}.ant-dropdown-button{white-space:nowrap}.ant-dropdown-button.ant-btn-group>.ant-btn:last-child:not(:first-child){padding-right:7px}.ant-dropdown-button .anticon-down{display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-dropdown-button .anticon-down{filter:none;font-size:12px}.ant-select{box-sizing:border-box;display:inline-block;position:relative;color:#333;font-size:12px}.ant-select>ul>li>a{padding:0;background-color:#fff}.ant-select-arrow{font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;position:absolute;top:50%;right:8px;line-height:1;margin-top:-6px;display:inline-block;font-size:12px;font-size:9px\\9;transform:scale(.75) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}.ant-select-arrow:before{display:block;font-family:anticon!important}:root .ant-select-arrow{filter:none;font-size:12px}.ant-select-arrow *{display:none}.ant-select-arrow:before{content:\"\\E61D\";transition:transform .2s ease}.ant-select-selection{outline:none;user-select:none;box-sizing:border-box;display:block;background-color:#fff;border-radius:4px;border:1px solid #d9d9d9;transition:all .3s cubic-bezier(.645,.045,.355,1)}.ant-select-selection:hover{border-color:#5eafed}.ant-select-focused .ant-select-selection,.ant-select-selection:active,.ant-select-selection:focus{border-color:#5eafed;outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-select-selection__clear{display:inline-block;font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;opacity:0;position:absolute;right:8px;z-index:1;background:#fff;top:50%;font-size:12px;color:#ccc;width:12px;height:12px;margin-top:-6px;line-height:12px;cursor:pointer;transition:color .3s ease,opacity .15s ease}.ant-select-selection__clear:before{display:block;font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E62E\"}.ant-select-selection__clear:hover{color:rgba(0,0,0,.43)}.ant-select-selection:hover .ant-select-selection__clear{opacity:1}.ant-select-selection-selected-value{float:left;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-width:100%;padding-right:14px}.ant-select-disabled{color:#ccc}.ant-select-disabled .ant-select-selection{background:#f7f7f7;cursor:not-allowed}.ant-select-disabled .ant-select-selection:active,.ant-select-disabled .ant-select-selection:focus,.ant-select-disabled .ant-select-selection:hover{border-color:#d9d9d9;box-shadow:none}.ant-select-disabled .ant-select-selection__clear{display:none;visibility:hidden;pointer-events:none}.ant-select-disabled .ant-select-selection--multiple .ant-select-selection__choice{background:#e9e9e9;color:#aaa;padding-right:10px}.ant-select-disabled .ant-select-selection--multiple .ant-select-selection__choice__remove{display:none}.ant-select-selection--single{height:28px;position:relative;cursor:pointer}.ant-select-selection__rendered{display:block;margin-left:8px;margin-right:8px;position:relative;line-height:26px}.ant-select-selection__rendered:after{content:\".\";visibility:hidden;pointer-events:none;display:inline-block;width:0}.ant-select-lg .ant-select-selection--single{height:32px}.ant-select-lg .ant-select-selection__rendered{line-height:30px}.ant-select-lg .ant-select-selection--multiple{min-height:32px}.ant-select-lg .ant-select-selection--multiple .ant-select-selection__rendered li{height:24px;line-height:24px}.ant-select-sm .ant-select-selection{border-radius:2px}.ant-select-sm .ant-select-selection--single{height:22px}.ant-select-sm .ant-select-selection__rendered{line-height:20px}.ant-select-sm .ant-select-selection--multiple{min-height:22px}.ant-select-sm .ant-select-selection--multiple .ant-select-selection__rendered li{height:14px;line-height:14px}.ant-select-disabled .ant-select-selection__choice__remove{color:#ccc;cursor:default}.ant-select-disabled .ant-select-selection__choice__remove:hover{color:#ccc}.ant-select-search__field__wrap{display:inline-block;position:relative}.ant-select-search__field__placeholder,.ant-select-selection__placeholder{position:absolute;top:50%;left:0;right:9px;color:#ccc;line-height:20px;height:20px;max-width:100%;margin-top:-10px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ant-select-search__field__placeholder{left:8px}.ant-select-search--inline{position:absolute;height:100%}.ant-select-selection--multiple .ant-select-search--inline{float:left;position:static}.ant-select-search--inline .ant-select-search__field__wrap{width:100%;height:100%}.ant-select-search--inline .ant-select-search__field{border:0;font-size:100%;height:100%;width:100%;background:transparent;outline:0;border-radius:4px}.ant-select-search--inline .ant-select-search__field__mirror{position:absolute;top:0;left:-9999px;white-space:pre;pointer-events:none}.ant-select-search--inline>i{float:right}.ant-select-selection--multiple{min-height:28px;cursor:text;padding-bottom:3px;zoom:1}.ant-select-selection--multiple:after,.ant-select-selection--multiple:before{content:\" \";display:table}.ant-select-selection--multiple:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-select-selection--multiple .ant-select-search--inline{width:auto;padding:0}.ant-select-selection--multiple .ant-select-search--inline .ant-select-search__field{width:.75em}.ant-select-selection--multiple .ant-select-selection__rendered{margin-left:5px;margin-bottom:-3px;height:auto}.ant-select-selection--multiple .ant-select-selection__rendered>ul>li,.ant-select-selection--multiple>ul>li{margin-top:3px;height:20px;line-height:20px}.ant-select-selection--multiple .ant-select-selection__choice{background-color:#f3f3f3;border-radius:4px;cursor:default;float:left;padding:0 16px;margin-right:4px;max-width:99%;position:relative;overflow:hidden;transition:padding .3s cubic-bezier(.645,.045,.355,1);padding:0 20px 0 10px}.ant-select-selection--multiple .ant-select-selection__choice__disabled{padding:0 10px}.ant-select-selection--multiple .ant-select-selection__choice__content{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;transition:margin .3s cubic-bezier(.645,.045,.355,1)}.ant-select-selection--multiple .ant-select-selection__choice__remove{font-style:normal;vertical-align:baseline;text-align:center;text-transform:none;text-rendering:auto;line-height:1;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:rgba(0,0,0,.43);line-height:inherit;cursor:pointer;font-weight:700;transition:all .3s cubic-bezier(.645,.045,.355,1);display:inline-block;font-size:12px;font-size:8px\\9;transform:scale(.66666667) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;position:absolute;right:4px;padding:0 0 0 8px}.ant-select-selection--multiple .ant-select-selection__choice__remove:before{display:block;font-family:anticon!important}:root .ant-select-selection--multiple .ant-select-selection__choice__remove{filter:none;font-size:12px}.ant-select-selection--multiple .ant-select-selection__choice__remove:hover{color:#404040}.ant-select-selection--multiple .ant-select-selection__choice__remove:before{content:\"\\E633\"}.ant-select-open .ant-select-arrow{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";-ms-transform:rotate(180deg)}.ant-select-open .ant-select-arrow:before{transform:rotate(180deg)}.ant-select-open .ant-select-selection{border-color:#5eafed;outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-select-combobox .ant-select-arrow{display:none}.ant-select-combobox .ant-select-search--inline{height:100%;width:100%;float:none}.ant-select-combobox .ant-select-search__field__wrap{width:100%;height:100%}.ant-select-combobox .ant-select-search__field{width:100%;height:100%;position:relative;z-index:1;transition:all .3s cubic-bezier(.645,.045,.355,1);box-shadow:none}.ant-select-dropdown{background-color:#fff;box-shadow:0 1px 6px rgba(0,0,0,.2);border-radius:4px;box-sizing:border-box;z-index:1050;left:-9999px;top:-9999px;position:absolute;outline:none;overflow:hidden;font-size:12px}.ant-select-dropdown.slide-up-appear.slide-up-appear-active.ant-select-dropdown-placement-bottomLeft,.ant-select-dropdown.slide-up-enter.slide-up-enter-active.ant-select-dropdown-placement-bottomLeft{animation-name:antSlideUpIn}.ant-select-dropdown.slide-up-appear.slide-up-appear-active.ant-select-dropdown-placement-topLeft,.ant-select-dropdown.slide-up-enter.slide-up-enter-active.ant-select-dropdown-placement-topLeft{animation-name:antSlideDownIn}.ant-select-dropdown.slide-up-leave.slide-up-leave-active.ant-select-dropdown-placement-bottomLeft{animation-name:antSlideUpOut}.ant-select-dropdown.slide-up-leave.slide-up-leave-active.ant-select-dropdown-placement-topLeft{animation-name:antSlideDownOut}.ant-select-dropdown-hidden{display:none}.ant-select-dropdown-menu{outline:none;margin-bottom:0;padding-left:0;list-style:none;max-height:250px;overflow:auto}.ant-select-dropdown-menu-item-group-list{margin:0;padding:0}.ant-select-dropdown-menu-item-group-list>.ant-select-dropdown-menu-item{padding-left:24px}.ant-select-dropdown-menu-item-group-title{color:rgba(0,0,0,.43);line-height:1.5;padding:8px 16px}.ant-select-dropdown-menu-item{position:relative;display:block;padding:7px 16px;font-weight:400;color:#333;cursor:pointer;white-space:nowrap;overflow:hidden;transition:background .3s ease}.ant-select-dropdown-menu-item-active,.ant-select-dropdown-menu-item:hover{background-color:#ebf5fd}.ant-select-dropdown-menu-item-disabled{color:#ccc;cursor:not-allowed}.ant-select-dropdown-menu-item-disabled:hover{color:#ccc;background-color:#fff;cursor:not-allowed}.ant-select-dropdown-menu-item-selected,.ant-select-dropdown-menu-item-selected:hover{background-color:#f7f7f7;font-weight:700;color:#333}.ant-select-dropdown-menu-item-divider{height:1px;margin:1px 0;overflow:hidden;background-color:#e5e5e5;line-height:0}.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item:after{font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E632\";color:transparent;display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;transition:all .2s ease;position:absolute;top:50%;transform:translateY(-50%);right:16px;font-weight:700;text-shadow:0 .1px 0,.1px 0 0,0 -.1px 0,-.1px 0}:root .ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item:after{filter:none;font-size:12px}.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item:hover:after{color:#ddd}.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item-disabled:after{display:none}.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item-selected:after,.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item-selected:hover:after{color:#369be9;display:inline-block}.ant-select-dropdown-container-open .ant-select-dropdown,.ant-select-dropdown-open .ant-select-dropdown{display:block}.ant-affix{position:fixed;z-index:10}.ant-row{position:relative;margin-left:0;margin-right:0;height:auto;zoom:1;display:block}.ant-row:after,.ant-row:before{content:\" \";display:table}.ant-row:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-row-flex{display:flex;flex-direction:row;flex-wrap:wrap}.ant-row-flex:after,.ant-row-flex:before{display:flex}.ant-row-flex-start{justify-content:flex-start}.ant-row-flex-center{justify-content:center}.ant-row-flex-end{justify-content:flex-end}.ant-row-flex-space-between{justify-content:space-between}.ant-row-flex-space-around{justify-content:space-around}.ant-row-flex-top{align-items:flex-start}.ant-row-flex-middle{align-items:center}.ant-row-flex-bottom{align-items:flex-end}.ant-col{position:relative;display:block}.ant-col-1,.ant-col-2,.ant-col-3,.ant-col-4,.ant-col-5,.ant-col-6,.ant-col-7,.ant-col-8,.ant-col-9,.ant-col-10,.ant-col-11,.ant-col-12,.ant-col-13,.ant-col-14,.ant-col-15,.ant-col-16,.ant-col-17,.ant-col-18,.ant-col-19,.ant-col-20,.ant-col-21,.ant-col-22,.ant-col-23,.ant-col-24,.ant-col-lg-1,.ant-col-lg-2,.ant-col-lg-3,.ant-col-lg-4,.ant-col-lg-5,.ant-col-lg-6,.ant-col-lg-7,.ant-col-lg-8,.ant-col-lg-9,.ant-col-lg-10,.ant-col-lg-11,.ant-col-lg-12,.ant-col-lg-13,.ant-col-lg-14,.ant-col-lg-15,.ant-col-lg-16,.ant-col-lg-17,.ant-col-lg-18,.ant-col-lg-19,.ant-col-lg-20,.ant-col-lg-21,.ant-col-lg-22,.ant-col-lg-23,.ant-col-lg-24,.ant-col-md-1,.ant-col-md-2,.ant-col-md-3,.ant-col-md-4,.ant-col-md-5,.ant-col-md-6,.ant-col-md-7,.ant-col-md-8,.ant-col-md-9,.ant-col-md-10,.ant-col-md-11,.ant-col-md-12,.ant-col-md-13,.ant-col-md-14,.ant-col-md-15,.ant-col-md-16,.ant-col-md-17,.ant-col-md-18,.ant-col-md-19,.ant-col-md-20,.ant-col-md-21,.ant-col-md-22,.ant-col-md-23,.ant-col-md-24,.ant-col-sm-1,.ant-col-sm-2,.ant-col-sm-3,.ant-col-sm-4,.ant-col-sm-5,.ant-col-sm-6,.ant-col-sm-7,.ant-col-sm-8,.ant-col-sm-9,.ant-col-sm-10,.ant-col-sm-11,.ant-col-sm-12,.ant-col-sm-13,.ant-col-sm-14,.ant-col-sm-15,.ant-col-sm-16,.ant-col-sm-17,.ant-col-sm-18,.ant-col-sm-19,.ant-col-sm-20,.ant-col-sm-21,.ant-col-sm-22,.ant-col-sm-23,.ant-col-sm-24,.ant-col-xs-1,.ant-col-xs-2,.ant-col-xs-3,.ant-col-xs-4,.ant-col-xs-5,.ant-col-xs-6,.ant-col-xs-7,.ant-col-xs-8,.ant-col-xs-9,.ant-col-xs-10,.ant-col-xs-11,.ant-col-xs-12,.ant-col-xs-13,.ant-col-xs-14,.ant-col-xs-15,.ant-col-xs-16,.ant-col-xs-17,.ant-col-xs-18,.ant-col-xs-19,.ant-col-xs-20,.ant-col-xs-21,.ant-col-xs-22,.ant-col-xs-23,.ant-col-xs-24{position:relative;min-height:1px;padding-left:0;padding-right:0}.ant-col-1,.ant-col-2,.ant-col-3,.ant-col-4,.ant-col-5,.ant-col-6,.ant-col-7,.ant-col-8,.ant-col-9,.ant-col-10,.ant-col-11,.ant-col-12,.ant-col-13,.ant-col-14,.ant-col-15,.ant-col-16,.ant-col-17,.ant-col-18,.ant-col-19,.ant-col-20,.ant-col-21,.ant-col-22,.ant-col-23,.ant-col-24{float:left;flex:0 0 auto}.ant-col-24{display:block;width:100%}.ant-col-push-24{left:100%}.ant-col-pull-24{right:100%}.ant-col-offset-24{margin-left:100%}.ant-col-order-24{order:24}.ant-col-23{display:block;width:95.83333333%}.ant-col-push-23{left:95.83333333%}.ant-col-pull-23{right:95.83333333%}.ant-col-offset-23{margin-left:95.83333333%}.ant-col-order-23{order:23}.ant-col-22{display:block;width:91.66666667%}.ant-col-push-22{left:91.66666667%}.ant-col-pull-22{right:91.66666667%}.ant-col-offset-22{margin-left:91.66666667%}.ant-col-order-22{order:22}.ant-col-21{display:block;width:87.5%}.ant-col-push-21{left:87.5%}.ant-col-pull-21{right:87.5%}.ant-col-offset-21{margin-left:87.5%}.ant-col-order-21{order:21}.ant-col-20{display:block;width:83.33333333%}.ant-col-push-20{left:83.33333333%}.ant-col-pull-20{right:83.33333333%}.ant-col-offset-20{margin-left:83.33333333%}.ant-col-order-20{order:20}.ant-col-19{display:block;width:79.16666667%}.ant-col-push-19{left:79.16666667%}.ant-col-pull-19{right:79.16666667%}.ant-col-offset-19{margin-left:79.16666667%}.ant-col-order-19{order:19}.ant-col-18{display:block;width:75%}.ant-col-push-18{left:75%}.ant-col-pull-18{right:75%}.ant-col-offset-18{margin-left:75%}.ant-col-order-18{order:18}.ant-col-17{display:block;width:70.83333333%}.ant-col-push-17{left:70.83333333%}.ant-col-pull-17{right:70.83333333%}.ant-col-offset-17{margin-left:70.83333333%}.ant-col-order-17{order:17}.ant-col-16{display:block;width:66.66666667%}.ant-col-push-16{left:66.66666667%}.ant-col-pull-16{right:66.66666667%}.ant-col-offset-16{margin-left:66.66666667%}.ant-col-order-16{order:16}.ant-col-15{display:block;width:62.5%}.ant-col-push-15{left:62.5%}.ant-col-pull-15{right:62.5%}.ant-col-offset-15{margin-left:62.5%}.ant-col-order-15{order:15}.ant-col-14{display:block;width:58.33333333%}.ant-col-push-14{left:58.33333333%}.ant-col-pull-14{right:58.33333333%}.ant-col-offset-14{margin-left:58.33333333%}.ant-col-order-14{order:14}.ant-col-13{display:block;width:54.16666667%}.ant-col-push-13{left:54.16666667%}.ant-col-pull-13{right:54.16666667%}.ant-col-offset-13{margin-left:54.16666667%}.ant-col-order-13{order:13}.ant-col-12{display:block;width:50%}.ant-col-push-12{left:50%}.ant-col-pull-12{right:50%}.ant-col-offset-12{margin-left:50%}.ant-col-order-12{order:12}.ant-col-11{display:block;width:45.83333333%}.ant-col-push-11{left:45.83333333%}.ant-col-pull-11{right:45.83333333%}.ant-col-offset-11{margin-left:45.83333333%}.ant-col-order-11{order:11}.ant-col-10{display:block;width:41.66666667%}.ant-col-push-10{left:41.66666667%}.ant-col-pull-10{right:41.66666667%}.ant-col-offset-10{margin-left:41.66666667%}.ant-col-order-10{order:10}.ant-col-9{display:block;width:37.5%}.ant-col-push-9{left:37.5%}.ant-col-pull-9{right:37.5%}.ant-col-offset-9{margin-left:37.5%}.ant-col-order-9{order:9}.ant-col-8{display:block;width:33.33333333%}.ant-col-push-8{left:33.33333333%}.ant-col-pull-8{right:33.33333333%}.ant-col-offset-8{margin-left:33.33333333%}.ant-col-order-8{order:8}.ant-col-7{display:block;width:29.16666667%}.ant-col-push-7{left:29.16666667%}.ant-col-pull-7{right:29.16666667%}.ant-col-offset-7{margin-left:29.16666667%}.ant-col-order-7{order:7}.ant-col-6{display:block;width:25%}.ant-col-push-6{left:25%}.ant-col-pull-6{right:25%}.ant-col-offset-6{margin-left:25%}.ant-col-order-6{order:6}.ant-col-5{display:block;width:20.83333333%}.ant-col-push-5{left:20.83333333%}.ant-col-pull-5{right:20.83333333%}.ant-col-offset-5{margin-left:20.83333333%}.ant-col-order-5{order:5}.ant-col-4{display:block;width:16.66666667%}.ant-col-push-4{left:16.66666667%}.ant-col-pull-4{right:16.66666667%}.ant-col-offset-4{margin-left:16.66666667%}.ant-col-order-4{order:4}.ant-col-3{display:block;width:12.5%}.ant-col-push-3{left:12.5%}.ant-col-pull-3{right:12.5%}.ant-col-offset-3{margin-left:12.5%}.ant-col-order-3{order:3}.ant-col-2{display:block;width:8.33333333%}.ant-col-push-2{left:8.33333333%}.ant-col-pull-2{right:8.33333333%}.ant-col-offset-2{margin-left:8.33333333%}.ant-col-order-2{order:2}.ant-col-1{display:block;width:4.16666667%}.ant-col-push-1{left:4.16666667%}.ant-col-pull-1{right:4.16666667%}.ant-col-offset-1{margin-left:4.16666667%}.ant-col-order-1{order:1}.ant-col-0{display:none}.ant-col-xs-1,.ant-col-xs-2,.ant-col-xs-3,.ant-col-xs-4,.ant-col-xs-5,.ant-col-xs-6,.ant-col-xs-7,.ant-col-xs-8,.ant-col-xs-9,.ant-col-xs-10,.ant-col-xs-11,.ant-col-xs-12,.ant-col-xs-13,.ant-col-xs-14,.ant-col-xs-15,.ant-col-xs-16,.ant-col-xs-17,.ant-col-xs-18,.ant-col-xs-19,.ant-col-xs-20,.ant-col-xs-21,.ant-col-xs-22,.ant-col-xs-23,.ant-col-xs-24{float:left;flex:0 0 auto}.ant-col-xs-24{display:block;width:100%}.ant-col-xs-push-24{left:100%}.ant-col-xs-pull-24{right:100%}.ant-col-xs-offset-24{margin-left:100%}.ant-col-xs-order-24{order:24}.ant-col-xs-23{display:block;width:95.83333333%}.ant-col-xs-push-23{left:95.83333333%}.ant-col-xs-pull-23{right:95.83333333%}.ant-col-xs-offset-23{margin-left:95.83333333%}.ant-col-xs-order-23{order:23}.ant-col-xs-22{display:block;width:91.66666667%}.ant-col-xs-push-22{left:91.66666667%}.ant-col-xs-pull-22{right:91.66666667%}.ant-col-xs-offset-22{margin-left:91.66666667%}.ant-col-xs-order-22{order:22}.ant-col-xs-21{display:block;width:87.5%}.ant-col-xs-push-21{left:87.5%}.ant-col-xs-pull-21{right:87.5%}.ant-col-xs-offset-21{margin-left:87.5%}.ant-col-xs-order-21{order:21}.ant-col-xs-20{display:block;width:83.33333333%}.ant-col-xs-push-20{left:83.33333333%}.ant-col-xs-pull-20{right:83.33333333%}.ant-col-xs-offset-20{margin-left:83.33333333%}.ant-col-xs-order-20{order:20}.ant-col-xs-19{display:block;width:79.16666667%}.ant-col-xs-push-19{left:79.16666667%}.ant-col-xs-pull-19{right:79.16666667%}.ant-col-xs-offset-19{margin-left:79.16666667%}.ant-col-xs-order-19{order:19}.ant-col-xs-18{display:block;width:75%}.ant-col-xs-push-18{left:75%}.ant-col-xs-pull-18{right:75%}.ant-col-xs-offset-18{margin-left:75%}.ant-col-xs-order-18{order:18}.ant-col-xs-17{display:block;width:70.83333333%}.ant-col-xs-push-17{left:70.83333333%}.ant-col-xs-pull-17{right:70.83333333%}.ant-col-xs-offset-17{margin-left:70.83333333%}.ant-col-xs-order-17{order:17}.ant-col-xs-16{display:block;width:66.66666667%}.ant-col-xs-push-16{left:66.66666667%}.ant-col-xs-pull-16{right:66.66666667%}.ant-col-xs-offset-16{margin-left:66.66666667%}.ant-col-xs-order-16{order:16}.ant-col-xs-15{display:block;width:62.5%}.ant-col-xs-push-15{left:62.5%}.ant-col-xs-pull-15{right:62.5%}.ant-col-xs-offset-15{margin-left:62.5%}.ant-col-xs-order-15{order:15}.ant-col-xs-14{display:block;width:58.33333333%}.ant-col-xs-push-14{left:58.33333333%}.ant-col-xs-pull-14{right:58.33333333%}.ant-col-xs-offset-14{margin-left:58.33333333%}.ant-col-xs-order-14{order:14}.ant-col-xs-13{display:block;width:54.16666667%}.ant-col-xs-push-13{left:54.16666667%}.ant-col-xs-pull-13{right:54.16666667%}.ant-col-xs-offset-13{margin-left:54.16666667%}.ant-col-xs-order-13{order:13}.ant-col-xs-12{display:block;width:50%}.ant-col-xs-push-12{left:50%}.ant-col-xs-pull-12{right:50%}.ant-col-xs-offset-12{margin-left:50%}.ant-col-xs-order-12{order:12}.ant-col-xs-11{display:block;width:45.83333333%}.ant-col-xs-push-11{left:45.83333333%}.ant-col-xs-pull-11{right:45.83333333%}.ant-col-xs-offset-11{margin-left:45.83333333%}.ant-col-xs-order-11{order:11}.ant-col-xs-10{display:block;width:41.66666667%}.ant-col-xs-push-10{left:41.66666667%}.ant-col-xs-pull-10{right:41.66666667%}.ant-col-xs-offset-10{margin-left:41.66666667%}.ant-col-xs-order-10{order:10}.ant-col-xs-9{display:block;width:37.5%}.ant-col-xs-push-9{left:37.5%}.ant-col-xs-pull-9{right:37.5%}.ant-col-xs-offset-9{margin-left:37.5%}.ant-col-xs-order-9{order:9}.ant-col-xs-8{display:block;width:33.33333333%}.ant-col-xs-push-8{left:33.33333333%}.ant-col-xs-pull-8{right:33.33333333%}.ant-col-xs-offset-8{margin-left:33.33333333%}.ant-col-xs-order-8{order:8}.ant-col-xs-7{display:block;width:29.16666667%}.ant-col-xs-push-7{left:29.16666667%}.ant-col-xs-pull-7{right:29.16666667%}.ant-col-xs-offset-7{margin-left:29.16666667%}.ant-col-xs-order-7{order:7}.ant-col-xs-6{display:block;width:25%}.ant-col-xs-push-6{left:25%}.ant-col-xs-pull-6{right:25%}.ant-col-xs-offset-6{margin-left:25%}.ant-col-xs-order-6{order:6}.ant-col-xs-5{display:block;width:20.83333333%}.ant-col-xs-push-5{left:20.83333333%}.ant-col-xs-pull-5{right:20.83333333%}.ant-col-xs-offset-5{margin-left:20.83333333%}.ant-col-xs-order-5{order:5}.ant-col-xs-4{display:block;width:16.66666667%}.ant-col-xs-push-4{left:16.66666667%}.ant-col-xs-pull-4{right:16.66666667%}.ant-col-xs-offset-4{margin-left:16.66666667%}.ant-col-xs-order-4{order:4}.ant-col-xs-3{display:block;width:12.5%}.ant-col-xs-push-3{left:12.5%}.ant-col-xs-pull-3{right:12.5%}.ant-col-xs-offset-3{margin-left:12.5%}.ant-col-xs-order-3{order:3}.ant-col-xs-2{display:block;width:8.33333333%}.ant-col-xs-push-2{left:8.33333333%}.ant-col-xs-pull-2{right:8.33333333%}.ant-col-xs-offset-2{margin-left:8.33333333%}.ant-col-xs-order-2{order:2}.ant-col-xs-1{display:block;width:4.16666667%}.ant-col-xs-push-1{left:4.16666667%}.ant-col-xs-pull-1{right:4.16666667%}.ant-col-xs-offset-1{margin-left:4.16666667%}.ant-col-xs-order-1{order:1}.ant-col-xs-0{display:none}.ant-col-push-0{left:auto}.ant-col-pull-0{right:auto}@media (min-width:768px){.ant-col-sm-1,.ant-col-sm-2,.ant-col-sm-3,.ant-col-sm-4,.ant-col-sm-5,.ant-col-sm-6,.ant-col-sm-7,.ant-col-sm-8,.ant-col-sm-9,.ant-col-sm-10,.ant-col-sm-11,.ant-col-sm-12,.ant-col-sm-13,.ant-col-sm-14,.ant-col-sm-15,.ant-col-sm-16,.ant-col-sm-17,.ant-col-sm-18,.ant-col-sm-19,.ant-col-sm-20,.ant-col-sm-21,.ant-col-sm-22,.ant-col-sm-23,.ant-col-sm-24{float:left;flex:0 0 auto}.ant-col-sm-24{display:block;width:100%}.ant-col-sm-push-24{left:100%}.ant-col-sm-pull-24{right:100%}.ant-col-sm-offset-24{margin-left:100%}.ant-col-sm-order-24{order:24}.ant-col-sm-23{display:block;width:95.83333333%}.ant-col-sm-push-23{left:95.83333333%}.ant-col-sm-pull-23{right:95.83333333%}.ant-col-sm-offset-23{margin-left:95.83333333%}.ant-col-sm-order-23{order:23}.ant-col-sm-22{display:block;width:91.66666667%}.ant-col-sm-push-22{left:91.66666667%}.ant-col-sm-pull-22{right:91.66666667%}.ant-col-sm-offset-22{margin-left:91.66666667%}.ant-col-sm-order-22{order:22}.ant-col-sm-21{display:block;width:87.5%}.ant-col-sm-push-21{left:87.5%}.ant-col-sm-pull-21{right:87.5%}.ant-col-sm-offset-21{margin-left:87.5%}.ant-col-sm-order-21{order:21}.ant-col-sm-20{display:block;width:83.33333333%}.ant-col-sm-push-20{left:83.33333333%}.ant-col-sm-pull-20{right:83.33333333%}.ant-col-sm-offset-20{margin-left:83.33333333%}.ant-col-sm-order-20{order:20}.ant-col-sm-19{display:block;width:79.16666667%}.ant-col-sm-push-19{left:79.16666667%}.ant-col-sm-pull-19{right:79.16666667%}.ant-col-sm-offset-19{margin-left:79.16666667%}.ant-col-sm-order-19{order:19}.ant-col-sm-18{display:block;width:75%}.ant-col-sm-push-18{left:75%}.ant-col-sm-pull-18{right:75%}.ant-col-sm-offset-18{margin-left:75%}.ant-col-sm-order-18{order:18}.ant-col-sm-17{display:block;width:70.83333333%}.ant-col-sm-push-17{left:70.83333333%}.ant-col-sm-pull-17{right:70.83333333%}.ant-col-sm-offset-17{margin-left:70.83333333%}.ant-col-sm-order-17{order:17}.ant-col-sm-16{display:block;width:66.66666667%}.ant-col-sm-push-16{left:66.66666667%}.ant-col-sm-pull-16{right:66.66666667%}.ant-col-sm-offset-16{margin-left:66.66666667%}.ant-col-sm-order-16{order:16}.ant-col-sm-15{display:block;width:62.5%}.ant-col-sm-push-15{left:62.5%}.ant-col-sm-pull-15{right:62.5%}.ant-col-sm-offset-15{margin-left:62.5%}.ant-col-sm-order-15{order:15}.ant-col-sm-14{display:block;width:58.33333333%}.ant-col-sm-push-14{left:58.33333333%}.ant-col-sm-pull-14{right:58.33333333%}.ant-col-sm-offset-14{margin-left:58.33333333%}.ant-col-sm-order-14{order:14}.ant-col-sm-13{display:block;width:54.16666667%}.ant-col-sm-push-13{left:54.16666667%}.ant-col-sm-pull-13{right:54.16666667%}.ant-col-sm-offset-13{margin-left:54.16666667%}.ant-col-sm-order-13{order:13}.ant-col-sm-12{display:block;width:50%}.ant-col-sm-push-12{left:50%}.ant-col-sm-pull-12{right:50%}.ant-col-sm-offset-12{margin-left:50%}.ant-col-sm-order-12{order:12}.ant-col-sm-11{display:block;width:45.83333333%}.ant-col-sm-push-11{left:45.83333333%}.ant-col-sm-pull-11{right:45.83333333%}.ant-col-sm-offset-11{margin-left:45.83333333%}.ant-col-sm-order-11{order:11}.ant-col-sm-10{display:block;width:41.66666667%}.ant-col-sm-push-10{left:41.66666667%}.ant-col-sm-pull-10{right:41.66666667%}.ant-col-sm-offset-10{margin-left:41.66666667%}.ant-col-sm-order-10{order:10}.ant-col-sm-9{display:block;width:37.5%}.ant-col-sm-push-9{left:37.5%}.ant-col-sm-pull-9{right:37.5%}.ant-col-sm-offset-9{margin-left:37.5%}.ant-col-sm-order-9{order:9}.ant-col-sm-8{display:block;width:33.33333333%}.ant-col-sm-push-8{left:33.33333333%}.ant-col-sm-pull-8{right:33.33333333%}.ant-col-sm-offset-8{margin-left:33.33333333%}.ant-col-sm-order-8{order:8}.ant-col-sm-7{display:block;width:29.16666667%}.ant-col-sm-push-7{left:29.16666667%}.ant-col-sm-pull-7{right:29.16666667%}.ant-col-sm-offset-7{margin-left:29.16666667%}.ant-col-sm-order-7{order:7}.ant-col-sm-6{display:block;width:25%}.ant-col-sm-push-6{left:25%}.ant-col-sm-pull-6{right:25%}.ant-col-sm-offset-6{margin-left:25%}.ant-col-sm-order-6{order:6}.ant-col-sm-5{display:block;width:20.83333333%}.ant-col-sm-push-5{left:20.83333333%}.ant-col-sm-pull-5{right:20.83333333%}.ant-col-sm-offset-5{margin-left:20.83333333%}.ant-col-sm-order-5{order:5}.ant-col-sm-4{display:block;width:16.66666667%}.ant-col-sm-push-4{left:16.66666667%}.ant-col-sm-pull-4{right:16.66666667%}.ant-col-sm-offset-4{margin-left:16.66666667%}.ant-col-sm-order-4{order:4}.ant-col-sm-3{display:block;width:12.5%}.ant-col-sm-push-3{left:12.5%}.ant-col-sm-pull-3{right:12.5%}.ant-col-sm-offset-3{margin-left:12.5%}.ant-col-sm-order-3{order:3}.ant-col-sm-2{display:block;width:8.33333333%}.ant-col-sm-push-2{left:8.33333333%}.ant-col-sm-pull-2{right:8.33333333%}.ant-col-sm-offset-2{margin-left:8.33333333%}.ant-col-sm-order-2{order:2}.ant-col-sm-1{display:block;width:4.16666667%}.ant-col-sm-push-1{left:4.16666667%}.ant-col-sm-pull-1{right:4.16666667%}.ant-col-sm-offset-1{margin-left:4.16666667%}.ant-col-sm-order-1{order:1}.ant-col-sm-0{display:none}.ant-col-push-0{left:auto}.ant-col-pull-0{right:auto}}@media (min-width:992px){.ant-col-md-1,.ant-col-md-2,.ant-col-md-3,.ant-col-md-4,.ant-col-md-5,.ant-col-md-6,.ant-col-md-7,.ant-col-md-8,.ant-col-md-9,.ant-col-md-10,.ant-col-md-11,.ant-col-md-12,.ant-col-md-13,.ant-col-md-14,.ant-col-md-15,.ant-col-md-16,.ant-col-md-17,.ant-col-md-18,.ant-col-md-19,.ant-col-md-20,.ant-col-md-21,.ant-col-md-22,.ant-col-md-23,.ant-col-md-24{float:left;flex:0 0 auto}.ant-col-md-24{display:block;width:100%}.ant-col-md-push-24{left:100%}.ant-col-md-pull-24{right:100%}.ant-col-md-offset-24{margin-left:100%}.ant-col-md-order-24{order:24}.ant-col-md-23{display:block;width:95.83333333%}.ant-col-md-push-23{left:95.83333333%}.ant-col-md-pull-23{right:95.83333333%}.ant-col-md-offset-23{margin-left:95.83333333%}.ant-col-md-order-23{order:23}.ant-col-md-22{display:block;width:91.66666667%}.ant-col-md-push-22{left:91.66666667%}.ant-col-md-pull-22{right:91.66666667%}.ant-col-md-offset-22{margin-left:91.66666667%}.ant-col-md-order-22{order:22}.ant-col-md-21{display:block;width:87.5%}.ant-col-md-push-21{left:87.5%}.ant-col-md-pull-21{right:87.5%}.ant-col-md-offset-21{margin-left:87.5%}.ant-col-md-order-21{order:21}.ant-col-md-20{display:block;width:83.33333333%}.ant-col-md-push-20{left:83.33333333%}.ant-col-md-pull-20{right:83.33333333%}.ant-col-md-offset-20{margin-left:83.33333333%}.ant-col-md-order-20{order:20}.ant-col-md-19{display:block;width:79.16666667%}.ant-col-md-push-19{left:79.16666667%}.ant-col-md-pull-19{right:79.16666667%}.ant-col-md-offset-19{margin-left:79.16666667%}.ant-col-md-order-19{order:19}.ant-col-md-18{display:block;width:75%}.ant-col-md-push-18{left:75%}.ant-col-md-pull-18{right:75%}.ant-col-md-offset-18{margin-left:75%}.ant-col-md-order-18{order:18}.ant-col-md-17{display:block;width:70.83333333%}.ant-col-md-push-17{left:70.83333333%}.ant-col-md-pull-17{right:70.83333333%}.ant-col-md-offset-17{margin-left:70.83333333%}.ant-col-md-order-17{order:17}.ant-col-md-16{display:block;width:66.66666667%}.ant-col-md-push-16{left:66.66666667%}.ant-col-md-pull-16{right:66.66666667%}.ant-col-md-offset-16{margin-left:66.66666667%}.ant-col-md-order-16{order:16}.ant-col-md-15{display:block;width:62.5%}.ant-col-md-push-15{left:62.5%}.ant-col-md-pull-15{right:62.5%}.ant-col-md-offset-15{margin-left:62.5%}.ant-col-md-order-15{order:15}.ant-col-md-14{display:block;width:58.33333333%}.ant-col-md-push-14{left:58.33333333%}.ant-col-md-pull-14{right:58.33333333%}.ant-col-md-offset-14{margin-left:58.33333333%}.ant-col-md-order-14{order:14}.ant-col-md-13{display:block;width:54.16666667%}.ant-col-md-push-13{left:54.16666667%}.ant-col-md-pull-13{right:54.16666667%}.ant-col-md-offset-13{margin-left:54.16666667%}.ant-col-md-order-13{order:13}.ant-col-md-12{display:block;width:50%}.ant-col-md-push-12{left:50%}.ant-col-md-pull-12{right:50%}.ant-col-md-offset-12{margin-left:50%}.ant-col-md-order-12{order:12}.ant-col-md-11{display:block;width:45.83333333%}.ant-col-md-push-11{left:45.83333333%}.ant-col-md-pull-11{right:45.83333333%}.ant-col-md-offset-11{margin-left:45.83333333%}.ant-col-md-order-11{order:11}.ant-col-md-10{display:block;width:41.66666667%}.ant-col-md-push-10{left:41.66666667%}.ant-col-md-pull-10{right:41.66666667%}.ant-col-md-offset-10{margin-left:41.66666667%}.ant-col-md-order-10{order:10}.ant-col-md-9{display:block;width:37.5%}.ant-col-md-push-9{left:37.5%}.ant-col-md-pull-9{right:37.5%}.ant-col-md-offset-9{margin-left:37.5%}.ant-col-md-order-9{order:9}.ant-col-md-8{display:block;width:33.33333333%}.ant-col-md-push-8{left:33.33333333%}.ant-col-md-pull-8{right:33.33333333%}.ant-col-md-offset-8{margin-left:33.33333333%}.ant-col-md-order-8{order:8}.ant-col-md-7{display:block;width:29.16666667%}.ant-col-md-push-7{left:29.16666667%}.ant-col-md-pull-7{right:29.16666667%}.ant-col-md-offset-7{margin-left:29.16666667%}.ant-col-md-order-7{order:7}.ant-col-md-6{display:block;width:25%}.ant-col-md-push-6{left:25%}.ant-col-md-pull-6{right:25%}.ant-col-md-offset-6{margin-left:25%}.ant-col-md-order-6{order:6}.ant-col-md-5{display:block;width:20.83333333%}.ant-col-md-push-5{left:20.83333333%}.ant-col-md-pull-5{right:20.83333333%}.ant-col-md-offset-5{margin-left:20.83333333%}.ant-col-md-order-5{order:5}.ant-col-md-4{display:block;width:16.66666667%}.ant-col-md-push-4{left:16.66666667%}.ant-col-md-pull-4{right:16.66666667%}.ant-col-md-offset-4{margin-left:16.66666667%}.ant-col-md-order-4{order:4}.ant-col-md-3{display:block;width:12.5%}.ant-col-md-push-3{left:12.5%}.ant-col-md-pull-3{right:12.5%}.ant-col-md-offset-3{margin-left:12.5%}.ant-col-md-order-3{order:3}.ant-col-md-2{display:block;width:8.33333333%}.ant-col-md-push-2{left:8.33333333%}.ant-col-md-pull-2{right:8.33333333%}.ant-col-md-offset-2{margin-left:8.33333333%}.ant-col-md-order-2{order:2}.ant-col-md-1{display:block;width:4.16666667%}.ant-col-md-push-1{left:4.16666667%}.ant-col-md-pull-1{right:4.16666667%}.ant-col-md-offset-1{margin-left:4.16666667%}.ant-col-md-order-1{order:1}.ant-col-md-0{display:none}.ant-col-push-0{left:auto}.ant-col-pull-0{right:auto}}@media (min-width:1200px){.ant-col-lg-1,.ant-col-lg-2,.ant-col-lg-3,.ant-col-lg-4,.ant-col-lg-5,.ant-col-lg-6,.ant-col-lg-7,.ant-col-lg-8,.ant-col-lg-9,.ant-col-lg-10,.ant-col-lg-11,.ant-col-lg-12,.ant-col-lg-13,.ant-col-lg-14,.ant-col-lg-15,.ant-col-lg-16,.ant-col-lg-17,.ant-col-lg-18,.ant-col-lg-19,.ant-col-lg-20,.ant-col-lg-21,.ant-col-lg-22,.ant-col-lg-23,.ant-col-lg-24{float:left;flex:0 0 auto}.ant-col-lg-24{display:block;width:100%}.ant-col-lg-push-24{left:100%}.ant-col-lg-pull-24{right:100%}.ant-col-lg-offset-24{margin-left:100%}.ant-col-lg-order-24{order:24}.ant-col-lg-23{display:block;width:95.83333333%}.ant-col-lg-push-23{left:95.83333333%}.ant-col-lg-pull-23{right:95.83333333%}.ant-col-lg-offset-23{margin-left:95.83333333%}.ant-col-lg-order-23{order:23}.ant-col-lg-22{display:block;width:91.66666667%}.ant-col-lg-push-22{left:91.66666667%}.ant-col-lg-pull-22{right:91.66666667%}.ant-col-lg-offset-22{margin-left:91.66666667%}.ant-col-lg-order-22{order:22}.ant-col-lg-21{display:block;width:87.5%}.ant-col-lg-push-21{left:87.5%}.ant-col-lg-pull-21{right:87.5%}.ant-col-lg-offset-21{margin-left:87.5%}.ant-col-lg-order-21{order:21}.ant-col-lg-20{display:block;width:83.33333333%}.ant-col-lg-push-20{left:83.33333333%}.ant-col-lg-pull-20{right:83.33333333%}.ant-col-lg-offset-20{margin-left:83.33333333%}.ant-col-lg-order-20{order:20}.ant-col-lg-19{display:block;width:79.16666667%}.ant-col-lg-push-19{left:79.16666667%}.ant-col-lg-pull-19{right:79.16666667%}.ant-col-lg-offset-19{margin-left:79.16666667%}.ant-col-lg-order-19{order:19}.ant-col-lg-18{display:block;width:75%}.ant-col-lg-push-18{left:75%}.ant-col-lg-pull-18{right:75%}.ant-col-lg-offset-18{margin-left:75%}.ant-col-lg-order-18{order:18}.ant-col-lg-17{display:block;width:70.83333333%}.ant-col-lg-push-17{left:70.83333333%}.ant-col-lg-pull-17{right:70.83333333%}.ant-col-lg-offset-17{margin-left:70.83333333%}.ant-col-lg-order-17{order:17}.ant-col-lg-16{display:block;width:66.66666667%}.ant-col-lg-push-16{left:66.66666667%}.ant-col-lg-pull-16{right:66.66666667%}.ant-col-lg-offset-16{margin-left:66.66666667%}.ant-col-lg-order-16{order:16}.ant-col-lg-15{display:block;width:62.5%}.ant-col-lg-push-15{left:62.5%}.ant-col-lg-pull-15{right:62.5%}.ant-col-lg-offset-15{margin-left:62.5%}.ant-col-lg-order-15{order:15}.ant-col-lg-14{display:block;width:58.33333333%}.ant-col-lg-push-14{left:58.33333333%}.ant-col-lg-pull-14{right:58.33333333%}.ant-col-lg-offset-14{margin-left:58.33333333%}.ant-col-lg-order-14{order:14}.ant-col-lg-13{display:block;width:54.16666667%}.ant-col-lg-push-13{left:54.16666667%}.ant-col-lg-pull-13{right:54.16666667%}.ant-col-lg-offset-13{margin-left:54.16666667%}.ant-col-lg-order-13{order:13}.ant-col-lg-12{display:block;width:50%}.ant-col-lg-push-12{left:50%}.ant-col-lg-pull-12{right:50%}.ant-col-lg-offset-12{margin-left:50%}.ant-col-lg-order-12{order:12}.ant-col-lg-11{display:block;width:45.83333333%}.ant-col-lg-push-11{left:45.83333333%}.ant-col-lg-pull-11{right:45.83333333%}.ant-col-lg-offset-11{margin-left:45.83333333%}.ant-col-lg-order-11{order:11}.ant-col-lg-10{display:block;width:41.66666667%}.ant-col-lg-push-10{left:41.66666667%}.ant-col-lg-pull-10{right:41.66666667%}.ant-col-lg-offset-10{margin-left:41.66666667%}.ant-col-lg-order-10{order:10}.ant-col-lg-9{display:block;width:37.5%}.ant-col-lg-push-9{left:37.5%}.ant-col-lg-pull-9{right:37.5%}.ant-col-lg-offset-9{margin-left:37.5%}.ant-col-lg-order-9{order:9}.ant-col-lg-8{display:block;width:33.33333333%}.ant-col-lg-push-8{left:33.33333333%}.ant-col-lg-pull-8{right:33.33333333%}.ant-col-lg-offset-8{margin-left:33.33333333%}.ant-col-lg-order-8{order:8}.ant-col-lg-7{display:block;width:29.16666667%}.ant-col-lg-push-7{left:29.16666667%}.ant-col-lg-pull-7{right:29.16666667%}.ant-col-lg-offset-7{margin-left:29.16666667%}.ant-col-lg-order-7{order:7}.ant-col-lg-6{display:block;width:25%}.ant-col-lg-push-6{left:25%}.ant-col-lg-pull-6{right:25%}.ant-col-lg-offset-6{margin-left:25%}.ant-col-lg-order-6{order:6}.ant-col-lg-5{display:block;width:20.83333333%}.ant-col-lg-push-5{left:20.83333333%}.ant-col-lg-pull-5{right:20.83333333%}.ant-col-lg-offset-5{margin-left:20.83333333%}.ant-col-lg-order-5{order:5}.ant-col-lg-4{display:block;width:16.66666667%}.ant-col-lg-push-4{left:16.66666667%}.ant-col-lg-pull-4{right:16.66666667%}.ant-col-lg-offset-4{margin-left:16.66666667%}.ant-col-lg-order-4{order:4}.ant-col-lg-3{display:block;width:12.5%}.ant-col-lg-push-3{left:12.5%}.ant-col-lg-pull-3{right:12.5%}.ant-col-lg-offset-3{margin-left:12.5%}.ant-col-lg-order-3{order:3}.ant-col-lg-2{display:block;width:8.33333333%}.ant-col-lg-push-2{left:8.33333333%}.ant-col-lg-pull-2{right:8.33333333%}.ant-col-lg-offset-2{margin-left:8.33333333%}.ant-col-lg-order-2{order:2}.ant-col-lg-1{display:block;width:4.16666667%}.ant-col-lg-push-1{left:4.16666667%}.ant-col-lg-pull-1{right:4.16666667%}.ant-col-lg-offset-1{margin-left:4.16666667%}.ant-col-lg-order-1{order:1}.ant-col-lg-0{display:none}.ant-col-push-0{left:auto}.ant-col-pull-0{right:auto}}.ant-btn{display:inline-block;margin-bottom:0;font-weight:500;text-align:center;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid transparent;white-space:nowrap;line-height:1.5;padding:4px 15px;font-size:12px;border-radius:4px;user-select:none;transition:all .3s cubic-bezier(.645,.045,.355,1);position:relative;color:#333;background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn>.anticon{line-height:1}.ant-btn,.ant-btn:active,.ant-btn:focus{outline:0}.ant-btn:not([disabled]):hover{text-decoration:none}.ant-btn:not([disabled]):active{outline:0;transition:none}.ant-btn.disabled,.ant-btn[disabled]{cursor:not-allowed}.ant-btn.disabled>*,.ant-btn[disabled]>*{pointer-events:none}.ant-btn-lg{padding:4px 15px 5px;font-size:14px;border-radius:4px}.ant-btn-sm{padding:1px 7px;font-size:12px;border-radius:2px}.ant-btn>a:only-child{color:currentColor}.ant-btn>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn:focus,.ant-btn:hover{color:#66b3ee;background-color:#f7f7f7;border-color:#66b3ee}.ant-btn:focus>a:only-child,.ant-btn:hover>a:only-child{color:currentColor}.ant-btn:focus>a:only-child:after,.ant-btn:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn.active,.ant-btn:active{color:#2c83cd;background-color:#f7f7f7;border-color:#2c83cd}.ant-btn.active>a:only-child,.ant-btn:active>a:only-child{color:currentColor}.ant-btn.active>a:only-child:after,.ant-btn:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn.disabled,.ant-btn.disabled.active,.ant-btn.disabled:active,.ant-btn.disabled:focus,.ant-btn.disabled:hover,.ant-btn[disabled],.ant-btn[disabled].active,.ant-btn[disabled]:active,.ant-btn[disabled]:focus,.ant-btn[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn.disabled.active>a:only-child,.ant-btn.disabled:active>a:only-child,.ant-btn.disabled:focus>a:only-child,.ant-btn.disabled:hover>a:only-child,.ant-btn.disabled>a:only-child,.ant-btn[disabled].active>a:only-child,.ant-btn[disabled]:active>a:only-child,.ant-btn[disabled]:focus>a:only-child,.ant-btn[disabled]:hover>a:only-child,.ant-btn[disabled]>a:only-child{color:currentColor}.ant-btn.disabled.active>a:only-child:after,.ant-btn.disabled:active>a:only-child:after,.ant-btn.disabled:focus>a:only-child:after,.ant-btn.disabled:hover>a:only-child:after,.ant-btn.disabled>a:only-child:after,.ant-btn[disabled].active>a:only-child:after,.ant-btn[disabled]:active>a:only-child:after,.ant-btn[disabled]:focus>a:only-child:after,.ant-btn[disabled]:hover>a:only-child:after,.ant-btn[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn.active,.ant-btn:active,.ant-btn:focus,.ant-btn:hover{background:#fff}.ant-btn-primary{color:#fff;background-color:#369be9;border-color:#369be9}.ant-btn-primary>a:only-child{color:currentColor}.ant-btn-primary>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-primary:focus,.ant-btn-primary:hover{color:#fff;background-color:#66b3ee;border-color:#66b3ee}.ant-btn-primary:focus>a:only-child,.ant-btn-primary:hover>a:only-child{color:currentColor}.ant-btn-primary:focus>a:only-child:after,.ant-btn-primary:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-primary.active,.ant-btn-primary:active{color:#fff;background-color:#2c83cd;border-color:#2c83cd}.ant-btn-primary.active>a:only-child,.ant-btn-primary:active>a:only-child{color:currentColor}.ant-btn-primary.active>a:only-child:after,.ant-btn-primary:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-primary.disabled,.ant-btn-primary.disabled.active,.ant-btn-primary.disabled:active,.ant-btn-primary.disabled:focus,.ant-btn-primary.disabled:hover,.ant-btn-primary[disabled],.ant-btn-primary[disabled].active,.ant-btn-primary[disabled]:active,.ant-btn-primary[disabled]:focus,.ant-btn-primary[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn-primary.disabled.active>a:only-child,.ant-btn-primary.disabled:active>a:only-child,.ant-btn-primary.disabled:focus>a:only-child,.ant-btn-primary.disabled:hover>a:only-child,.ant-btn-primary.disabled>a:only-child,.ant-btn-primary[disabled].active>a:only-child,.ant-btn-primary[disabled]:active>a:only-child,.ant-btn-primary[disabled]:focus>a:only-child,.ant-btn-primary[disabled]:hover>a:only-child,.ant-btn-primary[disabled]>a:only-child{color:currentColor}.ant-btn-primary.disabled.active>a:only-child:after,.ant-btn-primary.disabled:active>a:only-child:after,.ant-btn-primary.disabled:focus>a:only-child:after,.ant-btn-primary.disabled:hover>a:only-child:after,.ant-btn-primary.disabled>a:only-child:after,.ant-btn-primary[disabled].active>a:only-child:after,.ant-btn-primary[disabled]:active>a:only-child:after,.ant-btn-primary[disabled]:focus>a:only-child:after,.ant-btn-primary[disabled]:hover>a:only-child:after,.ant-btn-primary[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-group .ant-btn-primary:not(:first-child):not(:last-child){border-right-color:#2c83cd;border-left-color:#2c83cd}.ant-btn-group .ant-btn-primary:not(:first-child):not(:last-child):disabled{border-color:#d9d9d9}.ant-btn-group .ant-btn-primary:first-child:not(:last-child){border-right-color:#2c83cd}.ant-btn-group .ant-btn-primary:first-child:not(:last-child)[disabled]{border-right-color:#d9d9d9}.ant-btn-group .ant-btn-primary+.ant-btn-primary,.ant-btn-group .ant-btn-primary:last-child:not(:first-child){border-left-color:#2c83cd}.ant-btn-group .ant-btn-primary+.ant-btn-primary[disabled],.ant-btn-group .ant-btn-primary:last-child:not(:first-child)[disabled]{border-left-color:#d9d9d9}.ant-btn-ghost{color:#333;background-color:transparent;border-color:#d9d9d9}.ant-btn-ghost>a:only-child{color:currentColor}.ant-btn-ghost>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-ghost:focus,.ant-btn-ghost:hover{color:#66b3ee;background-color:transparent;border-color:#66b3ee}.ant-btn-ghost:focus>a:only-child,.ant-btn-ghost:hover>a:only-child{color:currentColor}.ant-btn-ghost:focus>a:only-child:after,.ant-btn-ghost:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-ghost.active,.ant-btn-ghost:active{color:#2c83cd;background-color:transparent;border-color:#2c83cd}.ant-btn-ghost.active>a:only-child,.ant-btn-ghost:active>a:only-child{color:currentColor}.ant-btn-ghost.active>a:only-child:after,.ant-btn-ghost:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-ghost.disabled,.ant-btn-ghost.disabled.active,.ant-btn-ghost.disabled:active,.ant-btn-ghost.disabled:focus,.ant-btn-ghost.disabled:hover,.ant-btn-ghost[disabled],.ant-btn-ghost[disabled].active,.ant-btn-ghost[disabled]:active,.ant-btn-ghost[disabled]:focus,.ant-btn-ghost[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn-ghost.disabled.active>a:only-child,.ant-btn-ghost.disabled:active>a:only-child,.ant-btn-ghost.disabled:focus>a:only-child,.ant-btn-ghost.disabled:hover>a:only-child,.ant-btn-ghost.disabled>a:only-child,.ant-btn-ghost[disabled].active>a:only-child,.ant-btn-ghost[disabled]:active>a:only-child,.ant-btn-ghost[disabled]:focus>a:only-child,.ant-btn-ghost[disabled]:hover>a:only-child,.ant-btn-ghost[disabled]>a:only-child{color:currentColor}.ant-btn-ghost.disabled.active>a:only-child:after,.ant-btn-ghost.disabled:active>a:only-child:after,.ant-btn-ghost.disabled:focus>a:only-child:after,.ant-btn-ghost.disabled:hover>a:only-child:after,.ant-btn-ghost.disabled>a:only-child:after,.ant-btn-ghost[disabled].active>a:only-child:after,.ant-btn-ghost[disabled]:active>a:only-child:after,.ant-btn-ghost[disabled]:focus>a:only-child:after,.ant-btn-ghost[disabled]:hover>a:only-child:after,.ant-btn-ghost[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-dashed{color:#333;background-color:transparent;border-color:#d9d9d9;border-style:dashed}.ant-btn-dashed>a:only-child{color:currentColor}.ant-btn-dashed>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-dashed:focus,.ant-btn-dashed:hover{color:#66b3ee;background-color:transparent;border-color:#66b3ee}.ant-btn-dashed:focus>a:only-child,.ant-btn-dashed:hover>a:only-child{color:currentColor}.ant-btn-dashed:focus>a:only-child:after,.ant-btn-dashed:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-dashed.active,.ant-btn-dashed:active{color:#2c83cd;background-color:transparent;border-color:#2c83cd}.ant-btn-dashed.active>a:only-child,.ant-btn-dashed:active>a:only-child{color:currentColor}.ant-btn-dashed.active>a:only-child:after,.ant-btn-dashed:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-dashed.disabled,.ant-btn-dashed.disabled.active,.ant-btn-dashed.disabled:active,.ant-btn-dashed.disabled:focus,.ant-btn-dashed.disabled:hover,.ant-btn-dashed[disabled],.ant-btn-dashed[disabled].active,.ant-btn-dashed[disabled]:active,.ant-btn-dashed[disabled]:focus,.ant-btn-dashed[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn-dashed.disabled.active>a:only-child,.ant-btn-dashed.disabled:active>a:only-child,.ant-btn-dashed.disabled:focus>a:only-child,.ant-btn-dashed.disabled:hover>a:only-child,.ant-btn-dashed.disabled>a:only-child,.ant-btn-dashed[disabled].active>a:only-child,.ant-btn-dashed[disabled]:active>a:only-child,.ant-btn-dashed[disabled]:focus>a:only-child,.ant-btn-dashed[disabled]:hover>a:only-child,.ant-btn-dashed[disabled]>a:only-child{color:currentColor}.ant-btn-dashed.disabled.active>a:only-child:after,.ant-btn-dashed.disabled:active>a:only-child:after,.ant-btn-dashed.disabled:focus>a:only-child:after,.ant-btn-dashed.disabled:hover>a:only-child:after,.ant-btn-dashed.disabled>a:only-child:after,.ant-btn-dashed[disabled].active>a:only-child:after,.ant-btn-dashed[disabled]:active>a:only-child:after,.ant-btn-dashed[disabled]:focus>a:only-child:after,.ant-btn-dashed[disabled]:hover>a:only-child:after,.ant-btn-dashed[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-circle,.ant-btn-circle-outline{width:28px;height:28px;padding:0;font-size:14px;border-radius:50%}.ant-btn-circle-outline.ant-btn-lg,.ant-btn-circle.ant-btn-lg{width:32px;height:32px;padding:0;font-size:16px;border-radius:50%}.ant-btn-circle-outline.ant-btn-sm,.ant-btn-circle.ant-btn-sm{width:22px;height:22px;padding:0;font-size:12px;border-radius:50%}.ant-btn:before{position:absolute;top:-1px;left:-1px;bottom:-1px;right:-1px;background:#fff;opacity:.35;content:\"\";border-radius:inherit;z-index:1;transition:opacity .2s;pointer-events:none;display:none}.ant-btn.ant-btn-loading{padding-left:29px;pointer-events:none;position:relative}.ant-btn.ant-btn-loading .anticon{margin-left:-14px;transition:all .3s cubic-bezier(.645,.045,.355,1)}.ant-btn.ant-btn-loading:before{display:block}.ant-btn-sm.ant-btn-loading{padding-left:24px}.ant-btn-sm.ant-btn-loading .anticon{margin-left:-17px}.ant-btn-group{position:relative;display:inline-block}.ant-btn-group>.ant-btn{position:relative;z-index:1}.ant-btn-group>.ant-btn.active,.ant-btn-group>.ant-btn:active,.ant-btn-group>.ant-btn:focus,.ant-btn-group>.ant-btn:hover{z-index:2}.ant-btn-group>.ant-btn:disabled{z-index:0}.ant-btn-group-lg>.ant-btn{padding:4px 15px 5px;font-size:14px;border-radius:4px}.ant-btn-group-sm>.ant-btn{padding:1px 7px;font-size:12px;border-radius:2px}.ant-btn-group-sm>.ant-btn>.anticon{font-size:12px}.ant-btn+.ant-btn-group,.ant-btn-group+.ant-btn,.ant-btn-group+.ant-btn-group,.ant-btn-group .ant-btn+.ant-btn{margin-left:-1px}.ant-btn-group .ant-btn:not(:first-child):not(:last-child){border-radius:0;padding-left:8px;padding-right:8px}.ant-btn-group>.ant-btn:first-child{margin-left:0}.ant-btn-group>.ant-btn:first-child:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0;padding-right:8px}.ant-btn-group>.ant-btn:last-child:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;padding-left:8px}.ant-btn-group>.ant-btn-group{float:left}.ant-btn-group>.ant-btn-group:not(:first-child):not(:last-child)>.ant-btn{border-radius:0}.ant-btn-group>.ant-btn-group:first-child:not(:last-child)>.ant-btn:last-child{border-bottom-right-radius:0;border-top-right-radius:0;padding-right:8px}.ant-btn-group>.ant-btn-group:last-child:not(:first-child)>.ant-btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0;padding-left:8px}.ant-btn:not(.ant-btn-circle):not(.ant-btn-circle-outline).ant-btn-icon-only{padding-left:8px;padding-right:8px}.ant-btn>.anticon+span,.ant-btn>span+.anticon{margin-left:.5em}.ant-btn-clicked:after{content:\"\";position:absolute;top:-1px;left:-1px;bottom:-1px;right:-1px;border-radius:inherit;border:0 solid #369be9;opacity:.4;animation:buttonEffect .36s ease-out forwards;display:block}@keyframes buttonEffect{to{opacity:0;top:-6px;left:-6px;bottom:-6px;right:-6px;border-width:6px}}.ant-btn-success{color:#fff;background-color:#16c294;border-color:#16c294}.ant-btn-success>a:only-child{color:currentColor}.ant-btn-success>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-success:focus,.ant-btn-success:hover{color:#fff;background-color:#4ed1ae;border-color:#4ed1ae}.ant-btn-success:focus>a:only-child,.ant-btn-success:hover>a:only-child{color:currentColor}.ant-btn-success:focus>a:only-child:after,.ant-btn-success:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-success.active,.ant-btn-success:active{color:#fff;background-color:#13a883;border-color:#13a883}.ant-btn-success.active>a:only-child,.ant-btn-success:active>a:only-child{color:currentColor}.ant-btn-success.active>a:only-child:after,.ant-btn-success:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-success.disabled,.ant-btn-success.disabled.active,.ant-btn-success.disabled:active,.ant-btn-success.disabled:focus,.ant-btn-success.disabled:hover,.ant-btn-success[disabled],.ant-btn-success[disabled].active,.ant-btn-success[disabled]:active,.ant-btn-success[disabled]:focus,.ant-btn-success[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn-success.disabled.active>a:only-child,.ant-btn-success.disabled:active>a:only-child,.ant-btn-success.disabled:focus>a:only-child,.ant-btn-success.disabled:hover>a:only-child,.ant-btn-success.disabled>a:only-child,.ant-btn-success[disabled].active>a:only-child,.ant-btn-success[disabled]:active>a:only-child,.ant-btn-success[disabled]:focus>a:only-child,.ant-btn-success[disabled]:hover>a:only-child,.ant-btn-success[disabled]>a:only-child{color:currentColor}.ant-btn-success.disabled.active>a:only-child:after,.ant-btn-success.disabled:active>a:only-child:after,.ant-btn-success.disabled:focus>a:only-child:after,.ant-btn-success.disabled:hover>a:only-child:after,.ant-btn-success.disabled>a:only-child:after,.ant-btn-success[disabled].active>a:only-child:after,.ant-btn-success[disabled]:active>a:only-child:after,.ant-btn-success[disabled]:focus>a:only-child:after,.ant-btn-success[disabled]:hover>a:only-child:after,.ant-btn-success[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-success.active,.ant-btn-success:active,.ant-btn-success:focus,.ant-btn-success:hover{color:#fff}.ant-btn-group .ant-btn-success:not(:first-child):not(:last-child){border-right-color:#2c83cd;border-left-color:#2c83cd}.ant-btn-group .ant-btn-success:first-child:not(:last-child){border-right-color:#2c83cd}.ant-btn-group .ant-btn-success:first-child:not(:last-child)[disabled]{border-right-color:#d9d9d9}.ant-btn-group .ant-btn-success+.ant-btn,.ant-btn-group .ant-btn-success:last-child:not(:first-child){border-left-color:#2c83cd}.ant-btn-group .ant-btn-success+.ant-btn[disabled],.ant-btn-group .ant-btn-success:last-child:not(:first-child)[disabled]{border-left-color:#d9d9d9}.ant-btn-error{color:#fff;background-color:#e95471;border-color:#e95471}.ant-btn-error>a:only-child{color:currentColor}.ant-btn-error>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-error:focus,.ant-btn-error:hover{color:#fff;background-color:#ee7d93;border-color:#ee7d93}.ant-btn-error:focus>a:only-child,.ant-btn-error:hover>a:only-child{color:currentColor}.ant-btn-error:focus>a:only-child:after,.ant-btn-error:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-error.active,.ant-btn-error:active{color:#fff;background-color:#d2446d;border-color:#d2446d}.ant-btn-error.active>a:only-child,.ant-btn-error:active>a:only-child{color:currentColor}.ant-btn-error.active>a:only-child:after,.ant-btn-error:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-error.disabled,.ant-btn-error.disabled.active,.ant-btn-error.disabled:active,.ant-btn-error.disabled:focus,.ant-btn-error.disabled:hover,.ant-btn-error[disabled],.ant-btn-error[disabled].active,.ant-btn-error[disabled]:active,.ant-btn-error[disabled]:focus,.ant-btn-error[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn-error.disabled.active>a:only-child,.ant-btn-error.disabled:active>a:only-child,.ant-btn-error.disabled:focus>a:only-child,.ant-btn-error.disabled:hover>a:only-child,.ant-btn-error.disabled>a:only-child,.ant-btn-error[disabled].active>a:only-child,.ant-btn-error[disabled]:active>a:only-child,.ant-btn-error[disabled]:focus>a:only-child,.ant-btn-error[disabled]:hover>a:only-child,.ant-btn-error[disabled]>a:only-child{color:currentColor}.ant-btn-error.disabled.active>a:only-child:after,.ant-btn-error.disabled:active>a:only-child:after,.ant-btn-error.disabled:focus>a:only-child:after,.ant-btn-error.disabled:hover>a:only-child:after,.ant-btn-error.disabled>a:only-child:after,.ant-btn-error[disabled].active>a:only-child:after,.ant-btn-error[disabled]:active>a:only-child:after,.ant-btn-error[disabled]:focus>a:only-child:after,.ant-btn-error[disabled]:hover>a:only-child:after,.ant-btn-error[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-error.active,.ant-btn-error:active,.ant-btn-error:focus,.ant-btn-error:hover{color:#fff}.ant-btn-group .ant-btn-error:not(:first-child):not(:last-child){border-right-color:#2c83cd;border-left-color:#2c83cd}.ant-btn-group .ant-btn-error:first-child:not(:last-child){border-right-color:#2c83cd}.ant-btn-group .ant-btn-error:first-child:not(:last-child)[disabled]{border-right-color:#d9d9d9}.ant-btn-group .ant-btn-error+.ant-btn,.ant-btn-group .ant-btn-error:last-child:not(:first-child){border-left-color:#2c83cd}.ant-btn-group .ant-btn-error+.ant-btn[disabled],.ant-btn-group .ant-btn-error:last-child:not(:first-child)[disabled]{border-left-color:#d9d9d9}.ant-btn-warning{color:#fff;background-color:#fa0;border-color:#fa0}.ant-btn-warning>a:only-child{color:currentColor}.ant-btn-warning>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-warning:focus,.ant-btn-warning:hover{color:#fff;background-color:#ffbe3d;border-color:#ffbe3d}.ant-btn-warning:focus>a:only-child,.ant-btn-warning:hover>a:only-child{color:currentColor}.ant-btn-warning:focus>a:only-child:after,.ant-btn-warning:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-warning.active,.ant-btn-warning:active{color:#fff;background-color:#e08800;border-color:#e08800}.ant-btn-warning.active>a:only-child,.ant-btn-warning:active>a:only-child{color:currentColor}.ant-btn-warning.active>a:only-child:after,.ant-btn-warning:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-warning.disabled,.ant-btn-warning.disabled.active,.ant-btn-warning.disabled:active,.ant-btn-warning.disabled:focus,.ant-btn-warning.disabled:hover,.ant-btn-warning[disabled],.ant-btn-warning[disabled].active,.ant-btn-warning[disabled]:active,.ant-btn-warning[disabled]:focus,.ant-btn-warning[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-btn-warning.disabled.active>a:only-child,.ant-btn-warning.disabled:active>a:only-child,.ant-btn-warning.disabled:focus>a:only-child,.ant-btn-warning.disabled:hover>a:only-child,.ant-btn-warning.disabled>a:only-child,.ant-btn-warning[disabled].active>a:only-child,.ant-btn-warning[disabled]:active>a:only-child,.ant-btn-warning[disabled]:focus>a:only-child,.ant-btn-warning[disabled]:hover>a:only-child,.ant-btn-warning[disabled]>a:only-child{color:currentColor}.ant-btn-warning.disabled.active>a:only-child:after,.ant-btn-warning.disabled:active>a:only-child:after,.ant-btn-warning.disabled:focus>a:only-child:after,.ant-btn-warning.disabled:hover>a:only-child:after,.ant-btn-warning.disabled>a:only-child:after,.ant-btn-warning[disabled].active>a:only-child:after,.ant-btn-warning[disabled]:active>a:only-child:after,.ant-btn-warning[disabled]:focus>a:only-child:after,.ant-btn-warning[disabled]:hover>a:only-child:after,.ant-btn-warning[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-btn-warning.active,.ant-btn-warning:active,.ant-btn-warning:focus,.ant-btn-warning:hover{color:#fff}.ant-btn-group .ant-btn-warning:not(:first-child):not(:last-child){border-right-color:#2c83cd;border-left-color:#2c83cd}.ant-btn-group .ant-btn-warning:first-child:not(:last-child){border-right-color:#2c83cd}.ant-btn-group .ant-btn-warning:first-child:not(:last-child)[disabled]{border-right-color:#d9d9d9}.ant-btn-group .ant-btn-warning+.ant-btn,.ant-btn-group .ant-btn-warning:last-child:not(:first-child){border-left-color:#2c83cd}.ant-btn-group .ant-btn-warning+.ant-btn[disabled],.ant-btn-group .ant-btn-warning:last-child:not(:first-child)[disabled]{border-left-color:#d9d9d9}.ant-btn-group>.ant-btn{float:left}.ant-input-search-wrapper{display:inline-block;position:relative}.ant-input-search-wrapper .ant-input-search{transition:all .3s ease}.ant-input-search-wrapper .ant-input-search-icon{position:absolute;right:8px;cursor:pointer;transition:all .3s ease;font-size:14px;height:20px;line-height:20px;top:50%;margin-top:-10px}.ant-input-search-wrapper .ant-input-search-icon:hover{color:#369be9}.ant-input-search-wrapper:hover .ant-input-search:not([disabled]){border:1px solid #369be9}.ant-search-input-wrapper{display:inline-block;vertical-align:middle}.ant-search-input.ant-input-group .ant-input:first-child,.ant-search-input.ant-input-group .ant-select:first-child{border-radius:4px;position:absolute;top:-1px;width:100%}.ant-search-input.ant-input-group .ant-input:first-child{padding-right:36px}.ant-search-input .ant-search-btn{color:#333;background-color:#f7f7f7;border-color:#d9d9d9;border-radius:0 3px 3px 0;left:-1px;position:relative;border-width:0 0 0 1px;z-index:2;padding-left:8px;padding-right:8px}.ant-search-input .ant-search-btn>a:only-child{color:currentColor}.ant-search-input .ant-search-btn>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input .ant-search-btn:focus,.ant-search-input .ant-search-btn:hover{color:#66b3ee;background-color:#f7f7f7;border-color:#66b3ee}.ant-search-input .ant-search-btn:focus>a:only-child,.ant-search-input .ant-search-btn:hover>a:only-child{color:currentColor}.ant-search-input .ant-search-btn:focus>a:only-child:after,.ant-search-input .ant-search-btn:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input .ant-search-btn.active,.ant-search-input .ant-search-btn:active{color:#2c83cd;background-color:#f7f7f7;border-color:#2c83cd}.ant-search-input .ant-search-btn.active>a:only-child,.ant-search-input .ant-search-btn:active>a:only-child{color:currentColor}.ant-search-input .ant-search-btn.active>a:only-child:after,.ant-search-input .ant-search-btn:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input .ant-search-btn.disabled,.ant-search-input .ant-search-btn.disabled.active,.ant-search-input .ant-search-btn.disabled:active,.ant-search-input .ant-search-btn.disabled:focus,.ant-search-input .ant-search-btn.disabled:hover,.ant-search-input .ant-search-btn[disabled],.ant-search-input .ant-search-btn[disabled].active,.ant-search-input .ant-search-btn[disabled]:active,.ant-search-input .ant-search-btn[disabled]:focus,.ant-search-input .ant-search-btn[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-search-input .ant-search-btn.disabled.active>a:only-child,.ant-search-input .ant-search-btn.disabled:active>a:only-child,.ant-search-input .ant-search-btn.disabled:focus>a:only-child,.ant-search-input .ant-search-btn.disabled:hover>a:only-child,.ant-search-input .ant-search-btn.disabled>a:only-child,.ant-search-input .ant-search-btn[disabled].active>a:only-child,.ant-search-input .ant-search-btn[disabled]:active>a:only-child,.ant-search-input .ant-search-btn[disabled]:focus>a:only-child,.ant-search-input .ant-search-btn[disabled]:hover>a:only-child,.ant-search-input .ant-search-btn[disabled]>a:only-child{color:currentColor}.ant-search-input .ant-search-btn.disabled.active>a:only-child:after,.ant-search-input .ant-search-btn.disabled:active>a:only-child:after,.ant-search-input .ant-search-btn.disabled:focus>a:only-child:after,.ant-search-input .ant-search-btn.disabled:hover>a:only-child:after,.ant-search-input .ant-search-btn.disabled>a:only-child:after,.ant-search-input .ant-search-btn[disabled].active>a:only-child:after,.ant-search-input .ant-search-btn[disabled]:active>a:only-child:after,.ant-search-input .ant-search-btn[disabled]:focus>a:only-child:after,.ant-search-input .ant-search-btn[disabled]:hover>a:only-child:after,.ant-search-input .ant-search-btn[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input .ant-search-btn.active,.ant-search-input .ant-search-btn:active,.ant-search-input .ant-search-btn:focus,.ant-search-input .ant-search-btn:hover{background:#fff}.ant-search-input .ant-search-btn:hover{border-color:#d9d9d9}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty,.ant-search-input:hover .ant-search-btn-noempty{color:#fff;background-color:#369be9;border-color:#369be9}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty>a:only-child,.ant-search-input:hover .ant-search-btn-noempty>a:only-child{color:currentColor}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:focus,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:hover,.ant-search-input:hover .ant-search-btn-noempty:focus,.ant-search-input:hover .ant-search-btn-noempty:hover{color:#fff;background-color:#66b3ee;border-color:#66b3ee}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:focus>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:hover>a:only-child,.ant-search-input:hover .ant-search-btn-noempty:focus>a:only-child,.ant-search-input:hover .ant-search-btn-noempty:hover>a:only-child{color:currentColor}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:focus>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:hover>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty:focus>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.active,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:active,.ant-search-input:hover .ant-search-btn-noempty.active,.ant-search-input:hover .ant-search-btn-noempty:active{color:#fff;background-color:#2c83cd;border-color:#2c83cd}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.active>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:active>a:only-child,.ant-search-input:hover .ant-search-btn-noempty.active>a:only-child,.ant-search-input:hover .ant-search-btn-noempty:active>a:only-child{color:currentColor}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.active>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:active>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty.active>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled.active,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:active,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:focus,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:hover,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled],.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled].active,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:active,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:focus,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:hover,.ant-search-input:hover .ant-search-btn-noempty.disabled,.ant-search-input:hover .ant-search-btn-noempty.disabled.active,.ant-search-input:hover .ant-search-btn-noempty.disabled:active,.ant-search-input:hover .ant-search-btn-noempty.disabled:focus,.ant-search-input:hover .ant-search-btn-noempty.disabled:hover,.ant-search-input:hover .ant-search-btn-noempty[disabled],.ant-search-input:hover .ant-search-btn-noempty[disabled].active,.ant-search-input:hover .ant-search-btn-noempty[disabled]:active,.ant-search-input:hover .ant-search-btn-noempty[disabled]:focus,.ant-search-input:hover .ant-search-btn-noempty[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled.active>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:active>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:focus>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:hover>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled].active>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:active>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:focus>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:hover>a:only-child,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]>a:only-child,.ant-search-input:hover .ant-search-btn-noempty.disabled.active>a:only-child,.ant-search-input:hover .ant-search-btn-noempty.disabled:active>a:only-child,.ant-search-input:hover .ant-search-btn-noempty.disabled:focus>a:only-child,.ant-search-input:hover .ant-search-btn-noempty.disabled:hover>a:only-child,.ant-search-input:hover .ant-search-btn-noempty.disabled>a:only-child,.ant-search-input:hover .ant-search-btn-noempty[disabled].active>a:only-child,.ant-search-input:hover .ant-search-btn-noempty[disabled]:active>a:only-child,.ant-search-input:hover .ant-search-btn-noempty[disabled]:focus>a:only-child,.ant-search-input:hover .ant-search-btn-noempty[disabled]:hover>a:only-child,.ant-search-input:hover .ant-search-btn-noempty[disabled]>a:only-child{color:currentColor}.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled.active>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:active>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:focus>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:hover>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled].active>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:active>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:focus>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:hover>a:only-child:after,.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty.disabled.active>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty.disabled:active>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty.disabled:focus>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty.disabled:hover>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty.disabled>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty[disabled].active>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty[disabled]:active>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty[disabled]:focus>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty[disabled]:hover>a:only-child:after,.ant-search-input:hover .ant-search-btn-noempty[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-search-input .ant-select-combobox .ant-select-selection__rendered{margin-right:29px}.ant-input{position:relative;display:inline-block;padding:4px 7px;width:100%;height:28px;cursor:text;font-size:12px;line-height:1.5;color:#333;background-color:#fff;background-image:none;border:1px solid #d9d9d9;border-radius:4px;transition:all .3s}.ant-input::-moz-placeholder{color:#ccc;opacity:1}.ant-input:-ms-input-placeholder{color:#ccc}.ant-input::-webkit-input-placeholder{color:#ccc}.ant-input:focus,.ant-input:hover{border-color:#5eafed}.ant-input:focus{outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-input[disabled]{background-color:#f7f7f7;opacity:1;cursor:not-allowed;color:#ccc}.ant-input[disabled]:hover{border-color:#e1e1e1}textarea.ant-input{max-width:100%;height:auto;vertical-align:bottom}.ant-input-lg{padding:6px 7px;height:32px}.ant-input-sm{padding:1px 7px;height:22px;border-radius:2px}.ant-input-group{position:relative;display:table;border-collapse:separate;border-spacing:0;width:100%}.ant-input-group[class*=col-]{float:none;padding-left:0;padding-right:0}.ant-input-group>[class*=col-]{padding-right:8px}.ant-input-group-addon,.ant-input-group-wrap,.ant-input-group>.ant-input{display:table-cell}.ant-input-group-addon:not(:first-child):not(:last-child),.ant-input-group-wrap:not(:first-child):not(:last-child),.ant-input-group>.ant-input:not(:first-child):not(:last-child){border-radius:0}.ant-input-group-addon,.ant-input-group-wrap{width:1px;white-space:nowrap;vertical-align:middle}.ant-input-group-wrap>*{display:block!important}.ant-input-group .ant-input{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.ant-input-group-addon{padding:4px 7px;font-size:12px;font-weight:400;line-height:1;color:#333;text-align:center;background-color:#eee;border:1px solid #d9d9d9;border-radius:4px;position:relative;transition:all .3s}.ant-input-group-addon .ant-select{margin:-5px -7px}.ant-input-group-addon .ant-select .ant-select-selection{background-color:inherit;border:0;margin:-1px;border:1px solid transparent;box-shadow:none}.ant-input-group-addon .ant-select-focused .ant-select-selection,.ant-input-group-addon .ant-select-open .ant-select-selection{color:#369be9}.ant-input-group-addon>i:only-child:after{position:absolute;content:\"\";top:0;left:0;right:0;bottom:0}.ant-input-group-addon:first-child,.ant-input-group-addon:first-child .ant-select .ant-select-selection,.ant-input-group>.ant-input:first-child,.ant-input-group>.ant-input:first-child .ant-select .ant-select-selection,.ant-input-group>span>.ant-input:first-child,.ant-input-group>span>.ant-input:first-child .ant-select .ant-select-selection{border-bottom-right-radius:0;border-top-right-radius:0}.ant-input-group-addon:first-child{border-right:0}.ant-input-group-addon:last-child{border-left:0}.ant-input-group-addon:last-child,.ant-input-group-addon:last-child .ant-select .ant-select-selection,.ant-input-group>.ant-input:last-child,.ant-input-group>.ant-input:last-child .ant-select .ant-select-selection{border-bottom-left-radius:0;border-top-left-radius:0}.ant-input-group-lg .ant-input,.ant-input-group-lg>.ant-input-group-addon{padding:6px 7px;height:32px}.ant-input-group-sm .ant-input,.ant-input-group-sm>.ant-input-group-addon{padding:1px 7px;height:22px;border-radius:2px}.ant-checkbox{white-space:nowrap;cursor:pointer;outline:none;display:inline-block;line-height:1;position:relative;vertical-align:middle}.ant-checkbox-focused .ant-checkbox-inner,.ant-checkbox-wrapper:hover .ant-checkbox .ant-checkbox-inner,.ant-checkbox:hover .ant-checkbox-inner{border-color:#bbb}.ant-checkbox-inner{position:relative;top:0;left:0;display:inline-block;width:14px;height:14px;border:1px solid #d9d9d9;border-radius:3px;background-color:#fff;transition:all .3s}.ant-checkbox-inner:after{transform:rotate(45deg) scale(0);position:absolute;left:4px;top:1px;display:table;width:5px;height:8px;border:2px solid #fff;border-top:0;border-left:0;content:\" \";transition:all .1s cubic-bezier(.71,-.46,.88,.6)}.ant-checkbox-input{position:absolute;left:0;z-index:1;cursor:pointer;opacity:0;filter:alpha(opacity=0);top:0;bottom:0;right:0;width:100%;height:100%}.ant-checkbox-indeterminate .ant-checkbox-inner:after{content:\" \";transform:scale(1);position:absolute;left:2px;top:5px;width:8px;height:1px}.ant-checkbox-checked .ant-checkbox-inner:after{transform:rotate(45deg) scale(1);position:absolute;left:4px;top:1px;display:table;width:5px;height:8px;border:2px solid #fff;border-top:0;border-left:0;content:\" \";transition:all .2s cubic-bezier(.12,.4,.29,1.46) .1s}.ant-checkbox-checked .ant-checkbox-inner,.ant-checkbox-indeterminate .ant-checkbox-inner{border-color:#369be9;background-color:#369be9}.ant-checkbox-checked:hover .ant-checkbox-inner,.ant-checkbox-indeterminate:hover .ant-checkbox-inner,.ant-checkbox-wrapper:hover .ant-checkbox-checked .ant-checkbox-inner,.ant-checkbox-wrapper:hover .ant-checkbox-indeterminate .ant-checkbox-inner{border-color:#369be9}.ant-checkbox-disabled.ant-checkbox-checked .ant-checkbox-inner:after{animation-name:none;border-color:#ccc}.ant-checkbox-disabled .ant-checkbox-inner{border-color:#d9d9d9!important;background-color:#f3f3f3}.ant-checkbox-disabled .ant-checkbox-inner:after{animation-name:none;border-color:#f3f3f3}.ant-checkbox-disabled+span{color:#ccc;cursor:not-allowed}.ant-checkbox-wrapper{cursor:pointer;font-size:12px;display:inline-block}.ant-checkbox+span,.ant-checkbox-wrapper+span{padding-left:8px;padding-right:8px}.ant-checkbox-group{font-size:12px}.ant-checkbox-group-item{display:inline-block;margin-right:8px}@media \\0screen{.ant-checkbox-checked .ant-checkbox-inner:after,.ant-checkbox-checked .ant-checkbox-inner:before{font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E632\";font-weight:700;font-size:8px;border:0;color:#fff;left:2px;top:3px;position:absolute}}.ant-timeline{list-style:none;margin:0;padding:0}.ant-timeline-item{position:relative;padding:0 0 12px;list-style:none;margin:0}.ant-timeline-item-tail{position:absolute;left:5px;top:0;height:100%;border-left:2px solid #e9e9e9}.ant-timeline-item-pending .ant-timeline-item-tail{display:none}.ant-timeline-item-head{position:absolute;width:12px;height:12px;background-color:#fff;border-radius:100px;border:2px solid transparent}.ant-timeline-item-head-blue{border-color:#369be9;color:#369be9}.ant-timeline-item-head-red{border-color:#e95471;color:#e95471}.ant-timeline-item-head-green{border-color:#16c294;color:#16c294}.ant-timeline-item-head-custom{position:absolute;text-align:center;width:40px;left:-14px;line-height:1;margin-top:6px;border:0;height:auto;border-radius:0;padding:3px 0;font-size:12px;transform:translateY(-50%)}.ant-timeline-item-content{padding:0 0 10px 24px;font-size:12px;position:relative;top:-3px}.ant-timeline-item-last .ant-timeline-item-tail{border-left:2px dotted #e9e9e9;display:none}.ant-timeline-item-last .ant-timeline-item-content{min-height:48px}.ant-timeline.ant-timeline-pending .ant-timeline-item-last .ant-timeline-item-tail{display:block}.ant-tree-checkbox{white-space:nowrap;cursor:pointer;outline:none;display:inline-block;line-height:1;position:relative;vertical-align:middle}.ant-tree-checkbox-focused .ant-tree-checkbox-inner,.ant-tree-checkbox-wrapper:hover .ant-tree-checkbox .ant-tree-checkbox-inner,.ant-tree-checkbox:hover .ant-tree-checkbox-inner{border-color:#bbb}.ant-tree-checkbox-inner{position:relative;top:0;left:0;display:inline-block;width:14px;height:14px;border:1px solid #d9d9d9;border-radius:3px;background-color:#fff;transition:all .3s}.ant-tree-checkbox-inner:after{transform:rotate(45deg) scale(0);position:absolute;left:4px;top:1px;display:table;width:5px;height:8px;border:2px solid #fff;border-top:0;border-left:0;content:\" \";transition:all .1s cubic-bezier(.71,-.46,.88,.6)}.ant-tree-checkbox-input{position:absolute;left:0;z-index:1;cursor:pointer;opacity:0;filter:alpha(opacity=0);top:0;bottom:0;right:0;width:100%;height:100%}.ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner:after{content:\" \";transform:scale(1);position:absolute;left:2px;top:5px;width:8px;height:1px}.ant-tree-checkbox-checked .ant-tree-checkbox-inner:after{transform:rotate(45deg) scale(1);position:absolute;left:4px;top:1px;display:table;width:5px;height:8px;border:2px solid #fff;border-top:0;border-left:0;content:\" \";transition:all .2s cubic-bezier(.12,.4,.29,1.46) .1s}.ant-tree-checkbox-checked .ant-tree-checkbox-inner,.ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner{border-color:#369be9;background-color:#369be9}.ant-tree-checkbox-checked:hover .ant-tree-checkbox-inner,.ant-tree-checkbox-indeterminate:hover .ant-tree-checkbox-inner,.ant-tree-checkbox-wrapper:hover .ant-tree-checkbox-checked .ant-tree-checkbox-inner,.ant-tree-checkbox-wrapper:hover .ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner{border-color:#369be9}.ant-tree-checkbox-disabled.ant-tree-checkbox-checked .ant-tree-checkbox-inner:after{animation-name:none;border-color:#ccc}.ant-tree-checkbox-disabled .ant-tree-checkbox-inner{border-color:#d9d9d9!important;background-color:#f3f3f3}.ant-tree-checkbox-disabled .ant-tree-checkbox-inner:after{animation-name:none;border-color:#f3f3f3}.ant-tree-checkbox-disabled+span{color:#ccc;cursor:not-allowed}.ant-tree-checkbox-wrapper{cursor:pointer;font-size:12px;display:inline-block}.ant-tree-checkbox+span,.ant-tree-checkbox-wrapper+span{padding-left:8px;padding-right:8px}.ant-tree-checkbox-group{font-size:12px}.ant-tree-checkbox-group-item{display:inline-block;margin-right:8px}@media \\0screen{.ant-tree-checkbox-checked .ant-tree-checkbox-inner:after,.ant-tree-checkbox-checked .ant-tree-checkbox-inner:before{font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E632\";font-weight:700;font-size:8px;border:0;color:#fff;left:2px;top:3px;position:absolute}}.ant-tree{margin:0;padding:5px;font-size:12px}.ant-tree li{padding:0;margin:7px 0;list-style:none;white-space:nowrap;outline:0}.ant-tree li a[draggable=true],.ant-tree li a[draggable]{user-select:none;-khtml-user-drag:element;-webkit-user-drag:element}.ant-tree li.drag-over>a[draggable]{background-color:#369be9;color:#fff;opacity:.8}.ant-tree li.drag-over-gap-top>a[draggable]{border-top:2px solid #369be9}.ant-tree li.drag-over-gap-bottom>a[draggable]{border-bottom:2px solid #369be9}.ant-tree li.filter-node>a{color:#e95471!important;font-weight:700!important}.ant-tree li ul{margin:0;padding:0 0 0 18px}.ant-tree li a{display:inline-block;padding:1px 5px;border-radius:2px;margin:0;cursor:pointer;text-decoration:none;vertical-align:top;color:#666;transition:all .3s ease}.ant-tree li a:hover{background-color:#ebf5fd}.ant-tree li a.ant-tree-node-selected{background-color:#d7ebfb}.ant-tree li span.ant-tree-checkbox{margin:2px 4px 0 0}.ant-tree li span.ant-tree-iconEle,.ant-tree li span.ant-tree-switcher{margin:0;width:16px;height:16px;line-height:16px;display:inline-block;vertical-align:middle;border:0 none;cursor:pointer;outline:none}.ant-tree li span.ant-tree-icon_loading:after{display:inline-block;font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E6A1\";animation:loadingCircle 1s infinite linear;color:#369be9}.ant-tree li span.ant-tree-switcher.ant-tree-switcher-noop{cursor:auto}.ant-tree li span.ant-tree-switcher.ant-tree-bottom_open,.ant-tree li span.ant-tree-switcher.ant-tree-center_open,.ant-tree li span.ant-tree-switcher.ant-tree-noline_open,.ant-tree li span.ant-tree-switcher.ant-tree-roots_open{position:relative}.ant-tree li span.ant-tree-switcher.ant-tree-bottom_open:after,.ant-tree li span.ant-tree-switcher.ant-tree-center_open:after,.ant-tree li span.ant-tree-switcher.ant-tree-noline_open:after,.ant-tree li span.ant-tree-switcher.ant-tree-roots_open:after{font-size:12px;font-size:6px\\9;transform:scale(.5) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;display:inline-block;font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E606\";font-weight:700;position:absolute;top:0;right:4px;color:#666;transition:transform .3s ease}:root .ant-tree li span.ant-tree-switcher.ant-tree-bottom_open:after,:root .ant-tree li span.ant-tree-switcher.ant-tree-center_open:after,:root .ant-tree li span.ant-tree-switcher.ant-tree-noline_open:after,:root .ant-tree li span.ant-tree-switcher.ant-tree-roots_open:after{filter:none;font-size:12px}.ant-tree li span.ant-tree-switcher.ant-tree-bottom_close,.ant-tree li span.ant-tree-switcher.ant-tree-center_close,.ant-tree li span.ant-tree-switcher.ant-tree-noline_close,.ant-tree li span.ant-tree-switcher.ant-tree-roots_close{position:relative;-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\"}.ant-tree li span.ant-tree-switcher.ant-tree-bottom_close:after,.ant-tree li span.ant-tree-switcher.ant-tree-center_close:after,.ant-tree li span.ant-tree-switcher.ant-tree-noline_close:after,.ant-tree li span.ant-tree-switcher.ant-tree-roots_close:after{font-size:12px;font-size:6px\\9;transform:scale(.5) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;display:inline-block;font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E606\";font-weight:700;position:absolute;top:0;right:4px;color:#666;transition:transform .3s ease}:root .ant-tree li span.ant-tree-switcher.ant-tree-bottom_close:after,:root .ant-tree li span.ant-tree-switcher.ant-tree-center_close:after,:root .ant-tree li span.ant-tree-switcher.ant-tree-noline_close:after,:root .ant-tree li span.ant-tree-switcher.ant-tree-roots_close:after{filter:none;font-size:12px}.ant-tree li span.ant-tree-switcher.ant-tree-bottom_close:after,.ant-tree li span.ant-tree-switcher.ant-tree-center_close:after,.ant-tree li span.ant-tree-switcher.ant-tree-noline_close:after,.ant-tree li span.ant-tree-switcher.ant-tree-roots_close:after{transform:rotate(270deg) scale(.5)}.ant-tree-child-tree{display:none}.ant-tree-child-tree-open{display:block}.ant-tree-treenode-disabled>a,.ant-tree-treenode-disabled>a span,.ant-tree-treenode-disabled>span{color:#ccc;cursor:not-allowed}.ant-tree-icon__close,.ant-tree-icon__open{margin-right:2px;vertical-align:top}fieldset{margin:0;min-width:0}fieldset,legend{padding:0;border:0}legend{display:block;width:100%;margin-bottom:20px;font-size:14px;line-height:inherit;color:#999;border-bottom:1px solid #d9d9d9}label{font-size:12px}input[type=search]{box-sizing:border-box}input[type=checkbox],input[type=radio]{line-height:normal}input[type=file]{display:block}input[type=range]{display:block;width:100%}select[multiple],select[size]{height:auto}input[type=checkbox]:focus,input[type=file]:focus,input[type=radio]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}output{display:block;padding-top:15px;font-size:12px;line-height:1.5;color:#333}label{position:relative}label>.anticon{vertical-align:top;font-size:12px}.ant-form-item-required:before{display:inline-block;margin-right:4px;content:\"*\";font-family:SimSun;font-size:12px;color:#f50}.ant-checkbox-inline.disabled,.ant-checkbox-vertical.disabled,.ant-checkbox.disabled label,.ant-radio-inline.disabled,.ant-radio-vertical.disabled,.ant-radio.disabled label,input[type=checkbox].disabled,input[type=checkbox][disabled],input[type=radio].disabled,input[type=radio][disabled]{cursor:not-allowed}.ant-form-item{font-size:12px;margin-bottom:24px;color:#666;vertical-align:top}.ant-form-item :not(.ant-form)>.ant-form-item,.ant-form-item>.ant-form-item{margin-bottom:-24px}.ant-form-item-control{line-height:32px;position:relative;zoom:1}.ant-form-item-control:after,.ant-form-item-control:before{content:\" \";display:table}.ant-form-item-control:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-form-item-with-help{margin-bottom:6px}.ant-form-item-label{text-align:right;vertical-align:middle;padding:7px 0;display:inline-block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ant-form-item-label label{color:#333}.ant-form-item-label label:after{content:\":\";margin:0 8px 0 2px;position:relative;top:-.5px}.ant-form-item .ant-switch{margin:4px 0}.ant-form-item-no-colon .ant-form-item-label label:after{content:\" \"}.ant-form-explain{line-height:1.5}.ant-form-explain,.ant-form-extra{color:#999}.ant-form-text{display:inline-block;padding-right:8px}.ant-form-split{display:block;text-align:center}form .has-feedback .ant-input{padding-right:24px}form textarea.ant-input{height:auto}form .ant-upload{background:transparent}form input[type=checkbox],form input[type=radio]{width:14px;height:14px}form .ant-checkbox-inline,form .ant-radio-inline{display:inline-block;vertical-align:middle;font-weight:400;cursor:pointer;margin-left:8px}form .ant-checkbox-inline:first-child,form .ant-radio-inline:first-child{margin-left:0}form .ant-checkbox-vertical,form .ant-radio-vertical{display:block}form .ant-checkbox-vertical+.ant-checkbox-vertical,form .ant-radio-vertical+.ant-radio-vertical{margin-left:0}form .ant-input-number{margin-top:-1px;margin-right:8px}form .ant-cascader-picker,form .ant-select{width:100%}.ant-input-group-wrap .ant-select-selection{border-bottom-left-radius:0;border-top-left-radius:0}.ant-input-group-wrap .ant-select-selection:hover{border-color:#d9d9d9}.ant-input-group-wrap .ant-select-selection--single{margin-left:-1px;height:32px;background-color:#eee}.ant-input-group-wrap .ant-select-selection--single .ant-select-selection__rendered{padding-left:8px;padding-right:25px;line-height:30px}.ant-input-group-wrap .ant-select-open .ant-select-selection{border-color:#d9d9d9;box-shadow:none}.ant-form-horizontal .ant-form-item{position:relative;margin-left:0;margin-right:0;height:auto;zoom:1}.ant-form-horizontal .ant-form-item:after,.ant-form-horizontal .ant-form-item:before{content:\" \";display:table}.ant-form-horizontal .ant-form-item:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-form-horizontal .ant-checkbox-inline,.ant-form-horizontal .ant-radio-inline{vertical-align:baseline}.ant-form-vertical .ant-form-item-label{padding:0 0 8px}.ant-form-vertical .ant-form-item-label label:after{content:\"\"}.ant-form-inline .ant-form-item{display:inline-block;margin-right:10px;margin-bottom:0}.ant-form-inline .ant-form-item-with-help{margin-bottom:24px}.ant-form-inline .ant-form-item>div,.ant-form-inline .ant-form-text,.ant-form-inline .has-feedback{display:inline-block}.ant-form-inline .ant-form-explain{position:absolute}.ant-form-horizontal label>input[type=checkbox],.ant-form-horizontal label>input[type=radio],.ant-form-inline label>input[type=checkbox],.ant-form-inline label>input[type=radio]{margin-right:4px}.has-error.has-feedback:after,.has-success.has-feedback:after,.has-warning.has-feedback:after,.is-validating.has-feedback:after{position:absolute;top:0;right:0;visibility:visible;width:32px;height:32px;line-height:32px;text-align:center;font-size:14px;animation:zoomIn .3s cubic-bezier(.12,.4,.29,1.46);font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\"}.has-success.has-feedback:after{animation-name:diffZoomIn1!important}.has-error.has-feedback:after{animation-name:diffZoomIn2!important}.has-warning.has-feedback:after{animation-name:diffZoomIn3!important}.has-success .ant-input{border-color:#d9d9d9;box-shadow:none}.has-success.has-feedback:after{content:\"\\E630\";color:#16c294}.has-warning .ant-form-explain,.has-warning .ant-form-split{color:#fa0}.has-warning .ant-input,.has-warning .ant-input:focus,.has-warning .ant-input:hover{border-color:#fa0;border-color:#fb3;outline:0;box-shadow:0 0 0 2px rgba(255,170,0,.2)}.has-warning .ant-input:not([disabled]):hover{border-color:#fa0}.has-warning .ant-calendar-picker-open .ant-calendar-picker-input{border-color:#fb3;outline:0;box-shadow:0 0 0 2px rgba(255,170,0,.2)}.has-warning .ant-input-group-addon{color:#fa0;border-color:#fa0;background-color:#fff}.has-warning .has-feedback{color:#fa0}.has-warning.has-feedback:after{content:\"\\E62C\";color:#fa0}.has-warning .ant-select-selection{border-color:#fa0;border-color:#fb3;outline:0;box-shadow:0 0 0 2px rgba(255,170,0,.2)}.has-warning .ant-calendar-picker-icon:after,.has-warning .ant-select-arrow,.has-warning .ant-time-picker-icon:after{color:#fa0}.has-warning .ant-input-number,.has-warning .ant-time-picker-input{border-color:#fa0;border-color:#fb3;outline:0;box-shadow:0 0 0 2px rgba(255,170,0,.2)}.has-warning .ant-input-number:not([disabled]):hover,.has-warning .ant-time-picker-input:not([disabled]):hover{border-color:#fa0}.has-error .ant-form-explain,.has-error .ant-form-split{color:#e95471}.has-error .ant-input,.has-error .ant-input:focus,.has-error .ant-input:hover{border-color:#e95471;border-color:#ed768d;outline:0;box-shadow:0 0 0 2px rgba(233,84,113,.2)}.has-error .ant-input:not([disabled]):hover{border-color:#e95471}.has-error .ant-calendar-picker-open .ant-calendar-picker-input{border-color:#ed768d;outline:0;box-shadow:0 0 0 2px rgba(233,84,113,.2)}.has-error .ant-input-group-addon{color:#e95471;border-color:#e95471;background-color:#fff}.has-error .has-feedback{color:#e95471}.has-error.has-feedback:after{content:\"\\E62E\";color:#e95471}.has-error .ant-select-selection{border-color:#e95471;border-color:#ed768d;outline:0;box-shadow:0 0 0 2px rgba(233,84,113,.2)}.has-error .ant-calendar-picker-icon:after,.has-error .ant-picker-icon:after,.has-error .ant-select-arrow{color:#e95471}.has-error .ant-input-number,.has-error .ant-time-picker-input{border-color:#e95471;border-color:#ed768d;outline:0;box-shadow:0 0 0 2px rgba(233,84,113,.2)}.has-error .ant-input-number:not([disabled]):hover,.has-error .ant-time-picker-input:not([disabled]):hover{border-color:#e95471}.has-error .ant-mention-wrapper.active .ant-mention-editor,.has-error .ant-mention-wrapper.active .ant-mention-editor:not([disabled]):focus,.has-error .ant-mention-wrapper.active .ant-mention-editor:not([disabled]):hover,.has-error .ant-mention-wrapper .ant-mention-editor,.has-error .ant-mention-wrapper .ant-mention-editor:not([disabled]):focus,.has-error .ant-mention-wrapper .ant-mention-editor:not([disabled]):hover{border-color:#e95471;border-color:#ed768d;outline:0;box-shadow:0 0 0 2px rgba(233,84,113,.2)}.is-validating.has-feedback:after{display:inline-block;animation:loadingCircle 1s infinite linear;content:\"\\E6AE\";color:#999}.ant-advanced-search-form .ant-form-item{margin-bottom:16px}.ant-advanced-search-form .ant-input,.ant-advanced-search-form .ant-input-group .ant-input,.ant-advanced-search-form .ant-input-group .ant-input-group-addon{height:28px}@keyframes diffZoomIn1{0%{transform:scale(0)}to{transform:scale(1)}}@keyframes diffZoomIn2{0%{transform:scale(0)}to{transform:scale(1)}}@keyframes diffZoomIn3{0%{transform:scale(0)}to{transform:scale(1)}}.ant-time-picker-panel{max-width:168px;z-index:1050;position:absolute}.ant-time-picker-panel-inner{display:inline-block;position:relative;outline:none;list-style:none;font-size:12px;text-align:left;background-color:#fff;border-radius:4px;box-shadow:0 1px 6px rgba(0,0,0,.2);background-clip:padding-box;line-height:1.5;overflow:hidden;left:-2px}.ant-time-picker-panel-input{margin:0;padding:0;border:0;width:100%;cursor:auto;line-height:1.5;outline:0}.ant-time-picker-panel-input-wrap{box-sizing:border-box;position:relative;padding:6px;border-bottom:1px solid #e9e9e9}.ant-time-picker-panel-input-invalid{border-color:red}.ant-time-picker-panel-clear-btn{position:absolute;right:5px;cursor:pointer;overflow:hidden;width:20px;height:20px;text-align:center;line-height:20px;top:5px;margin:0}.ant-time-picker-panel-clear-btn:after{font-size:12px;color:#ccc;display:inline-block;line-height:1;width:20px;transition:color .3s ease;font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E62E\"}.ant-time-picker-panel-clear-btn:hover:after{color:#999}.ant-time-picker-panel-narrow .ant-time-picker-panel-input-wrap{max-width:111px}.ant-time-picker-panel-select{float:left;font-size:12px;border:1px solid #e9e9e9;border-width:0 1px;margin-left:-1px;box-sizing:border-box;width:56px;overflow:hidden;position:relative}.ant-time-picker-panel-select:hover{overflow-y:auto}.ant-time-picker-panel-select:first-child{border-left:0;margin-left:0}.ant-time-picker-panel-select:last-child{border-right:0}.ant-time-picker-panel-select ul{list-style:none;box-sizing:border-box;margin:0;padding:0;width:100%;max-height:144px}.ant-time-picker-panel-select li{list-style:none;box-sizing:content-box;margin:0;padding:0 0 0 16px;width:100%;height:24px;line-height:24px;text-align:left;cursor:pointer;user-select:none;transition:background .3s ease}.ant-time-picker-panel-select li:last-child:after{content:\"\";height:120px;display:block}.ant-time-picker-panel-select li:hover{background:#ebf5fd}li.ant-time-picker-panel-select-option-selected{background:#f7f7f7;font-weight:700}li.ant-time-picker-panel-select-option-disabled{color:rgba(0,0,0,.25)}li.ant-time-picker-panel-select-option-disabled:hover{background:transparent;cursor:not-allowed}.ant-time-picker-panel.slide-up-appear.slide-up-appear-active.ant-time-picker-panel-placement-topLeft,.ant-time-picker-panel.slide-up-appear.slide-up-appear-active.ant-time-picker-panel-placement-topRight,.ant-time-picker-panel.slide-up-enter.slide-up-enter-active.ant-time-picker-panel-placement-topLeft,.ant-time-picker-panel.slide-up-enter.slide-up-enter-active.ant-time-picker-panel-placement-topRight{animation-name:antSlideDownIn}.ant-time-picker-panel.slide-up-appear.slide-up-appear-active.ant-time-picker-panel-placement-bottomLeft,.ant-time-picker-panel.slide-up-appear.slide-up-appear-active.ant-time-picker-panel-placement-bottomRight,.ant-time-picker-panel.slide-up-enter.slide-up-enter-active.ant-time-picker-panel-placement-bottomLeft,.ant-time-picker-panel.slide-up-enter.slide-up-enter-active.ant-time-picker-panel-placement-bottomRight{animation-name:antSlideUpIn}.ant-time-picker-panel.slide-up-leave.slide-up-leave-active.ant-time-picker-panel-placement-topLeft,.ant-time-picker-panel.slide-up-leave.slide-up-leave-active.ant-time-picker-panel-placement-topRight{animation-name:antSlideDownOut}.ant-time-picker-panel.slide-up-leave.slide-up-leave-active.ant-time-picker-panel-placement-bottomLeft,.ant-time-picker-panel.slide-up-leave.slide-up-leave-active.ant-time-picker-panel-placement-bottomRight{animation-name:antSlideUpOut}.ant-time-picker{outline:none;transition:opacity .3s ease}.ant-time-picker,.ant-time-picker-input{position:relative;display:inline-block;font-size:12px}.ant-time-picker-input{padding:4px 7px;width:100%;height:28px;cursor:text;line-height:1.5;color:#333;background-color:#fff;background-image:none;border:1px solid #d9d9d9;border-radius:4px;transition:all .3s;width:100px}.ant-time-picker-input::-moz-placeholder{color:#ccc;opacity:1}.ant-time-picker-input:-ms-input-placeholder{color:#ccc}.ant-time-picker-input::-webkit-input-placeholder{color:#ccc}.ant-time-picker-input:hover{border-color:#5eafed}.ant-time-picker-input:focus{border-color:#5eafed;outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-time-picker-input[disabled]{background-color:#f7f7f7;opacity:1;cursor:not-allowed;color:#ccc}.ant-time-picker-input[disabled]:hover{border-color:#e1e1e1}textarea.ant-time-picker-input{max-width:100%;height:auto;vertical-align:bottom}.ant-time-picker-input-lg{padding:6px 7px;height:32px}.ant-time-picker-input-sm{padding:1px 7px;height:22px;border-radius:2px}.ant-time-picker-large .ant-time-picker-input{padding:6px 7px;height:32px}.ant-time-picker-small .ant-time-picker-input{padding:1px 7px;height:22px;border-radius:2px}.ant-time-picker-open{opacity:0}.ant-time-picker-icon{position:absolute;user-select:none;transition:all .3s cubic-bezier(.645,.045,.355,1);width:12px;height:12px;line-height:12px;right:8px;color:#999;top:50%;margin-top:-6px}.ant-time-picker-icon:after{content:\"\\E641\";font-family:anticon;font-size:12px;color:#999;display:inline-block;line-height:1;vertical-align:bottom}.ant-table{font-size:12px;color:#333;position:relative;border-radius:4px 4px 0 0;overflow:hidden}.ant-table-content{overflow:auto}.ant-table-body{transition:opacity .3s ease}.ant-table table{min-width:100%;width:auto;border-collapse:separate;border-spacing:0;text-align:left;border-radius:4px 4px 0 0;overflow:hidden}.ant-table-thead>tr>th{background:#f7f7f7;font-weight:700;transition:background .3s ease;text-align:left;white-space:nowrap}.ant-table-thead>tr>th .anticon-filter{margin-left:4px;display:inline-block;font-size:12px;font-size:10px\\9;transform:scale(.83333333) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;cursor:pointer;color:#aaa;transition:all .3s ease}:root .ant-table-thead>tr>th .anticon-filter{filter:none;font-size:12px}.ant-table-thead>tr>th .anticon-filter:hover{color:#666}.ant-table-thead>tr>th .ant-table-filter-selected.anticon-filter{color:#369be9}.ant-table-tbody>tr>td{border-bottom:1px solid #e9e9e9}.ant-table-tbody>tr,.ant-table-thead>tr{transition:all .3s ease}.ant-table-tbody>tr.ant-table-row-hover,.ant-table-tbody>tr:hover,.ant-table-thead>tr.ant-table-row-hover,.ant-table-thead>tr:hover{background:#ebf5fd}.ant-table-thead>tr:hover{background:none}.ant-table-footer{padding:8px;background:#f7f7f7;position:relative;top:-1px;border-radius:0 0 4px 4px}.ant-table-footer .ant-table-description{line-height:30px}.ant-table.ant-table-bordered .ant-table-footer{border:1px solid #e9e9e9}.ant-table-title{padding:16px 8px;position:relative;top:1px;border-radius:4px 4px 0 0}.ant-table.ant-table-bordered .ant-table-title{border:1px solid #e9e9e9}.ant-table-title+.ant-table-content{position:relative}.ant-table-title+.ant-table-content table{border-top-left-radius:0;border-top-right-radius:0}.ant-table-tbody>tr.ant-table-row-selected{background:#fafafa}.ant-table-thead>tr>th.ant-table-column-sort{background:#eaeaea}.ant-table-tbody>tr>td,.ant-table-thead>tr>th{padding:16px 8px;word-break:keep-all;white-space:nowrap}.ant-table-tbody>tr>td.ant-table-selection-column,.ant-table-thead>tr>th.ant-table-selection-column{text-align:center;width:60px}.ant-table-header{background:#f7f7f7;overflow:hidden;height:42px}.ant-table-header,.ant-table-header table{border-radius:4px 4px 0 0}.ant-table-loading{position:relative}.ant-table-loading .ant-table-body{background:#fff;opacity:.5}.ant-table-loading .ant-table-spin-holder{height:20px;line-height:20px;left:50%;top:50%;margin-left:-30px;position:absolute}.ant-table-loading .ant-table-with-pagination{margin-top:-20px}.ant-table-loading .ant-table-without-pagination{margin-top:10px}.ant-table-middle .ant-table-tbody>tr>td,.ant-table-middle .ant-table-thead>tr>th{padding:10px 8px}.ant-table-small{border:1px solid #e9e9e9;border-radius:4px}.ant-table-small .ant-table-body>table{border:0;padding:0 8px}.ant-table-small.ant-table-bordered .ant-table-body>table{border:0}.ant-table-small .ant-table-thead>tr>th{padding:10px 8px;background:#fff;border-bottom:1px solid #e9e9e9}.ant-table-small .ant-table-tbody>tr>td{padding:6px 8px}.ant-table-small .ant-table-header{background:#fff}.ant-table-small .ant-table-header table{border-bottom:1px solid #e9e9e9}.ant-table-small .ant-table-header .ant-table-thead>tr>th,.ant-table-small .ant-table-row:last-child td{border-bottom:0}.ant-table-column-sorter{margin-left:4px;display:inline-block;width:12px;height:15px;vertical-align:middle;text-align:center}.ant-table-column-sorter-down,.ant-table-column-sorter-up{line-height:4px;height:6px;display:block;width:12px;cursor:pointer}.ant-table-column-sorter-down:hover .anticon,.ant-table-column-sorter-up:hover .anticon{color:#666}.ant-table-column-sorter-down.on .anticon-caret-down,.ant-table-column-sorter-down.on .anticon-caret-up,.ant-table-column-sorter-up.on .anticon-caret-down,.ant-table-column-sorter-up.on .anticon-caret-up{color:#369be9}.ant-table-column-sorter .anticon-caret-down,.ant-table-column-sorter .anticon-caret-up{display:inline-block;font-size:12px;font-size:6px\\9;transform:scale(.5) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;line-height:6px;height:6px;color:#aaa}:root .ant-table-column-sorter .anticon-caret-down,:root .ant-table-column-sorter .anticon-caret-up{filter:none;font-size:12px}.ant-table-column-sorter .anticon-caret-down:before,.ant-table-column-sorter .anticon-caret-up:before{-moz-transform-origin:53% 50%}.ant-table-bordered .ant-table-content{border:1px solid #e9e9e9}.ant-table-bordered .ant-table-body table{border-bottom:1px solid #e9e9e9}.ant-table-bordered.ant-table-fixed-header{border:1px solid #e9e9e9}.ant-table-bordered.ant-table-fixed-header table{border:0}.ant-table-bordered.ant-table-fixed-header .ant-table-fixed-left{border-right:1px solid #e9e9e9}.ant-table-bordered.ant-table-fixed-header .ant-table-fixed-right{border-left:1px solid #e9e9e9}.ant-table-bordered .ant-table-thead>tr>th{border-bottom:1px solid #e9e9e9}.ant-table-bordered .ant-table-tbody tr:last-child>td,.ant-table-bordered .ant-table-tbody tr:last-child>th{border-bottom:0}.ant-table-bordered .ant-table-tbody>tr>td,.ant-table-bordered .ant-table-thead>tr>th{border-right:1px solid #e9e9e9}.ant-table-bordered .ant-table-tbody>tr>td:last-child,.ant-table-bordered .ant-table-thead>tr>th:last-child{border-right:0}.ant-table-placeholder{height:65px;line-height:65px;text-align:center;font-size:12px;color:#999}.ant-table-placeholder .anticon{margin-right:4px}.ant-table-pagination{position:absolute;right:0}.ant-table-filter-dropdown{min-width:96px;margin-left:-8px;background:#fff;border-radius:4px;border:1px solid #d9d9d9;box-shadow:0 1px 6px rgba(0,0,0,.2)}.ant-table-filter-dropdown .ant-dropdown-menu{border:0;box-shadow:none;border-radius:4px 4px 0 0}.ant-table-filter-dropdown .ant-dropdown-menu-item>label+span{margin-left:8px}.ant-table-filter-dropdown .ant-dropdown-menu-sub{border-radius:4px;border:1px solid #d9d9d9;box-shadow:0 1px 6px rgba(0,0,0,.2)}.ant-table-filter-dropdown .ant-dropdown-menu .ant-dropdown-submenu-contain-selected .ant-dropdown-menu-submenu-title:after{color:#369be9;font-weight:700;text-shadow:0 0 2px #d7ebfb}.ant-table-filter-dropdown .ant-dropdown-menu-item{overflow:hidden}.ant-table-filter-dropdown>.ant-dropdown-menu>.ant-dropdown-menu-item:last-child,.ant-table-filter-dropdown>.ant-dropdown-menu>.ant-dropdown-menu-submenu:last-child .ant-dropdown-menu-submenu-title{border-radius:0}.ant-table-filter-dropdown-btns{overflow:hidden;padding:7px 15px;border-top:1px solid #e9e9e9}.ant-table-filter-dropdown-link{color:#369be9}.ant-table-filter-dropdown-link:hover{color:#66b3ee}.ant-table-filter-dropdown-link:active{color:#2c83cd}.ant-table-filter-dropdown-link.confirm{float:left}.ant-table-filter-dropdown-link.clear{float:right}.ant-table-expand-icon-th{width:34px}.ant-table-row-expand-icon{cursor:pointer;display:inline-block;width:17px;height:17px;text-align:center;line-height:14px;border:1px solid #e9e9e9;user-select:none;background:#fff}.ant-table-row-expand-icon-cell{width:18px}.ant-table-row-expanded:after{content:\"-\"}.ant-table-row-collapsed:after{content:\"+\"}.ant-table-row-spaced{visibility:hidden}.ant-table-row-spaced:after{content:\".\"}.ant-table-row[class*=ant-table-row-level-0] .ant-table-selection-column>span{display:inline-block}tr.ant-table-expanded-row,tr.ant-table-expanded-row:hover{background:#fbfbfb}.ant-table .ant-table-row-indent+.ant-table-row-expand-icon{margin-right:3px}.ant-table-scroll{overflow:hidden!important}.ant-table-scroll .ant-table-header{position:relative;z-index:99;width:100%}.ant-table-scroll .ant-table-body{margin-top:-42px;overflow:scroll}.ant-table-scroll table{width:auto;min-width:100%}.ant-table-body-inner{height:100%}.ant-table-fixed-header .ant-table-body{position:relative;background:#fff}.ant-table-fixed-header .ant-table-body-inner{overflow:scroll}.ant-table-fixed-header .ant-table-scroll .ant-table-header{overflow:scroll;padding-bottom:20px;margin-bottom:-20px}.ant-table-fixed-left,.ant-table-fixed-right{position:absolute;top:0;overflow:hidden;z-index:1;transition:box-shadow .3s ease;border-radius:0}.ant-table-fixed-left table,.ant-table-fixed-right table{width:auto;background:#fff}.ant-table-fixed-header .ant-table-fixed-left .ant-table-body-outer .ant-table-fixed,.ant-table-fixed-header .ant-table-fixed-right .ant-table-body-outer .ant-table-fixed{border-radius:0}.ant-table-fixed-left{left:0;box-shadow:1px 0 6px rgba(0,0,0,.2)}.ant-table-fixed-left .ant-table-header{overflow-y:hidden}.ant-table-fixed-left .ant-table-body-inner{margin-right:-20px;padding-right:20px}.ant-table-fixed-header .ant-table-fixed-left .ant-table-body-inner{padding-right:0}.ant-table-fixed-left,.ant-table-fixed-left table{border-radius:4px 0 0 0}.ant-table-fixed-right{right:0;box-shadow:-1px 0 6px rgba(0,0,0,.2)}.ant-table-fixed-right,.ant-table-fixed-right table{border-radius:0 4px 0 0}.ant-table-fixed-right .ant-table-expanded-row{color:transparent;pointer-events:none}.ant-table.ant-table-scroll-position-left .ant-table-fixed-left,.ant-table.ant-table-scroll-position-right .ant-table-fixed-right{box-shadow:none}.ant-table-column-hidden{display:none}.ant-table-thead>tr>th.ant-table-column-has-prev{position:relative}.ant-table-tbody>tr>td.ant-table-column-has-prev,.ant-table-thead>tr>th.ant-table-column-has-prev{padding-left:24px}.ant-table-next-columns-page,.ant-table-prev-columns-page{cursor:pointer;color:#666;z-index:1}.ant-table-next-columns-page:hover,.ant-table-prev-columns-page:hover{color:#369be9}.ant-table-next-columns-page-disabled,.ant-table-prev-columns-page-disabled{cursor:not-allowed;color:#bbb}.ant-table-next-columns-page-disabled:hover,.ant-table-prev-columns-page-disabled:hover{color:#bbb}.ant-table-prev-columns-page{position:absolute;left:8px}.ant-table-prev-columns-page:before{content:\"\\E601\";display:inline-block;font-size:12px;font-size:9px\\9;transform:scale(.75) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;font-weight:700;font-family:anticon}:root .ant-table-prev-columns-page:before{filter:none;font-size:12px}.ant-table-next-columns-page{float:right;margin-left:8px}.ant-table-next-columns-page:before{content:\"\\E600\";display:inline-block;font-size:12px;font-size:9px\\9;transform:scale(.75) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;font-weight:700;font-family:anticon}:root .ant-table-next-columns-page:before{filter:none;font-size:12px}.ant-carousel .slick-slider{position:relative;display:block;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-touch-callout:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.ant-carousel .slick-list{position:relative;overflow:hidden;display:block;margin:0;padding:0}.ant-carousel .slick-list:focus{outline:none}.ant-carousel .slick-list.dragging{cursor:pointer;cursor:hand}.ant-carousel .slick-slider .slick-list,.ant-carousel .slick-slider .slick-track{transform:translateZ(0)}.ant-carousel .slick-track{position:relative;left:0;top:0;display:block}.ant-carousel .slick-track:after,.ant-carousel .slick-track:before{content:\"\";display:table}.ant-carousel .slick-track:after{clear:both}.slick-loading .ant-carousel .slick-track{visibility:hidden}.ant-carousel .slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .ant-carousel .slick-slide{float:right}.ant-carousel .slick-slide img{display:block}.ant-carousel .slick-slide.slick-loading img{display:none}.ant-carousel .slick-slide.dragging img{pointer-events:none}.ant-carousel .slick-initialized .slick-slide{display:block}.ant-carousel .slick-loading .slick-slide{visibility:hidden}.ant-carousel .slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.ant-carousel .slick-arrow.slick-hidden{display:none}.ant-carousel .slick-next,.ant-carousel .slick-prev{position:absolute;display:block;height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;top:50%;margin-top:-10px;padding:0;border:0}.ant-carousel .slick-next,.ant-carousel .slick-next:focus,.ant-carousel .slick-next:hover,.ant-carousel .slick-prev,.ant-carousel .slick-prev:focus,.ant-carousel .slick-prev:hover{background:transparent;color:transparent;outline:none}.ant-carousel .slick-next:focus:before,.ant-carousel .slick-next:hover:before,.ant-carousel .slick-prev:focus:before,.ant-carousel .slick-prev:hover:before{opacity:1}.ant-carousel .slick-next.slick-disabled:before,.ant-carousel .slick-prev.slick-disabled:before{opacity:.25}.ant-carousel .slick-prev{left:-25px}.ant-carousel .slick-prev:before{content:\"\\2190\"}.ant-carousel .slick-next{right:-25px}.ant-carousel .slick-next:before{content:\"\\2192\"}.ant-carousel .slick-slider{padding-bottom:45px}.ant-carousel .slick-dots{position:absolute;bottom:0;list-style:none;display:block;text-align:center;padding:0;width:100%}.ant-carousel .slick-dots li{position:relative;display:inline-block;height:20px;width:20px;margin:0 5px;padding:0;cursor:pointer}.ant-carousel .slick-dots li button{border:0;background:transparent;display:block;height:20px;width:20px;outline:none;line-height:0;font-size:0;color:transparent;padding:5px;cursor:pointer}.ant-carousel .slick-dots li button:focus,.ant-carousel .slick-dots li button:hover{outline:none}.ant-carousel .slick-dots li button:focus:before,.ant-carousel .slick-dots li button:hover:before{opacity:1}.ant-carousel .slick-dots li button:before{position:absolute;top:0;left:0;content:\"\\2022\";width:20px;height:20px;font-size:18px;font-family:arial,sans-serif;line-height:20px;text-align:center;color:gray;transition:all .3s;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.ant-carousel .slick-dots li.slick-active button:before{color:#000;opacity:.75}.ant-carousel-vertical .slick-slider{padding-bottom:0}.ant-carousel-vertical .slick-dots{width:20px;bottom:auto;right:-35px;top:0}.ant-cascader{font-size:12px}.ant-cascader-input.ant-input{background-color:transparent;display:block;cursor:pointer;width:100%;z-index:1}.ant-cascader-picker{position:relative;display:inline-block;cursor:pointer;vertical-align:middle;font-size:12px;background-color:#fff;border-radius:4px}.ant-cascader-picker-with-value .ant-cascader-picker-label{color:transparent}.ant-cascader-picker-disabled,.ant-cascader-picker-disabled .ant-cascader-input{cursor:not-allowed}.ant-cascader-picker-label{position:absolute;left:0;height:20px;line-height:20px;top:50%;margin-top:-10px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;width:100%;padding:0 12px 0 8px}.ant-cascader-picker-clear{opacity:0;position:absolute;right:8px;z-index:2;background:#fff;top:50%;font-size:12px;color:#ccc;width:12px;height:12px;margin-top:-6px;line-height:12px;cursor:pointer;transition:color .3s ease,opacity .15s ease}.ant-cascader-picker-clear:hover{color:rgba(0,0,0,.43)}.ant-cascader-picker:hover .ant-cascader-picker-clear{opacity:1}.ant-cascader-picker-arrow{position:absolute;z-index:1;top:50%;right:8px;width:12px;height:12px;margin-top:-6px;line-height:12px;color:rgba(0,0,0,.43);display:inline-block;font-size:12px;font-size:9px\\9;transform:scale(.75) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1}:root .ant-cascader-picker-arrow{filter:none;font-size:12px}.ant-cascader-picker-arrow:before{transition:transform .2s ease}.ant-cascader-picker-arrow.ant-cascader-picker-arrow-expand{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\"}.ant-cascader-picker-arrow.ant-cascader-picker-arrow-expand:before{transform:rotate(180deg)}.ant-cascader-menus{font-size:12px;background:#fff;position:absolute;z-index:1050;border-radius:4px;box-shadow:0 1px 6px rgba(0,0,0,.2);white-space:nowrap}.ant-cascader-menus-empty,.ant-cascader-menus-hidden{display:none}.ant-cascader-menus.slide-up-appear.slide-up-appear-active.ant-cascader-menus-placement-bottomLeft,.ant-cascader-menus.slide-up-enter.slide-up-enter-active.ant-cascader-menus-placement-bottomLeft{animation-name:antSlideUpIn}.ant-cascader-menus.slide-up-appear.slide-up-appear-active.ant-cascader-menus-placement-topLeft,.ant-cascader-menus.slide-up-enter.slide-up-enter-active.ant-cascader-menus-placement-topLeft{animation-name:antSlideDownIn}.ant-cascader-menus.slide-up-leave.slide-up-leave-active.ant-cascader-menus-placement-bottomLeft{animation-name:antSlideUpOut}.ant-cascader-menus.slide-up-leave.slide-up-leave-active.ant-cascader-menus-placement-topLeft{animation-name:antSlideDownOut}.ant-cascader-menu{display:inline-block;vertical-align:top;min-width:111px;height:180px;list-style:none;margin:0;padding:0;border-right:1px solid #e9e9e9;overflow:auto}.ant-cascader-menu:first-child{border-radius:4px 0 0 4px}.ant-cascader-menu:last-child{border-right-color:transparent;margin-right:-1px;border-radius:0 4px 4px 0}.ant-cascader-menu:only-child{border-radius:4px}.ant-cascader-menu-item{padding:7px 26px 7px 16px;cursor:pointer;white-space:nowrap;transition:all .3s ease}.ant-cascader-menu-item:hover{background:#ebf5fd}.ant-cascader-menu-item-disabled{cursor:not-allowed;color:#ccc}.ant-cascader-menu-item-disabled:hover{background:transparent}.ant-cascader-menu-item-active:not(.ant-cascader-menu-item-disabled),.ant-cascader-menu-item-active:not(.ant-cascader-menu-item-disabled):hover{background-color:#f7f7f7;font-weight:700}.ant-cascader-menu-item-expand{position:relative}.ant-cascader-menu-item-expand:after{font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E61F\";display:inline-block;font-size:12px;font-size:8px\\9;transform:scale(.66666667) rotate(0deg);-ms-filter:\"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=1, M12=0, M21=0, M22=1)\";zoom:1;color:rgba(0,0,0,.43);position:absolute;right:15px}:root .ant-cascader-menu-item-expand:after{filter:none;font-size:12px}.ant-cascader-menu-item .ant-cascader-menu-item-keyword{color:#f50}fieldset[disabled] .multiselect{pointer-events:none}.multiselect__spinner{position:absolute;right:1px;top:1px;width:48px;height:35px;background:#fff;display:block}.multiselect__spinner:after,.multiselect__spinner:before{position:absolute;content:\"\";top:50%;left:50%;margin:-8px 0 0 -8px;width:16px;height:16px;border-radius:100%;border-color:#41b883 transparent transparent;border-style:solid;border-width:2px;box-shadow:0 0 0 1px transparent}.multiselect__spinner:before{animation:spinning 2.4s cubic-bezier(.41,.26,.2,.62);animation-iteration-count:infinite}.multiselect__spinner:after{animation:spinning 2.4s cubic-bezier(.51,.09,.21,.8);animation-iteration-count:infinite}.multiselect__loading-transition{transition:opacity .4s ease-in-out;opacity:1}.multiselect__loading-enter,.multiselect__loading-leave{opacity:0}.multiselect,.multiselect__input,.multiselect__single{font-family:inherit;font-size:12px}.multiselect{line-height:normal;box-sizing:content-box;display:block;position:relative;width:100%;text-align:left;color:#35495e}.multiselect.multiselect-large .multiselect__select{height:32px}.multiselect.multiselect-large .multiselect__input,.multiselect.multiselect-large .multiselect__single{line-height:30px}.multiselect.multiselect-small .multiselect__select{height:22px}.multiselect.multiselect-small .multiselect__input,.multiselect.multiselect-small .multiselect__single{line-height:20px}.multiselect *{box-sizing:border-box}.multiselect:focus{outline:none}.multiselect--disabled{pointer-events:none;opacity:.6}.multiselect--active{z-index:50}.multiselect--active .multiselect__select{transform:rotate(180deg)}.multiselect__input,.multiselect__single{position:relative;display:inline-block;line-height:26px;border:none;border-radius:5px;background:#fff;padding-left:5px;width:100%;transition:border .1s ease;box-sizing:border-box}.multiselect__tag~.multiselect__input{width:auto}.multiselect__input:hover,.multiselect__single:hover{border-color:#cfcfcf}.multiselect__input:focus,.multiselect__single:focus{border-color:#a8a8a8;outline:none}.multiselect__single{padding-left:6px;margin-bottom:8px}.multiselect__tags{display:block;padding:0 40px 0 8px;border-radius:3px;border:1px solid #e8e8e8;background:#fff}.multiselect__tags:hover{border-color:#5eafed}.multiselect__tag{position:relative;display:inline-block;padding:4px 26px 4px 10px;border-radius:5px;margin-right:10px;color:#666;line-height:1;background:#f3f3f3;margin-bottom:2px;white-space:nowrap}.multiselect__tag-icon{cursor:pointer;margin-left:7px;position:absolute;right:0;top:0;bottom:0;font-weight:700;font-style:normal;width:22px;text-align:center;line-height:22px;transition:all .2s ease;border-radius:5px}.multiselect__tag-icon:after{content:\"\\D7\";color:#266d4d;font-size:14px}.multiselect__tag-icon:focus:after,.multiselect__tag-icon:hover:after{color:#000}.multiselect__current{min-height:40px;overflow:hidden;padding:8px 12px 0;padding-right:30px;white-space:nowrap;border-radius:5px;border:1px solid #e8e8e8}.multiselect__current,.multiselect__select{line-height:16px;box-sizing:border-box;display:block;margin:0;text-decoration:none;cursor:pointer}.multiselect__select{position:absolute;width:40px;height:28px;right:1px;top:1px;padding:4px 8px;text-align:center;transition:transform .2s ease}.multiselect__select:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:5px 5px 0;border-color:#999 transparent transparent;content:\"\"}.multiselect__placeholder{color:#adadad;display:inline-block;margin-bottom:10px;padding-top:2px}.multiselect--active .multiselect__placeholder{display:none}.multiselect__content{position:absolute;top:100%;list-style:none;display:block;background:#fff;width:100%;max-height:240px;overflow:auto;padding:0;margin-top:3px;border:1px solid #e8e8e8;border-radius:5px;z-index:1050}.multiselect__content::webkit-scrollbar{display:none}.multiselect__option{display:block;padding:12px;min-height:40px;line-height:16px;text-decoration:none;text-transform:none;vertical-align:middle;position:relative;cursor:pointer;white-space:nowrap}.multiselect__option:after{top:0;right:0;position:absolute;line-height:40px;padding-right:12px;padding-left:20px}.multiselect__option--highlight{background-color:#ebf5fd;outline:none;color:#000;font-weight:700}.multiselect__option--selected{background:#f3f3f3;color:#35495e;font-weight:700}.multiselect__option--selected:after{content:attr(data-selected);color:silver}.multiselect__option--selected.multiselect__option--highlight{background-color:#ebf5fd;color:#000}.multiselect--disabled{background:#ededed;pointer-events:none}.multiselect--disabled .multiselect__current,.multiselect--disabled .multiselect__select,.multiselect__option--disabled{background:#ededed;color:#a6a6a6}.multiselect__option--disabled{cursor:text;pointer-events:none}.multiselect__option--disabled:visited{color:#a6a6a6}.multiselect__option--disabled:focus,.multiselect__option--disabled:hover{background:#3dad7b}.multiselect-transition{transition:all .3s ease}.multiselect-enter,.multiselect-leave{opacity:0;max-height:0!important}@keyframes spinning{0%{transform:rotate(0)}to{transform:rotate(2turn)}}.ant-calendar-picker-container{position:absolute;z-index:1050}.ant-calendar-picker-container.slide-up-appear.slide-up-appear-active.ant-calendar-picker-container-placement-topLeft,.ant-calendar-picker-container.slide-up-appear.slide-up-appear-active.ant-calendar-picker-container-placement-topRight,.ant-calendar-picker-container.slide-up-enter.slide-up-enter-active.ant-calendar-picker-container-placement-topLeft,.ant-calendar-picker-container.slide-up-enter.slide-up-enter-active.ant-calendar-picker-container-placement-topRight{animation-name:antSlideDownIn}.ant-calendar-picker-container.slide-up-appear.slide-up-appear-active.ant-calendar-picker-container-placement-bottomLeft,.ant-calendar-picker-container.slide-up-appear.slide-up-appear-active.ant-calendar-picker-container-placement-bottomRight,.ant-calendar-picker-container.slide-up-enter.slide-up-enter-active.ant-calendar-picker-container-placement-bottomLeft,.ant-calendar-picker-container.slide-up-enter.slide-up-enter-active.ant-calendar-picker-container-placement-bottomRight{animation-name:antSlideUpIn}.ant-calendar-picker-container.slide-up-leave.slide-up-leave-active.ant-calendar-picker-container-placement-topLeft,.ant-calendar-picker-container.slide-up-leave.slide-up-leave-active.ant-calendar-picker-container-placement-topRight{animation-name:antSlideDownOut}.ant-calendar-picker-container.slide-up-leave.slide-up-leave-active.ant-calendar-picker-container-placement-bottomLeft,.ant-calendar-picker-container.slide-up-leave.slide-up-leave-active.ant-calendar-picker-container-placement-bottomRight{animation-name:antSlideUpOut}.ant-calendar-picker{position:relative;display:inline-block;outline:none;font-size:12px;transition:opacity .3s ease}.ant-calendar-picker>input{outline:none}.ant-calendar-picker-clear{opacity:0;z-index:-1;position:absolute;right:7px;background:#fff;top:50%;font-size:12px;color:#ccc;width:14px;height:14px;margin-top:-7px;line-height:14px;cursor:pointer;transition:color .3s ease,opacity .15s ease}.ant-calendar-picker-clear:hover{color:rgba(0,0,0,.43)}.ant-calendar-picker:hover .ant-calendar-picker-clear{opacity:1;z-index:1}.ant-calendar-picker-icon{position:absolute;user-select:none;transition:all .3s cubic-bezier(.645,.045,.355,1);width:12px;height:12px;line-height:12px;right:8px;color:rgba(0,0,0,.43);top:50%;margin-top:-6px}.ant-calendar-picker-icon:after{content:\"\\E6BB\";font-family:anticon;font-size:12px;color:rgba(0,0,0,.43);display:inline-block;line-height:1;vertical-align:bottom}.ant-calendar{position:relative;outline:none;width:231px;border:1px solid #fff;list-style:none;font-size:12px;text-align:left;background-color:#fff;border-radius:4px;box-shadow:0 1px 6px rgba(0,0,0,.2);background-clip:padding-box;line-height:1.5}.ant-calendar-input-wrap{height:34px;padding:6px;border-bottom:1px solid #e9e9e9}.ant-calendar-input{border:0;width:100%;cursor:auto;outline:0;height:22px}.ant-calendar-week-number{width:286px}.ant-calendar-week-number-cell{text-align:center}.ant-calendar-header{height:34px;line-height:34px;text-align:center;user-select:none;border-bottom:1px solid #e9e9e9}.ant-calendar-header a:hover{color:#66b3ee}.ant-calendar-header .ant-calendar-century-select,.ant-calendar-header .ant-calendar-decade-select,.ant-calendar-header .ant-calendar-month-select,.ant-calendar-header .ant-calendar-year-select{padding:0 2px;font-weight:700;display:inline-block;color:#333;line-height:34px}.ant-calendar-header .ant-calendar-century-select-arrow,.ant-calendar-header .ant-calendar-decade-select-arrow,.ant-calendar-header .ant-calendar-month-select-arrow,.ant-calendar-header .ant-calendar-year-select-arrow{display:none}.ant-calendar-header .ant-calendar-next-century-btn,.ant-calendar-header .ant-calendar-next-decade-btn,.ant-calendar-header .ant-calendar-next-month-btn,.ant-calendar-header .ant-calendar-next-year-btn,.ant-calendar-header .ant-calendar-prev-century-btn,.ant-calendar-header .ant-calendar-prev-decade-btn,.ant-calendar-header .ant-calendar-prev-month-btn,.ant-calendar-header .ant-calendar-prev-year-btn{position:absolute;top:0;color:rgba(0,0,0,.43);font-family:Arial,Hiragino Sans GB,Microsoft Yahei,Microsoft Sans Serif,sans-serif;padding:0 5px;font-size:16px;display:inline-block;line-height:34px}.ant-calendar-header .ant-calendar-prev-century-btn,.ant-calendar-header .ant-calendar-prev-decade-btn,.ant-calendar-header .ant-calendar-prev-year-btn{left:7px}.ant-calendar-header .ant-calendar-prev-century-btn:after,.ant-calendar-header .ant-calendar-prev-decade-btn:after,.ant-calendar-header .ant-calendar-prev-year-btn:after{content:\"\\AB\"}.ant-calendar-header .ant-calendar-next-century-btn,.ant-calendar-header .ant-calendar-next-decade-btn,.ant-calendar-header .ant-calendar-next-year-btn{right:7px}.ant-calendar-header .ant-calendar-next-century-btn:after,.ant-calendar-header .ant-calendar-next-decade-btn:after,.ant-calendar-header .ant-calendar-next-year-btn:after{content:\"\\BB\"}.ant-calendar-header .ant-calendar-prev-month-btn{left:29px}.ant-calendar-header .ant-calendar-prev-month-btn:after{content:\"\\2039\"}.ant-calendar-header .ant-calendar-next-month-btn{right:29px}.ant-calendar-header .ant-calendar-next-month-btn:after{content:\"\\203A\"}.ant-calendar-body{padding:4px 8px}.ant-calendar table{border-collapse:collapse;max-width:100%;background-color:transparent;width:100%}.ant-calendar table,.ant-calendar td,.ant-calendar th{border:0}.ant-calendar-calendar-table{border-spacing:0;margin-bottom:0}.ant-calendar-column-header{line-height:18px;width:33px;padding:6px 0;text-align:center}.ant-calendar-column-header .ant-calendar-column-header-inner{display:block;font-weight:400}.ant-calendar-week-number-header .ant-calendar-column-header-inner{display:none}.ant-calendar-cell{padding:4px 0}.ant-calendar-date{display:block;margin:0 auto;color:#333;border-radius:2px;width:20px;height:20px;line-height:18px;border:1px solid transparent;padding:0;background:transparent;text-align:center;transition:background .3s ease}.ant-calendar-date-panel{position:relative}.ant-calendar-date:hover{background:#ebf5fd;cursor:pointer}.ant-calendar-date:active{color:#fff;background:#5eafed}.ant-calendar-today .ant-calendar-date{border-color:#369be9;font-weight:700;color:#369be9}.ant-calendar-last-month-cell .ant-calendar-date,.ant-calendar-next-month-btn-day .ant-calendar-date{color:#ccc}.ant-calendar-selected-day .ant-calendar-date{background:#369be9;color:#fff;border:1px solid transparent}.ant-calendar-selected-day .ant-calendar-date:hover{background:#369be9}.ant-calendar-disabled-cell .ant-calendar-date{cursor:not-allowed;color:#bcbcbc;background:#f3f3f3;border-radius:0;width:auto;border:1px solid transparent}.ant-calendar-disabled-cell .ant-calendar-date:hover{background:#f3f3f3}.ant-calendar-disabled-cell-first-of-row .ant-calendar-date{border-top-left-radius:4px;border-bottom-left-radius:4px}.ant-calendar-disabled-cell-last-of-row .ant-calendar-date{border-top-right-radius:4px;border-bottom-right-radius:4px}.ant-calendar-footer{border-top:1px solid #e9e9e9}.ant-calendar-footer-btn{text-align:center;display:block;line-height:38px}.ant-calendar-footer>div{display:inline-block}.ant-calendar .ant-calendar-clear-btn,.ant-calendar .ant-calendar-today-btn{display:inline-block;text-align:center;margin:0 0 0 8px}.ant-calendar .ant-calendar-clear-btn-disabled,.ant-calendar .ant-calendar-today-btn-disabled{color:#ccc;cursor:not-allowed}.ant-calendar .ant-calendar-clear-btn{display:none;position:absolute;right:5px;text-indent:-76px;overflow:hidden;width:20px;height:20px;text-align:center;line-height:20px;top:7px;margin:0}.ant-calendar .ant-calendar-clear-btn:after{font-family:anticon;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\"\\E62E\";font-size:12px;color:#ccc;display:inline-block;line-height:1;width:20px;text-indent:43px;transition:color .3s ease}.ant-calendar .ant-calendar-clear-btn:hover:after{color:rgba(0,0,0,.43)}.ant-calendar .ant-calendar-ok-btn{display:inline-block;margin-bottom:0;font-weight:500;text-align:center;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid transparent;white-space:nowrap;line-height:1.5;padding:4px 15px;border-radius:4px;user-select:none;transition:all .3s cubic-bezier(.645,.045,.355,1);position:relative;color:#fff;background-color:#369be9;border-color:#369be9;padding:1px 7px;font-size:12px;border-radius:2px;position:absolute;bottom:8px;right:9px}.ant-calendar .ant-calendar-ok-btn>.anticon{line-height:1}.ant-calendar .ant-calendar-ok-btn,.ant-calendar .ant-calendar-ok-btn:active,.ant-calendar .ant-calendar-ok-btn:focus{outline:0}.ant-calendar .ant-calendar-ok-btn:not([disabled]):hover{text-decoration:none}.ant-calendar .ant-calendar-ok-btn:not([disabled]):active{outline:0;transition:none}.ant-calendar .ant-calendar-ok-btn.disabled,.ant-calendar .ant-calendar-ok-btn[disabled]{cursor:not-allowed}.ant-calendar .ant-calendar-ok-btn.disabled>*,.ant-calendar .ant-calendar-ok-btn[disabled]>*{pointer-events:none}.ant-calendar .ant-calendar-ok-btn-lg{padding:4px 15px 5px;font-size:14px;border-radius:4px}.ant-calendar .ant-calendar-ok-btn-sm{padding:1px 7px;font-size:12px;border-radius:2px}.ant-calendar .ant-calendar-ok-btn>a:only-child{color:currentColor}.ant-calendar .ant-calendar-ok-btn>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-calendar .ant-calendar-ok-btn:focus,.ant-calendar .ant-calendar-ok-btn:hover{color:#fff;background-color:#66b3ee;border-color:#66b3ee}.ant-calendar .ant-calendar-ok-btn:focus>a:only-child,.ant-calendar .ant-calendar-ok-btn:hover>a:only-child{color:currentColor}.ant-calendar .ant-calendar-ok-btn:focus>a:only-child:after,.ant-calendar .ant-calendar-ok-btn:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-calendar .ant-calendar-ok-btn.active,.ant-calendar .ant-calendar-ok-btn:active{color:#fff;background-color:#2c83cd;border-color:#2c83cd}.ant-calendar .ant-calendar-ok-btn.active>a:only-child,.ant-calendar .ant-calendar-ok-btn:active>a:only-child{color:currentColor}.ant-calendar .ant-calendar-ok-btn.active>a:only-child:after,.ant-calendar .ant-calendar-ok-btn:active>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-calendar .ant-calendar-ok-btn.disabled,.ant-calendar .ant-calendar-ok-btn.disabled.active,.ant-calendar .ant-calendar-ok-btn.disabled:active,.ant-calendar .ant-calendar-ok-btn.disabled:focus,.ant-calendar .ant-calendar-ok-btn.disabled:hover,.ant-calendar .ant-calendar-ok-btn[disabled],.ant-calendar .ant-calendar-ok-btn[disabled].active,.ant-calendar .ant-calendar-ok-btn[disabled]:active,.ant-calendar .ant-calendar-ok-btn[disabled]:focus,.ant-calendar .ant-calendar-ok-btn[disabled]:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-calendar .ant-calendar-ok-btn.disabled.active>a:only-child,.ant-calendar .ant-calendar-ok-btn.disabled:active>a:only-child,.ant-calendar .ant-calendar-ok-btn.disabled:focus>a:only-child,.ant-calendar .ant-calendar-ok-btn.disabled:hover>a:only-child,.ant-calendar .ant-calendar-ok-btn.disabled>a:only-child,.ant-calendar .ant-calendar-ok-btn[disabled].active>a:only-child,.ant-calendar .ant-calendar-ok-btn[disabled]:active>a:only-child,.ant-calendar .ant-calendar-ok-btn[disabled]:focus>a:only-child,.ant-calendar .ant-calendar-ok-btn[disabled]:hover>a:only-child,.ant-calendar .ant-calendar-ok-btn[disabled]>a:only-child{color:currentColor}.ant-calendar .ant-calendar-ok-btn.disabled.active>a:only-child:after,.ant-calendar .ant-calendar-ok-btn.disabled:active>a:only-child:after,.ant-calendar .ant-calendar-ok-btn.disabled:focus>a:only-child:after,.ant-calendar .ant-calendar-ok-btn.disabled:hover>a:only-child:after,.ant-calendar .ant-calendar-ok-btn.disabled>a:only-child:after,.ant-calendar .ant-calendar-ok-btn[disabled].active>a:only-child:after,.ant-calendar .ant-calendar-ok-btn[disabled]:active>a:only-child:after,.ant-calendar .ant-calendar-ok-btn[disabled]:focus>a:only-child:after,.ant-calendar .ant-calendar-ok-btn[disabled]:hover>a:only-child:after,.ant-calendar .ant-calendar-ok-btn[disabled]>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-calendar .ant-calendar-ok-btn-disabled{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9;cursor:not-allowed}.ant-calendar .ant-calendar-ok-btn-disabled>a:only-child{color:currentColor}.ant-calendar .ant-calendar-ok-btn-disabled>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-calendar .ant-calendar-ok-btn-disabled:hover{color:rgba(0,0,0,.25);background-color:#f7f7f7;border-color:#d9d9d9}.ant-calendar .ant-calendar-ok-btn-disabled:hover>a:only-child{color:currentColor}.ant-calendar .ant-calendar-ok-btn-disabled:hover>a:only-child:after{content:\"\";position:absolute;top:0;left:0;bottom:0;right:0;background:transparent}.ant-calendar-range-picker.ant-input{padding-right:26px}.ant-calendar-range-picker-input{background-color:transparent;border:0;height:18px;line-height:18px;outline:0;width:43%;text-align:center}.ant-calendar-range-picker-input[disabled]{cursor:not-allowed}.ant-calendar-range-picker-separator{color:rgba(0,0,0,.43)}.ant-calendar-range{width:470px;overflow:hidden}.ant-calendar-range .ant-calendar-date-panel:after{content:\".\";display:block;height:0;clear:both;visibility:hidden}.ant-calendar-range-part{width:50%;position:relative}.ant-calendar-range-left{float:left}.ant-calendar-range-left .ant-calendar-time-picker-inner{border-right:2px solid #e9e9e9}.ant-calendar-range-right{float:right}.ant-calendar-range-right .ant-calendar-time-picker-inner{border-left:2px solid #e9e9e9}.ant-calendar-range-middle{position:absolute;left:50%;width:20px;margin-left:-132px;text-align:center;height:34px;line-height:34px;color:rgba(0,0,0,.43)}.ant-calendar-range-right .ant-calendar-date-input-wrap{margin-left:-118px}.ant-calendar-range.ant-calendar-time .ant-calendar-range-middle{margin-left:-12px}.ant-calendar-range.ant-calendar-time .ant-calendar-range-right .ant-calendar-date-input-wrap{margin-left:0}.ant-calendar-range .ant-calendar-input-wrap{position:relative;height:34px}.ant-calendar-range .ant-calendar-input,.ant-calendar-range .ant-calendar-time-picker-input{position:relative;display:inline-block;padding:4px 7px;width:100%;height:28px;cursor:text;font-size:12px;line-height:1.5;color:#333;background-color:#fff;background-image:none;border:1px solid #d9d9d9;border-radius:4px;transition:all .3s;border-radius:2px;height:22px;border:0;box-shadow:none}.ant-calendar-range .ant-calendar-input::-moz-placeholder,.ant-calendar-range .ant-calendar-time-picker-input::-moz-placeholder{color:#ccc;opacity:1}.ant-calendar-range .ant-calendar-input:-ms-input-placeholder,.ant-calendar-range .ant-calendar-time-picker-input:-ms-input-placeholder{color:#ccc}.ant-calendar-range .ant-calendar-input::-webkit-input-placeholder,.ant-calendar-range .ant-calendar-time-picker-input::-webkit-input-placeholder{color:#ccc}.ant-calendar-range .ant-calendar-input:hover,.ant-calendar-range .ant-calendar-time-picker-input:hover{border-color:#5eafed}.ant-calendar-range .ant-calendar-input:focus,.ant-calendar-range .ant-calendar-time-picker-input:focus{border-color:#5eafed;outline:0;box-shadow:0 0 0 2px rgba(54,155,233,.2)}.ant-calendar-range .ant-calendar-input[disabled],.ant-calendar-range .ant-calendar-time-picker-input[disabled]{background-color:#f7f7f7;opacity:1;cursor:not-allowed;color:#ccc}.ant-calendar-range .ant-calendar-input[disabled]:hover,.ant-calendar-range .ant-calendar-time-picker-input[disabled]:hover{border-color:#e1e1e1}textarea.ant-calendar-range .ant-calendar-input,textarea.ant-calendar-range .ant-calendar-time-picker-input{max-width:100%;height:auto;vertical-align:bottom}.ant-calendar-range .ant-calendar-input-lg,.ant-calendar-range .ant-calendar-time-picker-input-lg{padding:6px 7px;height:32px}.ant-calendar-range .ant-calendar-input-sm,.ant-calendar-range .ant-calendar-time-picker-input-sm{padding:1px 7px;height:22px;border-radius:2px}.ant-calendar-range .ant-calendar-input:focus,.ant-calendar-range .ant-calendar-time-picker-input:focus{box-shadow:none}.ant-calendar-range .ant-calendar-time-picker-icon{display:none}.ant-calendar-range.ant-calendar-week-number{width:574px}.ant-calendar-range.ant-calendar-week-number .ant-calendar-range-part{width:286px}.ant-calendar-range .ant-calendar-month-panel,.ant-calendar-range .ant-calendar-year-panel{top:34px}.ant-calendar-range .ant-calendar-month-panel .ant-calendar-year-panel{top:0}.ant-calendar-range .ant-calendar-decade-panel-table,.ant-calendar-range .ant-calendar-month-panel-table,.ant-calendar-range .ant-calendar-year-panel-table{height:208px}.ant-calendar-range .ant-calendar-in-range-cell{border-radius:0;position:relative}.ant-calendar-range .ant-calendar-in-range-cell>div{position:relative;z-index:1}.ant-calendar-range .ant-calendar-in-range-cell:before{content:\"\";display:block;background:#ebf5fd;border-radius:0;border:0;position:absolute;top:4px;bottom:4px;left:0;right:0}.ant-calendar-range-bottom{text-align:right}.ant-calendar-range-bottom .ant-calendar-footer-btn{padding-right:16px}div.ant-calendar-range-quick-selector{display:block;text-align:left;border-bottom:1px solid #e9e9e9;padding:10.5px 10px}div.ant-calendar-range-quick-selector>a{margin-right:16px}.ant-calendar-range .ant-calendar-header,.ant-calendar-range .ant-calendar-month-panel-header,.ant-calendar-range .ant-calendar-year-panel-header{border-bottom:0}.ant-calendar-range .ant-calendar-body,.ant-calendar-range .ant-calendar-month-panel-body,.ant-calendar-range .ant-calendar-year-panel-body{border-top:1px solid #e9e9e9}.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker{height:207px;width:100%;top:68px;z-index:2}.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker-panel{height:241px;margin-top:-34px}.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker-inner{padding-top:34px;height:100%;background:none}.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker-combobox{display:inline-block;height:100%;background-color:#fff;border-top:1px solid #e9e9e9}.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker-select{height:100%}.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker-select ul{max-height:100%}.ant-calendar-range.ant-calendar-time .ant-calendar-footer-btn{padding:9px 12px 9px 0;display:block;zoom:1}.ant-calendar-range.ant-calendar-time .ant-calendar-footer-btn:after,.ant-calendar-range.ant-calendar-time .ant-calendar-footer-btn:before{content:\" \";display:table}.ant-calendar-range.ant-calendar-time .ant-calendar-footer-btn:after{clear:both;visibility:hidden;font-size:0;height:0}.ant-calendar-range.ant-calendar-time .ant-calendar-ok-btn{position:static;height:22px}.ant-calendar-range.ant-calendar-time .ant-calendar-footer .ant-calendar-time-picker-btn{margin-right:12px}.ant-calendar-range.ant-calendar-time .ant-calendar-today-btn{margin:8px 12px;height:22px;line-height:22px}.ant-calendar-range-with-ranges.ant-calendar-time .ant-calendar-time-picker{height:247px}.ant-calendar-range-with-ranges.ant-calendar-time .ant-calendar-time-picker-panel{height:281px}.ant-calendar-range.ant-calendar-show-time-picker .ant-calendar-body{border-top-color:transparent}.ant-calendar-time-picker{position:absolute;width:100%;top:34px;background-color:#fff;height:206px}.ant-calendar-time-picker-panel{z-index:1050;position:absolute;width:100%}.ant-calendar-time-picker-inner{display:inline-block;position:relative;outline:none;list-style:none;font-size:12px;text-align:left;background-color:#fff;background-clip:padding-box;line-height:1.5;overflow:hidden;width:100%}.ant-calendar-time-picker-1-column,.ant-calendar-time-picker-1-column .ant-calendar-time-picker-select,.ant-calendar-time-picker-combobox{width:100%}.ant-calendar-time-picker-2-columns .ant-calendar-time-picker-select{width:50%}.ant-calendar-time-picker-1-column .ant-calendar-time-picker-select li,.ant-calendar-time-picker-2-columns .ant-calendar-time-picker-select li{padding:0;text-align:center}.ant-calendar-time-picker-input-wrap{display:none}.ant-calendar-time-picker-select{float:left;font-size:12px;border:1px solid #e9e9e9;border-width:0 1px;margin-left:-1px;box-sizing:border-box;width:33.6%;overflow:hidden;position:relative}.ant-calendar-time-picker-select:hover{overflow-y:auto}.ant-calendar-time-picker-select:first-child{border-left:0;margin-left:0}.ant-calendar-time-picker-select:last-child{border-right:0}.ant-calendar-time-picker-select ul{list-style:none;box-sizing:border-box;margin:0;padding:0;width:100%;max-height:206px}.ant-calendar-time-picker-select li{padding:0 0 0 28px;list-style:none;box-sizing:content-box;margin:0;width:100%;height:24px;line-height:24px;cursor:pointer;user-select:none;transition:background .3s ease}.ant-calendar-time-picker-select li:last-child:after{content:\"\";height:182px;display:block}.ant-calendar-time-picker-select li:hover{background:#ebf5fd}li.ant-calendar-time-picker-select-option-selected{background:#f7f7f7;font-weight:700}li.ant-calendar-time-picker-select-option-disabled{color:rgba(0,0,0,.25)}li.ant-calendar-time-picker-select-option-disabled:hover{background:transparent;cursor:not-allowed}.ant-calendar-time .ant-calendar-day-select{padding:0 2px;font-weight:700;display:inline-block;color:#333;line-height:34px}.ant-calendar-time .ant-calendar-footer{border-top:1px solid #e9e9e9;text-align:right;position:relative;height:auto;line-height:auto}.ant-calendar-time .ant-calendar-footer-btn{padding:10px 0;line-height:1.5;text-align:right}.ant-calendar-time .ant-calendar-footer .ant-calendar-today-btn{float:left;margin:0;padding-left:12px}.ant-calendar-time .ant-calendar-footer .ant-calendar-time-picker-btn{display:inline-block;text-align:center;margin-right:60px}.ant-calendar-time .ant-calendar-footer .ant-calendar-time-picker-btn-disabled{color:#ccc}.ant-calendar-month-panel{left:0;top:1px;bottom:0;right:0;background:#fff;z-index:10;position:absolute;outline:none;border-radius:4px}.ant-calendar-month-panel-hidden{display:none}.ant-calendar-month-panel-header{height:34px;line-height:34px;text-align:center;user-select:none;border-bottom:1px solid #e9e9e9}.ant-calendar-month-panel-header a:hover{color:#66b3ee}.ant-calendar-month-panel-header .ant-calendar-month-panel-century-select,.ant-calendar-month-panel-header .ant-calendar-month-panel-decade-select,.ant-calendar-month-panel-header .ant-calendar-month-panel-month-select,.ant-calendar-month-panel-header .ant-calendar-month-panel-year-select{padding:0 2px;font-weight:700;display:inline-block;color:#333;line-height:34px}.ant-calendar-month-panel-header .ant-calendar-month-panel-century-select-arrow,.ant-calendar-month-panel-header .ant-calendar-month-panel-decade-select-arrow,.ant-calendar-month-panel-header .ant-calendar-month-panel-month-select-arrow,.ant-calendar-month-panel-header .ant-calendar-month-panel-year-select-arrow{display:none}.ant-calendar-month-panel-header .ant-calendar-month-panel-next-century-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-next-decade-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-next-month-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-next-year-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-century-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-decade-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-month-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-year-btn{position:absolute;top:0;color:rgba(0,0,0,.43);font-family:Arial,Hiragino Sans GB,Microsoft Yahei,Microsoft Sans Serif,sans-serif;padding:0 5px;font-size:16px;display:inline-block;line-height:34px}.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-century-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-decade-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-year-btn{left:7px}.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-century-btn:after,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-decade-btn:after,.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-year-btn:after{content:\"\\AB\"}.ant-calendar-month-panel-header .ant-calendar-month-panel-next-century-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-next-decade-btn,.ant-calendar-month-panel-header .ant-calendar-month-panel-next-year-btn{right:7px}.ant-calendar-month-panel-header .ant-calendar-month-panel-next-century-btn:after,.ant-calendar-month-panel-header .ant-calendar-month-panel-next-decade-btn:after,.ant-calendar-month-panel-header .ant-calendar-month-panel-next-year-btn:after{content:\"\\BB\"}.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-month-btn{left:29px}.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-month-btn:after{content:\"\\2039\"}.ant-calendar-month-panel-header .ant-calendar-month-panel-next-month-btn{right:29px}.ant-calendar-month-panel-header .ant-calendar-month-panel-next-month-btn:after{content:\"\\203A\"}.ant-calendar-month-panel-table{table-layout:fixed;width:100%;height:248px;border-collapse:separate}.ant-calendar-month-panel-selected-cell .ant-calendar-month-panel-month,.ant-calendar-month-panel-selected-cell .ant-calendar-month-panel-month:hover{background:#369be9;color:#fff}.ant-calendar-month-panel-cell{text-align:center}.ant-calendar-month-panel-cell-disabled .ant-calendar-month-panel-month,.ant-calendar-month-panel-cell-disabled .ant-calendar-month-panel-month:hover{cursor:not-allowed;color:#bcbcbc;background:#f3f3f3}.ant-calendar-month-panel-month{display:inline-block;margin:0 auto;color:#333;background:transparent;text-align:center;height:24px;line-height:24px;padding:0 6px;border-radius:4px;transition:background .3s ease}.ant-calendar-month-panel-month:hover{background:#ebf5fd;cursor:pointer}.ant-calendar-year-panel{left:0;top:1px;bottom:0;right:0;background:#fff;z-index:10;position:absolute;outline:none;border-radius:4px}.ant-calendar-year-panel-hidden{display:none}.ant-calendar-year-panel-header{height:34px;line-height:34px;text-align:center;user-select:none;border-bottom:1px solid #e9e9e9}.ant-calendar-year-panel-header a:hover{color:#66b3ee}.ant-calendar-year-panel-header .ant-calendar-year-panel-century-select,.ant-calendar-year-panel-header .ant-calendar-year-panel-decade-select,.ant-calendar-year-panel-header .ant-calendar-year-panel-month-select,.ant-calendar-year-panel-header .ant-calendar-year-panel-year-select{padding:0 2px;font-weight:700;display:inline-block;color:#333;line-height:34px}.ant-calendar-year-panel-header .ant-calendar-year-panel-century-select-arrow,.ant-calendar-year-panel-header .ant-calendar-year-panel-decade-select-arrow,.ant-calendar-year-panel-header .ant-calendar-year-panel-month-select-arrow,.ant-calendar-year-panel-header .ant-calendar-year-panel-year-select-arrow{display:none}.ant-calendar-year-panel-header .ant-calendar-year-panel-next-century-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-next-decade-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-next-month-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-next-year-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-century-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-decade-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-month-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-year-btn{position:absolute;top:0;color:rgba(0,0,0,.43);font-family:Arial,Hiragino Sans GB,Microsoft Yahei,Microsoft Sans Serif,sans-serif;padding:0 5px;font-size:16px;display:inline-block;line-height:34px}.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-century-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-decade-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-year-btn{left:7px}.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-century-btn:after,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-decade-btn:after,.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-year-btn:after{content:\"\\AB\"}.ant-calendar-year-panel-header .ant-calendar-year-panel-next-century-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-next-decade-btn,.ant-calendar-year-panel-header .ant-calendar-year-panel-next-year-btn{right:7px}.ant-calendar-year-panel-header .ant-calendar-year-panel-next-century-btn:after,.ant-calendar-year-panel-header .ant-calendar-year-panel-next-decade-btn:after,.ant-calendar-year-panel-header .ant-calendar-year-panel-next-year-btn:after{content:\"\\BB\"}.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-month-btn{left:29px}.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-month-btn:after{content:\"\\2039\"}.ant-calendar-year-panel-header .ant-calendar-year-panel-next-month-btn{right:29px}.ant-calendar-year-panel-header .ant-calendar-year-panel-next-month-btn:after{content:\"\\203A\"}.ant-calendar-year-panel-table{table-layout:fixed;width:100%;height:248px;border-collapse:separate}.ant-calendar-year-panel-cell{text-align:center}.ant-calendar-year-panel-year{display:inline-block;margin:0 auto;color:#333;background:transparent;text-align:center;height:24px;line-height:24px;padding:0 6px;border-radius:4px;transition:background .3s ease}.ant-calendar-year-panel-year:hover{background:#ebf5fd;cursor:pointer}.ant-calendar-year-panel-selected-cell .ant-calendar-year-panel-year,.ant-calendar-year-panel-selected-cell .ant-calendar-year-panel-year:hover{background:#369be9;color:#fff}.ant-calendar-year-panel-last-decade-cell .ant-calendar-year-panel-year,.ant-calendar-year-panel-next-decade-cell .ant-calendar-year-panel-year{user-select:none}.ant-calendar-year-panel-last-decade-cell .ant-calendar-year-panel-year:before,.ant-calendar-year-panel-next-decade-cell .ant-calendar-year-panel-year:before{content:\"\\E61F\";font-family:anticon!important}.ant-calendar-year-panel-last-decade-cell .ant-calendar-year-panel-year:before{content:\"\\E620\"}.ant-calendar-decade-panel{left:0;top:0;bottom:0;right:0;background:#fff;z-index:10;position:absolute;outline:none;border-radius:4px}.ant-calendar-decade-panel-hidden{display:none}.ant-calendar-decade-panel-header{height:34px;line-height:34px;text-align:center;user-select:none;border-bottom:1px solid #e9e9e9}.ant-calendar-decade-panel-header a:hover{color:#66b3ee}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-century-select,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-decade-select,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-month-select,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-year-select{padding:0 2px;font-weight:700;display:inline-block;color:#333;line-height:34px}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-century-select-arrow,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-decade-select-arrow,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-month-select-arrow,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-year-select-arrow{display:none}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-century-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-decade-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-month-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-year-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-century-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-decade-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-month-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-year-btn{position:absolute;top:0;color:rgba(0,0,0,.43);font-family:Arial,Hiragino Sans GB,Microsoft Yahei,Microsoft Sans Serif,sans-serif;padding:0 5px;font-size:16px;display:inline-block;line-height:34px}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-century-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-decade-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-year-btn{left:7px}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-century-btn:after,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-decade-btn:after,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-year-btn:after{content:\"\\AB\"}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-century-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-decade-btn,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-year-btn{right:7px}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-century-btn:after,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-decade-btn:after,.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-year-btn:after{content:\"\\BB\"}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-month-btn{left:29px}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-month-btn:after{content:\"\\2039\"}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-month-btn{right:29px}.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-month-btn:after{content:\"\\203A\"}.ant-calendar-decade-panel-table{table-layout:fixed;width:100%;height:248px;border-collapse:separate}.ant-calendar-decade-panel-cell{text-align:center}.ant-calendar-decade-panel-decade{display:inline-block;margin:0 auto;color:#333;background:transparent;text-align:center;height:24px;line-height:24px;padding:0 6px;border-radius:4px;transition:background .3s ease}.ant-calendar-decade-panel-decade:hover{background:#ebf5fd;cursor:pointer}.ant-calendar-decade-panel-selected-cell .ant-calendar-decade-panel-decade,.ant-calendar-decade-panel-selected-cell .ant-calendar-decade-panel-decade:hover{background:#369be9;color:#fff}.ant-calendar-decade-panel-last-century-cell .ant-calendar-decade-panel-decade,.ant-calendar-decade-panel-next-century-cell .ant-calendar-decade-panel-decade{user-select:none}.ant-calendar-decade-panel-last-century-cell .ant-calendar-decade-panel-decade:before,.ant-calendar-decade-panel-next-century-cell .ant-calendar-decade-panel-decade:before{content:\"\\E61F\";font-family:anticon!important}.ant-calendar-decade-panel-last-century-cell .ant-calendar-decade-panel-decade:before{content:\"\\E620\"}.ant-calendar-month .ant-calendar-month-panel,.ant-calendar-month .ant-calendar-year-panel{top:0}.ant-more-panel{background-color:#fff;border-radius:2px;font-size:12px;position:relative;padding:15px;display:flex;border:1px solid #e9e9e9;transition:all .3s}.ant-more-panel:hover{box-shadow:0 1px 6px rgba(0,0,0,.2);border-color:#eee}.ant-more-panel-body{flex:1;overflow:hidden}.ant-more-panel-form{position:relative;display:inline-block}.ant-more-panel-control{position:absolute;right:0;top:0;padding-top:2px}.ant-more-panel-btn{cursor:pointer;border:1px solid #e9e9e9;color:#96a1a7;border-radius:2px;width:48px;text-align:center;line-height:14px;position:absolute;left:50%;bottom:-1px;margin-left:-1px}", ""]);

	// exports


/***/ },
/* 3 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	var VueRouter = __webpack_require__(8);
	var defaultFilter_1 = __webpack_require__(9);
	var routes_1 = __webpack_require__(10);
	var application_1 = __webpack_require__(97);
	var VueResource = __webpack_require__(98);
	var vueBeauty = __webpack_require__(99);
	var Application = (function () {
	    function Application(config, routesConfig) {
	        this.routesConfig = routesConfig;
	        this.config = config;
	        this.initVue();
	    }
	    /**
	     * Vue的初始化配置: 注册插件、过滤器等
	     */
	    Application.prototype.initVue = function () {
	        Vue.filter('default', defaultFilter_1.default);
	        Vue.use(VueResource);
	        Vue.http.options.root = this.config['appClient.baseUrl'];
	        Vue.use(VueRouter);
	        Vue.use(vueBeauty);
	    };
	    /**
	     * 启动路由，创建一个component的实例并挂载到el上
	     * @param component {Component} 要挂载的组件
	     * @param selector {String} 要挂载的DOM节点
	     * @param debug {Boolean} 是否开启debug模式
	     */
	    Application.prototype.run = function (component, selector, debug) {
	        if (debug === void 0) { debug = false; }
	        Vue.config.debug = debug; // 2.0版本已移除
	        var router = new VueRouter();
	        router.map(this.routesConfig);
	        router.start(component, selector);
	    };
	    /**
	     * 返回一个视图的实例（Singleton）
	     * @return {Application}
	     */
	    Application.getInstance = function () {
	        if (!Application.instance) {
	            Application.instance = new Application(application_1.default, routes_1.default);
	        }
	        return Application.instance;
	    };
	    return Application;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Application;


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/*!
	 * Vue.js v1.0.28
	 * (c) 2016 Evan You
	 * Released under the MIT License.
	 */
	'use strict';

	function set(obj, key, val) {
	  if (hasOwn(obj, key)) {
	    obj[key] = val;
	    return;
	  }
	  if (obj._isVue) {
	    set(obj._data, key, val);
	    return;
	  }
	  var ob = obj.__ob__;
	  if (!ob) {
	    obj[key] = val;
	    return;
	  }
	  ob.convert(key, val);
	  ob.dep.notify();
	  if (ob.vms) {
	    var i = ob.vms.length;
	    while (i--) {
	      var vm = ob.vms[i];
	      vm._proxy(key);
	      vm._digest();
	    }
	  }
	  return val;
	}

	/**
	 * Delete a property and trigger change if necessary.
	 *
	 * @param {Object} obj
	 * @param {String} key
	 */

	function del(obj, key) {
	  if (!hasOwn(obj, key)) {
	    return;
	  }
	  delete obj[key];
	  var ob = obj.__ob__;
	  if (!ob) {
	    if (obj._isVue) {
	      delete obj._data[key];
	      obj._digest();
	    }
	    return;
	  }
	  ob.dep.notify();
	  if (ob.vms) {
	    var i = ob.vms.length;
	    while (i--) {
	      var vm = ob.vms[i];
	      vm._unproxy(key);
	      vm._digest();
	    }
	  }
	}

	var hasOwnProperty = Object.prototype.hasOwnProperty;
	/**
	 * Check whether the object has the property.
	 *
	 * @param {Object} obj
	 * @param {String} key
	 * @return {Boolean}
	 */

	function hasOwn(obj, key) {
	  return hasOwnProperty.call(obj, key);
	}

	/**
	 * Check if an expression is a literal value.
	 *
	 * @param {String} exp
	 * @return {Boolean}
	 */

	var literalValueRE = /^\s?(true|false|-?[\d\.]+|'[^']*'|"[^"]*")\s?$/;

	function isLiteral(exp) {
	  return literalValueRE.test(exp);
	}

	/**
	 * Check if a string starts with $ or _
	 *
	 * @param {String} str
	 * @return {Boolean}
	 */

	function isReserved(str) {
	  var c = (str + '').charCodeAt(0);
	  return c === 0x24 || c === 0x5F;
	}

	/**
	 * Guard text output, make sure undefined outputs
	 * empty string
	 *
	 * @param {*} value
	 * @return {String}
	 */

	function _toString(value) {
	  return value == null ? '' : value.toString();
	}

	/**
	 * Check and convert possible numeric strings to numbers
	 * before setting back to data
	 *
	 * @param {*} value
	 * @return {*|Number}
	 */

	function toNumber(value) {
	  if (typeof value !== 'string') {
	    return value;
	  } else {
	    var parsed = Number(value);
	    return isNaN(parsed) ? value : parsed;
	  }
	}

	/**
	 * Convert string boolean literals into real booleans.
	 *
	 * @param {*} value
	 * @return {*|Boolean}
	 */

	function toBoolean(value) {
	  return value === 'true' ? true : value === 'false' ? false : value;
	}

	/**
	 * Strip quotes from a string
	 *
	 * @param {String} str
	 * @return {String | false}
	 */

	function stripQuotes(str) {
	  var a = str.charCodeAt(0);
	  var b = str.charCodeAt(str.length - 1);
	  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;
	}

	/**
	 * Camelize a hyphen-delimited string.
	 *
	 * @param {String} str
	 * @return {String}
	 */

	var camelizeRE = /-(\w)/g;

	function camelize(str) {
	  return str.replace(camelizeRE, toUpper);
	}

	function toUpper(_, c) {
	  return c ? c.toUpperCase() : '';
	}

	/**
	 * Hyphenate a camelCase string.
	 *
	 * @param {String} str
	 * @return {String}
	 */

	var hyphenateRE = /([^-])([A-Z])/g;

	function hyphenate(str) {
	  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();
	}

	/**
	 * Converts hyphen/underscore/slash delimitered names into
	 * camelized classNames.
	 *
	 * e.g. my-component => MyComponent
	 *      some_else    => SomeElse
	 *      some/comp    => SomeComp
	 *
	 * @param {String} str
	 * @return {String}
	 */

	var classifyRE = /(?:^|[-_\/])(\w)/g;

	function classify(str) {
	  return str.replace(classifyRE, toUpper);
	}

	/**
	 * Simple bind, faster than native
	 *
	 * @param {Function} fn
	 * @param {Object} ctx
	 * @return {Function}
	 */

	function bind(fn, ctx) {
	  return function (a) {
	    var l = arguments.length;
	    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
	  };
	}

	/**
	 * Convert an Array-like object to a real Array.
	 *
	 * @param {Array-like} list
	 * @param {Number} [start] - start index
	 * @return {Array}
	 */

	function toArray(list, start) {
	  start = start || 0;
	  var i = list.length - start;
	  var ret = new Array(i);
	  while (i--) {
	    ret[i] = list[i + start];
	  }
	  return ret;
	}

	/**
	 * Mix properties into target object.
	 *
	 * @param {Object} to
	 * @param {Object} from
	 */

	function extend(to, from) {
	  var keys = Object.keys(from);
	  var i = keys.length;
	  while (i--) {
	    to[keys[i]] = from[keys[i]];
	  }
	  return to;
	}

	/**
	 * Quick object check - this is primarily used to tell
	 * Objects from primitive values when we know the value
	 * is a JSON-compliant type.
	 *
	 * @param {*} obj
	 * @return {Boolean}
	 */

	function isObject(obj) {
	  return obj !== null && typeof obj === 'object';
	}

	/**
	 * Strict object type check. Only returns true
	 * for plain JavaScript objects.
	 *
	 * @param {*} obj
	 * @return {Boolean}
	 */

	var toString = Object.prototype.toString;
	var OBJECT_STRING = '[object Object]';

	function isPlainObject(obj) {
	  return toString.call(obj) === OBJECT_STRING;
	}

	/**
	 * Array type check.
	 *
	 * @param {*} obj
	 * @return {Boolean}
	 */

	var isArray = Array.isArray;

	/**
	 * Define a property.
	 *
	 * @param {Object} obj
	 * @param {String} key
	 * @param {*} val
	 * @param {Boolean} [enumerable]
	 */

	function def(obj, key, val, enumerable) {
	  Object.defineProperty(obj, key, {
	    value: val,
	    enumerable: !!enumerable,
	    writable: true,
	    configurable: true
	  });
	}

	/**
	 * Debounce a function so it only gets called after the
	 * input stops arriving after the given wait period.
	 *
	 * @param {Function} func
	 * @param {Number} wait
	 * @return {Function} - the debounced function
	 */

	function _debounce(func, wait) {
	  var timeout, args, context, timestamp, result;
	  var later = function later() {
	    var last = Date.now() - timestamp;
	    if (last < wait && last >= 0) {
	      timeout = setTimeout(later, wait - last);
	    } else {
	      timeout = null;
	      result = func.apply(context, args);
	      if (!timeout) context = args = null;
	    }
	  };
	  return function () {
	    context = this;
	    args = arguments;
	    timestamp = Date.now();
	    if (!timeout) {
	      timeout = setTimeout(later, wait);
	    }
	    return result;
	  };
	}

	/**
	 * Manual indexOf because it's slightly faster than
	 * native.
	 *
	 * @param {Array} arr
	 * @param {*} obj
	 */

	function indexOf(arr, obj) {
	  var i = arr.length;
	  while (i--) {
	    if (arr[i] === obj) return i;
	  }
	  return -1;
	}

	/**
	 * Make a cancellable version of an async callback.
	 *
	 * @param {Function} fn
	 * @return {Function}
	 */

	function cancellable(fn) {
	  var cb = function cb() {
	    if (!cb.cancelled) {
	      return fn.apply(this, arguments);
	    }
	  };
	  cb.cancel = function () {
	    cb.cancelled = true;
	  };
	  return cb;
	}

	/**
	 * Check if two values are loosely equal - that is,
	 * if they are plain objects, do they have the same shape?
	 *
	 * @param {*} a
	 * @param {*} b
	 * @return {Boolean}
	 */

	function looseEqual(a, b) {
	  /* eslint-disable eqeqeq */
	  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);
	  /* eslint-enable eqeqeq */
	}

	var hasProto = ('__proto__' in {});

	// Browser environment sniffing
	var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';

	// detect devtools
	var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

	// UA sniffing for working around browser-specific quirks
	var UA = inBrowser && window.navigator.userAgent.toLowerCase();
	var isIE = UA && UA.indexOf('trident') > 0;
	var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
	var isAndroid = UA && UA.indexOf('android') > 0;
	var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);

	var transitionProp = undefined;
	var transitionEndEvent = undefined;
	var animationProp = undefined;
	var animationEndEvent = undefined;

	// Transition property/event sniffing
	if (inBrowser && !isIE9) {
	  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;
	  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;
	  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';
	  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';
	  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';
	  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';
	}

	/* istanbul ignore next */
	function isNative(Ctor) {
	  return (/native code/.test(Ctor.toString())
	  );
	}

	/**
	 * Defer a task to execute it asynchronously. Ideally this
	 * should be executed as a microtask, so we leverage
	 * MutationObserver if it's available, and fallback to
	 * setTimeout(0).
	 *
	 * @param {Function} cb
	 * @param {Object} ctx
	 */

	var nextTick = (function () {
	  var callbacks = [];
	  var pending = false;
	  var timerFunc = undefined;

	  function nextTickHandler() {
	    pending = false;
	    var copies = callbacks.slice(0);
	    callbacks.length = 0;
	    for (var i = 0; i < copies.length; i++) {
	      copies[i]();
	    }
	  }

	  // the nextTick behavior leverages the microtask queue, which can be accessed
	  // via either native Promise.then or MutationObserver.
	  // MutationObserver has wider support, however it is seriously bugged in
	  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
	  // completely stops working after triggering a few times... so, if native
	  // Promise is available, we will use it:
	  /* istanbul ignore if */
	  if (typeof Promise !== 'undefined' && isNative(Promise)) {
	    var p = Promise.resolve();
	    var noop = function noop() {};
	    timerFunc = function () {
	      p.then(nextTickHandler);
	      // in problematic UIWebViews, Promise.then doesn't completely break, but
	      // it can get stuck in a weird state where callbacks are pushed into the
	      // microtask queue but the queue isn't being flushed, until the browser
	      // needs to do some other work, e.g. handle a timer. Therefore we can
	      // "force" the microtask queue to be flushed by adding an empty timer.
	      if (isIOS) setTimeout(noop);
	    };
	  } else if (typeof MutationObserver !== 'undefined') {
	    // use MutationObserver where native Promise is not available,
	    // e.g. IE11, iOS7, Android 4.4
	    var counter = 1;
	    var observer = new MutationObserver(nextTickHandler);
	    var textNode = document.createTextNode(String(counter));
	    observer.observe(textNode, {
	      characterData: true
	    });
	    timerFunc = function () {
	      counter = (counter + 1) % 2;
	      textNode.data = String(counter);
	    };
	  } else {
	    // fallback to setTimeout
	    /* istanbul ignore next */
	    timerFunc = setTimeout;
	  }

	  return function (cb, ctx) {
	    var func = ctx ? function () {
	      cb.call(ctx);
	    } : cb;
	    callbacks.push(func);
	    if (pending) return;
	    pending = true;
	    timerFunc(nextTickHandler, 0);
	  };
	})();

	var _Set = undefined;
	/* istanbul ignore if */
	if (typeof Set !== 'undefined' && isNative(Set)) {
	  // use native Set when available.
	  _Set = Set;
	} else {
	  // a non-standard Set polyfill that only works with primitive keys.
	  _Set = function () {
	    this.set = Object.create(null);
	  };
	  _Set.prototype.has = function (key) {
	    return this.set[key] !== undefined;
	  };
	  _Set.prototype.add = function (key) {
	    this.set[key] = 1;
	  };
	  _Set.prototype.clear = function () {
	    this.set = Object.create(null);
	  };
	}

	function Cache(limit) {
	  this.size = 0;
	  this.limit = limit;
	  this.head = this.tail = undefined;
	  this._keymap = Object.create(null);
	}

	var p = Cache.prototype;

	/**
	 * Put <value> into the cache associated with <key>.
	 * Returns the entry which was removed to make room for
	 * the new entry. Otherwise undefined is returned.
	 * (i.e. if there was enough room already).
	 *
	 * @param {String} key
	 * @param {*} value
	 * @return {Entry|undefined}
	 */

	p.put = function (key, value) {
	  var removed;

	  var entry = this.get(key, true);
	  if (!entry) {
	    if (this.size === this.limit) {
	      removed = this.shift();
	    }
	    entry = {
	      key: key
	    };
	    this._keymap[key] = entry;
	    if (this.tail) {
	      this.tail.newer = entry;
	      entry.older = this.tail;
	    } else {
	      this.head = entry;
	    }
	    this.tail = entry;
	    this.size++;
	  }
	  entry.value = value;

	  return removed;
	};

	/**
	 * Purge the least recently used (oldest) entry from the
	 * cache. Returns the removed entry or undefined if the
	 * cache was empty.
	 */

	p.shift = function () {
	  var entry = this.head;
	  if (entry) {
	    this.head = this.head.newer;
	    this.head.older = undefined;
	    entry.newer = entry.older = undefined;
	    this._keymap[entry.key] = undefined;
	    this.size--;
	  }
	  return entry;
	};

	/**
	 * Get and register recent use of <key>. Returns the value
	 * associated with <key> or undefined if not in cache.
	 *
	 * @param {String} key
	 * @param {Boolean} returnEntry
	 * @return {Entry|*}
	 */

	p.get = function (key, returnEntry) {
	  var entry = this._keymap[key];
	  if (entry === undefined) return;
	  if (entry === this.tail) {
	    return returnEntry ? entry : entry.value;
	  }
	  // HEAD--------------TAIL
	  //   <.older   .newer>
	  //  <--- add direction --
	  //   A  B  C  <D>  E
	  if (entry.newer) {
	    if (entry === this.head) {
	      this.head = entry.newer;
	    }
	    entry.newer.older = entry.older; // C <-- E.
	  }
	  if (entry.older) {
	    entry.older.newer = entry.newer; // C. --> E
	  }
	  entry.newer = undefined; // D --x
	  entry.older = this.tail; // D. --> E
	  if (this.tail) {
	    this.tail.newer = entry; // E. <-- D
	  }
	  this.tail = entry;
	  return returnEntry ? entry : entry.value;
	};

	var cache$1 = new Cache(1000);
	var reservedArgRE = /^in$|^-?\d+/;

	/**
	 * Parser state
	 */

	var str;
	var dir;
	var len;
	var index;
	var chr;
	var state;
	var startState = 0;
	var filterState = 1;
	var filterNameState = 2;
	var filterArgState = 3;

	var doubleChr = 0x22;
	var singleChr = 0x27;
	var pipeChr = 0x7C;
	var escapeChr = 0x5C;
	var spaceChr = 0x20;

	var expStartChr = { 0x5B: 1, 0x7B: 1, 0x28: 1 };
	var expChrPair = { 0x5B: 0x5D, 0x7B: 0x7D, 0x28: 0x29 };

	function peek() {
	  return str.charCodeAt(index + 1);
	}

	function next() {
	  return str.charCodeAt(++index);
	}

	function eof() {
	  return index >= len;
	}

	function eatSpace() {
	  while (peek() === spaceChr) {
	    next();
	  }
	}

	function isStringStart(chr) {
	  return chr === doubleChr || chr === singleChr;
	}

	function isExpStart(chr) {
	  return expStartChr[chr];
	}

	function isExpEnd(start, chr) {
	  return expChrPair[start] === chr;
	}

	function parseString() {
	  var stringQuote = next();
	  var chr;
	  while (!eof()) {
	    chr = next();
	    // escape char
	    if (chr === escapeChr) {
	      next();
	    } else if (chr === stringQuote) {
	      break;
	    }
	  }
	}

	function parseSpecialExp(chr) {
	  var inExp = 0;
	  var startChr = chr;

	  while (!eof()) {
	    chr = peek();
	    if (isStringStart(chr)) {
	      parseString();
	      continue;
	    }

	    if (startChr === chr) {
	      inExp++;
	    }
	    if (isExpEnd(startChr, chr)) {
	      inExp--;
	    }

	    next();

	    if (inExp === 0) {
	      break;
	    }
	  }
	}

	/**
	 * syntax:
	 * expression | filterName  [arg  arg [| filterName arg arg]]
	 */

	function parseExpression() {
	  var start = index;
	  while (!eof()) {
	    chr = peek();
	    if (isStringStart(chr)) {
	      parseString();
	    } else if (isExpStart(chr)) {
	      parseSpecialExp(chr);
	    } else if (chr === pipeChr) {
	      next();
	      chr = peek();
	      if (chr === pipeChr) {
	        next();
	      } else {
	        if (state === startState || state === filterArgState) {
	          state = filterState;
	        }
	        break;
	      }
	    } else if (chr === spaceChr && (state === filterNameState || state === filterArgState)) {
	      eatSpace();
	      break;
	    } else {
	      if (state === filterState) {
	        state = filterNameState;
	      }
	      next();
	    }
	  }

	  return str.slice(start + 1, index) || null;
	}

	function parseFilterList() {
	  var filters = [];
	  while (!eof()) {
	    filters.push(parseFilter());
	  }
	  return filters;
	}

	function parseFilter() {
	  var filter = {};
	  var args;

	  state = filterState;
	  filter.name = parseExpression().trim();

	  state = filterArgState;
	  args = parseFilterArguments();

	  if (args.length) {
	    filter.args = args;
	  }
	  return filter;
	}

	function parseFilterArguments() {
	  var args = [];
	  while (!eof() && state !== filterState) {
	    var arg = parseExpression();
	    if (!arg) {
	      break;
	    }
	    args.push(processFilterArg(arg));
	  }

	  return args;
	}

	/**
	 * Check if an argument is dynamic and strip quotes.
	 *
	 * @param {String} arg
	 * @return {Object}
	 */

	function processFilterArg(arg) {
	  if (reservedArgRE.test(arg)) {
	    return {
	      value: toNumber(arg),
	      dynamic: false
	    };
	  } else {
	    var stripped = stripQuotes(arg);
	    var dynamic = stripped === arg;
	    return {
	      value: dynamic ? arg : stripped,
	      dynamic: dynamic
	    };
	  }
	}

	/**
	 * Parse a directive value and extract the expression
	 * and its filters into a descriptor.
	 *
	 * Example:
	 *
	 * "a + 1 | uppercase" will yield:
	 * {
	 *   expression: 'a + 1',
	 *   filters: [
	 *     { name: 'uppercase', args: null }
	 *   ]
	 * }
	 *
	 * @param {String} s
	 * @return {Object}
	 */

	function parseDirective(s) {
	  var hit = cache$1.get(s);
	  if (hit) {
	    return hit;
	  }

	  // reset parser state
	  str = s;
	  dir = {};
	  len = str.length;
	  index = -1;
	  chr = '';
	  state = startState;

	  var filters;

	  if (str.indexOf('|') < 0) {
	    dir.expression = str.trim();
	  } else {
	    dir.expression = parseExpression().trim();
	    filters = parseFilterList();
	    if (filters.length) {
	      dir.filters = filters;
	    }
	  }

	  cache$1.put(s, dir);
	  return dir;
	}

	var directive = Object.freeze({
	  parseDirective: parseDirective
	});

	var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;
	var cache = undefined;
	var tagRE = undefined;
	var htmlRE = undefined;
	/**
	 * Escape a string so it can be used in a RegExp
	 * constructor.
	 *
	 * @param {String} str
	 */

	function escapeRegex(str) {
	  return str.replace(regexEscapeRE, '\\$&');
	}

	function compileRegex() {
	  var open = escapeRegex(config.delimiters[0]);
	  var close = escapeRegex(config.delimiters[1]);
	  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);
	  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);
	  tagRE = new RegExp(unsafeOpen + '((?:.|\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\n)+?)' + close, 'g');
	  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\n)+?)' + unsafeClose + '$');
	  // reset cache
	  cache = new Cache(1000);
	}

	/**
	 * Parse a template text string into an array of tokens.
	 *
	 * @param {String} text
	 * @return {Array<Object> | null}
	 *               - {String} type
	 *               - {String} value
	 *               - {Boolean} [html]
	 *               - {Boolean} [oneTime]
	 */

	function parseText(text) {
	  if (!cache) {
	    compileRegex();
	  }
	  var hit = cache.get(text);
	  if (hit) {
	    return hit;
	  }
	  if (!tagRE.test(text)) {
	    return null;
	  }
	  var tokens = [];
	  var lastIndex = tagRE.lastIndex = 0;
	  var match, index, html, value, first, oneTime;
	  /* eslint-disable no-cond-assign */
	  while (match = tagRE.exec(text)) {
	    /* eslint-enable no-cond-assign */
	    index = match.index;
	    // push text token
	    if (index > lastIndex) {
	      tokens.push({
	        value: text.slice(lastIndex, index)
	      });
	    }
	    // tag token
	    html = htmlRE.test(match[0]);
	    value = html ? match[1] : match[2];
	    first = value.charCodeAt(0);
	    oneTime = first === 42; // *
	    value = oneTime ? value.slice(1) : value;
	    tokens.push({
	      tag: true,
	      value: value.trim(),
	      html: html,
	      oneTime: oneTime
	    });
	    lastIndex = index + match[0].length;
	  }
	  if (lastIndex < text.length) {
	    tokens.push({
	      value: text.slice(lastIndex)
	    });
	  }
	  cache.put(text, tokens);
	  return tokens;
	}

	/**
	 * Format a list of tokens into an expression.
	 * e.g. tokens parsed from 'a {{b}} c' can be serialized
	 * into one single expression as '"a " + b + " c"'.
	 *
	 * @param {Array} tokens
	 * @param {Vue} [vm]
	 * @return {String}
	 */

	function tokensToExp(tokens, vm) {
	  if (tokens.length > 1) {
	    return tokens.map(function (token) {
	      return formatToken(token, vm);
	    }).join('+');
	  } else {
	    return formatToken(tokens[0], vm, true);
	  }
	}

	/**
	 * Format a single token.
	 *
	 * @param {Object} token
	 * @param {Vue} [vm]
	 * @param {Boolean} [single]
	 * @return {String}
	 */

	function formatToken(token, vm, single) {
	  return token.tag ? token.oneTime && vm ? '"' + vm.$eval(token.value) + '"' : inlineFilters(token.value, single) : '"' + token.value + '"';
	}

	/**
	 * For an attribute with multiple interpolation tags,
	 * e.g. attr="some-{{thing | filter}}", in order to combine
	 * the whole thing into a single watchable expression, we
	 * have to inline those filters. This function does exactly
	 * that. This is a bit hacky but it avoids heavy changes
	 * to directive parser and watcher mechanism.
	 *
	 * @param {String} exp
	 * @param {Boolean} single
	 * @return {String}
	 */

	var filterRE = /[^|]\|[^|]/;
	function inlineFilters(exp, single) {
	  if (!filterRE.test(exp)) {
	    return single ? exp : '(' + exp + ')';
	  } else {
	    var dir = parseDirective(exp);
	    if (!dir.filters) {
	      return '(' + exp + ')';
	    } else {
	      return 'this._applyFilters(' + dir.expression + // value
	      ',null,' + // oldValue (null for read)
	      JSON.stringify(dir.filters) + // filter descriptors
	      ',false)'; // write?
	    }
	  }
	}

	var text = Object.freeze({
	  compileRegex: compileRegex,
	  parseText: parseText,
	  tokensToExp: tokensToExp
	});

	var delimiters = ['{{', '}}'];
	var unsafeDelimiters = ['{{{', '}}}'];

	var config = Object.defineProperties({

	  /**
	   * Whether to print debug messages.
	   * Also enables stack trace for warnings.
	   *
	   * @type {Boolean}
	   */

	  debug: false,

	  /**
	   * Whether to suppress warnings.
	   *
	   * @type {Boolean}
	   */

	  silent: false,

	  /**
	   * Whether to use async rendering.
	   */

	  async: true,

	  /**
	   * Whether to warn against errors caught when evaluating
	   * expressions.
	   */

	  warnExpressionErrors: true,

	  /**
	   * Whether to allow devtools inspection.
	   * Disabled by default in production builds.
	   */

	  devtools: process.env.NODE_ENV !== 'production',

	  /**
	   * Internal flag to indicate the delimiters have been
	   * changed.
	   *
	   * @type {Boolean}
	   */

	  _delimitersChanged: true,

	  /**
	   * List of asset types that a component can own.
	   *
	   * @type {Array}
	   */

	  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],

	  /**
	   * prop binding modes
	   */

	  _propBindingModes: {
	    ONE_WAY: 0,
	    TWO_WAY: 1,
	    ONE_TIME: 2
	  },

	  /**
	   * Max circular updates allowed in a batcher flush cycle.
	   */

	  _maxUpdateCount: 100

	}, {
	  delimiters: { /**
	                 * Interpolation delimiters. Changing these would trigger
	                 * the text parser to re-compile the regular expressions.
	                 *
	                 * @type {Array<String>}
	                 */

	    get: function get() {
	      return delimiters;
	    },
	    set: function set(val) {
	      delimiters = val;
	      compileRegex();
	    },
	    configurable: true,
	    enumerable: true
	  },
	  unsafeDelimiters: {
	    get: function get() {
	      return unsafeDelimiters;
	    },
	    set: function set(val) {
	      unsafeDelimiters = val;
	      compileRegex();
	    },
	    configurable: true,
	    enumerable: true
	  }
	});

	var warn = undefined;
	var formatComponentName = undefined;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var hasConsole = typeof console !== 'undefined';

	    warn = function (msg, vm) {
	      if (hasConsole && !config.silent) {
	        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));
	      }
	    };

	    formatComponentName = function (vm) {
	      var name = vm._isVue ? vm.$options.name : vm.name;
	      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';
	    };
	  })();
	}

	/**
	 * Append with transition.
	 *
	 * @param {Element} el
	 * @param {Element} target
	 * @param {Vue} vm
	 * @param {Function} [cb]
	 */

	function appendWithTransition(el, target, vm, cb) {
	  applyTransition(el, 1, function () {
	    target.appendChild(el);
	  }, vm, cb);
	}

	/**
	 * InsertBefore with transition.
	 *
	 * @param {Element} el
	 * @param {Element} target
	 * @param {Vue} vm
	 * @param {Function} [cb]
	 */

	function beforeWithTransition(el, target, vm, cb) {
	  applyTransition(el, 1, function () {
	    before(el, target);
	  }, vm, cb);
	}

	/**
	 * Remove with transition.
	 *
	 * @param {Element} el
	 * @param {Vue} vm
	 * @param {Function} [cb]
	 */

	function removeWithTransition(el, vm, cb) {
	  applyTransition(el, -1, function () {
	    remove(el);
	  }, vm, cb);
	}

	/**
	 * Apply transitions with an operation callback.
	 *
	 * @param {Element} el
	 * @param {Number} direction
	 *                  1: enter
	 *                 -1: leave
	 * @param {Function} op - the actual DOM operation
	 * @param {Vue} vm
	 * @param {Function} [cb]
	 */

	function applyTransition(el, direction, op, vm, cb) {
	  var transition = el.__v_trans;
	  if (!transition ||
	  // skip if there are no js hooks and CSS transition is
	  // not supported
	  !transition.hooks && !transitionEndEvent ||
	  // skip transitions for initial compile
	  !vm._isCompiled ||
	  // if the vm is being manipulated by a parent directive
	  // during the parent's compilation phase, skip the
	  // animation.
	  vm.$parent && !vm.$parent._isCompiled) {
	    op();
	    if (cb) cb();
	    return;
	  }
	  var action = direction > 0 ? 'enter' : 'leave';
	  transition[action](op, cb);
	}

	var transition = Object.freeze({
	  appendWithTransition: appendWithTransition,
	  beforeWithTransition: beforeWithTransition,
	  removeWithTransition: removeWithTransition,
	  applyTransition: applyTransition
	});

	/**
	 * Query an element selector if it's not an element already.
	 *
	 * @param {String|Element} el
	 * @return {Element}
	 */

	function query(el) {
	  if (typeof el === 'string') {
	    var selector = el;
	    el = document.querySelector(el);
	    if (!el) {
	      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);
	    }
	  }
	  return el;
	}

	/**
	 * Check if a node is in the document.
	 * Note: document.documentElement.contains should work here
	 * but always returns false for comment nodes in phantomjs,
	 * making unit tests difficult. This is fixed by doing the
	 * contains() check on the node's parentNode instead of
	 * the node itself.
	 *
	 * @param {Node} node
	 * @return {Boolean}
	 */

	function inDoc(node) {
	  if (!node) return false;
	  var doc = node.ownerDocument.documentElement;
	  var parent = node.parentNode;
	  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));
	}

	/**
	 * Get and remove an attribute from a node.
	 *
	 * @param {Node} node
	 * @param {String} _attr
	 */

	function getAttr(node, _attr) {
	  var val = node.getAttribute(_attr);
	  if (val !== null) {
	    node.removeAttribute(_attr);
	  }
	  return val;
	}

	/**
	 * Get an attribute with colon or v-bind: prefix.
	 *
	 * @param {Node} node
	 * @param {String} name
	 * @return {String|null}
	 */

	function getBindAttr(node, name) {
	  var val = getAttr(node, ':' + name);
	  if (val === null) {
	    val = getAttr(node, 'v-bind:' + name);
	  }
	  return val;
	}

	/**
	 * Check the presence of a bind attribute.
	 *
	 * @param {Node} node
	 * @param {String} name
	 * @return {Boolean}
	 */

	function hasBindAttr(node, name) {
	  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);
	}

	/**
	 * Insert el before target
	 *
	 * @param {Element} el
	 * @param {Element} target
	 */

	function before(el, target) {
	  target.parentNode.insertBefore(el, target);
	}

	/**
	 * Insert el after target
	 *
	 * @param {Element} el
	 * @param {Element} target
	 */

	function after(el, target) {
	  if (target.nextSibling) {
	    before(el, target.nextSibling);
	  } else {
	    target.parentNode.appendChild(el);
	  }
	}

	/**
	 * Remove el from DOM
	 *
	 * @param {Element} el
	 */

	function remove(el) {
	  el.parentNode.removeChild(el);
	}

	/**
	 * Prepend el to target
	 *
	 * @param {Element} el
	 * @param {Element} target
	 */

	function prepend(el, target) {
	  if (target.firstChild) {
	    before(el, target.firstChild);
	  } else {
	    target.appendChild(el);
	  }
	}

	/**
	 * Replace target with el
	 *
	 * @param {Element} target
	 * @param {Element} el
	 */

	function replace(target, el) {
	  var parent = target.parentNode;
	  if (parent) {
	    parent.replaceChild(el, target);
	  }
	}

	/**
	 * Add event listener shorthand.
	 *
	 * @param {Element} el
	 * @param {String} event
	 * @param {Function} cb
	 * @param {Boolean} [useCapture]
	 */

	function on(el, event, cb, useCapture) {
	  el.addEventListener(event, cb, useCapture);
	}

	/**
	 * Remove event listener shorthand.
	 *
	 * @param {Element} el
	 * @param {String} event
	 * @param {Function} cb
	 */

	function off(el, event, cb) {
	  el.removeEventListener(event, cb);
	}

	/**
	 * For IE9 compat: when both class and :class are present
	 * getAttribute('class') returns wrong value...
	 *
	 * @param {Element} el
	 * @return {String}
	 */

	function getClass(el) {
	  var classname = el.className;
	  if (typeof classname === 'object') {
	    classname = classname.baseVal || '';
	  }
	  return classname;
	}

	/**
	 * In IE9, setAttribute('class') will result in empty class
	 * if the element also has the :class attribute; However in
	 * PhantomJS, setting `className` does not work on SVG elements...
	 * So we have to do a conditional check here.
	 *
	 * @param {Element} el
	 * @param {String} cls
	 */

	function setClass(el, cls) {
	  /* istanbul ignore if */
	  if (isIE9 && !/svg$/.test(el.namespaceURI)) {
	    el.className = cls;
	  } else {
	    el.setAttribute('class', cls);
	  }
	}

	/**
	 * Add class with compatibility for IE & SVG
	 *
	 * @param {Element} el
	 * @param {String} cls
	 */

	function addClass(el, cls) {
	  if (el.classList) {
	    el.classList.add(cls);
	  } else {
	    var cur = ' ' + getClass(el) + ' ';
	    if (cur.indexOf(' ' + cls + ' ') < 0) {
	      setClass(el, (cur + cls).trim());
	    }
	  }
	}

	/**
	 * Remove class with compatibility for IE & SVG
	 *
	 * @param {Element} el
	 * @param {String} cls
	 */

	function removeClass(el, cls) {
	  if (el.classList) {
	    el.classList.remove(cls);
	  } else {
	    var cur = ' ' + getClass(el) + ' ';
	    var tar = ' ' + cls + ' ';
	    while (cur.indexOf(tar) >= 0) {
	      cur = cur.replace(tar, ' ');
	    }
	    setClass(el, cur.trim());
	  }
	  if (!el.className) {
	    el.removeAttribute('class');
	  }
	}

	/**
	 * Extract raw content inside an element into a temporary
	 * container div
	 *
	 * @param {Element} el
	 * @param {Boolean} asFragment
	 * @return {Element|DocumentFragment}
	 */

	function extractContent(el, asFragment) {
	  var child;
	  var rawContent;
	  /* istanbul ignore if */
	  if (isTemplate(el) && isFragment(el.content)) {
	    el = el.content;
	  }
	  if (el.hasChildNodes()) {
	    trimNode(el);
	    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');
	    /* eslint-disable no-cond-assign */
	    while (child = el.firstChild) {
	      /* eslint-enable no-cond-assign */
	      rawContent.appendChild(child);
	    }
	  }
	  return rawContent;
	}

	/**
	 * Trim possible empty head/tail text and comment
	 * nodes inside a parent.
	 *
	 * @param {Node} node
	 */

	function trimNode(node) {
	  var child;
	  /* eslint-disable no-sequences */
	  while ((child = node.firstChild, isTrimmable(child))) {
	    node.removeChild(child);
	  }
	  while ((child = node.lastChild, isTrimmable(child))) {
	    node.removeChild(child);
	  }
	  /* eslint-enable no-sequences */
	}

	function isTrimmable(node) {
	  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);
	}

	/**
	 * Check if an element is a template tag.
	 * Note if the template appears inside an SVG its tagName
	 * will be in lowercase.
	 *
	 * @param {Element} el
	 */

	function isTemplate(el) {
	  return el.tagName && el.tagName.toLowerCase() === 'template';
	}

	/**
	 * Create an "anchor" for performing dom insertion/removals.
	 * This is used in a number of scenarios:
	 * - fragment instance
	 * - v-html
	 * - v-if
	 * - v-for
	 * - component
	 *
	 * @param {String} content
	 * @param {Boolean} persist - IE trashes empty textNodes on
	 *                            cloneNode(true), so in certain
	 *                            cases the anchor needs to be
	 *                            non-empty to be persisted in
	 *                            templates.
	 * @return {Comment|Text}
	 */

	function createAnchor(content, persist) {
	  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');
	  anchor.__v_anchor = true;
	  return anchor;
	}

	/**
	 * Find a component ref attribute that starts with $.
	 *
	 * @param {Element} node
	 * @return {String|undefined}
	 */

	var refRE = /^v-ref:/;

	function findRef(node) {
	  if (node.hasAttributes()) {
	    var attrs = node.attributes;
	    for (var i = 0, l = attrs.length; i < l; i++) {
	      var name = attrs[i].name;
	      if (refRE.test(name)) {
	        return camelize(name.replace(refRE, ''));
	      }
	    }
	  }
	}

	/**
	 * Map a function to a range of nodes .
	 *
	 * @param {Node} node
	 * @param {Node} end
	 * @param {Function} op
	 */

	function mapNodeRange(node, end, op) {
	  var next;
	  while (node !== end) {
	    next = node.nextSibling;
	    op(node);
	    node = next;
	  }
	  op(end);
	}

	/**
	 * Remove a range of nodes with transition, store
	 * the nodes in a fragment with correct ordering,
	 * and call callback when done.
	 *
	 * @param {Node} start
	 * @param {Node} end
	 * @param {Vue} vm
	 * @param {DocumentFragment} frag
	 * @param {Function} cb
	 */

	function removeNodeRange(start, end, vm, frag, cb) {
	  var done = false;
	  var removed = 0;
	  var nodes = [];
	  mapNodeRange(start, end, function (node) {
	    if (node === end) done = true;
	    nodes.push(node);
	    removeWithTransition(node, vm, onRemoved);
	  });
	  function onRemoved() {
	    removed++;
	    if (done && removed >= nodes.length) {
	      for (var i = 0; i < nodes.length; i++) {
	        frag.appendChild(nodes[i]);
	      }
	      cb && cb();
	    }
	  }
	}

	/**
	 * Check if a node is a DocumentFragment.
	 *
	 * @param {Node} node
	 * @return {Boolean}
	 */

	function isFragment(node) {
	  return node && node.nodeType === 11;
	}

	/**
	 * Get outerHTML of elements, taking care
	 * of SVG elements in IE as well.
	 *
	 * @param {Element} el
	 * @return {String}
	 */

	function getOuterHTML(el) {
	  if (el.outerHTML) {
	    return el.outerHTML;
	  } else {
	    var container = document.createElement('div');
	    container.appendChild(el.cloneNode(true));
	    return container.innerHTML;
	  }
	}

	var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;
	var reservedTagRE = /^(slot|partial|component)$/i;

	var isUnknownElement = undefined;
	if (process.env.NODE_ENV !== 'production') {
	  isUnknownElement = function (el, tag) {
	    if (tag.indexOf('-') > -1) {
	      // http://stackoverflow.com/a/28210364/1070244
	      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
	    } else {
	      return (/HTMLUnknownElement/.test(el.toString()) &&
	        // Chrome returns unknown for several HTML5 elements.
	        // https://code.google.com/p/chromium/issues/detail?id=540526
	        // Firefox returns unknown for some "Interactive elements."
	        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)
	      );
	    }
	  };
	}

	/**
	 * Check if an element is a component, if yes return its
	 * component id.
	 *
	 * @param {Element} el
	 * @param {Object} options
	 * @return {Object|undefined}
	 */

	function checkComponentAttr(el, options) {
	  var tag = el.tagName.toLowerCase();
	  var hasAttrs = el.hasAttributes();
	  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {
	    if (resolveAsset(options, 'components', tag)) {
	      return { id: tag };
	    } else {
	      var is = hasAttrs && getIsBinding(el, options);
	      if (is) {
	        return is;
	      } else if (process.env.NODE_ENV !== 'production') {
	        var expectedTag = options._componentNameMap && options._componentNameMap[tag];
	        if (expectedTag) {
	          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');
	        } else if (isUnknownElement(el, tag)) {
	          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.');
	        }
	      }
	    }
	  } else if (hasAttrs) {
	    return getIsBinding(el, options);
	  }
	}

	/**
	 * Get "is" binding from an element.
	 *
	 * @param {Element} el
	 * @param {Object} options
	 * @return {Object|undefined}
	 */

	function getIsBinding(el, options) {
	  // dynamic syntax
	  var exp = el.getAttribute('is');
	  if (exp != null) {
	    if (resolveAsset(options, 'components', exp)) {
	      el.removeAttribute('is');
	      return { id: exp };
	    }
	  } else {
	    exp = getBindAttr(el, 'is');
	    if (exp != null) {
	      return { id: exp, dynamic: true };
	    }
	  }
	}

	/**
	 * Option overwriting strategies are functions that handle
	 * how to merge a parent option value and a child option
	 * value into the final value.
	 *
	 * All strategy functions follow the same signature:
	 *
	 * @param {*} parentVal
	 * @param {*} childVal
	 * @param {Vue} [vm]
	 */

	var strats = config.optionMergeStrategies = Object.create(null);

	/**
	 * Helper that recursively merges two data objects together.
	 */

	function mergeData(to, from) {
	  var key, toVal, fromVal;
	  for (key in from) {
	    toVal = to[key];
	    fromVal = from[key];
	    if (!hasOwn(to, key)) {
	      set(to, key, fromVal);
	    } else if (isObject(toVal) && isObject(fromVal)) {
	      mergeData(toVal, fromVal);
	    }
	  }
	  return to;
	}

	/**
	 * Data
	 */

	strats.data = function (parentVal, childVal, vm) {
	  if (!vm) {
	    // in a Vue.extend merge, both should be functions
	    if (!childVal) {
	      return parentVal;
	    }
	    if (typeof childVal !== 'function') {
	      process.env.NODE_ENV !== 'production' && warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);
	      return parentVal;
	    }
	    if (!parentVal) {
	      return childVal;
	    }
	    // when parentVal & childVal are both present,
	    // we need to return a function that returns the
	    // merged result of both functions... no need to
	    // check if parentVal is a function here because
	    // it has to be a function to pass previous merges.
	    return function mergedDataFn() {
	      return mergeData(childVal.call(this), parentVal.call(this));
	    };
	  } else if (parentVal || childVal) {
	    return function mergedInstanceDataFn() {
	      // instance merge
	      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;
	      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;
	      if (instanceData) {
	        return mergeData(instanceData, defaultData);
	      } else {
	        return defaultData;
	      }
	    };
	  }
	};

	/**
	 * El
	 */

	strats.el = function (parentVal, childVal, vm) {
	  if (!vm && childVal && typeof childVal !== 'function') {
	    process.env.NODE_ENV !== 'production' && warn('The "el" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);
	    return;
	  }
	  var ret = childVal || parentVal;
	  // invoke the element factory if this is instance merge
	  return vm && typeof ret === 'function' ? ret.call(vm) : ret;
	};

	/**
	 * Hooks and param attributes are merged as arrays.
	 */

	strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {
	  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;
	};

	/**
	 * Assets
	 *
	 * When a vm is present (instance creation), we need to do
	 * a three-way merge between constructor options, instance
	 * options and parent options.
	 */

	function mergeAssets(parentVal, childVal) {
	  var res = Object.create(parentVal || null);
	  return childVal ? extend(res, guardArrayAssets(childVal)) : res;
	}

	config._assetTypes.forEach(function (type) {
	  strats[type + 's'] = mergeAssets;
	});

	/**
	 * Events & Watchers.
	 *
	 * Events & watchers hashes should not overwrite one
	 * another, so we merge them as arrays.
	 */

	strats.watch = strats.events = function (parentVal, childVal) {
	  if (!childVal) return parentVal;
	  if (!parentVal) return childVal;
	  var ret = {};
	  extend(ret, parentVal);
	  for (var key in childVal) {
	    var parent = ret[key];
	    var child = childVal[key];
	    if (parent && !isArray(parent)) {
	      parent = [parent];
	    }
	    ret[key] = parent ? parent.concat(child) : [child];
	  }
	  return ret;
	};

	/**
	 * Other object hashes.
	 */

	strats.props = strats.methods = strats.computed = function (parentVal, childVal) {
	  if (!childVal) return parentVal;
	  if (!parentVal) return childVal;
	  var ret = Object.create(null);
	  extend(ret, parentVal);
	  extend(ret, childVal);
	  return ret;
	};

	/**
	 * Default strategy.
	 */

	var defaultStrat = function defaultStrat(parentVal, childVal) {
	  return childVal === undefined ? parentVal : childVal;
	};

	/**
	 * Make sure component options get converted to actual
	 * constructors.
	 *
	 * @param {Object} options
	 */

	function guardComponents(options) {
	  if (options.components) {
	    var components = options.components = guardArrayAssets(options.components);
	    var ids = Object.keys(components);
	    var def;
	    if (process.env.NODE_ENV !== 'production') {
	      var map = options._componentNameMap = {};
	    }
	    for (var i = 0, l = ids.length; i < l; i++) {
	      var key = ids[i];
	      if (commonTagRE.test(key) || reservedTagRE.test(key)) {
	        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);
	        continue;
	      }
	      // record a all lowercase <-> kebab-case mapping for
	      // possible custom element case error warning
	      if (process.env.NODE_ENV !== 'production') {
	        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);
	      }
	      def = components[key];
	      if (isPlainObject(def)) {
	        components[key] = Vue.extend(def);
	      }
	    }
	  }
	}

	/**
	 * Ensure all props option syntax are normalized into the
	 * Object-based format.
	 *
	 * @param {Object} options
	 */

	function guardProps(options) {
	  var props = options.props;
	  var i, val;
	  if (isArray(props)) {
	    options.props = {};
	    i = props.length;
	    while (i--) {
	      val = props[i];
	      if (typeof val === 'string') {
	        options.props[val] = null;
	      } else if (val.name) {
	        options.props[val.name] = val;
	      }
	    }
	  } else if (isPlainObject(props)) {
	    var keys = Object.keys(props);
	    i = keys.length;
	    while (i--) {
	      val = props[keys[i]];
	      if (typeof val === 'function') {
	        props[keys[i]] = { type: val };
	      }
	    }
	  }
	}

	/**
	 * Guard an Array-format assets option and converted it
	 * into the key-value Object format.
	 *
	 * @param {Object|Array} assets
	 * @return {Object}
	 */

	function guardArrayAssets(assets) {
	  if (isArray(assets)) {
	    var res = {};
	    var i = assets.length;
	    var asset;
	    while (i--) {
	      asset = assets[i];
	      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;
	      if (!id) {
	        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a "name" or "id" field.');
	      } else {
	        res[id] = asset;
	      }
	    }
	    return res;
	  }
	  return assets;
	}

	/**
	 * Merge two option objects into a new one.
	 * Core utility used in both instantiation and inheritance.
	 *
	 * @param {Object} parent
	 * @param {Object} child
	 * @param {Vue} [vm] - if vm is present, indicates this is
	 *                     an instantiation merge.
	 */

	function mergeOptions(parent, child, vm) {
	  guardComponents(child);
	  guardProps(child);
	  if (process.env.NODE_ENV !== 'production') {
	    if (child.propsData && !vm) {
	      warn('propsData can only be used as an instantiation option.');
	    }
	  }
	  var options = {};
	  var key;
	  if (child['extends']) {
	    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);
	  }
	  if (child.mixins) {
	    for (var i = 0, l = child.mixins.length; i < l; i++) {
	      var mixin = child.mixins[i];
	      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;
	      parent = mergeOptions(parent, mixinOptions, vm);
	    }
	  }
	  for (key in parent) {
	    mergeField(key);
	  }
	  for (key in child) {
	    if (!hasOwn(parent, key)) {
	      mergeField(key);
	    }
	  }
	  function mergeField(key) {
	    var strat = strats[key] || defaultStrat;
	    options[key] = strat(parent[key], child[key], vm, key);
	  }
	  return options;
	}

	/**
	 * Resolve an asset.
	 * This function is used because child instances need access
	 * to assets defined in its ancestor chain.
	 *
	 * @param {Object} options
	 * @param {String} type
	 * @param {String} id
	 * @param {Boolean} warnMissing
	 * @return {Object|Function}
	 */

	function resolveAsset(options, type, id, warnMissing) {
	  /* istanbul ignore if */
	  if (typeof id !== 'string') {
	    return;
	  }
	  var assets = options[type];
	  var camelizedId;
	  var res = assets[id] ||
	  // camelCase ID
	  assets[camelizedId = camelize(id)] ||
	  // Pascal Case ID
	  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];
	  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {
	    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
	  }
	  return res;
	}

	var uid$1 = 0;

	/**
	 * A dep is an observable that can have multiple
	 * directives subscribing to it.
	 *
	 * @constructor
	 */
	function Dep() {
	  this.id = uid$1++;
	  this.subs = [];
	}

	// the current target watcher being evaluated.
	// this is globally unique because there could be only one
	// watcher being evaluated at any time.
	Dep.target = null;

	/**
	 * Add a directive subscriber.
	 *
	 * @param {Directive} sub
	 */

	Dep.prototype.addSub = function (sub) {
	  this.subs.push(sub);
	};

	/**
	 * Remove a directive subscriber.
	 *
	 * @param {Directive} sub
	 */

	Dep.prototype.removeSub = function (sub) {
	  this.subs.$remove(sub);
	};

	/**
	 * Add self as a dependency to the target watcher.
	 */

	Dep.prototype.depend = function () {
	  Dep.target.addDep(this);
	};

	/**
	 * Notify all subscribers of a new value.
	 */

	Dep.prototype.notify = function () {
	  // stablize the subscriber list first
	  var subs = toArray(this.subs);
	  for (var i = 0, l = subs.length; i < l; i++) {
	    subs[i].update();
	  }
	};

	var arrayProto = Array.prototype;
	var arrayMethods = Object.create(arrayProto)

	/**
	 * Intercept mutating methods and emit events
	 */

	;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {
	  // cache original method
	  var original = arrayProto[method];
	  def(arrayMethods, method, function mutator() {
	    // avoid leaking arguments:
	    // http://jsperf.com/closure-with-arguments
	    var i = arguments.length;
	    var args = new Array(i);
	    while (i--) {
	      args[i] = arguments[i];
	    }
	    var result = original.apply(this, args);
	    var ob = this.__ob__;
	    var inserted;
	    switch (method) {
	      case 'push':
	        inserted = args;
	        break;
	      case 'unshift':
	        inserted = args;
	        break;
	      case 'splice':
	        inserted = args.slice(2);
	        break;
	    }
	    if (inserted) ob.observeArray(inserted);
	    // notify change
	    ob.dep.notify();
	    return result;
	  });
	});

	/**
	 * Swap the element at the given index with a new value
	 * and emits corresponding event.
	 *
	 * @param {Number} index
	 * @param {*} val
	 * @return {*} - replaced element
	 */

	def(arrayProto, '$set', function $set(index, val) {
	  if (index >= this.length) {
	    this.length = Number(index) + 1;
	  }
	  return this.splice(index, 1, val)[0];
	});

	/**
	 * Convenience method to remove the element at given index or target element reference.
	 *
	 * @param {*} item
	 */

	def(arrayProto, '$remove', function $remove(item) {
	  /* istanbul ignore if */
	  if (!this.length) return;
	  var index = indexOf(this, item);
	  if (index > -1) {
	    return this.splice(index, 1);
	  }
	});

	var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

	/**
	 * By default, when a reactive property is set, the new value is
	 * also converted to become reactive. However in certain cases, e.g.
	 * v-for scope alias and props, we don't want to force conversion
	 * because the value may be a nested value under a frozen data structure.
	 *
	 * So whenever we want to set a reactive property without forcing
	 * conversion on the new value, we wrap that call inside this function.
	 */

	var shouldConvert = true;

	function withoutConversion(fn) {
	  shouldConvert = false;
	  fn();
	  shouldConvert = true;
	}

	/**
	 * Observer class that are attached to each observed
	 * object. Once attached, the observer converts target
	 * object's property keys into getter/setters that
	 * collect dependencies and dispatches updates.
	 *
	 * @param {Array|Object} value
	 * @constructor
	 */

	function Observer(value) {
	  this.value = value;
	  this.dep = new Dep();
	  def(value, '__ob__', this);
	  if (isArray(value)) {
	    var augment = hasProto ? protoAugment : copyAugment;
	    augment(value, arrayMethods, arrayKeys);
	    this.observeArray(value);
	  } else {
	    this.walk(value);
	  }
	}

	// Instance methods

	/**
	 * Walk through each property and convert them into
	 * getter/setters. This method should only be called when
	 * value type is Object.
	 *
	 * @param {Object} obj
	 */

	Observer.prototype.walk = function (obj) {
	  var keys = Object.keys(obj);
	  for (var i = 0, l = keys.length; i < l; i++) {
	    this.convert(keys[i], obj[keys[i]]);
	  }
	};

	/**
	 * Observe a list of Array items.
	 *
	 * @param {Array} items
	 */

	Observer.prototype.observeArray = function (items) {
	  for (var i = 0, l = items.length; i < l; i++) {
	    observe(items[i]);
	  }
	};

	/**
	 * Convert a property into getter/setter so we can emit
	 * the events when the property is accessed/changed.
	 *
	 * @param {String} key
	 * @param {*} val
	 */

	Observer.prototype.convert = function (key, val) {
	  defineReactive(this.value, key, val);
	};

	/**
	 * Add an owner vm, so that when $set/$delete mutations
	 * happen we can notify owner vms to proxy the keys and
	 * digest the watchers. This is only called when the object
	 * is observed as an instance's root $data.
	 *
	 * @param {Vue} vm
	 */

	Observer.prototype.addVm = function (vm) {
	  (this.vms || (this.vms = [])).push(vm);
	};

	/**
	 * Remove an owner vm. This is called when the object is
	 * swapped out as an instance's $data object.
	 *
	 * @param {Vue} vm
	 */

	Observer.prototype.removeVm = function (vm) {
	  this.vms.$remove(vm);
	};

	// helpers

	/**
	 * Augment an target Object or Array by intercepting
	 * the prototype chain using __proto__
	 *
	 * @param {Object|Array} target
	 * @param {Object} src
	 */

	function protoAugment(target, src) {
	  /* eslint-disable no-proto */
	  target.__proto__ = src;
	  /* eslint-enable no-proto */
	}

	/**
	 * Augment an target Object or Array by defining
	 * hidden properties.
	 *
	 * @param {Object|Array} target
	 * @param {Object} proto
	 */

	function copyAugment(target, src, keys) {
	  for (var i = 0, l = keys.length; i < l; i++) {
	    var key = keys[i];
	    def(target, key, src[key]);
	  }
	}

	/**
	 * Attempt to create an observer instance for a value,
	 * returns the new observer if successfully observed,
	 * or the existing observer if the value already has one.
	 *
	 * @param {*} value
	 * @param {Vue} [vm]
	 * @return {Observer|undefined}
	 * @static
	 */

	function observe(value, vm) {
	  if (!value || typeof value !== 'object') {
	    return;
	  }
	  var ob;
	  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
	    ob = value.__ob__;
	  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
	    ob = new Observer(value);
	  }
	  if (ob && vm) {
	    ob.addVm(vm);
	  }
	  return ob;
	}

	/**
	 * Define a reactive property on an Object.
	 *
	 * @param {Object} obj
	 * @param {String} key
	 * @param {*} val
	 */

	function defineReactive(obj, key, val) {
	  var dep = new Dep();

	  var property = Object.getOwnPropertyDescriptor(obj, key);
	  if (property && property.configurable === false) {
	    return;
	  }

	  // cater for pre-defined getter/setters
	  var getter = property && property.get;
	  var setter = property && property.set;

	  var childOb = observe(val);
	  Object.defineProperty(obj, key, {
	    enumerable: true,
	    configurable: true,
	    get: function reactiveGetter() {
	      var value = getter ? getter.call(obj) : val;
	      if (Dep.target) {
	        dep.depend();
	        if (childOb) {
	          childOb.dep.depend();
	        }
	        if (isArray(value)) {
	          for (var e, i = 0, l = value.length; i < l; i++) {
	            e = value[i];
	            e && e.__ob__ && e.__ob__.dep.depend();
	          }
	        }
	      }
	      return value;
	    },
	    set: function reactiveSetter(newVal) {
	      var value = getter ? getter.call(obj) : val;
	      if (newVal === value) {
	        return;
	      }
	      if (setter) {
	        setter.call(obj, newVal);
	      } else {
	        val = newVal;
	      }
	      childOb = observe(newVal);
	      dep.notify();
	    }
	  });
	}



	var util = Object.freeze({
		defineReactive: defineReactive,
		set: set,
		del: del,
		hasOwn: hasOwn,
		isLiteral: isLiteral,
		isReserved: isReserved,
		_toString: _toString,
		toNumber: toNumber,
		toBoolean: toBoolean,
		stripQuotes: stripQuotes,
		camelize: camelize,
		hyphenate: hyphenate,
		classify: classify,
		bind: bind,
		toArray: toArray,
		extend: extend,
		isObject: isObject,
		isPlainObject: isPlainObject,
		def: def,
		debounce: _debounce,
		indexOf: indexOf,
		cancellable: cancellable,
		looseEqual: looseEqual,
		isArray: isArray,
		hasProto: hasProto,
		inBrowser: inBrowser,
		devtools: devtools,
		isIE: isIE,
		isIE9: isIE9,
		isAndroid: isAndroid,
		isIOS: isIOS,
		get transitionProp () { return transitionProp; },
		get transitionEndEvent () { return transitionEndEvent; },
		get animationProp () { return animationProp; },
		get animationEndEvent () { return animationEndEvent; },
		nextTick: nextTick,
		get _Set () { return _Set; },
		query: query,
		inDoc: inDoc,
		getAttr: getAttr,
		getBindAttr: getBindAttr,
		hasBindAttr: hasBindAttr,
		before: before,
		after: after,
		remove: remove,
		prepend: prepend,
		replace: replace,
		on: on,
		off: off,
		setClass: setClass,
		addClass: addClass,
		removeClass: removeClass,
		extractContent: extractContent,
		trimNode: trimNode,
		isTemplate: isTemplate,
		createAnchor: createAnchor,
		findRef: findRef,
		mapNodeRange: mapNodeRange,
		removeNodeRange: removeNodeRange,
		isFragment: isFragment,
		getOuterHTML: getOuterHTML,
		mergeOptions: mergeOptions,
		resolveAsset: resolveAsset,
		checkComponentAttr: checkComponentAttr,
		commonTagRE: commonTagRE,
		reservedTagRE: reservedTagRE,
		get warn () { return warn; }
	});

	var uid = 0;

	function initMixin (Vue) {
	  /**
	   * The main init sequence. This is called for every
	   * instance, including ones that are created from extended
	   * constructors.
	   *
	   * @param {Object} options - this options object should be
	   *                           the result of merging class
	   *                           options and the options passed
	   *                           in to the constructor.
	   */

	  Vue.prototype._init = function (options) {
	    options = options || {};

	    this.$el = null;
	    this.$parent = options.parent;
	    this.$root = this.$parent ? this.$parent.$root : this;
	    this.$children = [];
	    this.$refs = {}; // child vm references
	    this.$els = {}; // element references
	    this._watchers = []; // all watchers as an array
	    this._directives = []; // all directives

	    // a uid
	    this._uid = uid++;

	    // a flag to avoid this being observed
	    this._isVue = true;

	    // events bookkeeping
	    this._events = {}; // registered callbacks
	    this._eventsCount = {}; // for $broadcast optimization

	    // fragment instance properties
	    this._isFragment = false;
	    this._fragment = // @type {DocumentFragment}
	    this._fragmentStart = // @type {Text|Comment}
	    this._fragmentEnd = null; // @type {Text|Comment}

	    // lifecycle state
	    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;
	    this._unlinkFn = null;

	    // context:
	    // if this is a transcluded component, context
	    // will be the common parent vm of this instance
	    // and its host.
	    this._context = options._context || this.$parent;

	    // scope:
	    // if this is inside an inline v-for, the scope
	    // will be the intermediate scope created for this
	    // repeat fragment. this is used for linking props
	    // and container directives.
	    this._scope = options._scope;

	    // fragment:
	    // if this instance is compiled inside a Fragment, it
	    // needs to register itself as a child of that fragment
	    // for attach/detach to work properly.
	    this._frag = options._frag;
	    if (this._frag) {
	      this._frag.children.push(this);
	    }

	    // push self into parent / transclusion host
	    if (this.$parent) {
	      this.$parent.$children.push(this);
	    }

	    // merge options.
	    options = this.$options = mergeOptions(this.constructor.options, options, this);

	    // set ref
	    this._updateRef();

	    // initialize data as empty object.
	    // it will be filled up in _initData().
	    this._data = {};

	    // call init hook
	    this._callHook('init');

	    // initialize data observation and scope inheritance.
	    this._initState();

	    // setup event system and option events.
	    this._initEvents();

	    // call created hook
	    this._callHook('created');

	    // if `el` option is passed, start compilation.
	    if (options.el) {
	      this.$mount(options.el);
	    }
	  };
	}

	var pathCache = new Cache(1000);

	// actions
	var APPEND = 0;
	var PUSH = 1;
	var INC_SUB_PATH_DEPTH = 2;
	var PUSH_SUB_PATH = 3;

	// states
	var BEFORE_PATH = 0;
	var IN_PATH = 1;
	var BEFORE_IDENT = 2;
	var IN_IDENT = 3;
	var IN_SUB_PATH = 4;
	var IN_SINGLE_QUOTE = 5;
	var IN_DOUBLE_QUOTE = 6;
	var AFTER_PATH = 7;
	var ERROR = 8;

	var pathStateMachine = [];

	pathStateMachine[BEFORE_PATH] = {
	  'ws': [BEFORE_PATH],
	  'ident': [IN_IDENT, APPEND],
	  '[': [IN_SUB_PATH],
	  'eof': [AFTER_PATH]
	};

	pathStateMachine[IN_PATH] = {
	  'ws': [IN_PATH],
	  '.': [BEFORE_IDENT],
	  '[': [IN_SUB_PATH],
	  'eof': [AFTER_PATH]
	};

	pathStateMachine[BEFORE_IDENT] = {
	  'ws': [BEFORE_IDENT],
	  'ident': [IN_IDENT, APPEND]
	};

	pathStateMachine[IN_IDENT] = {
	  'ident': [IN_IDENT, APPEND],
	  '0': [IN_IDENT, APPEND],
	  'number': [IN_IDENT, APPEND],
	  'ws': [IN_PATH, PUSH],
	  '.': [BEFORE_IDENT, PUSH],
	  '[': [IN_SUB_PATH, PUSH],
	  'eof': [AFTER_PATH, PUSH]
	};

	pathStateMachine[IN_SUB_PATH] = {
	  "'": [IN_SINGLE_QUOTE, APPEND],
	  '"': [IN_DOUBLE_QUOTE, APPEND],
	  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],
	  ']': [IN_PATH, PUSH_SUB_PATH],
	  'eof': ERROR,
	  'else': [IN_SUB_PATH, APPEND]
	};

	pathStateMachine[IN_SINGLE_QUOTE] = {
	  "'": [IN_SUB_PATH, APPEND],
	  'eof': ERROR,
	  'else': [IN_SINGLE_QUOTE, APPEND]
	};

	pathStateMachine[IN_DOUBLE_QUOTE] = {
	  '"': [IN_SUB_PATH, APPEND],
	  'eof': ERROR,
	  'else': [IN_DOUBLE_QUOTE, APPEND]
	};

	/**
	 * Determine the type of a character in a keypath.
	 *
	 * @param {Char} ch
	 * @return {String} type
	 */

	function getPathCharType(ch) {
	  if (ch === undefined) {
	    return 'eof';
	  }

	  var code = ch.charCodeAt(0);

	  switch (code) {
	    case 0x5B: // [
	    case 0x5D: // ]
	    case 0x2E: // .
	    case 0x22: // "
	    case 0x27: // '
	    case 0x30:
	      // 0
	      return ch;

	    case 0x5F: // _
	    case 0x24:
	      // $
	      return 'ident';

	    case 0x20: // Space
	    case 0x09: // Tab
	    case 0x0A: // Newline
	    case 0x0D: // Return
	    case 0xA0: // No-break space
	    case 0xFEFF: // Byte Order Mark
	    case 0x2028: // Line Separator
	    case 0x2029:
	      // Paragraph Separator
	      return 'ws';
	  }

	  // a-z, A-Z
	  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {
	    return 'ident';
	  }

	  // 1-9
	  if (code >= 0x31 && code <= 0x39) {
	    return 'number';
	  }

	  return 'else';
	}

	/**
	 * Format a subPath, return its plain form if it is
	 * a literal string or number. Otherwise prepend the
	 * dynamic indicator (*).
	 *
	 * @param {String} path
	 * @return {String}
	 */

	function formatSubPath(path) {
	  var trimmed = path.trim();
	  // invalid leading 0
	  if (path.charAt(0) === '0' && isNaN(path)) {
	    return false;
	  }
	  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;
	}

	/**
	 * Parse a string path into an array of segments
	 *
	 * @param {String} path
	 * @return {Array|undefined}
	 */

	function parse(path) {
	  var keys = [];
	  var index = -1;
	  var mode = BEFORE_PATH;
	  var subPathDepth = 0;
	  var c, newChar, key, type, transition, action, typeMap;

	  var actions = [];

	  actions[PUSH] = function () {
	    if (key !== undefined) {
	      keys.push(key);
	      key = undefined;
	    }
	  };

	  actions[APPEND] = function () {
	    if (key === undefined) {
	      key = newChar;
	    } else {
	      key += newChar;
	    }
	  };

	  actions[INC_SUB_PATH_DEPTH] = function () {
	    actions[APPEND]();
	    subPathDepth++;
	  };

	  actions[PUSH_SUB_PATH] = function () {
	    if (subPathDepth > 0) {
	      subPathDepth--;
	      mode = IN_SUB_PATH;
	      actions[APPEND]();
	    } else {
	      subPathDepth = 0;
	      key = formatSubPath(key);
	      if (key === false) {
	        return false;
	      } else {
	        actions[PUSH]();
	      }
	    }
	  };

	  function maybeUnescapeQuote() {
	    var nextChar = path[index + 1];
	    if (mode === IN_SINGLE_QUOTE && nextChar === "'" || mode === IN_DOUBLE_QUOTE && nextChar === '"') {
	      index++;
	      newChar = '\\' + nextChar;
	      actions[APPEND]();
	      return true;
	    }
	  }

	  while (mode != null) {
	    index++;
	    c = path[index];

	    if (c === '\\' && maybeUnescapeQuote()) {
	      continue;
	    }

	    type = getPathCharType(c);
	    typeMap = pathStateMachine[mode];
	    transition = typeMap[type] || typeMap['else'] || ERROR;

	    if (transition === ERROR) {
	      return; // parse error
	    }

	    mode = transition[0];
	    action = actions[transition[1]];
	    if (action) {
	      newChar = transition[2];
	      newChar = newChar === undefined ? c : newChar;
	      if (action() === false) {
	        return;
	      }
	    }

	    if (mode === AFTER_PATH) {
	      keys.raw = path;
	      return keys;
	    }
	  }
	}

	/**
	 * External parse that check for a cache hit first
	 *
	 * @param {String} path
	 * @return {Array|undefined}
	 */

	function parsePath(path) {
	  var hit = pathCache.get(path);
	  if (!hit) {
	    hit = parse(path);
	    if (hit) {
	      pathCache.put(path, hit);
	    }
	  }
	  return hit;
	}

	/**
	 * Get from an object from a path string
	 *
	 * @param {Object} obj
	 * @param {String} path
	 */

	function getPath(obj, path) {
	  return parseExpression$1(path).get(obj);
	}

	/**
	 * Warn against setting non-existent root path on a vm.
	 */

	var warnNonExistent;
	if (process.env.NODE_ENV !== 'production') {
	  warnNonExistent = function (path, vm) {
	    warn('You are setting a non-existent path "' + path.raw + '" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the "data" option for more reliable reactivity ' + 'and better performance.', vm);
	  };
	}

	/**
	 * Set on an object from a path
	 *
	 * @param {Object} obj
	 * @param {String | Array} path
	 * @param {*} val
	 */

	function setPath(obj, path, val) {
	  var original = obj;
	  if (typeof path === 'string') {
	    path = parse(path);
	  }
	  if (!path || !isObject(obj)) {
	    return false;
	  }
	  var last, key;
	  for (var i = 0, l = path.length; i < l; i++) {
	    last = obj;
	    key = path[i];
	    if (key.charAt(0) === '*') {
	      key = parseExpression$1(key.slice(1)).get.call(original, original);
	    }
	    if (i < l - 1) {
	      obj = obj[key];
	      if (!isObject(obj)) {
	        obj = {};
	        if (process.env.NODE_ENV !== 'production' && last._isVue) {
	          warnNonExistent(path, last);
	        }
	        set(last, key, obj);
	      }
	    } else {
	      if (isArray(obj)) {
	        obj.$set(key, val);
	      } else if (key in obj) {
	        obj[key] = val;
	      } else {
	        if (process.env.NODE_ENV !== 'production' && obj._isVue) {
	          warnNonExistent(path, obj);
	        }
	        set(obj, key, val);
	      }
	    }
	  }
	  return true;
	}

	var path = Object.freeze({
	  parsePath: parsePath,
	  getPath: getPath,
	  setPath: setPath
	});

	var expressionCache = new Cache(1000);

	var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';
	var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\b|') + '\\b)');

	// keywords that don't make sense inside expressions
	var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';
	var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\b|') + '\\b)');

	var wsRE = /\s/g;
	var newlineRE = /\n/g;
	var saveRE = /[\{,]\s*[\w\$_]+\s*:|('(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\"']|\\.)*`|`(?:[^`\\]|\\.)*`)|new |typeof |void /g;
	var restoreRE = /"(\d+)"/g;
	var pathTestRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?'\]|\[".*?"\]|\[\d+\]|\[[A-Za-z_$][\w$]*\])*$/;
	var identRE = /[^\w$\.](?:[A-Za-z_$][\w$]*)/g;
	var literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;

	function noop() {}

	/**
	 * Save / Rewrite / Restore
	 *
	 * When rewriting paths found in an expression, it is
	 * possible for the same letter sequences to be found in
	 * strings and Object literal property keys. Therefore we
	 * remove and store these parts in a temporary array, and
	 * restore them after the path rewrite.
	 */

	var saved = [];

	/**
	 * Save replacer
	 *
	 * The save regex can match two possible cases:
	 * 1. An opening object literal
	 * 2. A string
	 * If matched as a plain string, we need to escape its
	 * newlines, since the string needs to be preserved when
	 * generating the function body.
	 *
	 * @param {String} str
	 * @param {String} isString - str if matched as a string
	 * @return {String} - placeholder with index
	 */

	function save(str, isString) {
	  var i = saved.length;
	  saved[i] = isString ? str.replace(newlineRE, '\\n') : str;
	  return '"' + i + '"';
	}

	/**
	 * Path rewrite replacer
	 *
	 * @param {String} raw
	 * @return {String}
	 */

	function rewrite(raw) {
	  var c = raw.charAt(0);
	  var path = raw.slice(1);
	  if (allowedKeywordsRE.test(path)) {
	    return raw;
	  } else {
	    path = path.indexOf('"') > -1 ? path.replace(restoreRE, restore) : path;
	    return c + 'scope.' + path;
	  }
	}

	/**
	 * Restore replacer
	 *
	 * @param {String} str
	 * @param {String} i - matched save index
	 * @return {String}
	 */

	function restore(str, i) {
	  return saved[i];
	}

	/**
	 * Rewrite an expression, prefixing all path accessors with
	 * `scope.` and generate getter/setter functions.
	 *
	 * @param {String} exp
	 * @return {Function}
	 */

	function compileGetter(exp) {
	  if (improperKeywordsRE.test(exp)) {
	    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);
	  }
	  // reset state
	  saved.length = 0;
	  // save strings and object literal keys
	  var body = exp.replace(saveRE, save).replace(wsRE, '');
	  // rewrite all paths
	  // pad 1 space here because the regex matches 1 extra char
	  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);
	  return makeGetterFn(body);
	}

	/**
	 * Build a getter function. Requires eval.
	 *
	 * We isolate the try/catch so it doesn't affect the
	 * optimization of the parse function when it is not called.
	 *
	 * @param {String} body
	 * @return {Function|undefined}
	 */

	function makeGetterFn(body) {
	  try {
	    /* eslint-disable no-new-func */
	    return new Function('scope', 'return ' + body + ';');
	    /* eslint-enable no-new-func */
	  } catch (e) {
	    if (process.env.NODE_ENV !== 'production') {
	      /* istanbul ignore if */
	      if (e.toString().match(/unsafe-eval|CSP/)) {
	        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');
	      } else {
	        warn('Invalid expression. ' + 'Generated function body: ' + body);
	      }
	    }
	    return noop;
	  }
	}

	/**
	 * Compile a setter function for the expression.
	 *
	 * @param {String} exp
	 * @return {Function|undefined}
	 */

	function compileSetter(exp) {
	  var path = parsePath(exp);
	  if (path) {
	    return function (scope, val) {
	      setPath(scope, path, val);
	    };
	  } else {
	    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);
	  }
	}

	/**
	 * Parse an expression into re-written getter/setters.
	 *
	 * @param {String} exp
	 * @param {Boolean} needSet
	 * @return {Function}
	 */

	function parseExpression$1(exp, needSet) {
	  exp = exp.trim();
	  // try cache
	  var hit = expressionCache.get(exp);
	  if (hit) {
	    if (needSet && !hit.set) {
	      hit.set = compileSetter(hit.exp);
	    }
	    return hit;
	  }
	  var res = { exp: exp };
	  res.get = isSimplePath(exp) && exp.indexOf('[') < 0
	  // optimized super simple getter
	  ? makeGetterFn('scope.' + exp)
	  // dynamic getter
	  : compileGetter(exp);
	  if (needSet) {
	    res.set = compileSetter(exp);
	  }
	  expressionCache.put(exp, res);
	  return res;
	}

	/**
	 * Check if an expression is a simple path.
	 *
	 * @param {String} exp
	 * @return {Boolean}
	 */

	function isSimplePath(exp) {
	  return pathTestRE.test(exp) &&
	  // don't treat literal values as paths
	  !literalValueRE$1.test(exp) &&
	  // Math constants e.g. Math.PI, Math.E etc.
	  exp.slice(0, 5) !== 'Math.';
	}

	var expression = Object.freeze({
	  parseExpression: parseExpression$1,
	  isSimplePath: isSimplePath
	});

	// we have two separate queues: one for directive updates
	// and one for user watcher registered via $watch().
	// we want to guarantee directive updates to be called
	// before user watchers so that when user watchers are
	// triggered, the DOM would have already been in updated
	// state.

	var queue = [];
	var userQueue = [];
	var has = {};
	var circular = {};
	var waiting = false;

	/**
	 * Reset the batcher's state.
	 */

	function resetBatcherState() {
	  queue.length = 0;
	  userQueue.length = 0;
	  has = {};
	  circular = {};
	  waiting = false;
	}

	/**
	 * Flush both queues and run the watchers.
	 */

	function flushBatcherQueue() {
	  var _again = true;

	  _function: while (_again) {
	    _again = false;

	    runBatcherQueue(queue);
	    runBatcherQueue(userQueue);
	    // user watchers triggered more watchers,
	    // keep flushing until it depletes
	    if (queue.length) {
	      _again = true;
	      continue _function;
	    }
	    // dev tool hook
	    /* istanbul ignore if */
	    if (devtools && config.devtools) {
	      devtools.emit('flush');
	    }
	    resetBatcherState();
	  }
	}

	/**
	 * Run the watchers in a single queue.
	 *
	 * @param {Array} queue
	 */

	function runBatcherQueue(queue) {
	  // do not cache length because more watchers might be pushed
	  // as we run existing watchers
	  for (var i = 0; i < queue.length; i++) {
	    var watcher = queue[i];
	    var id = watcher.id;
	    has[id] = null;
	    watcher.run();
	    // in dev build, check and stop circular updates.
	    if (process.env.NODE_ENV !== 'production' && has[id] != null) {
	      circular[id] = (circular[id] || 0) + 1;
	      if (circular[id] > config._maxUpdateCount) {
	        warn('You may have an infinite update loop for watcher ' + 'with expression "' + watcher.expression + '"', watcher.vm);
	        break;
	      }
	    }
	  }
	  queue.length = 0;
	}

	/**
	 * Push a watcher into the watcher queue.
	 * Jobs with duplicate IDs will be skipped unless it's
	 * pushed when the queue is being flushed.
	 *
	 * @param {Watcher} watcher
	 *   properties:
	 *   - {Number} id
	 *   - {Function} run
	 */

	function pushWatcher(watcher) {
	  var id = watcher.id;
	  if (has[id] == null) {
	    // push watcher into appropriate queue
	    var q = watcher.user ? userQueue : queue;
	    has[id] = q.length;
	    q.push(watcher);
	    // queue the flush
	    if (!waiting) {
	      waiting = true;
	      nextTick(flushBatcherQueue);
	    }
	  }
	}

	var uid$2 = 0;

	/**
	 * A watcher parses an expression, collects dependencies,
	 * and fires callback when the expression value changes.
	 * This is used for both the $watch() api and directives.
	 *
	 * @param {Vue} vm
	 * @param {String|Function} expOrFn
	 * @param {Function} cb
	 * @param {Object} options
	 *                 - {Array} filters
	 *                 - {Boolean} twoWay
	 *                 - {Boolean} deep
	 *                 - {Boolean} user
	 *                 - {Boolean} sync
	 *                 - {Boolean} lazy
	 *                 - {Function} [preProcess]
	 *                 - {Function} [postProcess]
	 * @constructor
	 */
	function Watcher(vm, expOrFn, cb, options) {
	  // mix in options
	  if (options) {
	    extend(this, options);
	  }
	  var isFn = typeof expOrFn === 'function';
	  this.vm = vm;
	  vm._watchers.push(this);
	  this.expression = expOrFn;
	  this.cb = cb;
	  this.id = ++uid$2; // uid for batching
	  this.active = true;
	  this.dirty = this.lazy; // for lazy watchers
	  this.deps = [];
	  this.newDeps = [];
	  this.depIds = new _Set();
	  this.newDepIds = new _Set();
	  this.prevError = null; // for async error stacks
	  // parse expression for getter/setter
	  if (isFn) {
	    this.getter = expOrFn;
	    this.setter = undefined;
	  } else {
	    var res = parseExpression$1(expOrFn, this.twoWay);
	    this.getter = res.get;
	    this.setter = res.set;
	  }
	  this.value = this.lazy ? undefined : this.get();
	  // state for avoiding false triggers for deep and Array
	  // watchers during vm._digest()
	  this.queued = this.shallow = false;
	}

	/**
	 * Evaluate the getter, and re-collect dependencies.
	 */

	Watcher.prototype.get = function () {
	  this.beforeGet();
	  var scope = this.scope || this.vm;
	  var value;
	  try {
	    value = this.getter.call(scope, scope);
	  } catch (e) {
	    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {
	      warn('Error when evaluating expression ' + '"' + this.expression + '": ' + e.toString(), this.vm);
	    }
	  }
	  // "touch" every property so they are all tracked as
	  // dependencies for deep watching
	  if (this.deep) {
	    traverse(value);
	  }
	  if (this.preProcess) {
	    value = this.preProcess(value);
	  }
	  if (this.filters) {
	    value = scope._applyFilters(value, null, this.filters, false);
	  }
	  if (this.postProcess) {
	    value = this.postProcess(value);
	  }
	  this.afterGet();
	  return value;
	};

	/**
	 * Set the corresponding value with the setter.
	 *
	 * @param {*} value
	 */

	Watcher.prototype.set = function (value) {
	  var scope = this.scope || this.vm;
	  if (this.filters) {
	    value = scope._applyFilters(value, this.value, this.filters, true);
	  }
	  try {
	    this.setter.call(scope, scope, value);
	  } catch (e) {
	    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {
	      warn('Error when evaluating setter ' + '"' + this.expression + '": ' + e.toString(), this.vm);
	    }
	  }
	  // two-way sync for v-for alias
	  var forContext = scope.$forContext;
	  if (forContext && forContext.alias === this.expression) {
	    if (forContext.filters) {
	      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);
	      return;
	    }
	    forContext._withLock(function () {
	      if (scope.$key) {
	        // original is an object
	        forContext.rawValue[scope.$key] = value;
	      } else {
	        forContext.rawValue.$set(scope.$index, value);
	      }
	    });
	  }
	};

	/**
	 * Prepare for dependency collection.
	 */

	Watcher.prototype.beforeGet = function () {
	  Dep.target = this;
	};

	/**
	 * Add a dependency to this directive.
	 *
	 * @param {Dep} dep
	 */

	Watcher.prototype.addDep = function (dep) {
	  var id = dep.id;
	  if (!this.newDepIds.has(id)) {
	    this.newDepIds.add(id);
	    this.newDeps.push(dep);
	    if (!this.depIds.has(id)) {
	      dep.addSub(this);
	    }
	  }
	};

	/**
	 * Clean up for dependency collection.
	 */

	Watcher.prototype.afterGet = function () {
	  Dep.target = null;
	  var i = this.deps.length;
	  while (i--) {
	    var dep = this.deps[i];
	    if (!this.newDepIds.has(dep.id)) {
	      dep.removeSub(this);
	    }
	  }
	  var tmp = this.depIds;
	  this.depIds = this.newDepIds;
	  this.newDepIds = tmp;
	  this.newDepIds.clear();
	  tmp = this.deps;
	  this.deps = this.newDeps;
	  this.newDeps = tmp;
	  this.newDeps.length = 0;
	};

	/**
	 * Subscriber interface.
	 * Will be called when a dependency changes.
	 *
	 * @param {Boolean} shallow
	 */

	Watcher.prototype.update = function (shallow) {
	  if (this.lazy) {
	    this.dirty = true;
	  } else if (this.sync || !config.async) {
	    this.run();
	  } else {
	    // if queued, only overwrite shallow with non-shallow,
	    // but not the other way around.
	    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;
	    this.queued = true;
	    // record before-push error stack in debug mode
	    /* istanbul ignore if */
	    if (process.env.NODE_ENV !== 'production' && config.debug) {
	      this.prevError = new Error('[vue] async stack trace');
	    }
	    pushWatcher(this);
	  }
	};

	/**
	 * Batcher job interface.
	 * Will be called by the batcher.
	 */

	Watcher.prototype.run = function () {
	  if (this.active) {
	    var value = this.get();
	    if (value !== this.value ||
	    // Deep watchers and watchers on Object/Arrays should fire even
	    // when the value is the same, because the value may
	    // have mutated; but only do so if this is a
	    // non-shallow update (caused by a vm digest).
	    (isObject(value) || this.deep) && !this.shallow) {
	      // set new value
	      var oldValue = this.value;
	      this.value = value;
	      // in debug + async mode, when a watcher callbacks
	      // throws, we also throw the saved before-push error
	      // so the full cross-tick stack trace is available.
	      var prevError = this.prevError;
	      /* istanbul ignore if */
	      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {
	        this.prevError = null;
	        try {
	          this.cb.call(this.vm, value, oldValue);
	        } catch (e) {
	          nextTick(function () {
	            throw prevError;
	          }, 0);
	          throw e;
	        }
	      } else {
	        this.cb.call(this.vm, value, oldValue);
	      }
	    }
	    this.queued = this.shallow = false;
	  }
	};

	/**
	 * Evaluate the value of the watcher.
	 * This only gets called for lazy watchers.
	 */

	Watcher.prototype.evaluate = function () {
	  // avoid overwriting another watcher that is being
	  // collected.
	  var current = Dep.target;
	  this.value = this.get();
	  this.dirty = false;
	  Dep.target = current;
	};

	/**
	 * Depend on all deps collected by this watcher.
	 */

	Watcher.prototype.depend = function () {
	  var i = this.deps.length;
	  while (i--) {
	    this.deps[i].depend();
	  }
	};

	/**
	 * Remove self from all dependencies' subcriber list.
	 */

	Watcher.prototype.teardown = function () {
	  if (this.active) {
	    // remove self from vm's watcher list
	    // this is a somewhat expensive operation so we skip it
	    // if the vm is being destroyed or is performing a v-for
	    // re-render (the watcher list is then filtered by v-for).
	    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {
	      this.vm._watchers.$remove(this);
	    }
	    var i = this.deps.length;
	    while (i--) {
	      this.deps[i].removeSub(this);
	    }
	    this.active = false;
	    this.vm = this.cb = this.value = null;
	  }
	};

	/**
	 * Recrusively traverse an object to evoke all converted
	 * getters, so that every nested property inside the object
	 * is collected as a "deep" dependency.
	 *
	 * @param {*} val
	 */

	var seenObjects = new _Set();
	function traverse(val, seen) {
	  var i = undefined,
	      keys = undefined;
	  if (!seen) {
	    seen = seenObjects;
	    seen.clear();
	  }
	  var isA = isArray(val);
	  var isO = isObject(val);
	  if ((isA || isO) && Object.isExtensible(val)) {
	    if (val.__ob__) {
	      var depId = val.__ob__.dep.id;
	      if (seen.has(depId)) {
	        return;
	      } else {
	        seen.add(depId);
	      }
	    }
	    if (isA) {
	      i = val.length;
	      while (i--) traverse(val[i], seen);
	    } else if (isO) {
	      keys = Object.keys(val);
	      i = keys.length;
	      while (i--) traverse(val[keys[i]], seen);
	    }
	  }
	}

	var text$1 = {

	  bind: function bind() {
	    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';
	  },

	  update: function update(value) {
	    this.el[this.attr] = _toString(value);
	  }
	};

	var templateCache = new Cache(1000);
	var idSelectorCache = new Cache(1000);

	var map = {
	  efault: [0, '', ''],
	  legend: [1, '<fieldset>', '</fieldset>'],
	  tr: [2, '<table><tbody>', '</tbody></table>'],
	  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']
	};

	map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	map.option = map.optgroup = [1, '<select multiple="multiple">', '</select>'];

	map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];

	map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns="http://www.w3.org/2000/svg" ' + 'xmlns:xlink="http://www.w3.org/1999/xlink" ' + 'xmlns:ev="http://www.w3.org/2001/xml-events"' + 'version="1.1">', '</svg>'];

	/**
	 * Check if a node is a supported template node with a
	 * DocumentFragment content.
	 *
	 * @param {Node} node
	 * @return {Boolean}
	 */

	function isRealTemplate(node) {
	  return isTemplate(node) && isFragment(node.content);
	}

	var tagRE$1 = /<([\w:-]+)/;
	var entityRE = /&#?\w+?;/;
	var commentRE = /<!--/;

	/**
	 * Convert a string template to a DocumentFragment.
	 * Determines correct wrapping by tag types. Wrapping
	 * strategy found in jQuery & component/domify.
	 *
	 * @param {String} templateString
	 * @param {Boolean} raw
	 * @return {DocumentFragment}
	 */

	function stringToFragment(templateString, raw) {
	  // try a cache hit first
	  var cacheKey = raw ? templateString : templateString.trim();
	  var hit = templateCache.get(cacheKey);
	  if (hit) {
	    return hit;
	  }

	  var frag = document.createDocumentFragment();
	  var tagMatch = templateString.match(tagRE$1);
	  var entityMatch = entityRE.test(templateString);
	  var commentMatch = commentRE.test(templateString);

	  if (!tagMatch && !entityMatch && !commentMatch) {
	    // text only, return a single text node.
	    frag.appendChild(document.createTextNode(templateString));
	  } else {
	    var tag = tagMatch && tagMatch[1];
	    var wrap = map[tag] || map.efault;
	    var depth = wrap[0];
	    var prefix = wrap[1];
	    var suffix = wrap[2];
	    var node = document.createElement('div');

	    node.innerHTML = prefix + templateString + suffix;
	    while (depth--) {
	      node = node.lastChild;
	    }

	    var child;
	    /* eslint-disable no-cond-assign */
	    while (child = node.firstChild) {
	      /* eslint-enable no-cond-assign */
	      frag.appendChild(child);
	    }
	  }
	  if (!raw) {
	    trimNode(frag);
	  }
	  templateCache.put(cacheKey, frag);
	  return frag;
	}

	/**
	 * Convert a template node to a DocumentFragment.
	 *
	 * @param {Node} node
	 * @return {DocumentFragment}
	 */

	function nodeToFragment(node) {
	  // if its a template tag and the browser supports it,
	  // its content is already a document fragment. However, iOS Safari has
	  // bug when using directly cloned template content with touch
	  // events and can cause crashes when the nodes are removed from DOM, so we
	  // have to treat template elements as string templates. (#2805)
	  /* istanbul ignore if */
	  if (isRealTemplate(node)) {
	    return stringToFragment(node.innerHTML);
	  }
	  // script template
	  if (node.tagName === 'SCRIPT') {
	    return stringToFragment(node.textContent);
	  }
	  // normal node, clone it to avoid mutating the original
	  var clonedNode = cloneNode(node);
	  var frag = document.createDocumentFragment();
	  var child;
	  /* eslint-disable no-cond-assign */
	  while (child = clonedNode.firstChild) {
	    /* eslint-enable no-cond-assign */
	    frag.appendChild(child);
	  }
	  trimNode(frag);
	  return frag;
	}

	// Test for the presence of the Safari template cloning bug
	// https://bugs.webkit.org/showug.cgi?id=137755
	var hasBrokenTemplate = (function () {
	  /* istanbul ignore else */
	  if (inBrowser) {
	    var a = document.createElement('div');
	    a.innerHTML = '<template>1</template>';
	    return !a.cloneNode(true).firstChild.innerHTML;
	  } else {
	    return false;
	  }
	})();

	// Test for IE10/11 textarea placeholder clone bug
	var hasTextareaCloneBug = (function () {
	  /* istanbul ignore else */
	  if (inBrowser) {
	    var t = document.createElement('textarea');
	    t.placeholder = 't';
	    return t.cloneNode(true).value === 't';
	  } else {
	    return false;
	  }
	})();

	/**
	 * 1. Deal with Safari cloning nested <template> bug by
	 *    manually cloning all template instances.
	 * 2. Deal with IE10/11 textarea placeholder bug by setting
	 *    the correct value after cloning.
	 *
	 * @param {Element|DocumentFragment} node
	 * @return {Element|DocumentFragment}
	 */

	function cloneNode(node) {
	  /* istanbul ignore if */
	  if (!node.querySelectorAll) {
	    return node.cloneNode();
	  }
	  var res = node.cloneNode(true);
	  var i, original, cloned;
	  /* istanbul ignore if */
	  if (hasBrokenTemplate) {
	    var tempClone = res;
	    if (isRealTemplate(node)) {
	      node = node.content;
	      tempClone = res.content;
	    }
	    original = node.querySelectorAll('template');
	    if (original.length) {
	      cloned = tempClone.querySelectorAll('template');
	      i = cloned.length;
	      while (i--) {
	        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);
	      }
	    }
	  }
	  /* istanbul ignore if */
	  if (hasTextareaCloneBug) {
	    if (node.tagName === 'TEXTAREA') {
	      res.value = node.value;
	    } else {
	      original = node.querySelectorAll('textarea');
	      if (original.length) {
	        cloned = res.querySelectorAll('textarea');
	        i = cloned.length;
	        while (i--) {
	          cloned[i].value = original[i].value;
	        }
	      }
	    }
	  }
	  return res;
	}

	/**
	 * Process the template option and normalizes it into a
	 * a DocumentFragment that can be used as a partial or a
	 * instance template.
	 *
	 * @param {*} template
	 *        Possible values include:
	 *        - DocumentFragment object
	 *        - Node object of type Template
	 *        - id selector: '#some-template-id'
	 *        - template string: '<div><span>{{msg}}</span></div>'
	 * @param {Boolean} shouldClone
	 * @param {Boolean} raw
	 *        inline HTML interpolation. Do not check for id
	 *        selector and keep whitespace in the string.
	 * @return {DocumentFragment|undefined}
	 */

	function parseTemplate(template, shouldClone, raw) {
	  var node, frag;

	  // if the template is already a document fragment,
	  // do nothing
	  if (isFragment(template)) {
	    trimNode(template);
	    return shouldClone ? cloneNode(template) : template;
	  }

	  if (typeof template === 'string') {
	    // id selector
	    if (!raw && template.charAt(0) === '#') {
	      // id selector can be cached too
	      frag = idSelectorCache.get(template);
	      if (!frag) {
	        node = document.getElementById(template.slice(1));
	        if (node) {
	          frag = nodeToFragment(node);
	          // save selector to cache
	          idSelectorCache.put(template, frag);
	        }
	      }
	    } else {
	      // normal string template
	      frag = stringToFragment(template, raw);
	    }
	  } else if (template.nodeType) {
	    // a direct node
	    frag = nodeToFragment(template);
	  }

	  return frag && shouldClone ? cloneNode(frag) : frag;
	}

	var template = Object.freeze({
	  cloneNode: cloneNode,
	  parseTemplate: parseTemplate
	});

	var html = {

	  bind: function bind() {
	    // a comment node means this is a binding for
	    // {{{ inline unescaped html }}}
	    if (this.el.nodeType === 8) {
	      // hold nodes
	      this.nodes = [];
	      // replace the placeholder with proper anchor
	      this.anchor = createAnchor('v-html');
	      replace(this.el, this.anchor);
	    }
	  },

	  update: function update(value) {
	    value = _toString(value);
	    if (this.nodes) {
	      this.swap(value);
	    } else {
	      this.el.innerHTML = value;
	    }
	  },

	  swap: function swap(value) {
	    // remove old nodes
	    var i = this.nodes.length;
	    while (i--) {
	      remove(this.nodes[i]);
	    }
	    // convert new value to a fragment
	    // do not attempt to retrieve from id selector
	    var frag = parseTemplate(value, true, true);
	    // save a reference to these nodes so we can remove later
	    this.nodes = toArray(frag.childNodes);
	    before(frag, this.anchor);
	  }
	};

	/**
	 * Abstraction for a partially-compiled fragment.
	 * Can optionally compile content with a child scope.
	 *
	 * @param {Function} linker
	 * @param {Vue} vm
	 * @param {DocumentFragment} frag
	 * @param {Vue} [host]
	 * @param {Object} [scope]
	 * @param {Fragment} [parentFrag]
	 */
	function Fragment(linker, vm, frag, host, scope, parentFrag) {
	  this.children = [];
	  this.childFrags = [];
	  this.vm = vm;
	  this.scope = scope;
	  this.inserted = false;
	  this.parentFrag = parentFrag;
	  if (parentFrag) {
	    parentFrag.childFrags.push(this);
	  }
	  this.unlink = linker(vm, frag, host, scope, this);
	  var single = this.single = frag.childNodes.length === 1 &&
	  // do not go single mode if the only node is an anchor
	  !frag.childNodes[0].__v_anchor;
	  if (single) {
	    this.node = frag.childNodes[0];
	    this.before = singleBefore;
	    this.remove = singleRemove;
	  } else {
	    this.node = createAnchor('fragment-start');
	    this.end = createAnchor('fragment-end');
	    this.frag = frag;
	    prepend(this.node, frag);
	    frag.appendChild(this.end);
	    this.before = multiBefore;
	    this.remove = multiRemove;
	  }
	  this.node.__v_frag = this;
	}

	/**
	 * Call attach/detach for all components contained within
	 * this fragment. Also do so recursively for all child
	 * fragments.
	 *
	 * @param {Function} hook
	 */

	Fragment.prototype.callHook = function (hook) {
	  var i, l;
	  for (i = 0, l = this.childFrags.length; i < l; i++) {
	    this.childFrags[i].callHook(hook);
	  }
	  for (i = 0, l = this.children.length; i < l; i++) {
	    hook(this.children[i]);
	  }
	};

	/**
	 * Insert fragment before target, single node version
	 *
	 * @param {Node} target
	 * @param {Boolean} withTransition
	 */

	function singleBefore(target, withTransition) {
	  this.inserted = true;
	  var method = withTransition !== false ? beforeWithTransition : before;
	  method(this.node, target, this.vm);
	  if (inDoc(this.node)) {
	    this.callHook(attach);
	  }
	}

	/**
	 * Remove fragment, single node version
	 */

	function singleRemove() {
	  this.inserted = false;
	  var shouldCallRemove = inDoc(this.node);
	  var self = this;
	  this.beforeRemove();
	  removeWithTransition(this.node, this.vm, function () {
	    if (shouldCallRemove) {
	      self.callHook(detach);
	    }
	    self.destroy();
	  });
	}

	/**
	 * Insert fragment before target, multi-nodes version
	 *
	 * @param {Node} target
	 * @param {Boolean} withTransition
	 */

	function multiBefore(target, withTransition) {
	  this.inserted = true;
	  var vm = this.vm;
	  var method = withTransition !== false ? beforeWithTransition : before;
	  mapNodeRange(this.node, this.end, function (node) {
	    method(node, target, vm);
	  });
	  if (inDoc(this.node)) {
	    this.callHook(attach);
	  }
	}

	/**
	 * Remove fragment, multi-nodes version
	 */

	function multiRemove() {
	  this.inserted = false;
	  var self = this;
	  var shouldCallRemove = inDoc(this.node);
	  this.beforeRemove();
	  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {
	    if (shouldCallRemove) {
	      self.callHook(detach);
	    }
	    self.destroy();
	  });
	}

	/**
	 * Prepare the fragment for removal.
	 */

	Fragment.prototype.beforeRemove = function () {
	  var i, l;
	  for (i = 0, l = this.childFrags.length; i < l; i++) {
	    // call the same method recursively on child
	    // fragments, depth-first
	    this.childFrags[i].beforeRemove(false);
	  }
	  for (i = 0, l = this.children.length; i < l; i++) {
	    // Call destroy for all contained instances,
	    // with remove:false and defer:true.
	    // Defer is necessary because we need to
	    // keep the children to call detach hooks
	    // on them.
	    this.children[i].$destroy(false, true);
	  }
	  var dirs = this.unlink.dirs;
	  for (i = 0, l = dirs.length; i < l; i++) {
	    // disable the watchers on all the directives
	    // so that the rendered content stays the same
	    // during removal.
	    dirs[i]._watcher && dirs[i]._watcher.teardown();
	  }
	};

	/**
	 * Destroy the fragment.
	 */

	Fragment.prototype.destroy = function () {
	  if (this.parentFrag) {
	    this.parentFrag.childFrags.$remove(this);
	  }
	  this.node.__v_frag = null;
	  this.unlink();
	};

	/**
	 * Call attach hook for a Vue instance.
	 *
	 * @param {Vue} child
	 */

	function attach(child) {
	  if (!child._isAttached && inDoc(child.$el)) {
	    child._callHook('attached');
	  }
	}

	/**
	 * Call detach hook for a Vue instance.
	 *
	 * @param {Vue} child
	 */

	function detach(child) {
	  if (child._isAttached && !inDoc(child.$el)) {
	    child._callHook('detached');
	  }
	}

	var linkerCache = new Cache(5000);

	/**
	 * A factory that can be used to create instances of a
	 * fragment. Caches the compiled linker if possible.
	 *
	 * @param {Vue} vm
	 * @param {Element|String} el
	 */
	function FragmentFactory(vm, el) {
	  this.vm = vm;
	  var template;
	  var isString = typeof el === 'string';
	  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {
	    template = parseTemplate(el, true);
	  } else {
	    template = document.createDocumentFragment();
	    template.appendChild(el);
	  }
	  this.template = template;
	  // linker can be cached, but only for components
	  var linker;
	  var cid = vm.constructor.cid;
	  if (cid > 0) {
	    var cacheId = cid + (isString ? el : getOuterHTML(el));
	    linker = linkerCache.get(cacheId);
	    if (!linker) {
	      linker = compile(template, vm.$options, true);
	      linkerCache.put(cacheId, linker);
	    }
	  } else {
	    linker = compile(template, vm.$options, true);
	  }
	  this.linker = linker;
	}

	/**
	 * Create a fragment instance with given host and scope.
	 *
	 * @param {Vue} host
	 * @param {Object} scope
	 * @param {Fragment} parentFrag
	 */

	FragmentFactory.prototype.create = function (host, scope, parentFrag) {
	  var frag = cloneNode(this.template);
	  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);
	};

	var ON = 700;
	var MODEL = 800;
	var BIND = 850;
	var TRANSITION = 1100;
	var EL = 1500;
	var COMPONENT = 1500;
	var PARTIAL = 1750;
	var IF = 2100;
	var FOR = 2200;
	var SLOT = 2300;

	var uid$3 = 0;

	var vFor = {

	  priority: FOR,
	  terminal: true,

	  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],

	  bind: function bind() {
	    if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('v-if')) {
	      warn('<' + this.el.tagName.toLowerCase() + ' v-for="' + this.expression + '" v-if="' + this.el.getAttribute('v-if') + '">: ' + 'Using v-if and v-for on the same element is not recommended - ' + 'consider filtering the source Array instead.', this.vm);
	    }

	    // support "item in/of items" syntax
	    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);
	    if (inMatch) {
	      var itMatch = inMatch[1].match(/\((.*),(.*)\)/);
	      if (itMatch) {
	        this.iterator = itMatch[1].trim();
	        this.alias = itMatch[2].trim();
	      } else {
	        this.alias = inMatch[1].trim();
	      }
	      this.expression = inMatch[2];
	    }

	    if (!this.alias) {
	      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression "' + this.descriptor.raw + '": ' + 'alias is required.', this.vm);
	      return;
	    }

	    // uid as a cache identifier
	    this.id = '__v-for__' + ++uid$3;

	    // check if this is an option list,
	    // so that we know if we need to update the <select>'s
	    // v-model when the option list has changed.
	    // because v-model has a lower priority than v-for,
	    // the v-model is not bound here yet, so we have to
	    // retrive it in the actual updateModel() function.
	    var tag = this.el.tagName;
	    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';

	    // setup anchor nodes
	    this.start = createAnchor('v-for-start');
	    this.end = createAnchor('v-for-end');
	    replace(this.el, this.end);
	    before(this.start, this.end);

	    // cache
	    this.cache = Object.create(null);

	    // fragment factory
	    this.factory = new FragmentFactory(this.vm, this.el);
	  },

	  update: function update(data) {
	    this.diff(data);
	    this.updateRef();
	    this.updateModel();
	  },

	  /**
	   * Diff, based on new data and old data, determine the
	   * minimum amount of DOM manipulations needed to make the
	   * DOM reflect the new data Array.
	   *
	   * The algorithm diffs the new data Array by storing a
	   * hidden reference to an owner vm instance on previously
	   * seen data. This allows us to achieve O(n) which is
	   * better than a levenshtein distance based algorithm,
	   * which is O(m * n).
	   *
	   * @param {Array} data
	   */

	  diff: function diff(data) {
	    // check if the Array was converted from an Object
	    var item = data[0];
	    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');

	    var trackByKey = this.params.trackBy;
	    var oldFrags = this.frags;
	    var frags = this.frags = new Array(data.length);
	    var alias = this.alias;
	    var iterator = this.iterator;
	    var start = this.start;
	    var end = this.end;
	    var inDocument = inDoc(start);
	    var init = !oldFrags;
	    var i, l, frag, key, value, primitive;

	    // First pass, go through the new Array and fill up
	    // the new frags array. If a piece of data has a cached
	    // instance for it, we reuse it. Otherwise build a new
	    // instance.
	    for (i = 0, l = data.length; i < l; i++) {
	      item = data[i];
	      key = convertedFromObject ? item.$key : null;
	      value = convertedFromObject ? item.$value : item;
	      primitive = !isObject(value);
	      frag = !init && this.getCachedFrag(value, i, key);
	      if (frag) {
	        // reusable fragment
	        frag.reused = true;
	        // update $index
	        frag.scope.$index = i;
	        // update $key
	        if (key) {
	          frag.scope.$key = key;
	        }
	        // update iterator
	        if (iterator) {
	          frag.scope[iterator] = key !== null ? key : i;
	        }
	        // update data for track-by, object repeat &
	        // primitive values.
	        if (trackByKey || convertedFromObject || primitive) {
	          withoutConversion(function () {
	            frag.scope[alias] = value;
	          });
	        }
	      } else {
	        // new instance
	        frag = this.create(value, alias, i, key);
	        frag.fresh = !init;
	      }
	      frags[i] = frag;
	      if (init) {
	        frag.before(end);
	      }
	    }

	    // we're done for the initial render.
	    if (init) {
	      return;
	    }

	    // Second pass, go through the old fragments and
	    // destroy those who are not reused (and remove them
	    // from cache)
	    var removalIndex = 0;
	    var totalRemoved = oldFrags.length - frags.length;
	    // when removing a large number of fragments, watcher removal
	    // turns out to be a perf bottleneck, so we batch the watcher
	    // removals into a single filter call!
	    this.vm._vForRemoving = true;
	    for (i = 0, l = oldFrags.length; i < l; i++) {
	      frag = oldFrags[i];
	      if (!frag.reused) {
	        this.deleteCachedFrag(frag);
	        this.remove(frag, removalIndex++, totalRemoved, inDocument);
	      }
	    }
	    this.vm._vForRemoving = false;
	    if (removalIndex) {
	      this.vm._watchers = this.vm._watchers.filter(function (w) {
	        return w.active;
	      });
	    }

	    // Final pass, move/insert new fragments into the
	    // right place.
	    var targetPrev, prevEl, currentPrev;
	    var insertionIndex = 0;
	    for (i = 0, l = frags.length; i < l; i++) {
	      frag = frags[i];
	      // this is the frag that we should be after
	      targetPrev = frags[i - 1];
	      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;
	      if (frag.reused && !frag.staggerCb) {
	        currentPrev = findPrevFrag(frag, start, this.id);
	        if (currentPrev !== targetPrev && (!currentPrev ||
	        // optimization for moving a single item.
	        // thanks to suggestions by @livoras in #1807
	        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {
	          this.move(frag, prevEl);
	        }
	      } else {
	        // new instance, or still in stagger.
	        // insert with updated stagger index.
	        this.insert(frag, insertionIndex++, prevEl, inDocument);
	      }
	      frag.reused = frag.fresh = false;
	    }
	  },

	  /**
	   * Create a new fragment instance.
	   *
	   * @param {*} value
	   * @param {String} alias
	   * @param {Number} index
	   * @param {String} [key]
	   * @return {Fragment}
	   */

	  create: function create(value, alias, index, key) {
	    var host = this._host;
	    // create iteration scope
	    var parentScope = this._scope || this.vm;
	    var scope = Object.create(parentScope);
	    // ref holder for the scope
	    scope.$refs = Object.create(parentScope.$refs);
	    scope.$els = Object.create(parentScope.$els);
	    // make sure point $parent to parent scope
	    scope.$parent = parentScope;
	    // for two-way binding on alias
	    scope.$forContext = this;
	    // define scope properties
	    // important: define the scope alias without forced conversion
	    // so that frozen data structures remain non-reactive.
	    withoutConversion(function () {
	      defineReactive(scope, alias, value);
	    });
	    defineReactive(scope, '$index', index);
	    if (key) {
	      defineReactive(scope, '$key', key);
	    } else if (scope.$key) {
	      // avoid accidental fallback
	      def(scope, '$key', null);
	    }
	    if (this.iterator) {
	      defineReactive(scope, this.iterator, key !== null ? key : index);
	    }
	    var frag = this.factory.create(host, scope, this._frag);
	    frag.forId = this.id;
	    this.cacheFrag(value, frag, index, key);
	    return frag;
	  },

	  /**
	   * Update the v-ref on owner vm.
	   */

	  updateRef: function updateRef() {
	    var ref = this.descriptor.ref;
	    if (!ref) return;
	    var hash = (this._scope || this.vm).$refs;
	    var refs;
	    if (!this.fromObject) {
	      refs = this.frags.map(findVmFromFrag);
	    } else {
	      refs = {};
	      this.frags.forEach(function (frag) {
	        refs[frag.scope.$key] = findVmFromFrag(frag);
	      });
	    }
	    hash[ref] = refs;
	  },

	  /**
	   * For option lists, update the containing v-model on
	   * parent <select>.
	   */

	  updateModel: function updateModel() {
	    if (this.isOption) {
	      var parent = this.start.parentNode;
	      var model = parent && parent.__v_model;
	      if (model) {
	        model.forceUpdate();
	      }
	    }
	  },

	  /**
	   * Insert a fragment. Handles staggering.
	   *
	   * @param {Fragment} frag
	   * @param {Number} index
	   * @param {Node} prevEl
	   * @param {Boolean} inDocument
	   */

	  insert: function insert(frag, index, prevEl, inDocument) {
	    if (frag.staggerCb) {
	      frag.staggerCb.cancel();
	      frag.staggerCb = null;
	    }
	    var staggerAmount = this.getStagger(frag, index, null, 'enter');
	    if (inDocument && staggerAmount) {
	      // create an anchor and insert it synchronously,
	      // so that we can resolve the correct order without
	      // worrying about some elements not inserted yet
	      var anchor = frag.staggerAnchor;
	      if (!anchor) {
	        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');
	        anchor.__v_frag = frag;
	      }
	      after(anchor, prevEl);
	      var op = frag.staggerCb = cancellable(function () {
	        frag.staggerCb = null;
	        frag.before(anchor);
	        remove(anchor);
	      });
	      setTimeout(op, staggerAmount);
	    } else {
	      var target = prevEl.nextSibling;
	      /* istanbul ignore if */
	      if (!target) {
	        // reset end anchor position in case the position was messed up
	        // by an external drag-n-drop library.
	        after(this.end, prevEl);
	        target = this.end;
	      }
	      frag.before(target);
	    }
	  },

	  /**
	   * Remove a fragment. Handles staggering.
	   *
	   * @param {Fragment} frag
	   * @param {Number} index
	   * @param {Number} total
	   * @param {Boolean} inDocument
	   */

	  remove: function remove(frag, index, total, inDocument) {
	    if (frag.staggerCb) {
	      frag.staggerCb.cancel();
	      frag.staggerCb = null;
	      // it's not possible for the same frag to be removed
	      // twice, so if we have a pending stagger callback,
	      // it means this frag is queued for enter but removed
	      // before its transition started. Since it is already
	      // destroyed, we can just leave it in detached state.
	      return;
	    }
	    var staggerAmount = this.getStagger(frag, index, total, 'leave');
	    if (inDocument && staggerAmount) {
	      var op = frag.staggerCb = cancellable(function () {
	        frag.staggerCb = null;
	        frag.remove();
	      });
	      setTimeout(op, staggerAmount);
	    } else {
	      frag.remove();
	    }
	  },

	  /**
	   * Move a fragment to a new position.
	   * Force no transition.
	   *
	   * @param {Fragment} frag
	   * @param {Node} prevEl
	   */

	  move: function move(frag, prevEl) {
	    // fix a common issue with Sortable:
	    // if prevEl doesn't have nextSibling, this means it's
	    // been dragged after the end anchor. Just re-position
	    // the end anchor to the end of the container.
	    /* istanbul ignore if */
	    if (!prevEl.nextSibling) {
	      this.end.parentNode.appendChild(this.end);
	    }
	    frag.before(prevEl.nextSibling, false);
	  },

	  /**
	   * Cache a fragment using track-by or the object key.
	   *
	   * @param {*} value
	   * @param {Fragment} frag
	   * @param {Number} index
	   * @param {String} [key]
	   */

	  cacheFrag: function cacheFrag(value, frag, index, key) {
	    var trackByKey = this.params.trackBy;
	    var cache = this.cache;
	    var primitive = !isObject(value);
	    var id;
	    if (key || trackByKey || primitive) {
	      id = getTrackByKey(index, key, value, trackByKey);
	      if (!cache[id]) {
	        cache[id] = frag;
	      } else if (trackByKey !== '$index') {
	        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);
	      }
	    } else {
	      id = this.id;
	      if (hasOwn(value, id)) {
	        if (value[id] === null) {
	          value[id] = frag;
	        } else {
	          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);
	        }
	      } else if (Object.isExtensible(value)) {
	        def(value, id, frag);
	      } else if (process.env.NODE_ENV !== 'production') {
	        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');
	      }
	    }
	    frag.raw = value;
	  },

	  /**
	   * Get a cached fragment from the value/index/key
	   *
	   * @param {*} value
	   * @param {Number} index
	   * @param {String} key
	   * @return {Fragment}
	   */

	  getCachedFrag: function getCachedFrag(value, index, key) {
	    var trackByKey = this.params.trackBy;
	    var primitive = !isObject(value);
	    var frag;
	    if (key || trackByKey || primitive) {
	      var id = getTrackByKey(index, key, value, trackByKey);
	      frag = this.cache[id];
	    } else {
	      frag = value[this.id];
	    }
	    if (frag && (frag.reused || frag.fresh)) {
	      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);
	    }
	    return frag;
	  },

	  /**
	   * Delete a fragment from cache.
	   *
	   * @param {Fragment} frag
	   */

	  deleteCachedFrag: function deleteCachedFrag(frag) {
	    var value = frag.raw;
	    var trackByKey = this.params.trackBy;
	    var scope = frag.scope;
	    var index = scope.$index;
	    // fix #948: avoid accidentally fall through to
	    // a parent repeater which happens to have $key.
	    var key = hasOwn(scope, '$key') && scope.$key;
	    var primitive = !isObject(value);
	    if (trackByKey || key || primitive) {
	      var id = getTrackByKey(index, key, value, trackByKey);
	      this.cache[id] = null;
	    } else {
	      value[this.id] = null;
	      frag.raw = null;
	    }
	  },

	  /**
	   * Get the stagger amount for an insertion/removal.
	   *
	   * @param {Fragment} frag
	   * @param {Number} index
	   * @param {Number} total
	   * @param {String} type
	   */

	  getStagger: function getStagger(frag, index, total, type) {
	    type = type + 'Stagger';
	    var trans = frag.node.__v_trans;
	    var hooks = trans && trans.hooks;
	    var hook = hooks && (hooks[type] || hooks.stagger);
	    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);
	  },

	  /**
	   * Pre-process the value before piping it through the
	   * filters. This is passed to and called by the watcher.
	   */

	  _preProcess: function _preProcess(value) {
	    // regardless of type, store the un-filtered raw value.
	    this.rawValue = value;
	    return value;
	  },

	  /**
	   * Post-process the value after it has been piped through
	   * the filters. This is passed to and called by the watcher.
	   *
	   * It is necessary for this to be called during the
	   * watcher's dependency collection phase because we want
	   * the v-for to update when the source Object is mutated.
	   */

	  _postProcess: function _postProcess(value) {
	    if (isArray(value)) {
	      return value;
	    } else if (isPlainObject(value)) {
	      // convert plain object to array.
	      var keys = Object.keys(value);
	      var i = keys.length;
	      var res = new Array(i);
	      var key;
	      while (i--) {
	        key = keys[i];
	        res[i] = {
	          $key: key,
	          $value: value[key]
	        };
	      }
	      return res;
	    } else {
	      if (typeof value === 'number' && !isNaN(value)) {
	        value = range(value);
	      }
	      return value || [];
	    }
	  },

	  unbind: function unbind() {
	    if (this.descriptor.ref) {
	      (this._scope || this.vm).$refs[this.descriptor.ref] = null;
	    }
	    if (this.frags) {
	      var i = this.frags.length;
	      var frag;
	      while (i--) {
	        frag = this.frags[i];
	        this.deleteCachedFrag(frag);
	        frag.destroy();
	      }
	    }
	  }
	};

	/**
	 * Helper to find the previous element that is a fragment
	 * anchor. This is necessary because a destroyed frag's
	 * element could still be lingering in the DOM before its
	 * leaving transition finishes, but its inserted flag
	 * should have been set to false so we can skip them.
	 *
	 * If this is a block repeat, we want to make sure we only
	 * return frag that is bound to this v-for. (see #929)
	 *
	 * @param {Fragment} frag
	 * @param {Comment|Text} anchor
	 * @param {String} id
	 * @return {Fragment}
	 */

	function findPrevFrag(frag, anchor, id) {
	  var el = frag.node.previousSibling;
	  /* istanbul ignore if */
	  if (!el) return;
	  frag = el.__v_frag;
	  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {
	    el = el.previousSibling;
	    /* istanbul ignore if */
	    if (!el) return;
	    frag = el.__v_frag;
	  }
	  return frag;
	}

	/**
	 * Create a range array from given number.
	 *
	 * @param {Number} n
	 * @return {Array}
	 */

	function range(n) {
	  var i = -1;
	  var ret = new Array(Math.floor(n));
	  while (++i < n) {
	    ret[i] = i;
	  }
	  return ret;
	}

	/**
	 * Get the track by key for an item.
	 *
	 * @param {Number} index
	 * @param {String} key
	 * @param {*} value
	 * @param {String} [trackByKey]
	 */

	function getTrackByKey(index, key, value, trackByKey) {
	  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;
	}

	if (process.env.NODE_ENV !== 'production') {
	  vFor.warnDuplicate = function (value) {
	    warn('Duplicate value found in v-for="' + this.descriptor.raw + '": ' + JSON.stringify(value) + '. Use track-by="$index" if ' + 'you are expecting duplicate values.', this.vm);
	  };
	}

	/**
	 * Find a vm from a fragment.
	 *
	 * @param {Fragment} frag
	 * @return {Vue|undefined}
	 */

	function findVmFromFrag(frag) {
	  var node = frag.node;
	  // handle multi-node frag
	  if (frag.end) {
	    while (!node.__vue__ && node !== frag.end && node.nextSibling) {
	      node = node.nextSibling;
	    }
	  }
	  return node.__vue__;
	}

	var vIf = {

	  priority: IF,
	  terminal: true,

	  bind: function bind() {
	    var el = this.el;
	    if (!el.__vue__) {
	      // check else block
	      var next = el.nextElementSibling;
	      if (next && getAttr(next, 'v-else') !== null) {
	        remove(next);
	        this.elseEl = next;
	      }
	      // check main block
	      this.anchor = createAnchor('v-if');
	      replace(el, this.anchor);
	    } else {
	      process.env.NODE_ENV !== 'production' && warn('v-if="' + this.expression + '" cannot be ' + 'used on an instance root element.', this.vm);
	      this.invalid = true;
	    }
	  },

	  update: function update(value) {
	    if (this.invalid) return;
	    if (value) {
	      if (!this.frag) {
	        this.insert();
	      }
	    } else {
	      this.remove();
	    }
	  },

	  insert: function insert() {
	    if (this.elseFrag) {
	      this.elseFrag.remove();
	      this.elseFrag = null;
	    }
	    // lazy init factory
	    if (!this.factory) {
	      this.factory = new FragmentFactory(this.vm, this.el);
	    }
	    this.frag = this.factory.create(this._host, this._scope, this._frag);
	    this.frag.before(this.anchor);
	  },

	  remove: function remove() {
	    if (this.frag) {
	      this.frag.remove();
	      this.frag = null;
	    }
	    if (this.elseEl && !this.elseFrag) {
	      if (!this.elseFactory) {
	        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);
	      }
	      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);
	      this.elseFrag.before(this.anchor);
	    }
	  },

	  unbind: function unbind() {
	    if (this.frag) {
	      this.frag.destroy();
	    }
	    if (this.elseFrag) {
	      this.elseFrag.destroy();
	    }
	  }
	};

	var show = {

	  bind: function bind() {
	    // check else block
	    var next = this.el.nextElementSibling;
	    if (next && getAttr(next, 'v-else') !== null) {
	      this.elseEl = next;
	    }
	  },

	  update: function update(value) {
	    this.apply(this.el, value);
	    if (this.elseEl) {
	      this.apply(this.elseEl, !value);
	    }
	  },

	  apply: function apply(el, value) {
	    if (inDoc(el)) {
	      applyTransition(el, value ? 1 : -1, toggle, this.vm);
	    } else {
	      toggle();
	    }
	    function toggle() {
	      el.style.display = value ? '' : 'none';
	    }
	  }
	};

	var text$2 = {

	  bind: function bind() {
	    var self = this;
	    var el = this.el;
	    var isRange = el.type === 'range';
	    var lazy = this.params.lazy;
	    var number = this.params.number;
	    var debounce = this.params.debounce;

	    // handle composition events.
	    //   http://blog.evanyou.me/2014/01/03/composition-event/
	    // skip this for Android because it handles composition
	    // events quite differently. Android doesn't trigger
	    // composition events for language input methods e.g.
	    // Chinese, but instead triggers them for spelling
	    // suggestions... (see Discussion/#162)
	    var composing = false;
	    if (!isAndroid && !isRange) {
	      this.on('compositionstart', function () {
	        composing = true;
	      });
	      this.on('compositionend', function () {
	        composing = false;
	        // in IE11 the "compositionend" event fires AFTER
	        // the "input" event, so the input handler is blocked
	        // at the end... have to call it here.
	        //
	        // #1327: in lazy mode this is unecessary.
	        if (!lazy) {
	          self.listener();
	        }
	      });
	    }

	    // prevent messing with the input when user is typing,
	    // and force update on blur.
	    this.focused = false;
	    if (!isRange && !lazy) {
	      this.on('focus', function () {
	        self.focused = true;
	      });
	      this.on('blur', function () {
	        self.focused = false;
	        // do not sync value after fragment removal (#2017)
	        if (!self._frag || self._frag.inserted) {
	          self.rawListener();
	        }
	      });
	    }

	    // Now attach the main listener
	    this.listener = this.rawListener = function () {
	      if (composing || !self._bound) {
	        return;
	      }
	      var val = number || isRange ? toNumber(el.value) : el.value;
	      self.set(val);
	      // force update on next tick to avoid lock & same value
	      // also only update when user is not typing
	      nextTick(function () {
	        if (self._bound && !self.focused) {
	          self.update(self._watcher.value);
	        }
	      });
	    };

	    // apply debounce
	    if (debounce) {
	      this.listener = _debounce(this.listener, debounce);
	    }

	    // Support jQuery events, since jQuery.trigger() doesn't
	    // trigger native events in some cases and some plugins
	    // rely on $.trigger()
	    //
	    // We want to make sure if a listener is attached using
	    // jQuery, it is also removed with jQuery, that's why
	    // we do the check for each directive instance and
	    // store that check result on itself. This also allows
	    // easier test coverage control by unsetting the global
	    // jQuery variable in tests.
	    this.hasjQuery = typeof jQuery === 'function';
	    if (this.hasjQuery) {
	      var method = jQuery.fn.on ? 'on' : 'bind';
	      jQuery(el)[method]('change', this.rawListener);
	      if (!lazy) {
	        jQuery(el)[method]('input', this.listener);
	      }
	    } else {
	      this.on('change', this.rawListener);
	      if (!lazy) {
	        this.on('input', this.listener);
	      }
	    }

	    // IE9 doesn't fire input event on backspace/del/cut
	    if (!lazy && isIE9) {
	      this.on('cut', function () {
	        nextTick(self.listener);
	      });
	      this.on('keyup', function (e) {
	        if (e.keyCode === 46 || e.keyCode === 8) {
	          self.listener();
	        }
	      });
	    }

	    // set initial value if present
	    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {
	      this.afterBind = this.listener;
	    }
	  },

	  update: function update(value) {
	    // #3029 only update when the value changes. This prevent
	    // browsers from overwriting values like selectionStart
	    value = _toString(value);
	    if (value !== this.el.value) this.el.value = value;
	  },

	  unbind: function unbind() {
	    var el = this.el;
	    if (this.hasjQuery) {
	      var method = jQuery.fn.off ? 'off' : 'unbind';
	      jQuery(el)[method]('change', this.listener);
	      jQuery(el)[method]('input', this.listener);
	    }
	  }
	};

	var radio = {

	  bind: function bind() {
	    var self = this;
	    var el = this.el;

	    this.getValue = function () {
	      // value overwrite via v-bind:value
	      if (el.hasOwnProperty('_value')) {
	        return el._value;
	      }
	      var val = el.value;
	      if (self.params.number) {
	        val = toNumber(val);
	      }
	      return val;
	    };

	    this.listener = function () {
	      self.set(self.getValue());
	    };
	    this.on('change', this.listener);

	    if (el.hasAttribute('checked')) {
	      this.afterBind = this.listener;
	    }
	  },

	  update: function update(value) {
	    this.el.checked = looseEqual(value, this.getValue());
	  }
	};

	var select = {

	  bind: function bind() {
	    var _this = this;

	    var self = this;
	    var el = this.el;

	    // method to force update DOM using latest value.
	    this.forceUpdate = function () {
	      if (self._watcher) {
	        self.update(self._watcher.get());
	      }
	    };

	    // check if this is a multiple select
	    var multiple = this.multiple = el.hasAttribute('multiple');

	    // attach listener
	    this.listener = function () {
	      var value = getValue(el, multiple);
	      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;
	      self.set(value);
	    };
	    this.on('change', this.listener);

	    // if has initial value, set afterBind
	    var initValue = getValue(el, multiple, true);
	    if (multiple && initValue.length || !multiple && initValue !== null) {
	      this.afterBind = this.listener;
	    }

	    // All major browsers except Firefox resets
	    // selectedIndex with value -1 to 0 when the element
	    // is appended to a new parent, therefore we have to
	    // force a DOM update whenever that happens...
	    this.vm.$on('hook:attached', function () {
	      nextTick(_this.forceUpdate);
	    });
	    if (!inDoc(el)) {
	      nextTick(this.forceUpdate);
	    }
	  },

	  update: function update(value) {
	    var el = this.el;
	    el.selectedIndex = -1;
	    var multi = this.multiple && isArray(value);
	    var options = el.options;
	    var i = options.length;
	    var op, val;
	    while (i--) {
	      op = options[i];
	      val = op.hasOwnProperty('_value') ? op._value : op.value;
	      /* eslint-disable eqeqeq */
	      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);
	      /* eslint-enable eqeqeq */
	    }
	  },

	  unbind: function unbind() {
	    /* istanbul ignore next */
	    this.vm.$off('hook:attached', this.forceUpdate);
	  }
	};

	/**
	 * Get select value
	 *
	 * @param {SelectElement} el
	 * @param {Boolean} multi
	 * @param {Boolean} init
	 * @return {Array|*}
	 */

	function getValue(el, multi, init) {
	  var res = multi ? [] : null;
	  var op, val, selected;
	  for (var i = 0, l = el.options.length; i < l; i++) {
	    op = el.options[i];
	    selected = init ? op.hasAttribute('selected') : op.selected;
	    if (selected) {
	      val = op.hasOwnProperty('_value') ? op._value : op.value;
	      if (multi) {
	        res.push(val);
	      } else {
	        return val;
	      }
	    }
	  }
	  return res;
	}

	/**
	 * Native Array.indexOf uses strict equal, but in this
	 * case we need to match string/numbers with custom equal.
	 *
	 * @param {Array} arr
	 * @param {*} val
	 */

	function indexOf$1(arr, val) {
	  var i = arr.length;
	  while (i--) {
	    if (looseEqual(arr[i], val)) {
	      return i;
	    }
	  }
	  return -1;
	}

	var checkbox = {

	  bind: function bind() {
	    var self = this;
	    var el = this.el;

	    this.getValue = function () {
	      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;
	    };

	    function getBooleanValue() {
	      var val = el.checked;
	      if (val && el.hasOwnProperty('_trueValue')) {
	        return el._trueValue;
	      }
	      if (!val && el.hasOwnProperty('_falseValue')) {
	        return el._falseValue;
	      }
	      return val;
	    }

	    this.listener = function () {
	      var model = self._watcher.get();
	      if (isArray(model)) {
	        var val = self.getValue();
	        var i = indexOf(model, val);
	        if (el.checked) {
	          if (i < 0) {
	            self.set(model.concat(val));
	          }
	        } else if (i > -1) {
	          self.set(model.slice(0, i).concat(model.slice(i + 1)));
	        }
	      } else {
	        self.set(getBooleanValue());
	      }
	    };

	    this.on('change', this.listener);
	    if (el.hasAttribute('checked')) {
	      this.afterBind = this.listener;
	    }
	  },

	  update: function update(value) {
	    var el = this.el;
	    if (isArray(value)) {
	      el.checked = indexOf(value, this.getValue()) > -1;
	    } else {
	      if (el.hasOwnProperty('_trueValue')) {
	        el.checked = looseEqual(value, el._trueValue);
	      } else {
	        el.checked = !!value;
	      }
	    }
	  }
	};

	var handlers = {
	  text: text$2,
	  radio: radio,
	  select: select,
	  checkbox: checkbox
	};

	var model = {

	  priority: MODEL,
	  twoWay: true,
	  handlers: handlers,
	  params: ['lazy', 'number', 'debounce'],

	  /**
	   * Possible elements:
	   *   <select>
	   *   <textarea>
	   *   <input type="*">
	   *     - text
	   *     - checkbox
	   *     - radio
	   *     - number
	   */

	  bind: function bind() {
	    // friendly warning...
	    this.checkFilters();
	    if (this.hasRead && !this.hasWrite) {
	      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model="' + this.descriptor.raw + '". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);
	    }
	    var el = this.el;
	    var tag = el.tagName;
	    var handler;
	    if (tag === 'INPUT') {
	      handler = handlers[el.type] || handlers.text;
	    } else if (tag === 'SELECT') {
	      handler = handlers.select;
	    } else if (tag === 'TEXTAREA') {
	      handler = handlers.text;
	    } else {
	      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);
	      return;
	    }
	    el.__v_model = this;
	    handler.bind.call(this);
	    this.update = handler.update;
	    this._unbind = handler.unbind;
	  },

	  /**
	   * Check read/write filter stats.
	   */

	  checkFilters: function checkFilters() {
	    var filters = this.filters;
	    if (!filters) return;
	    var i = filters.length;
	    while (i--) {
	      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);
	      if (typeof filter === 'function' || filter.read) {
	        this.hasRead = true;
	      }
	      if (filter.write) {
	        this.hasWrite = true;
	      }
	    }
	  },

	  unbind: function unbind() {
	    this.el.__v_model = null;
	    this._unbind && this._unbind();
	  }
	};

	// keyCode aliases
	var keyCodes = {
	  esc: 27,
	  tab: 9,
	  enter: 13,
	  space: 32,
	  'delete': [8, 46],
	  up: 38,
	  left: 37,
	  right: 39,
	  down: 40
	};

	function keyFilter(handler, keys) {
	  var codes = keys.map(function (key) {
	    var charCode = key.charCodeAt(0);
	    if (charCode > 47 && charCode < 58) {
	      return parseInt(key, 10);
	    }
	    if (key.length === 1) {
	      charCode = key.toUpperCase().charCodeAt(0);
	      if (charCode > 64 && charCode < 91) {
	        return charCode;
	      }
	    }
	    return keyCodes[key];
	  });
	  codes = [].concat.apply([], codes);
	  return function keyHandler(e) {
	    if (codes.indexOf(e.keyCode) > -1) {
	      return handler.call(this, e);
	    }
	  };
	}

	function stopFilter(handler) {
	  return function stopHandler(e) {
	    e.stopPropagation();
	    return handler.call(this, e);
	  };
	}

	function preventFilter(handler) {
	  return function preventHandler(e) {
	    e.preventDefault();
	    return handler.call(this, e);
	  };
	}

	function selfFilter(handler) {
	  return function selfHandler(e) {
	    if (e.target === e.currentTarget) {
	      return handler.call(this, e);
	    }
	  };
	}

	var on$1 = {

	  priority: ON,
	  acceptStatement: true,
	  keyCodes: keyCodes,

	  bind: function bind() {
	    // deal with iframes
	    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {
	      var self = this;
	      this.iframeBind = function () {
	        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);
	      };
	      this.on('load', this.iframeBind);
	    }
	  },

	  update: function update(handler) {
	    // stub a noop for v-on with no value,
	    // e.g. @mousedown.prevent
	    if (!this.descriptor.raw) {
	      handler = function () {};
	    }

	    if (typeof handler !== 'function') {
	      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '="' + this.expression + '" expects a function value, ' + 'got ' + handler, this.vm);
	      return;
	    }

	    // apply modifiers
	    if (this.modifiers.stop) {
	      handler = stopFilter(handler);
	    }
	    if (this.modifiers.prevent) {
	      handler = preventFilter(handler);
	    }
	    if (this.modifiers.self) {
	      handler = selfFilter(handler);
	    }
	    // key filter
	    var keys = Object.keys(this.modifiers).filter(function (key) {
	      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';
	    });
	    if (keys.length) {
	      handler = keyFilter(handler, keys);
	    }

	    this.reset();
	    this.handler = handler;

	    if (this.iframeBind) {
	      this.iframeBind();
	    } else {
	      on(this.el, this.arg, this.handler, this.modifiers.capture);
	    }
	  },

	  reset: function reset() {
	    var el = this.iframeBind ? this.el.contentWindow : this.el;
	    if (this.handler) {
	      off(el, this.arg, this.handler);
	    }
	  },

	  unbind: function unbind() {
	    this.reset();
	  }
	};

	var prefixes = ['-webkit-', '-moz-', '-ms-'];
	var camelPrefixes = ['Webkit', 'Moz', 'ms'];
	var importantRE = /!important;?$/;
	var propCache = Object.create(null);

	var testEl = null;

	var style = {

	  deep: true,

	  update: function update(value) {
	    if (typeof value === 'string') {
	      this.el.style.cssText = value;
	    } else if (isArray(value)) {
	      this.handleObject(value.reduce(extend, {}));
	    } else {
	      this.handleObject(value || {});
	    }
	  },

	  handleObject: function handleObject(value) {
	    // cache object styles so that only changed props
	    // are actually updated.
	    var cache = this.cache || (this.cache = {});
	    var name, val;
	    for (name in cache) {
	      if (!(name in value)) {
	        this.handleSingle(name, null);
	        delete cache[name];
	      }
	    }
	    for (name in value) {
	      val = value[name];
	      if (val !== cache[name]) {
	        cache[name] = val;
	        this.handleSingle(name, val);
	      }
	    }
	  },

	  handleSingle: function handleSingle(prop, value) {
	    prop = normalize(prop);
	    if (!prop) return; // unsupported prop
	    // cast possible numbers/booleans into strings
	    if (value != null) value += '';
	    if (value) {
	      var isImportant = importantRE.test(value) ? 'important' : '';
	      if (isImportant) {
	        /* istanbul ignore if */
	        if (process.env.NODE_ENV !== 'production') {
	          warn('It\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');
	        }
	        value = value.replace(importantRE, '').trim();
	        this.el.style.setProperty(prop.kebab, value, isImportant);
	      } else {
	        this.el.style[prop.camel] = value;
	      }
	    } else {
	      this.el.style[prop.camel] = '';
	    }
	  }

	};

	/**
	 * Normalize a CSS property name.
	 * - cache result
	 * - auto prefix
	 * - camelCase -> dash-case
	 *
	 * @param {String} prop
	 * @return {String}
	 */

	function normalize(prop) {
	  if (propCache[prop]) {
	    return propCache[prop];
	  }
	  var res = prefix(prop);
	  propCache[prop] = propCache[res] = res;
	  return res;
	}

	/**
	 * Auto detect the appropriate prefix for a CSS property.
	 * https://gist.github.com/paulirish/523692
	 *
	 * @param {String} prop
	 * @return {String}
	 */

	function prefix(prop) {
	  prop = hyphenate(prop);
	  var camel = camelize(prop);
	  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);
	  if (!testEl) {
	    testEl = document.createElement('div');
	  }
	  var i = prefixes.length;
	  var prefixed;
	  if (camel !== 'filter' && camel in testEl.style) {
	    return {
	      kebab: prop,
	      camel: camel
	    };
	  }
	  while (i--) {
	    prefixed = camelPrefixes[i] + upper;
	    if (prefixed in testEl.style) {
	      return {
	        kebab: prefixes[i] + prop,
	        camel: prefixed
	      };
	    }
	  }
	}

	// xlink
	var xlinkNS = 'http://www.w3.org/1999/xlink';
	var xlinkRE = /^xlink:/;

	// check for attributes that prohibit interpolations
	var disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;
	// these attributes should also set their corresponding properties
	// because they only affect the initial state of the element
	var attrWithPropsRE = /^(?:value|checked|selected|muted)$/;
	// these attributes expect enumrated values of "true" or "false"
	// but are not boolean attributes
	var enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;

	// these attributes should set a hidden property for
	// binding v-model to object values
	var modelProps = {
	  value: '_value',
	  'true-value': '_trueValue',
	  'false-value': '_falseValue'
	};

	var bind$1 = {

	  priority: BIND,

	  bind: function bind() {
	    var attr = this.arg;
	    var tag = this.el.tagName;
	    // should be deep watch on object mode
	    if (!attr) {
	      this.deep = true;
	    }
	    // handle interpolation bindings
	    var descriptor = this.descriptor;
	    var tokens = descriptor.interp;
	    if (tokens) {
	      // handle interpolations with one-time tokens
	      if (descriptor.hasOneTime) {
	        this.expression = tokensToExp(tokens, this._scope || this.vm);
	      }

	      // only allow binding on native attributes
	      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {
	        process.env.NODE_ENV !== 'production' && warn(attr + '="' + descriptor.raw + '": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);
	        this.el.removeAttribute(attr);
	        this.invalid = true;
	      }

	      /* istanbul ignore if */
	      if (process.env.NODE_ENV !== 'production') {
	        var raw = attr + '="' + descriptor.raw + '": ';
	        // warn src
	        if (attr === 'src') {
	          warn(raw + 'interpolation in "src" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);
	        }

	        // warn style
	        if (attr === 'style') {
	          warn(raw + 'interpolation in "style" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);
	        }
	      }
	    }
	  },

	  update: function update(value) {
	    if (this.invalid) {
	      return;
	    }
	    var attr = this.arg;
	    if (this.arg) {
	      this.handleSingle(attr, value);
	    } else {
	      this.handleObject(value || {});
	    }
	  },

	  // share object handler with v-bind:class
	  handleObject: style.handleObject,

	  handleSingle: function handleSingle(attr, value) {
	    var el = this.el;
	    var interp = this.descriptor.interp;
	    if (this.modifiers.camel) {
	      attr = camelize(attr);
	    }
	    if (!interp && attrWithPropsRE.test(attr) && attr in el) {
	      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to "null" for null...
	      ? '' : value : value;

	      if (el[attr] !== attrValue) {
	        el[attr] = attrValue;
	      }
	    }
	    // set model props
	    var modelProp = modelProps[attr];
	    if (!interp && modelProp) {
	      el[modelProp] = value;
	      // update v-model if present
	      var model = el.__v_model;
	      if (model) {
	        model.listener();
	      }
	    }
	    // do not set value attribute for textarea
	    if (attr === 'value' && el.tagName === 'TEXTAREA') {
	      el.removeAttribute(attr);
	      return;
	    }
	    // update attribute
	    if (enumeratedAttrRE.test(attr)) {
	      el.setAttribute(attr, value ? 'true' : 'false');
	    } else if (value != null && value !== false) {
	      if (attr === 'class') {
	        // handle edge case #1960:
	        // class interpolation should not overwrite Vue transition class
	        if (el.__v_trans) {
	          value += ' ' + el.__v_trans.id + '-transition';
	        }
	        setClass(el, value);
	      } else if (xlinkRE.test(attr)) {
	        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);
	      } else {
	        el.setAttribute(attr, value === true ? '' : value);
	      }
	    } else {
	      el.removeAttribute(attr);
	    }
	  }
	};

	var el = {

	  priority: EL,

	  bind: function bind() {
	    /* istanbul ignore if */
	    if (!this.arg) {
	      return;
	    }
	    var id = this.id = camelize(this.arg);
	    var refs = (this._scope || this.vm).$els;
	    if (hasOwn(refs, id)) {
	      refs[id] = this.el;
	    } else {
	      defineReactive(refs, id, this.el);
	    }
	  },

	  unbind: function unbind() {
	    var refs = (this._scope || this.vm).$els;
	    if (refs[this.id] === this.el) {
	      refs[this.id] = null;
	    }
	  }
	};

	var ref = {
	  bind: function bind() {
	    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);
	  }
	};

	var cloak = {
	  bind: function bind() {
	    var el = this.el;
	    this.vm.$once('pre-hook:compiled', function () {
	      el.removeAttribute('v-cloak');
	    });
	  }
	};

	// logic control
	// two-way binding
	// event handling
	// attributes
	// ref & el
	// cloak
	// must export plain object
	var directives = {
	  text: text$1,
	  html: html,
	  'for': vFor,
	  'if': vIf,
	  show: show,
	  model: model,
	  on: on$1,
	  bind: bind$1,
	  el: el,
	  ref: ref,
	  cloak: cloak
	};

	var vClass = {

	  deep: true,

	  update: function update(value) {
	    if (!value) {
	      this.cleanup();
	    } else if (typeof value === 'string') {
	      this.setClass(value.trim().split(/\s+/));
	    } else {
	      this.setClass(normalize$1(value));
	    }
	  },

	  setClass: function setClass(value) {
	    this.cleanup(value);
	    for (var i = 0, l = value.length; i < l; i++) {
	      var val = value[i];
	      if (val) {
	        apply(this.el, val, addClass);
	      }
	    }
	    this.prevKeys = value;
	  },

	  cleanup: function cleanup(value) {
	    var prevKeys = this.prevKeys;
	    if (!prevKeys) return;
	    var i = prevKeys.length;
	    while (i--) {
	      var key = prevKeys[i];
	      if (!value || value.indexOf(key) < 0) {
	        apply(this.el, key, removeClass);
	      }
	    }
	  }
	};

	/**
	 * Normalize objects and arrays (potentially containing objects)
	 * into array of strings.
	 *
	 * @param {Object|Array<String|Object>} value
	 * @return {Array<String>}
	 */

	function normalize$1(value) {
	  var res = [];
	  if (isArray(value)) {
	    for (var i = 0, l = value.length; i < l; i++) {
	      var _key = value[i];
	      if (_key) {
	        if (typeof _key === 'string') {
	          res.push(_key);
	        } else {
	          for (var k in _key) {
	            if (_key[k]) res.push(k);
	          }
	        }
	      }
	    }
	  } else if (isObject(value)) {
	    for (var key in value) {
	      if (value[key]) res.push(key);
	    }
	  }
	  return res;
	}

	/**
	 * Add or remove a class/classes on an element
	 *
	 * @param {Element} el
	 * @param {String} key The class name. This may or may not
	 *                     contain a space character, in such a
	 *                     case we'll deal with multiple class
	 *                     names at once.
	 * @param {Function} fn
	 */

	function apply(el, key, fn) {
	  key = key.trim();
	  if (key.indexOf(' ') === -1) {
	    fn(el, key);
	    return;
	  }
	  // The key contains one or more space characters.
	  // Since a class name doesn't accept such characters, we
	  // treat it as multiple classes.
	  var keys = key.split(/\s+/);
	  for (var i = 0, l = keys.length; i < l; i++) {
	    fn(el, keys[i]);
	  }
	}

	var component = {

	  priority: COMPONENT,

	  params: ['keep-alive', 'transition-mode', 'inline-template'],

	  /**
	   * Setup. Two possible usages:
	   *
	   * - static:
	   *   <comp> or <div v-component="comp">
	   *
	   * - dynamic:
	   *   <component :is="view">
	   */

	  bind: function bind() {
	    if (!this.el.__vue__) {
	      // keep-alive cache
	      this.keepAlive = this.params.keepAlive;
	      if (this.keepAlive) {
	        this.cache = {};
	      }
	      // check inline-template
	      if (this.params.inlineTemplate) {
	        // extract inline template as a DocumentFragment
	        this.inlineTemplate = extractContent(this.el, true);
	      }
	      // component resolution related state
	      this.pendingComponentCb = this.Component = null;
	      // transition related state
	      this.pendingRemovals = 0;
	      this.pendingRemovalCb = null;
	      // create a ref anchor
	      this.anchor = createAnchor('v-component');
	      replace(this.el, this.anchor);
	      // remove is attribute.
	      // this is removed during compilation, but because compilation is
	      // cached, when the component is used elsewhere this attribute
	      // will remain at link time.
	      this.el.removeAttribute('is');
	      this.el.removeAttribute(':is');
	      // remove ref, same as above
	      if (this.descriptor.ref) {
	        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));
	      }
	      // if static, build right now.
	      if (this.literal) {
	        this.setComponent(this.expression);
	      }
	    } else {
	      process.env.NODE_ENV !== 'production' && warn('cannot mount component "' + this.expression + '" ' + 'on already mounted element: ' + this.el);
	    }
	  },

	  /**
	   * Public update, called by the watcher in the dynamic
	   * literal scenario, e.g. <component :is="view">
	   */

	  update: function update(value) {
	    if (!this.literal) {
	      this.setComponent(value);
	    }
	  },

	  /**
	   * Switch dynamic components. May resolve the component
	   * asynchronously, and perform transition based on
	   * specified transition mode. Accepts a few additional
	   * arguments specifically for vue-router.
	   *
	   * The callback is called when the full transition is
	   * finished.
	   *
	   * @param {String} value
	   * @param {Function} [cb]
	   */

	  setComponent: function setComponent(value, cb) {
	    this.invalidatePending();
	    if (!value) {
	      // just remove current
	      this.unbuild(true);
	      this.remove(this.childVM, cb);
	      this.childVM = null;
	    } else {
	      var self = this;
	      this.resolveComponent(value, function () {
	        self.mountComponent(cb);
	      });
	    }
	  },

	  /**
	   * Resolve the component constructor to use when creating
	   * the child vm.
	   *
	   * @param {String|Function} value
	   * @param {Function} cb
	   */

	  resolveComponent: function resolveComponent(value, cb) {
	    var self = this;
	    this.pendingComponentCb = cancellable(function (Component) {
	      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);
	      self.Component = Component;
	      cb();
	    });
	    this.vm._resolveComponent(value, this.pendingComponentCb);
	  },

	  /**
	   * Create a new instance using the current constructor and
	   * replace the existing instance. This method doesn't care
	   * whether the new component and the old one are actually
	   * the same.
	   *
	   * @param {Function} [cb]
	   */

	  mountComponent: function mountComponent(cb) {
	    // actual mount
	    this.unbuild(true);
	    var self = this;
	    var activateHooks = this.Component.options.activate;
	    var cached = this.getCached();
	    var newComponent = this.build();
	    if (activateHooks && !cached) {
	      this.waitingFor = newComponent;
	      callActivateHooks(activateHooks, newComponent, function () {
	        if (self.waitingFor !== newComponent) {
	          return;
	        }
	        self.waitingFor = null;
	        self.transition(newComponent, cb);
	      });
	    } else {
	      // update ref for kept-alive component
	      if (cached) {
	        newComponent._updateRef();
	      }
	      this.transition(newComponent, cb);
	    }
	  },

	  /**
	   * When the component changes or unbinds before an async
	   * constructor is resolved, we need to invalidate its
	   * pending callback.
	   */

	  invalidatePending: function invalidatePending() {
	    if (this.pendingComponentCb) {
	      this.pendingComponentCb.cancel();
	      this.pendingComponentCb = null;
	    }
	  },

	  /**
	   * Instantiate/insert a new child vm.
	   * If keep alive and has cached instance, insert that
	   * instance; otherwise build a new one and cache it.
	   *
	   * @param {Object} [extraOptions]
	   * @return {Vue} - the created instance
	   */

	  build: function build(extraOptions) {
	    var cached = this.getCached();
	    if (cached) {
	      return cached;
	    }
	    if (this.Component) {
	      // default options
	      var options = {
	        name: this.ComponentName,
	        el: cloneNode(this.el),
	        template: this.inlineTemplate,
	        // make sure to add the child with correct parent
	        // if this is a transcluded component, its parent
	        // should be the transclusion host.
	        parent: this._host || this.vm,
	        // if no inline-template, then the compiled
	        // linker can be cached for better performance.
	        _linkerCachable: !this.inlineTemplate,
	        _ref: this.descriptor.ref,
	        _asComponent: true,
	        _isRouterView: this._isRouterView,
	        // if this is a transcluded component, context
	        // will be the common parent vm of this instance
	        // and its host.
	        _context: this.vm,
	        // if this is inside an inline v-for, the scope
	        // will be the intermediate scope created for this
	        // repeat fragment. this is used for linking props
	        // and container directives.
	        _scope: this._scope,
	        // pass in the owner fragment of this component.
	        // this is necessary so that the fragment can keep
	        // track of its contained components in order to
	        // call attach/detach hooks for them.
	        _frag: this._frag
	      };
	      // extra options
	      // in 1.0.0 this is used by vue-router only
	      /* istanbul ignore if */
	      if (extraOptions) {
	        extend(options, extraOptions);
	      }
	      var child = new this.Component(options);
	      if (this.keepAlive) {
	        this.cache[this.Component.cid] = child;
	      }
	      /* istanbul ignore if */
	      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {
	        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);
	      }
	      return child;
	    }
	  },

	  /**
	   * Try to get a cached instance of the current component.
	   *
	   * @return {Vue|undefined}
	   */

	  getCached: function getCached() {
	    return this.keepAlive && this.cache[this.Component.cid];
	  },

	  /**
	   * Teardown the current child, but defers cleanup so
	   * that we can separate the destroy and removal steps.
	   *
	   * @param {Boolean} defer
	   */

	  unbuild: function unbuild(defer) {
	    if (this.waitingFor) {
	      if (!this.keepAlive) {
	        this.waitingFor.$destroy();
	      }
	      this.waitingFor = null;
	    }
	    var child = this.childVM;
	    if (!child || this.keepAlive) {
	      if (child) {
	        // remove ref
	        child._inactive = true;
	        child._updateRef(true);
	      }
	      return;
	    }
	    // the sole purpose of `deferCleanup` is so that we can
	    // "deactivate" the vm right now and perform DOM removal
	    // later.
	    child.$destroy(false, defer);
	  },

	  /**
	   * Remove current destroyed child and manually do
	   * the cleanup after removal.
	   *
	   * @param {Function} cb
	   */

	  remove: function remove(child, cb) {
	    var keepAlive = this.keepAlive;
	    if (child) {
	      // we may have a component switch when a previous
	      // component is still being transitioned out.
	      // we want to trigger only one lastest insertion cb
	      // when the existing transition finishes. (#1119)
	      this.pendingRemovals++;
	      this.pendingRemovalCb = cb;
	      var self = this;
	      child.$remove(function () {
	        self.pendingRemovals--;
	        if (!keepAlive) child._cleanup();
	        if (!self.pendingRemovals && self.pendingRemovalCb) {
	          self.pendingRemovalCb();
	          self.pendingRemovalCb = null;
	        }
	      });
	    } else if (cb) {
	      cb();
	    }
	  },

	  /**
	   * Actually swap the components, depending on the
	   * transition mode. Defaults to simultaneous.
	   *
	   * @param {Vue} target
	   * @param {Function} [cb]
	   */

	  transition: function transition(target, cb) {
	    var self = this;
	    var current = this.childVM;
	    // for devtool inspection
	    if (current) current._inactive = true;
	    target._inactive = false;
	    this.childVM = target;
	    switch (self.params.transitionMode) {
	      case 'in-out':
	        target.$before(self.anchor, function () {
	          self.remove(current, cb);
	        });
	        break;
	      case 'out-in':
	        self.remove(current, function () {
	          target.$before(self.anchor, cb);
	        });
	        break;
	      default:
	        self.remove(current);
	        target.$before(self.anchor, cb);
	    }
	  },

	  /**
	   * Unbind.
	   */

	  unbind: function unbind() {
	    this.invalidatePending();
	    // Do not defer cleanup when unbinding
	    this.unbuild();
	    // destroy all keep-alive cached instances
	    if (this.cache) {
	      for (var key in this.cache) {
	        this.cache[key].$destroy();
	      }
	      this.cache = null;
	    }
	  }
	};

	/**
	 * Call activate hooks in order (asynchronous)
	 *
	 * @param {Array} hooks
	 * @param {Vue} vm
	 * @param {Function} cb
	 */

	function callActivateHooks(hooks, vm, cb) {
	  var total = hooks.length;
	  var called = 0;
	  hooks[0].call(vm, next);
	  function next() {
	    if (++called >= total) {
	      cb();
	    } else {
	      hooks[called].call(vm, next);
	    }
	  }
	}

	var propBindingModes = config._propBindingModes;
	var empty = {};

	// regexes
	var identRE$1 = /^[$_a-zA-Z]+[\w$]*$/;
	var settablePathRE = /^[A-Za-z_$][\w$]*(\.[A-Za-z_$][\w$]*|\[[^\[\]]+\])*$/;

	/**
	 * Compile props on a root element and return
	 * a props link function.
	 *
	 * @param {Element|DocumentFragment} el
	 * @param {Array} propOptions
	 * @param {Vue} vm
	 * @return {Function} propsLinkFn
	 */

	function compileProps(el, propOptions, vm) {
	  var props = [];
	  var propsData = vm.$options.propsData;
	  var names = Object.keys(propOptions);
	  var i = names.length;
	  var options, name, attr, value, path, parsed, prop;
	  while (i--) {
	    name = names[i];
	    options = propOptions[name] || empty;

	    if (process.env.NODE_ENV !== 'production' && name === '$data') {
	      warn('Do not use $data as prop.', vm);
	      continue;
	    }

	    // props could contain dashes, which will be
	    // interpreted as minus calculations by the parser
	    // so we need to camelize the path here
	    path = camelize(name);
	    if (!identRE$1.test(path)) {
	      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: "' + name + '". Prop keys ' + 'must be valid identifiers.', vm);
	      continue;
	    }

	    prop = {
	      name: name,
	      path: path,
	      options: options,
	      mode: propBindingModes.ONE_WAY,
	      raw: null
	    };

	    attr = hyphenate(name);
	    // first check dynamic version
	    if ((value = getBindAttr(el, attr)) === null) {
	      if ((value = getBindAttr(el, attr + '.sync')) !== null) {
	        prop.mode = propBindingModes.TWO_WAY;
	      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {
	        prop.mode = propBindingModes.ONE_TIME;
	      }
	    }
	    if (value !== null) {
	      // has dynamic binding!
	      prop.raw = value;
	      parsed = parseDirective(value);
	      value = parsed.expression;
	      prop.filters = parsed.filters;
	      // check binding type
	      if (isLiteral(value) && !parsed.filters) {
	        // for expressions containing literal numbers and
	        // booleans, there's no need to setup a prop binding,
	        // so we can optimize them as a one-time set.
	        prop.optimizedLiteral = true;
	      } else {
	        prop.dynamic = true;
	        // check non-settable path for two-way bindings
	        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {
	          prop.mode = propBindingModes.ONE_WAY;
	          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);
	        }
	      }
	      prop.parentPath = value;

	      // warn required two-way
	      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {
	        warn('Prop "' + name + '" expects a two-way binding type.', vm);
	      }
	    } else if ((value = getAttr(el, attr)) !== null) {
	      // has literal binding!
	      prop.raw = value;
	    } else if (propsData && (value = propsData[name] || propsData[path]) !== null) {
	      // has propsData
	      prop.raw = value;
	    } else if (process.env.NODE_ENV !== 'production') {
	      // check possible camelCase prop usage
	      var lowerCaseName = path.toLowerCase();
	      value = /[A-Z\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));
	      if (value) {
	        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);
	      } else if (options.required && (!propsData || !(name in propsData) && !(path in propsData))) {
	        // warn missing required
	        warn('Missing required prop: ' + name, vm);
	      }
	    }
	    // push prop
	    props.push(prop);
	  }
	  return makePropsLinkFn(props);
	}

	/**
	 * Build a function that applies props to a vm.
	 *
	 * @param {Array} props
	 * @return {Function} propsLinkFn
	 */

	function makePropsLinkFn(props) {
	  return function propsLinkFn(vm, scope) {
	    // store resolved props info
	    vm._props = {};
	    var inlineProps = vm.$options.propsData;
	    var i = props.length;
	    var prop, path, options, value, raw;
	    while (i--) {
	      prop = props[i];
	      raw = prop.raw;
	      path = prop.path;
	      options = prop.options;
	      vm._props[path] = prop;
	      if (inlineProps && hasOwn(inlineProps, path)) {
	        initProp(vm, prop, inlineProps[path]);
	      }if (raw === null) {
	        // initialize absent prop
	        initProp(vm, prop, undefined);
	      } else if (prop.dynamic) {
	        // dynamic prop
	        if (prop.mode === propBindingModes.ONE_TIME) {
	          // one time binding
	          value = (scope || vm._context || vm).$get(prop.parentPath);
	          initProp(vm, prop, value);
	        } else {
	          if (vm._context) {
	            // dynamic binding
	            vm._bindDir({
	              name: 'prop',
	              def: propDef,
	              prop: prop
	            }, null, null, scope); // el, host, scope
	          } else {
	              // root instance
	              initProp(vm, prop, vm.$get(prop.parentPath));
	            }
	        }
	      } else if (prop.optimizedLiteral) {
	        // optimized literal, cast it and just set once
	        var stripped = stripQuotes(raw);
	        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;
	        initProp(vm, prop, value);
	      } else {
	        // string literal, but we need to cater for
	        // Boolean props with no value, or with same
	        // literal value (e.g. disabled="disabled")
	        // see https://github.com/vuejs/vue-loader/issues/182
	        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;
	        initProp(vm, prop, value);
	      }
	    }
	  };
	}

	/**
	 * Process a prop with a rawValue, applying necessary coersions,
	 * default values & assertions and call the given callback with
	 * processed value.
	 *
	 * @param {Vue} vm
	 * @param {Object} prop
	 * @param {*} rawValue
	 * @param {Function} fn
	 */

	function processPropValue(vm, prop, rawValue, fn) {
	  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);
	  var value = rawValue;
	  if (value === undefined) {
	    value = getPropDefaultValue(vm, prop);
	  }
	  value = coerceProp(prop, value, vm);
	  var coerced = value !== rawValue;
	  if (!assertProp(prop, value, vm)) {
	    value = undefined;
	  }
	  if (isSimple && !coerced) {
	    withoutConversion(function () {
	      fn(value);
	    });
	  } else {
	    fn(value);
	  }
	}

	/**
	 * Set a prop's initial value on a vm and its data object.
	 *
	 * @param {Vue} vm
	 * @param {Object} prop
	 * @param {*} value
	 */

	function initProp(vm, prop, value) {
	  processPropValue(vm, prop, value, function (value) {
	    defineReactive(vm, prop.path, value);
	  });
	}

	/**
	 * Update a prop's value on a vm.
	 *
	 * @param {Vue} vm
	 * @param {Object} prop
	 * @param {*} value
	 */

	function updateProp(vm, prop, value) {
	  processPropValue(vm, prop, value, function (value) {
	    vm[prop.path] = value;
	  });
	}

	/**
	 * Get the default value of a prop.
	 *
	 * @param {Vue} vm
	 * @param {Object} prop
	 * @return {*}
	 */

	function getPropDefaultValue(vm, prop) {
	  // no default, return undefined
	  var options = prop.options;
	  if (!hasOwn(options, 'default')) {
	    // absent boolean value defaults to false
	    return options.type === Boolean ? false : undefined;
	  }
	  var def = options['default'];
	  // warn against non-factory defaults for Object & Array
	  if (isObject(def)) {
	    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop "' + prop.name + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
	  }
	  // call factory function for non-Function types
	  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;
	}

	/**
	 * Assert whether a prop is valid.
	 *
	 * @param {Object} prop
	 * @param {*} value
	 * @param {Vue} vm
	 */

	function assertProp(prop, value, vm) {
	  if (!prop.options.required && ( // non-required
	  prop.raw === null || // abscent
	  value == null) // null or undefined
	  ) {
	      return true;
	    }
	  var options = prop.options;
	  var type = options.type;
	  var valid = !type;
	  var expectedTypes = [];
	  if (type) {
	    if (!isArray(type)) {
	      type = [type];
	    }
	    for (var i = 0; i < type.length && !valid; i++) {
	      var assertedType = assertType(value, type[i]);
	      expectedTypes.push(assertedType.expectedType);
	      valid = assertedType.valid;
	    }
	  }
	  if (!valid) {
	    if (process.env.NODE_ENV !== 'production') {
	      warn('Invalid prop: type check failed for prop "' + prop.name + '".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);
	    }
	    return false;
	  }
	  var validator = options.validator;
	  if (validator) {
	    if (!validator(value)) {
	      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop "' + prop.name + '".', vm);
	      return false;
	    }
	  }
	  return true;
	}

	/**
	 * Force parsing value with coerce option.
	 *
	 * @param {*} value
	 * @param {Object} options
	 * @return {*}
	 */

	function coerceProp(prop, value, vm) {
	  var coerce = prop.options.coerce;
	  if (!coerce) {
	    return value;
	  }
	  if (typeof coerce === 'function') {
	    return coerce(value);
	  } else {
	    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop "' + prop.name + '": expected function, got ' + typeof coerce + '.', vm);
	    return value;
	  }
	}

	/**
	 * Assert the type of a value
	 *
	 * @param {*} value
	 * @param {Function} type
	 * @return {Object}
	 */

	function assertType(value, type) {
	  var valid;
	  var expectedType;
	  if (type === String) {
	    expectedType = 'string';
	    valid = typeof value === expectedType;
	  } else if (type === Number) {
	    expectedType = 'number';
	    valid = typeof value === expectedType;
	  } else if (type === Boolean) {
	    expectedType = 'boolean';
	    valid = typeof value === expectedType;
	  } else if (type === Function) {
	    expectedType = 'function';
	    valid = typeof value === expectedType;
	  } else if (type === Object) {
	    expectedType = 'object';
	    valid = isPlainObject(value);
	  } else if (type === Array) {
	    expectedType = 'array';
	    valid = isArray(value);
	  } else {
	    valid = value instanceof type;
	  }
	  return {
	    valid: valid,
	    expectedType: expectedType
	  };
	}

	/**
	 * Format type for output
	 *
	 * @param {String} type
	 * @return {String}
	 */

	function formatType(type) {
	  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';
	}

	/**
	 * Format value
	 *
	 * @param {*} value
	 * @return {String}
	 */

	function formatValue(val) {
	  return Object.prototype.toString.call(val).slice(8, -1);
	}

	var bindingModes = config._propBindingModes;

	var propDef = {

	  bind: function bind() {
	    var child = this.vm;
	    var parent = child._context;
	    // passed in from compiler directly
	    var prop = this.descriptor.prop;
	    var childKey = prop.path;
	    var parentKey = prop.parentPath;
	    var twoWay = prop.mode === bindingModes.TWO_WAY;

	    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {
	      updateProp(child, prop, val);
	    }, {
	      twoWay: twoWay,
	      filters: prop.filters,
	      // important: props need to be observed on the
	      // v-for scope if present
	      scope: this._scope
	    });

	    // set the child initial value.
	    initProp(child, prop, parentWatcher.value);

	    // setup two-way binding
	    if (twoWay) {
	      // important: defer the child watcher creation until
	      // the created hook (after data observation)
	      var self = this;
	      child.$once('pre-hook:created', function () {
	        self.childWatcher = new Watcher(child, childKey, function (val) {
	          parentWatcher.set(val);
	        }, {
	          // ensure sync upward before parent sync down.
	          // this is necessary in cases e.g. the child
	          // mutates a prop array, then replaces it. (#1683)
	          sync: true
	        });
	      });
	    }
	  },

	  unbind: function unbind() {
	    this.parentWatcher.teardown();
	    if (this.childWatcher) {
	      this.childWatcher.teardown();
	    }
	  }
	};

	var queue$1 = [];
	var queued = false;

	/**
	 * Push a job into the queue.
	 *
	 * @param {Function} job
	 */

	function pushJob(job) {
	  queue$1.push(job);
	  if (!queued) {
	    queued = true;
	    nextTick(flush);
	  }
	}

	/**
	 * Flush the queue, and do one forced reflow before
	 * triggering transitions.
	 */

	function flush() {
	  // Force layout
	  var f = document.documentElement.offsetHeight;
	  for (var i = 0; i < queue$1.length; i++) {
	    queue$1[i]();
	  }
	  queue$1 = [];
	  queued = false;
	  // dummy return, so js linters don't complain about
	  // unused variable f
	  return f;
	}

	var TYPE_TRANSITION = 'transition';
	var TYPE_ANIMATION = 'animation';
	var transDurationProp = transitionProp + 'Duration';
	var animDurationProp = animationProp + 'Duration';

	/**
	 * If a just-entered element is applied the
	 * leave class while its enter transition hasn't started yet,
	 * and the transitioned property has the same value for both
	 * enter/leave, then the leave transition will be skipped and
	 * the transitionend event never fires. This function ensures
	 * its callback to be called after a transition has started
	 * by waiting for double raf.
	 *
	 * It falls back to setTimeout on devices that support CSS
	 * transitions but not raf (e.g. Android 4.2 browser) - since
	 * these environments are usually slow, we are giving it a
	 * relatively large timeout.
	 */

	var raf = inBrowser && window.requestAnimationFrame;
	var waitForTransitionStart = raf
	/* istanbul ignore next */
	? function (fn) {
	  raf(function () {
	    raf(fn);
	  });
	} : function (fn) {
	  setTimeout(fn, 50);
	};

	/**
	 * A Transition object that encapsulates the state and logic
	 * of the transition.
	 *
	 * @param {Element} el
	 * @param {String} id
	 * @param {Object} hooks
	 * @param {Vue} vm
	 */
	function Transition(el, id, hooks, vm) {
	  this.id = id;
	  this.el = el;
	  this.enterClass = hooks && hooks.enterClass || id + '-enter';
	  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';
	  this.hooks = hooks;
	  this.vm = vm;
	  // async state
	  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;
	  this.justEntered = false;
	  this.entered = this.left = false;
	  this.typeCache = {};
	  // check css transition type
	  this.type = hooks && hooks.type;
	  /* istanbul ignore if */
	  if (process.env.NODE_ENV !== 'production') {
	    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {
	      warn('invalid CSS transition type for transition="' + this.id + '": ' + this.type, vm);
	    }
	  }
	  // bind
	  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {
	    self[m] = bind(self[m], self);
	  });
	}

	var p$1 = Transition.prototype;

	/**
	 * Start an entering transition.
	 *
	 * 1. enter transition triggered
	 * 2. call beforeEnter hook
	 * 3. add enter class
	 * 4. insert/show element
	 * 5. call enter hook (with possible explicit js callback)
	 * 6. reflow
	 * 7. based on transition type:
	 *    - transition:
	 *        remove class now, wait for transitionend,
	 *        then done if there's no explicit js callback.
	 *    - animation:
	 *        wait for animationend, remove class,
	 *        then done if there's no explicit js callback.
	 *    - no css transition:
	 *        done now if there's no explicit js callback.
	 * 8. wait for either done or js callback, then call
	 *    afterEnter hook.
	 *
	 * @param {Function} op - insert/show the element
	 * @param {Function} [cb]
	 */

	p$1.enter = function (op, cb) {
	  this.cancelPending();
	  this.callHook('beforeEnter');
	  this.cb = cb;
	  addClass(this.el, this.enterClass);
	  op();
	  this.entered = false;
	  this.callHookWithCb('enter');
	  if (this.entered) {
	    return; // user called done synchronously.
	  }
	  this.cancel = this.hooks && this.hooks.enterCancelled;
	  pushJob(this.enterNextTick);
	};

	/**
	 * The "nextTick" phase of an entering transition, which is
	 * to be pushed into a queue and executed after a reflow so
	 * that removing the class can trigger a CSS transition.
	 */

	p$1.enterNextTick = function () {
	  var _this = this;

	  // prevent transition skipping
	  this.justEntered = true;
	  waitForTransitionStart(function () {
	    _this.justEntered = false;
	  });
	  var enterDone = this.enterDone;
	  var type = this.getCssTransitionType(this.enterClass);
	  if (!this.pendingJsCb) {
	    if (type === TYPE_TRANSITION) {
	      // trigger transition by removing enter class now
	      removeClass(this.el, this.enterClass);
	      this.setupCssCb(transitionEndEvent, enterDone);
	    } else if (type === TYPE_ANIMATION) {
	      this.setupCssCb(animationEndEvent, enterDone);
	    } else {
	      enterDone();
	    }
	  } else if (type === TYPE_TRANSITION) {
	    removeClass(this.el, this.enterClass);
	  }
	};

	/**
	 * The "cleanup" phase of an entering transition.
	 */

	p$1.enterDone = function () {
	  this.entered = true;
	  this.cancel = this.pendingJsCb = null;
	  removeClass(this.el, this.enterClass);
	  this.callHook('afterEnter');
	  if (this.cb) this.cb();
	};

	/**
	 * Start a leaving transition.
	 *
	 * 1. leave transition triggered.
	 * 2. call beforeLeave hook
	 * 3. add leave class (trigger css transition)
	 * 4. call leave hook (with possible explicit js callback)
	 * 5. reflow if no explicit js callback is provided
	 * 6. based on transition type:
	 *    - transition or animation:
	 *        wait for end event, remove class, then done if
	 *        there's no explicit js callback.
	 *    - no css transition:
	 *        done if there's no explicit js callback.
	 * 7. wait for either done or js callback, then call
	 *    afterLeave hook.
	 *
	 * @param {Function} op - remove/hide the element
	 * @param {Function} [cb]
	 */

	p$1.leave = function (op, cb) {
	  this.cancelPending();
	  this.callHook('beforeLeave');
	  this.op = op;
	  this.cb = cb;
	  addClass(this.el, this.leaveClass);
	  this.left = false;
	  this.callHookWithCb('leave');
	  if (this.left) {
	    return; // user called done synchronously.
	  }
	  this.cancel = this.hooks && this.hooks.leaveCancelled;
	  // only need to handle leaveDone if
	  // 1. the transition is already done (synchronously called
	  //    by the user, which causes this.op set to null)
	  // 2. there's no explicit js callback
	  if (this.op && !this.pendingJsCb) {
	    // if a CSS transition leaves immediately after enter,
	    // the transitionend event never fires. therefore we
	    // detect such cases and end the leave immediately.
	    if (this.justEntered) {
	      this.leaveDone();
	    } else {
	      pushJob(this.leaveNextTick);
	    }
	  }
	};

	/**
	 * The "nextTick" phase of a leaving transition.
	 */

	p$1.leaveNextTick = function () {
	  var type = this.getCssTransitionType(this.leaveClass);
	  if (type) {
	    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;
	    this.setupCssCb(event, this.leaveDone);
	  } else {
	    this.leaveDone();
	  }
	};

	/**
	 * The "cleanup" phase of a leaving transition.
	 */

	p$1.leaveDone = function () {
	  this.left = true;
	  this.cancel = this.pendingJsCb = null;
	  this.op();
	  removeClass(this.el, this.leaveClass);
	  this.callHook('afterLeave');
	  if (this.cb) this.cb();
	  this.op = null;
	};

	/**
	 * Cancel any pending callbacks from a previously running
	 * but not finished transition.
	 */

	p$1.cancelPending = function () {
	  this.op = this.cb = null;
	  var hasPending = false;
	  if (this.pendingCssCb) {
	    hasPending = true;
	    off(this.el, this.pendingCssEvent, this.pendingCssCb);
	    this.pendingCssEvent = this.pendingCssCb = null;
	  }
	  if (this.pendingJsCb) {
	    hasPending = true;
	    this.pendingJsCb.cancel();
	    this.pendingJsCb = null;
	  }
	  if (hasPending) {
	    removeClass(this.el, this.enterClass);
	    removeClass(this.el, this.leaveClass);
	  }
	  if (this.cancel) {
	    this.cancel.call(this.vm, this.el);
	    this.cancel = null;
	  }
	};

	/**
	 * Call a user-provided synchronous hook function.
	 *
	 * @param {String} type
	 */

	p$1.callHook = function (type) {
	  if (this.hooks && this.hooks[type]) {
	    this.hooks[type].call(this.vm, this.el);
	  }
	};

	/**
	 * Call a user-provided, potentially-async hook function.
	 * We check for the length of arguments to see if the hook
	 * expects a `done` callback. If true, the transition's end
	 * will be determined by when the user calls that callback;
	 * otherwise, the end is determined by the CSS transition or
	 * animation.
	 *
	 * @param {String} type
	 */

	p$1.callHookWithCb = function (type) {
	  var hook = this.hooks && this.hooks[type];
	  if (hook) {
	    if (hook.length > 1) {
	      this.pendingJsCb = cancellable(this[type + 'Done']);
	    }
	    hook.call(this.vm, this.el, this.pendingJsCb);
	  }
	};

	/**
	 * Get an element's transition type based on the
	 * calculated styles.
	 *
	 * @param {String} className
	 * @return {Number}
	 */

	p$1.getCssTransitionType = function (className) {
	  /* istanbul ignore if */
	  if (!transitionEndEvent ||
	  // skip CSS transitions if page is not visible -
	  // this solves the issue of transitionend events not
	  // firing until the page is visible again.
	  // pageVisibility API is supported in IE10+, same as
	  // CSS transitions.
	  document.hidden ||
	  // explicit js-only transition
	  this.hooks && this.hooks.css === false ||
	  // element is hidden
	  isHidden(this.el)) {
	    return;
	  }
	  var type = this.type || this.typeCache[className];
	  if (type) return type;
	  var inlineStyles = this.el.style;
	  var computedStyles = window.getComputedStyle(this.el);
	  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];
	  if (transDuration && transDuration !== '0s') {
	    type = TYPE_TRANSITION;
	  } else {
	    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];
	    if (animDuration && animDuration !== '0s') {
	      type = TYPE_ANIMATION;
	    }
	  }
	  if (type) {
	    this.typeCache[className] = type;
	  }
	  return type;
	};

	/**
	 * Setup a CSS transitionend/animationend callback.
	 *
	 * @param {String} event
	 * @param {Function} cb
	 */

	p$1.setupCssCb = function (event, cb) {
	  this.pendingCssEvent = event;
	  var self = this;
	  var el = this.el;
	  var onEnd = this.pendingCssCb = function (e) {
	    if (e.target === el) {
	      off(el, event, onEnd);
	      self.pendingCssEvent = self.pendingCssCb = null;
	      if (!self.pendingJsCb && cb) {
	        cb();
	      }
	    }
	  };
	  on(el, event, onEnd);
	};

	/**
	 * Check if an element is hidden - in that case we can just
	 * skip the transition alltogether.
	 *
	 * @param {Element} el
	 * @return {Boolean}
	 */

	function isHidden(el) {
	  if (/svg$/.test(el.namespaceURI)) {
	    // SVG elements do not have offset(Width|Height)
	    // so we need to check the client rect
	    var rect = el.getBoundingClientRect();
	    return !(rect.width || rect.height);
	  } else {
	    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);
	  }
	}

	var transition$1 = {

	  priority: TRANSITION,

	  update: function update(id, oldId) {
	    var el = this.el;
	    // resolve on owner vm
	    var hooks = resolveAsset(this.vm.$options, 'transitions', id);
	    id = id || 'v';
	    oldId = oldId || 'v';
	    el.__v_trans = new Transition(el, id, hooks, this.vm);
	    removeClass(el, oldId + '-transition');
	    addClass(el, id + '-transition');
	  }
	};

	var internalDirectives = {
	  style: style,
	  'class': vClass,
	  component: component,
	  prop: propDef,
	  transition: transition$1
	};

	// special binding prefixes
	var bindRE = /^v-bind:|^:/;
	var onRE = /^v-on:|^@/;
	var dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;
	var modifierRE = /\.[^\.]+/g;
	var transitionRE = /^(v-bind:|:)?transition$/;

	// default directive priority
	var DEFAULT_PRIORITY = 1000;
	var DEFAULT_TERMINAL_PRIORITY = 2000;

	/**
	 * Compile a template and return a reusable composite link
	 * function, which recursively contains more link functions
	 * inside. This top level compile function would normally
	 * be called on instance root nodes, but can also be used
	 * for partial compilation if the partial argument is true.
	 *
	 * The returned composite link function, when called, will
	 * return an unlink function that tearsdown all directives
	 * created during the linking phase.
	 *
	 * @param {Element|DocumentFragment} el
	 * @param {Object} options
	 * @param {Boolean} partial
	 * @return {Function}
	 */

	function compile(el, options, partial) {
	  // link function for the node itself.
	  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;
	  // link function for the childNodes
	  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;

	  /**
	   * A composite linker function to be called on a already
	   * compiled piece of DOM, which instantiates all directive
	   * instances.
	   *
	   * @param {Vue} vm
	   * @param {Element|DocumentFragment} el
	   * @param {Vue} [host] - host vm of transcluded content
	   * @param {Object} [scope] - v-for scope
	   * @param {Fragment} [frag] - link context fragment
	   * @return {Function|undefined}
	   */

	  return function compositeLinkFn(vm, el, host, scope, frag) {
	    // cache childNodes before linking parent, fix #657
	    var childNodes = toArray(el.childNodes);
	    // link
	    var dirs = linkAndCapture(function compositeLinkCapturer() {
	      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);
	      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);
	    }, vm);
	    return makeUnlinkFn(vm, dirs);
	  };
	}

	/**
	 * Apply a linker to a vm/element pair and capture the
	 * directives created during the process.
	 *
	 * @param {Function} linker
	 * @param {Vue} vm
	 */

	function linkAndCapture(linker, vm) {
	  /* istanbul ignore if */
	  if (process.env.NODE_ENV === 'production') {
	    // reset directives before every capture in production
	    // mode, so that when unlinking we don't need to splice
	    // them out (which turns out to be a perf hit).
	    // they are kept in development mode because they are
	    // useful for Vue's own tests.
	    vm._directives = [];
	  }
	  var originalDirCount = vm._directives.length;
	  linker();
	  var dirs = vm._directives.slice(originalDirCount);
	  sortDirectives(dirs);
	  for (var i = 0, l = dirs.length; i < l; i++) {
	    dirs[i]._bind();
	  }
	  return dirs;
	}

	/**
	 * sort directives by priority (stable sort)
	 *
	 * @param {Array} dirs
	 */
	function sortDirectives(dirs) {
	  if (dirs.length === 0) return;

	  var groupedMap = {};
	  var i, j, k, l;
	  var index = 0;
	  var priorities = [];
	  for (i = 0, j = dirs.length; i < j; i++) {
	    var dir = dirs[i];
	    var priority = dir.descriptor.def.priority || DEFAULT_PRIORITY;
	    var array = groupedMap[priority];
	    if (!array) {
	      array = groupedMap[priority] = [];
	      priorities.push(priority);
	    }
	    array.push(dir);
	  }

	  priorities.sort(function (a, b) {
	    return a > b ? -1 : a === b ? 0 : 1;
	  });
	  for (i = 0, j = priorities.length; i < j; i++) {
	    var group = groupedMap[priorities[i]];
	    for (k = 0, l = group.length; k < l; k++) {
	      dirs[index++] = group[k];
	    }
	  }
	}

	/**
	 * Linker functions return an unlink function that
	 * tearsdown all directives instances generated during
	 * the process.
	 *
	 * We create unlink functions with only the necessary
	 * information to avoid retaining additional closures.
	 *
	 * @param {Vue} vm
	 * @param {Array} dirs
	 * @param {Vue} [context]
	 * @param {Array} [contextDirs]
	 * @return {Function}
	 */

	function makeUnlinkFn(vm, dirs, context, contextDirs) {
	  function unlink(destroying) {
	    teardownDirs(vm, dirs, destroying);
	    if (context && contextDirs) {
	      teardownDirs(context, contextDirs);
	    }
	  }
	  // expose linked directives
	  unlink.dirs = dirs;
	  return unlink;
	}

	/**
	 * Teardown partial linked directives.
	 *
	 * @param {Vue} vm
	 * @param {Array} dirs
	 * @param {Boolean} destroying
	 */

	function teardownDirs(vm, dirs, destroying) {
	  var i = dirs.length;
	  while (i--) {
	    dirs[i]._teardown();
	    if (process.env.NODE_ENV !== 'production' && !destroying) {
	      vm._directives.$remove(dirs[i]);
	    }
	  }
	}

	/**
	 * Compile link props on an instance.
	 *
	 * @param {Vue} vm
	 * @param {Element} el
	 * @param {Object} props
	 * @param {Object} [scope]
	 * @return {Function}
	 */

	function compileAndLinkProps(vm, el, props, scope) {
	  var propsLinkFn = compileProps(el, props, vm);
	  var propDirs = linkAndCapture(function () {
	    propsLinkFn(vm, scope);
	  }, vm);
	  return makeUnlinkFn(vm, propDirs);
	}

	/**
	 * Compile the root element of an instance.
	 *
	 * 1. attrs on context container (context scope)
	 * 2. attrs on the component template root node, if
	 *    replace:true (child scope)
	 *
	 * If this is a fragment instance, we only need to compile 1.
	 *
	 * @param {Element} el
	 * @param {Object} options
	 * @param {Object} contextOptions
	 * @return {Function}
	 */

	function compileRoot(el, options, contextOptions) {
	  var containerAttrs = options._containerAttrs;
	  var replacerAttrs = options._replacerAttrs;
	  var contextLinkFn, replacerLinkFn;

	  // only need to compile other attributes for
	  // non-fragment instances
	  if (el.nodeType !== 11) {
	    // for components, container and replacer need to be
	    // compiled separately and linked in different scopes.
	    if (options._asComponent) {
	      // 2. container attributes
	      if (containerAttrs && contextOptions) {
	        contextLinkFn = compileDirectives(containerAttrs, contextOptions);
	      }
	      if (replacerAttrs) {
	        // 3. replacer attributes
	        replacerLinkFn = compileDirectives(replacerAttrs, options);
	      }
	    } else {
	      // non-component, just compile as a normal element.
	      replacerLinkFn = compileDirectives(el.attributes, options);
	    }
	  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {
	    // warn container directives for fragment instances
	    var names = containerAttrs.filter(function (attr) {
	      // allow vue-loader/vueify scoped css attributes
	      return attr.name.indexOf('_v-') < 0 &&
	      // allow event listeners
	      !onRE.test(attr.name) &&
	      // allow slots
	      attr.name !== 'slot';
	    }).map(function (attr) {
	      return '"' + attr.name + '"';
	    });
	    if (names.length) {
	      var plural = names.length > 1;

	      var componentName = options.el.tagName.toLowerCase();
	      if (componentName === 'component' && options.name) {
	        componentName += ':' + options.name;
	      }

	      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + componentName + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');
	    }
	  }

	  options._containerAttrs = options._replacerAttrs = null;
	  return function rootLinkFn(vm, el, scope) {
	    // link context scope dirs
	    var context = vm._context;
	    var contextDirs;
	    if (context && contextLinkFn) {
	      contextDirs = linkAndCapture(function () {
	        contextLinkFn(context, el, null, scope);
	      }, context);
	    }

	    // link self
	    var selfDirs = linkAndCapture(function () {
	      if (replacerLinkFn) replacerLinkFn(vm, el);
	    }, vm);

	    // return the unlink function that tearsdown context
	    // container directives.
	    return makeUnlinkFn(vm, selfDirs, context, contextDirs);
	  };
	}

	/**
	 * Compile a node and return a nodeLinkFn based on the
	 * node type.
	 *
	 * @param {Node} node
	 * @param {Object} options
	 * @return {Function|null}
	 */

	function compileNode(node, options) {
	  var type = node.nodeType;
	  if (type === 1 && !isScript(node)) {
	    return compileElement(node, options);
	  } else if (type === 3 && node.data.trim()) {
	    return compileTextNode(node, options);
	  } else {
	    return null;
	  }
	}

	/**
	 * Compile an element and return a nodeLinkFn.
	 *
	 * @param {Element} el
	 * @param {Object} options
	 * @return {Function|null}
	 */

	function compileElement(el, options) {
	  // preprocess textareas.
	  // textarea treats its text content as the initial value.
	  // just bind it as an attr directive for value.
	  if (el.tagName === 'TEXTAREA') {
	    // a textarea which has v-pre attr should skip complie.
	    if (getAttr(el, 'v-pre') !== null) {
	      return skip;
	    }
	    var tokens = parseText(el.value);
	    if (tokens) {
	      el.setAttribute(':value', tokensToExp(tokens));
	      el.value = '';
	    }
	  }
	  var linkFn;
	  var hasAttrs = el.hasAttributes();
	  var attrs = hasAttrs && toArray(el.attributes);
	  // check terminal directives (for & if)
	  if (hasAttrs) {
	    linkFn = checkTerminalDirectives(el, attrs, options);
	  }
	  // check element directives
	  if (!linkFn) {
	    linkFn = checkElementDirectives(el, options);
	  }
	  // check component
	  if (!linkFn) {
	    linkFn = checkComponent(el, options);
	  }
	  // normal directives
	  if (!linkFn && hasAttrs) {
	    linkFn = compileDirectives(attrs, options);
	  }
	  return linkFn;
	}

	/**
	 * Compile a textNode and return a nodeLinkFn.
	 *
	 * @param {TextNode} node
	 * @param {Object} options
	 * @return {Function|null} textNodeLinkFn
	 */

	function compileTextNode(node, options) {
	  // skip marked text nodes
	  if (node._skip) {
	    return removeText;
	  }

	  var tokens = parseText(node.wholeText);
	  if (!tokens) {
	    return null;
	  }

	  // mark adjacent text nodes as skipped,
	  // because we are using node.wholeText to compile
	  // all adjacent text nodes together. This fixes
	  // issues in IE where sometimes it splits up a single
	  // text node into multiple ones.
	  var next = node.nextSibling;
	  while (next && next.nodeType === 3) {
	    next._skip = true;
	    next = next.nextSibling;
	  }

	  var frag = document.createDocumentFragment();
	  var el, token;
	  for (var i = 0, l = tokens.length; i < l; i++) {
	    token = tokens[i];
	    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);
	    frag.appendChild(el);
	  }
	  return makeTextNodeLinkFn(tokens, frag, options);
	}

	/**
	 * Linker for an skipped text node.
	 *
	 * @param {Vue} vm
	 * @param {Text} node
	 */

	function removeText(vm, node) {
	  remove(node);
	}

	/**
	 * Process a single text token.
	 *
	 * @param {Object} token
	 * @param {Object} options
	 * @return {Node}
	 */

	function processTextToken(token, options) {
	  var el;
	  if (token.oneTime) {
	    el = document.createTextNode(token.value);
	  } else {
	    if (token.html) {
	      el = document.createComment('v-html');
	      setTokenType('html');
	    } else {
	      // IE will clean up empty textNodes during
	      // frag.cloneNode(true), so we have to give it
	      // something here...
	      el = document.createTextNode(' ');
	      setTokenType('text');
	    }
	  }
	  function setTokenType(type) {
	    if (token.descriptor) return;
	    var parsed = parseDirective(token.value);
	    token.descriptor = {
	      name: type,
	      def: directives[type],
	      expression: parsed.expression,
	      filters: parsed.filters
	    };
	  }
	  return el;
	}

	/**
	 * Build a function that processes a textNode.
	 *
	 * @param {Array<Object>} tokens
	 * @param {DocumentFragment} frag
	 */

	function makeTextNodeLinkFn(tokens, frag) {
	  return function textNodeLinkFn(vm, el, host, scope) {
	    var fragClone = frag.cloneNode(true);
	    var childNodes = toArray(fragClone.childNodes);
	    var token, value, node;
	    for (var i = 0, l = tokens.length; i < l; i++) {
	      token = tokens[i];
	      value = token.value;
	      if (token.tag) {
	        node = childNodes[i];
	        if (token.oneTime) {
	          value = (scope || vm).$eval(value);
	          if (token.html) {
	            replace(node, parseTemplate(value, true));
	          } else {
	            node.data = _toString(value);
	          }
	        } else {
	          vm._bindDir(token.descriptor, node, host, scope);
	        }
	      }
	    }
	    replace(el, fragClone);
	  };
	}

	/**
	 * Compile a node list and return a childLinkFn.
	 *
	 * @param {NodeList} nodeList
	 * @param {Object} options
	 * @return {Function|undefined}
	 */

	function compileNodeList(nodeList, options) {
	  var linkFns = [];
	  var nodeLinkFn, childLinkFn, node;
	  for (var i = 0, l = nodeList.length; i < l; i++) {
	    node = nodeList[i];
	    nodeLinkFn = compileNode(node, options);
	    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;
	    linkFns.push(nodeLinkFn, childLinkFn);
	  }
	  return linkFns.length ? makeChildLinkFn(linkFns) : null;
	}

	/**
	 * Make a child link function for a node's childNodes.
	 *
	 * @param {Array<Function>} linkFns
	 * @return {Function} childLinkFn
	 */

	function makeChildLinkFn(linkFns) {
	  return function childLinkFn(vm, nodes, host, scope, frag) {
	    var node, nodeLinkFn, childrenLinkFn;
	    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {
	      node = nodes[n];
	      nodeLinkFn = linkFns[i++];
	      childrenLinkFn = linkFns[i++];
	      // cache childNodes before linking parent, fix #657
	      var childNodes = toArray(node.childNodes);
	      if (nodeLinkFn) {
	        nodeLinkFn(vm, node, host, scope, frag);
	      }
	      if (childrenLinkFn) {
	        childrenLinkFn(vm, childNodes, host, scope, frag);
	      }
	    }
	  };
	}

	/**
	 * Check for element directives (custom elements that should
	 * be resovled as terminal directives).
	 *
	 * @param {Element} el
	 * @param {Object} options
	 */

	function checkElementDirectives(el, options) {
	  var tag = el.tagName.toLowerCase();
	  if (commonTagRE.test(tag)) {
	    return;
	  }
	  var def = resolveAsset(options, 'elementDirectives', tag);
	  if (def) {
	    return makeTerminalNodeLinkFn(el, tag, '', options, def);
	  }
	}

	/**
	 * Check if an element is a component. If yes, return
	 * a component link function.
	 *
	 * @param {Element} el
	 * @param {Object} options
	 * @return {Function|undefined}
	 */

	function checkComponent(el, options) {
	  var component = checkComponentAttr(el, options);
	  if (component) {
	    var ref = findRef(el);
	    var descriptor = {
	      name: 'component',
	      ref: ref,
	      expression: component.id,
	      def: internalDirectives.component,
	      modifiers: {
	        literal: !component.dynamic
	      }
	    };
	    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {
	      if (ref) {
	        defineReactive((scope || vm).$refs, ref, null);
	      }
	      vm._bindDir(descriptor, el, host, scope, frag);
	    };
	    componentLinkFn.terminal = true;
	    return componentLinkFn;
	  }
	}

	/**
	 * Check an element for terminal directives in fixed order.
	 * If it finds one, return a terminal link function.
	 *
	 * @param {Element} el
	 * @param {Array} attrs
	 * @param {Object} options
	 * @return {Function} terminalLinkFn
	 */

	function checkTerminalDirectives(el, attrs, options) {
	  // skip v-pre
	  if (getAttr(el, 'v-pre') !== null) {
	    return skip;
	  }
	  // skip v-else block, but only if following v-if
	  if (el.hasAttribute('v-else')) {
	    var prev = el.previousElementSibling;
	    if (prev && prev.hasAttribute('v-if')) {
	      return skip;
	    }
	  }

	  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;
	  for (var i = 0, j = attrs.length; i < j; i++) {
	    attr = attrs[i];
	    name = attr.name.replace(modifierRE, '');
	    if (matched = name.match(dirAttrRE)) {
	      def = resolveAsset(options, 'directives', matched[1]);
	      if (def && def.terminal) {
	        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {
	          termDef = def;
	          rawName = attr.name;
	          modifiers = parseModifiers(attr.name);
	          value = attr.value;
	          dirName = matched[1];
	          arg = matched[2];
	        }
	      }
	    }
	  }

	  if (termDef) {
	    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);
	  }
	}

	function skip() {}
	skip.terminal = true;

	/**
	 * Build a node link function for a terminal directive.
	 * A terminal link function terminates the current
	 * compilation recursion and handles compilation of the
	 * subtree in the directive.
	 *
	 * @param {Element} el
	 * @param {String} dirName
	 * @param {String} value
	 * @param {Object} options
	 * @param {Object} def
	 * @param {String} [rawName]
	 * @param {String} [arg]
	 * @param {Object} [modifiers]
	 * @return {Function} terminalLinkFn
	 */

	function makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {
	  var parsed = parseDirective(value);
	  var descriptor = {
	    name: dirName,
	    arg: arg,
	    expression: parsed.expression,
	    filters: parsed.filters,
	    raw: value,
	    attr: rawName,
	    modifiers: modifiers,
	    def: def
	  };
	  // check ref for v-for, v-if and router-view
	  if (dirName === 'for' || dirName === 'router-view') {
	    descriptor.ref = findRef(el);
	  }
	  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {
	    if (descriptor.ref) {
	      defineReactive((scope || vm).$refs, descriptor.ref, null);
	    }
	    vm._bindDir(descriptor, el, host, scope, frag);
	  };
	  fn.terminal = true;
	  return fn;
	}

	/**
	 * Compile the directives on an element and return a linker.
	 *
	 * @param {Array|NamedNodeMap} attrs
	 * @param {Object} options
	 * @return {Function}
	 */

	function compileDirectives(attrs, options) {
	  var i = attrs.length;
	  var dirs = [];
	  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;
	  while (i--) {
	    attr = attrs[i];
	    name = rawName = attr.name;
	    value = rawValue = attr.value;
	    tokens = parseText(value);
	    // reset arg
	    arg = null;
	    // check modifiers
	    modifiers = parseModifiers(name);
	    name = name.replace(modifierRE, '');

	    // attribute interpolations
	    if (tokens) {
	      value = tokensToExp(tokens);
	      arg = name;
	      pushDir('bind', directives.bind, tokens);
	      // warn against mixing mustaches with v-bind
	      if (process.env.NODE_ENV !== 'production') {
	        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {
	          return attr.name === ':class' || attr.name === 'v-bind:class';
	        })) {
	          warn('class="' + rawValue + '": Do not mix mustache interpolation ' + 'and v-bind for "class" on the same element. Use one or the other.', options);
	        }
	      }
	    } else

	      // special attribute: transition
	      if (transitionRE.test(name)) {
	        modifiers.literal = !bindRE.test(name);
	        pushDir('transition', internalDirectives.transition);
	      } else

	        // event handlers
	        if (onRE.test(name)) {
	          arg = name.replace(onRE, '');
	          pushDir('on', directives.on);
	        } else

	          // attribute bindings
	          if (bindRE.test(name)) {
	            dirName = name.replace(bindRE, '');
	            if (dirName === 'style' || dirName === 'class') {
	              pushDir(dirName, internalDirectives[dirName]);
	            } else {
	              arg = dirName;
	              pushDir('bind', directives.bind);
	            }
	          } else

	            // normal directives
	            if (matched = name.match(dirAttrRE)) {
	              dirName = matched[1];
	              arg = matched[2];

	              // skip v-else (when used with v-show)
	              if (dirName === 'else') {
	                continue;
	              }

	              dirDef = resolveAsset(options, 'directives', dirName, true);
	              if (dirDef) {
	                pushDir(dirName, dirDef);
	              }
	            }
	  }

	  /**
	   * Push a directive.
	   *
	   * @param {String} dirName
	   * @param {Object|Function} def
	   * @param {Array} [interpTokens]
	   */

	  function pushDir(dirName, def, interpTokens) {
	    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);
	    var parsed = !hasOneTimeToken && parseDirective(value);
	    dirs.push({
	      name: dirName,
	      attr: rawName,
	      raw: rawValue,
	      def: def,
	      arg: arg,
	      modifiers: modifiers,
	      // conversion from interpolation strings with one-time token
	      // to expression is differed until directive bind time so that we
	      // have access to the actual vm context for one-time bindings.
	      expression: parsed && parsed.expression,
	      filters: parsed && parsed.filters,
	      interp: interpTokens,
	      hasOneTime: hasOneTimeToken
	    });
	  }

	  if (dirs.length) {
	    return makeNodeLinkFn(dirs);
	  }
	}

	/**
	 * Parse modifiers from directive attribute name.
	 *
	 * @param {String} name
	 * @return {Object}
	 */

	function parseModifiers(name) {
	  var res = Object.create(null);
	  var match = name.match(modifierRE);
	  if (match) {
	    var i = match.length;
	    while (i--) {
	      res[match[i].slice(1)] = true;
	    }
	  }
	  return res;
	}

	/**
	 * Build a link function for all directives on a single node.
	 *
	 * @param {Array} directives
	 * @return {Function} directivesLinkFn
	 */

	function makeNodeLinkFn(directives) {
	  return function nodeLinkFn(vm, el, host, scope, frag) {
	    // reverse apply because it's sorted low to high
	    var i = directives.length;
	    while (i--) {
	      vm._bindDir(directives[i], el, host, scope, frag);
	    }
	  };
	}

	/**
	 * Check if an interpolation string contains one-time tokens.
	 *
	 * @param {Array} tokens
	 * @return {Boolean}
	 */

	function hasOneTime(tokens) {
	  var i = tokens.length;
	  while (i--) {
	    if (tokens[i].oneTime) return true;
	  }
	}

	function isScript(el) {
	  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');
	}

	var specialCharRE = /[^\w\-:\.]/;

	/**
	 * Process an element or a DocumentFragment based on a
	 * instance option object. This allows us to transclude
	 * a template node/fragment before the instance is created,
	 * so the processed fragment can then be cloned and reused
	 * in v-for.
	 *
	 * @param {Element} el
	 * @param {Object} options
	 * @return {Element|DocumentFragment}
	 */

	function transclude(el, options) {
	  // extract container attributes to pass them down
	  // to compiler, because they need to be compiled in
	  // parent scope. we are mutating the options object here
	  // assuming the same object will be used for compile
	  // right after this.
	  if (options) {
	    options._containerAttrs = extractAttrs(el);
	  }
	  // for template tags, what we want is its content as
	  // a documentFragment (for fragment instances)
	  if (isTemplate(el)) {
	    el = parseTemplate(el);
	  }
	  if (options) {
	    if (options._asComponent && !options.template) {
	      options.template = '<slot></slot>';
	    }
	    if (options.template) {
	      options._content = extractContent(el);
	      el = transcludeTemplate(el, options);
	    }
	  }
	  if (isFragment(el)) {
	    // anchors for fragment instance
	    // passing in `persist: true` to avoid them being
	    // discarded by IE during template cloning
	    prepend(createAnchor('v-start', true), el);
	    el.appendChild(createAnchor('v-end', true));
	  }
	  return el;
	}

	/**
	 * Process the template option.
	 * If the replace option is true this will swap the $el.
	 *
	 * @param {Element} el
	 * @param {Object} options
	 * @return {Element|DocumentFragment}
	 */

	function transcludeTemplate(el, options) {
	  var template = options.template;
	  var frag = parseTemplate(template, true);
	  if (frag) {
	    var replacer = frag.firstChild;
	    if (!replacer) {
	      return frag;
	    }
	    var tag = replacer.tagName && replacer.tagName.toLowerCase();
	    if (options.replace) {
	      /* istanbul ignore if */
	      if (el === document.body) {
	        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');
	      }
	      // there are many cases where the instance must
	      // become a fragment instance: basically anything that
	      // can create more than 1 root nodes.
	      if (
	      // multi-children template
	      frag.childNodes.length > 1 ||
	      // non-element template
	      replacer.nodeType !== 1 ||
	      // single nested component
	      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||
	      // element directive
	      resolveAsset(options, 'elementDirectives', tag) ||
	      // for block
	      replacer.hasAttribute('v-for') ||
	      // if block
	      replacer.hasAttribute('v-if')) {
	        return frag;
	      } else {
	        options._replacerAttrs = extractAttrs(replacer);
	        mergeAttrs(el, replacer);
	        return replacer;
	      }
	    } else {
	      el.appendChild(frag);
	      return el;
	    }
	  } else {
	    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);
	  }
	}

	/**
	 * Helper to extract a component container's attributes
	 * into a plain object array.
	 *
	 * @param {Element} el
	 * @return {Array}
	 */

	function extractAttrs(el) {
	  if (el.nodeType === 1 && el.hasAttributes()) {
	    return toArray(el.attributes);
	  }
	}

	/**
	 * Merge the attributes of two elements, and make sure
	 * the class names are merged properly.
	 *
	 * @param {Element} from
	 * @param {Element} to
	 */

	function mergeAttrs(from, to) {
	  var attrs = from.attributes;
	  var i = attrs.length;
	  var name, value;
	  while (i--) {
	    name = attrs[i].name;
	    value = attrs[i].value;
	    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {
	      to.setAttribute(name, value);
	    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {
	      value.split(/\s+/).forEach(function (cls) {
	        addClass(to, cls);
	      });
	    }
	  }
	}

	/**
	 * Scan and determine slot content distribution.
	 * We do this during transclusion instead at compile time so that
	 * the distribution is decoupled from the compilation order of
	 * the slots.
	 *
	 * @param {Element|DocumentFragment} template
	 * @param {Element} content
	 * @param {Vue} vm
	 */

	function resolveSlots(vm, content) {
	  if (!content) {
	    return;
	  }
	  var contents = vm._slotContents = Object.create(null);
	  var el, name;
	  for (var i = 0, l = content.children.length; i < l; i++) {
	    el = content.children[i];
	    /* eslint-disable no-cond-assign */
	    if (name = el.getAttribute('slot')) {
	      (contents[name] || (contents[name] = [])).push(el);
	    }
	    /* eslint-enable no-cond-assign */
	    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {
	      warn('The "slot" attribute must be static.', vm.$parent);
	    }
	  }
	  for (name in contents) {
	    contents[name] = extractFragment(contents[name], content);
	  }
	  if (content.hasChildNodes()) {
	    var nodes = content.childNodes;
	    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {
	      return;
	    }
	    contents['default'] = extractFragment(content.childNodes, content);
	  }
	}

	/**
	 * Extract qualified content nodes from a node list.
	 *
	 * @param {NodeList} nodes
	 * @return {DocumentFragment}
	 */

	function extractFragment(nodes, parent) {
	  var frag = document.createDocumentFragment();
	  nodes = toArray(nodes);
	  for (var i = 0, l = nodes.length; i < l; i++) {
	    var node = nodes[i];
	    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {
	      parent.removeChild(node);
	      node = parseTemplate(node, true);
	    }
	    frag.appendChild(node);
	  }
	  return frag;
	}



	var compiler = Object.freeze({
		compile: compile,
		compileAndLinkProps: compileAndLinkProps,
		compileRoot: compileRoot,
		transclude: transclude,
		resolveSlots: resolveSlots
	});

	function stateMixin (Vue) {
	  /**
	   * Accessor for `$data` property, since setting $data
	   * requires observing the new object and updating
	   * proxied properties.
	   */

	  Object.defineProperty(Vue.prototype, '$data', {
	    get: function get() {
	      return this._data;
	    },
	    set: function set(newData) {
	      if (newData !== this._data) {
	        this._setData(newData);
	      }
	    }
	  });

	  /**
	   * Setup the scope of an instance, which contains:
	   * - observed data
	   * - computed properties
	   * - user methods
	   * - meta properties
	   */

	  Vue.prototype._initState = function () {
	    this._initProps();
	    this._initMeta();
	    this._initMethods();
	    this._initData();
	    this._initComputed();
	  };

	  /**
	   * Initialize props.
	   */

	  Vue.prototype._initProps = function () {
	    var options = this.$options;
	    var el = options.el;
	    var props = options.props;
	    if (props && !el) {
	      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);
	    }
	    // make sure to convert string selectors into element now
	    el = options.el = query(el);
	    this._propsUnlinkFn = el && el.nodeType === 1 && props
	    // props must be linked in proper scope if inside v-for
	    ? compileAndLinkProps(this, el, props, this._scope) : null;
	  };

	  /**
	   * Initialize the data.
	   */

	  Vue.prototype._initData = function () {
	    var dataFn = this.$options.data;
	    var data = this._data = dataFn ? dataFn() : {};
	    if (!isPlainObject(data)) {
	      data = {};
	      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);
	    }
	    var props = this._props;
	    // proxy data on instance
	    var keys = Object.keys(data);
	    var i, key;
	    i = keys.length;
	    while (i--) {
	      key = keys[i];
	      // there are two scenarios where we can proxy a data key:
	      // 1. it's not already defined as a prop
	      // 2. it's provided via a instantiation option AND there are no
	      //    template prop present
	      if (!props || !hasOwn(props, key)) {
	        this._proxy(key);
	      } else if (process.env.NODE_ENV !== 'production') {
	        warn('Data field "' + key + '" is already defined ' + 'as a prop. To provide default value for a prop, use the "default" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the "propsData" option.', this);
	      }
	    }
	    // observe data
	    observe(data, this);
	  };

	  /**
	   * Swap the instance's $data. Called in $data's setter.
	   *
	   * @param {Object} newData
	   */

	  Vue.prototype._setData = function (newData) {
	    newData = newData || {};
	    var oldData = this._data;
	    this._data = newData;
	    var keys, key, i;
	    // unproxy keys not present in new data
	    keys = Object.keys(oldData);
	    i = keys.length;
	    while (i--) {
	      key = keys[i];
	      if (!(key in newData)) {
	        this._unproxy(key);
	      }
	    }
	    // proxy keys not already proxied,
	    // and trigger change for changed values
	    keys = Object.keys(newData);
	    i = keys.length;
	    while (i--) {
	      key = keys[i];
	      if (!hasOwn(this, key)) {
	        // new property
	        this._proxy(key);
	      }
	    }
	    oldData.__ob__.removeVm(this);
	    observe(newData, this);
	    this._digest();
	  };

	  /**
	   * Proxy a property, so that
	   * vm.prop === vm._data.prop
	   *
	   * @param {String} key
	   */

	  Vue.prototype._proxy = function (key) {
	    if (!isReserved(key)) {
	      // need to store ref to self here
	      // because these getter/setters might
	      // be called by child scopes via
	      // prototype inheritance.
	      var self = this;
	      Object.defineProperty(self, key, {
	        configurable: true,
	        enumerable: true,
	        get: function proxyGetter() {
	          return self._data[key];
	        },
	        set: function proxySetter(val) {
	          self._data[key] = val;
	        }
	      });
	    }
	  };

	  /**
	   * Unproxy a property.
	   *
	   * @param {String} key
	   */

	  Vue.prototype._unproxy = function (key) {
	    if (!isReserved(key)) {
	      delete this[key];
	    }
	  };

	  /**
	   * Force update on every watcher in scope.
	   */

	  Vue.prototype._digest = function () {
	    for (var i = 0, l = this._watchers.length; i < l; i++) {
	      this._watchers[i].update(true); // shallow updates
	    }
	  };

	  /**
	   * Setup computed properties. They are essentially
	   * special getter/setters
	   */

	  function noop() {}
	  Vue.prototype._initComputed = function () {
	    var computed = this.$options.computed;
	    if (computed) {
	      for (var key in computed) {
	        var userDef = computed[key];
	        var def = {
	          enumerable: true,
	          configurable: true
	        };
	        if (typeof userDef === 'function') {
	          def.get = makeComputedGetter(userDef, this);
	          def.set = noop;
	        } else {
	          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;
	          def.set = userDef.set ? bind(userDef.set, this) : noop;
	        }
	        Object.defineProperty(this, key, def);
	      }
	    }
	  };

	  function makeComputedGetter(getter, owner) {
	    var watcher = new Watcher(owner, getter, null, {
	      lazy: true
	    });
	    return function computedGetter() {
	      if (watcher.dirty) {
	        watcher.evaluate();
	      }
	      if (Dep.target) {
	        watcher.depend();
	      }
	      return watcher.value;
	    };
	  }

	  /**
	   * Setup instance methods. Methods must be bound to the
	   * instance since they might be passed down as a prop to
	   * child components.
	   */

	  Vue.prototype._initMethods = function () {
	    var methods = this.$options.methods;
	    if (methods) {
	      for (var key in methods) {
	        this[key] = bind(methods[key], this);
	      }
	    }
	  };

	  /**
	   * Initialize meta information like $index, $key & $value.
	   */

	  Vue.prototype._initMeta = function () {
	    var metas = this.$options._meta;
	    if (metas) {
	      for (var key in metas) {
	        defineReactive(this, key, metas[key]);
	      }
	    }
	  };
	}

	var eventRE = /^v-on:|^@/;

	function eventsMixin (Vue) {
	  /**
	   * Setup the instance's option events & watchers.
	   * If the value is a string, we pull it from the
	   * instance's methods by name.
	   */

	  Vue.prototype._initEvents = function () {
	    var options = this.$options;
	    if (options._asComponent) {
	      registerComponentEvents(this, options.el);
	    }
	    registerCallbacks(this, '$on', options.events);
	    registerCallbacks(this, '$watch', options.watch);
	  };

	  /**
	   * Register v-on events on a child component
	   *
	   * @param {Vue} vm
	   * @param {Element} el
	   */

	  function registerComponentEvents(vm, el) {
	    var attrs = el.attributes;
	    var name, value, handler;
	    for (var i = 0, l = attrs.length; i < l; i++) {
	      name = attrs[i].name;
	      if (eventRE.test(name)) {
	        name = name.replace(eventRE, '');
	        // force the expression into a statement so that
	        // it always dynamically resolves the method to call (#2670)
	        // kinda ugly hack, but does the job.
	        value = attrs[i].value;
	        if (isSimplePath(value)) {
	          value += '.apply(this, $arguments)';
	        }
	        handler = (vm._scope || vm._context).$eval(value, true);
	        handler._fromParent = true;
	        vm.$on(name.replace(eventRE), handler);
	      }
	    }
	  }

	  /**
	   * Register callbacks for option events and watchers.
	   *
	   * @param {Vue} vm
	   * @param {String} action
	   * @param {Object} hash
	   */

	  function registerCallbacks(vm, action, hash) {
	    if (!hash) return;
	    var handlers, key, i, j;
	    for (key in hash) {
	      handlers = hash[key];
	      if (isArray(handlers)) {
	        for (i = 0, j = handlers.length; i < j; i++) {
	          register(vm, action, key, handlers[i]);
	        }
	      } else {
	        register(vm, action, key, handlers);
	      }
	    }
	  }

	  /**
	   * Helper to register an event/watch callback.
	   *
	   * @param {Vue} vm
	   * @param {String} action
	   * @param {String} key
	   * @param {Function|String|Object} handler
	   * @param {Object} [options]
	   */

	  function register(vm, action, key, handler, options) {
	    var type = typeof handler;
	    if (type === 'function') {
	      vm[action](key, handler, options);
	    } else if (type === 'string') {
	      var methods = vm.$options.methods;
	      var method = methods && methods[handler];
	      if (method) {
	        vm[action](key, method, options);
	      } else {
	        process.env.NODE_ENV !== 'production' && warn('Unknown method: "' + handler + '" when ' + 'registering callback for ' + action + ': "' + key + '".', vm);
	      }
	    } else if (handler && type === 'object') {
	      register(vm, action, key, handler.handler, handler);
	    }
	  }

	  /**
	   * Setup recursive attached/detached calls
	   */

	  Vue.prototype._initDOMHooks = function () {
	    this.$on('hook:attached', onAttached);
	    this.$on('hook:detached', onDetached);
	  };

	  /**
	   * Callback to recursively call attached hook on children
	   */

	  function onAttached() {
	    if (!this._isAttached) {
	      this._isAttached = true;
	      this.$children.forEach(callAttach);
	    }
	  }

	  /**
	   * Iterator to call attached hook
	   *
	   * @param {Vue} child
	   */

	  function callAttach(child) {
	    if (!child._isAttached && inDoc(child.$el)) {
	      child._callHook('attached');
	    }
	  }

	  /**
	   * Callback to recursively call detached hook on children
	   */

	  function onDetached() {
	    if (this._isAttached) {
	      this._isAttached = false;
	      this.$children.forEach(callDetach);
	    }
	  }

	  /**
	   * Iterator to call detached hook
	   *
	   * @param {Vue} child
	   */

	  function callDetach(child) {
	    if (child._isAttached && !inDoc(child.$el)) {
	      child._callHook('detached');
	    }
	  }

	  /**
	   * Trigger all handlers for a hook
	   *
	   * @param {String} hook
	   */

	  Vue.prototype._callHook = function (hook) {
	    this.$emit('pre-hook:' + hook);
	    var handlers = this.$options[hook];
	    if (handlers) {
	      for (var i = 0, j = handlers.length; i < j; i++) {
	        handlers[i].call(this);
	      }
	    }
	    this.$emit('hook:' + hook);
	  };
	}

	function noop$1() {}

	/**
	 * A directive links a DOM element with a piece of data,
	 * which is the result of evaluating an expression.
	 * It registers a watcher with the expression and calls
	 * the DOM update function when a change is triggered.
	 *
	 * @param {Object} descriptor
	 *                 - {String} name
	 *                 - {Object} def
	 *                 - {String} expression
	 *                 - {Array<Object>} [filters]
	 *                 - {Object} [modifiers]
	 *                 - {Boolean} literal
	 *                 - {String} attr
	 *                 - {String} arg
	 *                 - {String} raw
	 *                 - {String} [ref]
	 *                 - {Array<Object>} [interp]
	 *                 - {Boolean} [hasOneTime]
	 * @param {Vue} vm
	 * @param {Node} el
	 * @param {Vue} [host] - transclusion host component
	 * @param {Object} [scope] - v-for scope
	 * @param {Fragment} [frag] - owner fragment
	 * @constructor
	 */
	function Directive(descriptor, vm, el, host, scope, frag) {
	  this.vm = vm;
	  this.el = el;
	  // copy descriptor properties
	  this.descriptor = descriptor;
	  this.name = descriptor.name;
	  this.expression = descriptor.expression;
	  this.arg = descriptor.arg;
	  this.modifiers = descriptor.modifiers;
	  this.filters = descriptor.filters;
	  this.literal = this.modifiers && this.modifiers.literal;
	  // private
	  this._locked = false;
	  this._bound = false;
	  this._listeners = null;
	  // link context
	  this._host = host;
	  this._scope = scope;
	  this._frag = frag;
	  // store directives on node in dev mode
	  if (process.env.NODE_ENV !== 'production' && this.el) {
	    this.el._vue_directives = this.el._vue_directives || [];
	    this.el._vue_directives.push(this);
	  }
	}

	/**
	 * Initialize the directive, mixin definition properties,
	 * setup the watcher, call definition bind() and update()
	 * if present.
	 */

	Directive.prototype._bind = function () {
	  var name = this.name;
	  var descriptor = this.descriptor;

	  // remove attribute
	  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {
	    var attr = descriptor.attr || 'v-' + name;
	    this.el.removeAttribute(attr);
	  }

	  // copy def properties
	  var def = descriptor.def;
	  if (typeof def === 'function') {
	    this.update = def;
	  } else {
	    extend(this, def);
	  }

	  // setup directive params
	  this._setupParams();

	  // initial bind
	  if (this.bind) {
	    this.bind();
	  }
	  this._bound = true;

	  if (this.literal) {
	    this.update && this.update(descriptor.raw);
	  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {
	    // wrapped updater for context
	    var dir = this;
	    if (this.update) {
	      this._update = function (val, oldVal) {
	        if (!dir._locked) {
	          dir.update(val, oldVal);
	        }
	      };
	    } else {
	      this._update = noop$1;
	    }
	    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;
	    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;
	    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback
	    {
	      filters: this.filters,
	      twoWay: this.twoWay,
	      deep: this.deep,
	      preProcess: preProcess,
	      postProcess: postProcess,
	      scope: this._scope
	    });
	    // v-model with inital inline value need to sync back to
	    // model instead of update to DOM on init. They would
	    // set the afterBind hook to indicate that.
	    if (this.afterBind) {
	      this.afterBind();
	    } else if (this.update) {
	      this.update(watcher.value);
	    }
	  }
	};

	/**
	 * Setup all param attributes, e.g. track-by,
	 * transition-mode, etc...
	 */

	Directive.prototype._setupParams = function () {
	  if (!this.params) {
	    return;
	  }
	  var params = this.params;
	  // swap the params array with a fresh object.
	  this.params = Object.create(null);
	  var i = params.length;
	  var key, val, mappedKey;
	  while (i--) {
	    key = hyphenate(params[i]);
	    mappedKey = camelize(key);
	    val = getBindAttr(this.el, key);
	    if (val != null) {
	      // dynamic
	      this._setupParamWatcher(mappedKey, val);
	    } else {
	      // static
	      val = getAttr(this.el, key);
	      if (val != null) {
	        this.params[mappedKey] = val === '' ? true : val;
	      }
	    }
	  }
	};

	/**
	 * Setup a watcher for a dynamic param.
	 *
	 * @param {String} key
	 * @param {String} expression
	 */

	Directive.prototype._setupParamWatcher = function (key, expression) {
	  var self = this;
	  var called = false;
	  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {
	    self.params[key] = val;
	    // since we are in immediate mode,
	    // only call the param change callbacks if this is not the first update.
	    if (called) {
	      var cb = self.paramWatchers && self.paramWatchers[key];
	      if (cb) {
	        cb.call(self, val, oldVal);
	      }
	    } else {
	      called = true;
	    }
	  }, {
	    immediate: true,
	    user: false
	  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);
	};

	/**
	 * Check if the directive is a function caller
	 * and if the expression is a callable one. If both true,
	 * we wrap up the expression and use it as the event
	 * handler.
	 *
	 * e.g. on-click="a++"
	 *
	 * @return {Boolean}
	 */

	Directive.prototype._checkStatement = function () {
	  var expression = this.expression;
	  if (expression && this.acceptStatement && !isSimplePath(expression)) {
	    var fn = parseExpression$1(expression).get;
	    var scope = this._scope || this.vm;
	    var handler = function handler(e) {
	      scope.$event = e;
	      fn.call(scope, scope);
	      scope.$event = null;
	    };
	    if (this.filters) {
	      handler = scope._applyFilters(handler, null, this.filters);
	    }
	    this.update(handler);
	    return true;
	  }
	};

	/**
	 * Set the corresponding value with the setter.
	 * This should only be used in two-way directives
	 * e.g. v-model.
	 *
	 * @param {*} value
	 * @public
	 */

	Directive.prototype.set = function (value) {
	  /* istanbul ignore else */
	  if (this.twoWay) {
	    this._withLock(function () {
	      this._watcher.set(value);
	    });
	  } else if (process.env.NODE_ENV !== 'production') {
	    warn('Directive.set() can only be used inside twoWay' + 'directives.');
	  }
	};

	/**
	 * Execute a function while preventing that function from
	 * triggering updates on this directive instance.
	 *
	 * @param {Function} fn
	 */

	Directive.prototype._withLock = function (fn) {
	  var self = this;
	  self._locked = true;
	  fn.call(self);
	  nextTick(function () {
	    self._locked = false;
	  });
	};

	/**
	 * Convenience method that attaches a DOM event listener
	 * to the directive element and autometically tears it down
	 * during unbind.
	 *
	 * @param {String} event
	 * @param {Function} handler
	 * @param {Boolean} [useCapture]
	 */

	Directive.prototype.on = function (event, handler, useCapture) {
	  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);
	};

	/**
	 * Teardown the watcher and call unbind.
	 */

	Directive.prototype._teardown = function () {
	  if (this._bound) {
	    this._bound = false;
	    if (this.unbind) {
	      this.unbind();
	    }
	    if (this._watcher) {
	      this._watcher.teardown();
	    }
	    var listeners = this._listeners;
	    var i;
	    if (listeners) {
	      i = listeners.length;
	      while (i--) {
	        off(this.el, listeners[i][0], listeners[i][1]);
	      }
	    }
	    var unwatchFns = this._paramUnwatchFns;
	    if (unwatchFns) {
	      i = unwatchFns.length;
	      while (i--) {
	        unwatchFns[i]();
	      }
	    }
	    if (process.env.NODE_ENV !== 'production' && this.el) {
	      this.el._vue_directives.$remove(this);
	    }
	    this.vm = this.el = this._watcher = this._listeners = null;
	  }
	};

	function lifecycleMixin (Vue) {
	  /**
	   * Update v-ref for component.
	   *
	   * @param {Boolean} remove
	   */

	  Vue.prototype._updateRef = function (remove) {
	    var ref = this.$options._ref;
	    if (ref) {
	      var refs = (this._scope || this._context).$refs;
	      if (remove) {
	        if (refs[ref] === this) {
	          refs[ref] = null;
	        }
	      } else {
	        refs[ref] = this;
	      }
	    }
	  };

	  /**
	   * Transclude, compile and link element.
	   *
	   * If a pre-compiled linker is available, that means the
	   * passed in element will be pre-transcluded and compiled
	   * as well - all we need to do is to call the linker.
	   *
	   * Otherwise we need to call transclude/compile/link here.
	   *
	   * @param {Element} el
	   */

	  Vue.prototype._compile = function (el) {
	    var options = this.$options;

	    // transclude and init element
	    // transclude can potentially replace original
	    // so we need to keep reference; this step also injects
	    // the template and caches the original attributes
	    // on the container node and replacer node.
	    var original = el;
	    el = transclude(el, options);
	    this._initElement(el);

	    // handle v-pre on root node (#2026)
	    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {
	      return;
	    }

	    // root is always compiled per-instance, because
	    // container attrs and props can be different every time.
	    var contextOptions = this._context && this._context.$options;
	    var rootLinker = compileRoot(el, options, contextOptions);

	    // resolve slot distribution
	    resolveSlots(this, options._content);

	    // compile and link the rest
	    var contentLinkFn;
	    var ctor = this.constructor;
	    // component compilation can be cached
	    // as long as it's not using inline-template
	    if (options._linkerCachable) {
	      contentLinkFn = ctor.linker;
	      if (!contentLinkFn) {
	        contentLinkFn = ctor.linker = compile(el, options);
	      }
	    }

	    // link phase
	    // make sure to link root with prop scope!
	    var rootUnlinkFn = rootLinker(this, el, this._scope);
	    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);

	    // register composite unlink function
	    // to be called during instance destruction
	    this._unlinkFn = function () {
	      rootUnlinkFn();
	      // passing destroying: true to avoid searching and
	      // splicing the directives
	      contentUnlinkFn(true);
	    };

	    // finally replace original
	    if (options.replace) {
	      replace(original, el);
	    }

	    this._isCompiled = true;
	    this._callHook('compiled');
	  };

	  /**
	   * Initialize instance element. Called in the public
	   * $mount() method.
	   *
	   * @param {Element} el
	   */

	  Vue.prototype._initElement = function (el) {
	    if (isFragment(el)) {
	      this._isFragment = true;
	      this.$el = this._fragmentStart = el.firstChild;
	      this._fragmentEnd = el.lastChild;
	      // set persisted text anchors to empty
	      if (this._fragmentStart.nodeType === 3) {
	        this._fragmentStart.data = this._fragmentEnd.data = '';
	      }
	      this._fragment = el;
	    } else {
	      this.$el = el;
	    }
	    this.$el.__vue__ = this;
	    this._callHook('beforeCompile');
	  };

	  /**
	   * Create and bind a directive to an element.
	   *
	   * @param {Object} descriptor - parsed directive descriptor
	   * @param {Node} node   - target node
	   * @param {Vue} [host] - transclusion host component
	   * @param {Object} [scope] - v-for scope
	   * @param {Fragment} [frag] - owner fragment
	   */

	  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {
	    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));
	  };

	  /**
	   * Teardown an instance, unobserves the data, unbind all the
	   * directives, turn off all the event listeners, etc.
	   *
	   * @param {Boolean} remove - whether to remove the DOM node.
	   * @param {Boolean} deferCleanup - if true, defer cleanup to
	   *                                 be called later
	   */

	  Vue.prototype._destroy = function (remove, deferCleanup) {
	    if (this._isBeingDestroyed) {
	      if (!deferCleanup) {
	        this._cleanup();
	      }
	      return;
	    }

	    var destroyReady;
	    var pendingRemoval;

	    var self = this;
	    // Cleanup should be called either synchronously or asynchronoysly as
	    // callback of this.$remove(), or if remove and deferCleanup are false.
	    // In any case it should be called after all other removing, unbinding and
	    // turning of is done
	    var cleanupIfPossible = function cleanupIfPossible() {
	      if (destroyReady && !pendingRemoval && !deferCleanup) {
	        self._cleanup();
	      }
	    };

	    // remove DOM element
	    if (remove && this.$el) {
	      pendingRemoval = true;
	      this.$remove(function () {
	        pendingRemoval = false;
	        cleanupIfPossible();
	      });
	    }

	    this._callHook('beforeDestroy');
	    this._isBeingDestroyed = true;
	    var i;
	    // remove self from parent. only necessary
	    // if parent is not being destroyed as well.
	    var parent = this.$parent;
	    if (parent && !parent._isBeingDestroyed) {
	      parent.$children.$remove(this);
	      // unregister ref (remove: true)
	      this._updateRef(true);
	    }
	    // destroy all children.
	    i = this.$children.length;
	    while (i--) {
	      this.$children[i].$destroy();
	    }
	    // teardown props
	    if (this._propsUnlinkFn) {
	      this._propsUnlinkFn();
	    }
	    // teardown all directives. this also tearsdown all
	    // directive-owned watchers.
	    if (this._unlinkFn) {
	      this._unlinkFn();
	    }
	    i = this._watchers.length;
	    while (i--) {
	      this._watchers[i].teardown();
	    }
	    // remove reference to self on $el
	    if (this.$el) {
	      this.$el.__vue__ = null;
	    }

	    destroyReady = true;
	    cleanupIfPossible();
	  };

	  /**
	   * Clean up to ensure garbage collection.
	   * This is called after the leave transition if there
	   * is any.
	   */

	  Vue.prototype._cleanup = function () {
	    if (this._isDestroyed) {
	      return;
	    }
	    // remove self from owner fragment
	    // do it in cleanup so that we can call $destroy with
	    // defer right when a fragment is about to be removed.
	    if (this._frag) {
	      this._frag.children.$remove(this);
	    }
	    // remove reference from data ob
	    // frozen object may not have observer.
	    if (this._data && this._data.__ob__) {
	      this._data.__ob__.removeVm(this);
	    }
	    // Clean up references to private properties and other
	    // instances. preserve reference to _data so that proxy
	    // accessors still work. The only potential side effect
	    // here is that mutating the instance after it's destroyed
	    // may affect the state of other components that are still
	    // observing the same object, but that seems to be a
	    // reasonable responsibility for the user rather than
	    // always throwing an error on them.
	    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;
	    // call the last hook...
	    this._isDestroyed = true;
	    this._callHook('destroyed');
	    // turn off all instance listeners.
	    this.$off();
	  };
	}

	function miscMixin (Vue) {
	  /**
	   * Apply a list of filter (descriptors) to a value.
	   * Using plain for loops here because this will be called in
	   * the getter of any watcher with filters so it is very
	   * performance sensitive.
	   *
	   * @param {*} value
	   * @param {*} [oldValue]
	   * @param {Array} filters
	   * @param {Boolean} write
	   * @return {*}
	   */

	  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {
	    var filter, fn, args, arg, offset, i, l, j, k;
	    for (i = 0, l = filters.length; i < l; i++) {
	      filter = filters[write ? l - i - 1 : i];
	      fn = resolveAsset(this.$options, 'filters', filter.name, true);
	      if (!fn) continue;
	      fn = write ? fn.write : fn.read || fn;
	      if (typeof fn !== 'function') continue;
	      args = write ? [value, oldValue] : [value];
	      offset = write ? 2 : 1;
	      if (filter.args) {
	        for (j = 0, k = filter.args.length; j < k; j++) {
	          arg = filter.args[j];
	          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;
	        }
	      }
	      value = fn.apply(this, args);
	    }
	    return value;
	  };

	  /**
	   * Resolve a component, depending on whether the component
	   * is defined normally or using an async factory function.
	   * Resolves synchronously if already resolved, otherwise
	   * resolves asynchronously and caches the resolved
	   * constructor on the factory.
	   *
	   * @param {String|Function} value
	   * @param {Function} cb
	   */

	  Vue.prototype._resolveComponent = function (value, cb) {
	    var factory;
	    if (typeof value === 'function') {
	      factory = value;
	    } else {
	      factory = resolveAsset(this.$options, 'components', value, true);
	    }
	    /* istanbul ignore if */
	    if (!factory) {
	      return;
	    }
	    // async component factory
	    if (!factory.options) {
	      if (factory.resolved) {
	        // cached
	        cb(factory.resolved);
	      } else if (factory.requested) {
	        // pool callbacks
	        factory.pendingCallbacks.push(cb);
	      } else {
	        factory.requested = true;
	        var cbs = factory.pendingCallbacks = [cb];
	        factory.call(this, function resolve(res) {
	          if (isPlainObject(res)) {
	            res = Vue.extend(res);
	          }
	          // cache resolved
	          factory.resolved = res;
	          // invoke callbacks
	          for (var i = 0, l = cbs.length; i < l; i++) {
	            cbs[i](res);
	          }
	        }, function reject(reason) {
	          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\nReason: ' + reason : ''));
	        });
	      }
	    } else {
	      // normal component
	      cb(factory);
	    }
	  };
	}

	var filterRE$1 = /[^|]\|[^|]/;

	function dataAPI (Vue) {
	  /**
	   * Get the value from an expression on this vm.
	   *
	   * @param {String} exp
	   * @param {Boolean} [asStatement]
	   * @return {*}
	   */

	  Vue.prototype.$get = function (exp, asStatement) {
	    var res = parseExpression$1(exp);
	    if (res) {
	      if (asStatement) {
	        var self = this;
	        return function statementHandler() {
	          self.$arguments = toArray(arguments);
	          var result = res.get.call(self, self);
	          self.$arguments = null;
	          return result;
	        };
	      } else {
	        try {
	          return res.get.call(this, this);
	        } catch (e) {}
	      }
	    }
	  };

	  /**
	   * Set the value from an expression on this vm.
	   * The expression must be a valid left-hand
	   * expression in an assignment.
	   *
	   * @param {String} exp
	   * @param {*} val
	   */

	  Vue.prototype.$set = function (exp, val) {
	    var res = parseExpression$1(exp, true);
	    if (res && res.set) {
	      res.set.call(this, this, val);
	    }
	  };

	  /**
	   * Delete a property on the VM
	   *
	   * @param {String} key
	   */

	  Vue.prototype.$delete = function (key) {
	    del(this._data, key);
	  };

	  /**
	   * Watch an expression, trigger callback when its
	   * value changes.
	   *
	   * @param {String|Function} expOrFn
	   * @param {Function} cb
	   * @param {Object} [options]
	   *                 - {Boolean} deep
	   *                 - {Boolean} immediate
	   * @return {Function} - unwatchFn
	   */

	  Vue.prototype.$watch = function (expOrFn, cb, options) {
	    var vm = this;
	    var parsed;
	    if (typeof expOrFn === 'string') {
	      parsed = parseDirective(expOrFn);
	      expOrFn = parsed.expression;
	    }
	    var watcher = new Watcher(vm, expOrFn, cb, {
	      deep: options && options.deep,
	      sync: options && options.sync,
	      filters: parsed && parsed.filters,
	      user: !options || options.user !== false
	    });
	    if (options && options.immediate) {
	      cb.call(vm, watcher.value);
	    }
	    return function unwatchFn() {
	      watcher.teardown();
	    };
	  };

	  /**
	   * Evaluate a text directive, including filters.
	   *
	   * @param {String} text
	   * @param {Boolean} [asStatement]
	   * @return {String}
	   */

	  Vue.prototype.$eval = function (text, asStatement) {
	    // check for filters.
	    if (filterRE$1.test(text)) {
	      var dir = parseDirective(text);
	      // the filter regex check might give false positive
	      // for pipes inside strings, so it's possible that
	      // we don't get any filters here
	      var val = this.$get(dir.expression, asStatement);
	      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;
	    } else {
	      // no filter
	      return this.$get(text, asStatement);
	    }
	  };

	  /**
	   * Interpolate a piece of template text.
	   *
	   * @param {String} text
	   * @return {String}
	   */

	  Vue.prototype.$interpolate = function (text) {
	    var tokens = parseText(text);
	    var vm = this;
	    if (tokens) {
	      if (tokens.length === 1) {
	        return vm.$eval(tokens[0].value) + '';
	      } else {
	        return tokens.map(function (token) {
	          return token.tag ? vm.$eval(token.value) : token.value;
	        }).join('');
	      }
	    } else {
	      return text;
	    }
	  };

	  /**
	   * Log instance data as a plain JS object
	   * so that it is easier to inspect in console.
	   * This method assumes console is available.
	   *
	   * @param {String} [path]
	   */

	  Vue.prototype.$log = function (path) {
	    var data = path ? getPath(this._data, path) : this._data;
	    if (data) {
	      data = clean(data);
	    }
	    // include computed fields
	    if (!path) {
	      var key;
	      for (key in this.$options.computed) {
	        data[key] = clean(this[key]);
	      }
	      if (this._props) {
	        for (key in this._props) {
	          data[key] = clean(this[key]);
	        }
	      }
	    }
	    console.log(data);
	  };

	  /**
	   * "clean" a getter/setter converted object into a plain
	   * object copy.
	   *
	   * @param {Object} - obj
	   * @return {Object}
	   */

	  function clean(obj) {
	    return JSON.parse(JSON.stringify(obj));
	  }
	}

	function domAPI (Vue) {
	  /**
	   * Convenience on-instance nextTick. The callback is
	   * auto-bound to the instance, and this avoids component
	   * modules having to rely on the global Vue.
	   *
	   * @param {Function} fn
	   */

	  Vue.prototype.$nextTick = function (fn) {
	    nextTick(fn, this);
	  };

	  /**
	   * Append instance to target
	   *
	   * @param {Node} target
	   * @param {Function} [cb]
	   * @param {Boolean} [withTransition] - defaults to true
	   */

	  Vue.prototype.$appendTo = function (target, cb, withTransition) {
	    return insert(this, target, cb, withTransition, append, appendWithTransition);
	  };

	  /**
	   * Prepend instance to target
	   *
	   * @param {Node} target
	   * @param {Function} [cb]
	   * @param {Boolean} [withTransition] - defaults to true
	   */

	  Vue.prototype.$prependTo = function (target, cb, withTransition) {
	    target = query(target);
	    if (target.hasChildNodes()) {
	      this.$before(target.firstChild, cb, withTransition);
	    } else {
	      this.$appendTo(target, cb, withTransition);
	    }
	    return this;
	  };

	  /**
	   * Insert instance before target
	   *
	   * @param {Node} target
	   * @param {Function} [cb]
	   * @param {Boolean} [withTransition] - defaults to true
	   */

	  Vue.prototype.$before = function (target, cb, withTransition) {
	    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);
	  };

	  /**
	   * Insert instance after target
	   *
	   * @param {Node} target
	   * @param {Function} [cb]
	   * @param {Boolean} [withTransition] - defaults to true
	   */

	  Vue.prototype.$after = function (target, cb, withTransition) {
	    target = query(target);
	    if (target.nextSibling) {
	      this.$before(target.nextSibling, cb, withTransition);
	    } else {
	      this.$appendTo(target.parentNode, cb, withTransition);
	    }
	    return this;
	  };

	  /**
	   * Remove instance from DOM
	   *
	   * @param {Function} [cb]
	   * @param {Boolean} [withTransition] - defaults to true
	   */

	  Vue.prototype.$remove = function (cb, withTransition) {
	    if (!this.$el.parentNode) {
	      return cb && cb();
	    }
	    var inDocument = this._isAttached && inDoc(this.$el);
	    // if we are not in document, no need to check
	    // for transitions
	    if (!inDocument) withTransition = false;
	    var self = this;
	    var realCb = function realCb() {
	      if (inDocument) self._callHook('detached');
	      if (cb) cb();
	    };
	    if (this._isFragment) {
	      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);
	    } else {
	      var op = withTransition === false ? removeWithCb : removeWithTransition;
	      op(this.$el, this, realCb);
	    }
	    return this;
	  };

	  /**
	   * Shared DOM insertion function.
	   *
	   * @param {Vue} vm
	   * @param {Element} target
	   * @param {Function} [cb]
	   * @param {Boolean} [withTransition]
	   * @param {Function} op1 - op for non-transition insert
	   * @param {Function} op2 - op for transition insert
	   * @return vm
	   */

	  function insert(vm, target, cb, withTransition, op1, op2) {
	    target = query(target);
	    var targetIsDetached = !inDoc(target);
	    var op = withTransition === false || targetIsDetached ? op1 : op2;
	    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);
	    if (vm._isFragment) {
	      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {
	        op(node, target, vm);
	      });
	      cb && cb();
	    } else {
	      op(vm.$el, target, vm, cb);
	    }
	    if (shouldCallHook) {
	      vm._callHook('attached');
	    }
	    return vm;
	  }

	  /**
	   * Check for selectors
	   *
	   * @param {String|Element} el
	   */

	  function query(el) {
	    return typeof el === 'string' ? document.querySelector(el) : el;
	  }

	  /**
	   * Append operation that takes a callback.
	   *
	   * @param {Node} el
	   * @param {Node} target
	   * @param {Vue} vm - unused
	   * @param {Function} [cb]
	   */

	  function append(el, target, vm, cb) {
	    target.appendChild(el);
	    if (cb) cb();
	  }

	  /**
	   * InsertBefore operation that takes a callback.
	   *
	   * @param {Node} el
	   * @param {Node} target
	   * @param {Vue} vm - unused
	   * @param {Function} [cb]
	   */

	  function beforeWithCb(el, target, vm, cb) {
	    before(el, target);
	    if (cb) cb();
	  }

	  /**
	   * Remove operation that takes a callback.
	   *
	   * @param {Node} el
	   * @param {Vue} vm - unused
	   * @param {Function} [cb]
	   */

	  function removeWithCb(el, vm, cb) {
	    remove(el);
	    if (cb) cb();
	  }
	}

	function eventsAPI (Vue) {
	  /**
	   * Listen on the given `event` with `fn`.
	   *
	   * @param {String} event
	   * @param {Function} fn
	   */

	  Vue.prototype.$on = function (event, fn) {
	    (this._events[event] || (this._events[event] = [])).push(fn);
	    modifyListenerCount(this, event, 1);
	    return this;
	  };

	  /**
	   * Adds an `event` listener that will be invoked a single
	   * time then automatically removed.
	   *
	   * @param {String} event
	   * @param {Function} fn
	   */

	  Vue.prototype.$once = function (event, fn) {
	    var self = this;
	    function on() {
	      self.$off(event, on);
	      fn.apply(this, arguments);
	    }
	    on.fn = fn;
	    this.$on(event, on);
	    return this;
	  };

	  /**
	   * Remove the given callback for `event` or all
	   * registered callbacks.
	   *
	   * @param {String} event
	   * @param {Function} fn
	   */

	  Vue.prototype.$off = function (event, fn) {
	    var cbs;
	    // all
	    if (!arguments.length) {
	      if (this.$parent) {
	        for (event in this._events) {
	          cbs = this._events[event];
	          if (cbs) {
	            modifyListenerCount(this, event, -cbs.length);
	          }
	        }
	      }
	      this._events = {};
	      return this;
	    }
	    // specific event
	    cbs = this._events[event];
	    if (!cbs) {
	      return this;
	    }
	    if (arguments.length === 1) {
	      modifyListenerCount(this, event, -cbs.length);
	      this._events[event] = null;
	      return this;
	    }
	    // specific handler
	    var cb;
	    var i = cbs.length;
	    while (i--) {
	      cb = cbs[i];
	      if (cb === fn || cb.fn === fn) {
	        modifyListenerCount(this, event, -1);
	        cbs.splice(i, 1);
	        break;
	      }
	    }
	    return this;
	  };

	  /**
	   * Trigger an event on self.
	   *
	   * @param {String|Object} event
	   * @return {Boolean} shouldPropagate
	   */

	  Vue.prototype.$emit = function (event) {
	    var isSource = typeof event === 'string';
	    event = isSource ? event : event.name;
	    var cbs = this._events[event];
	    var shouldPropagate = isSource || !cbs;
	    if (cbs) {
	      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
	      // this is a somewhat hacky solution to the question raised
	      // in #2102: for an inline component listener like <comp @test="doThis">,
	      // the propagation handling is somewhat broken. Therefore we
	      // need to treat these inline callbacks differently.
	      var hasParentCbs = isSource && cbs.some(function (cb) {
	        return cb._fromParent;
	      });
	      if (hasParentCbs) {
	        shouldPropagate = false;
	      }
	      var args = toArray(arguments, 1);
	      for (var i = 0, l = cbs.length; i < l; i++) {
	        var cb = cbs[i];
	        var res = cb.apply(this, args);
	        if (res === true && (!hasParentCbs || cb._fromParent)) {
	          shouldPropagate = true;
	        }
	      }
	    }
	    return shouldPropagate;
	  };

	  /**
	   * Recursively broadcast an event to all children instances.
	   *
	   * @param {String|Object} event
	   * @param {...*} additional arguments
	   */

	  Vue.prototype.$broadcast = function (event) {
	    var isSource = typeof event === 'string';
	    event = isSource ? event : event.name;
	    // if no child has registered for this event,
	    // then there's no need to broadcast.
	    if (!this._eventsCount[event]) return;
	    var children = this.$children;
	    var args = toArray(arguments);
	    if (isSource) {
	      // use object event to indicate non-source emit
	      // on children
	      args[0] = { name: event, source: this };
	    }
	    for (var i = 0, l = children.length; i < l; i++) {
	      var child = children[i];
	      var shouldPropagate = child.$emit.apply(child, args);
	      if (shouldPropagate) {
	        child.$broadcast.apply(child, args);
	      }
	    }
	    return this;
	  };

	  /**
	   * Recursively propagate an event up the parent chain.
	   *
	   * @param {String} event
	   * @param {...*} additional arguments
	   */

	  Vue.prototype.$dispatch = function (event) {
	    var shouldPropagate = this.$emit.apply(this, arguments);
	    if (!shouldPropagate) return;
	    var parent = this.$parent;
	    var args = toArray(arguments);
	    // use object event to indicate non-source emit
	    // on parents
	    args[0] = { name: event, source: this };
	    while (parent) {
	      shouldPropagate = parent.$emit.apply(parent, args);
	      parent = shouldPropagate ? parent.$parent : null;
	    }
	    return this;
	  };

	  /**
	   * Modify the listener counts on all parents.
	   * This bookkeeping allows $broadcast to return early when
	   * no child has listened to a certain event.
	   *
	   * @param {Vue} vm
	   * @param {String} event
	   * @param {Number} count
	   */

	  var hookRE = /^hook:/;
	  function modifyListenerCount(vm, event, count) {
	    var parent = vm.$parent;
	    // hooks do not get broadcasted so no need
	    // to do bookkeeping for them
	    if (!parent || !count || hookRE.test(event)) return;
	    while (parent) {
	      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;
	      parent = parent.$parent;
	    }
	  }
	}

	function lifecycleAPI (Vue) {
	  /**
	   * Set instance target element and kick off the compilation
	   * process. The passed in `el` can be a selector string, an
	   * existing Element, or a DocumentFragment (for block
	   * instances).
	   *
	   * @param {Element|DocumentFragment|string} el
	   * @public
	   */

	  Vue.prototype.$mount = function (el) {
	    if (this._isCompiled) {
	      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);
	      return;
	    }
	    el = query(el);
	    if (!el) {
	      el = document.createElement('div');
	    }
	    this._compile(el);
	    this._initDOMHooks();
	    if (inDoc(this.$el)) {
	      this._callHook('attached');
	      ready.call(this);
	    } else {
	      this.$once('hook:attached', ready);
	    }
	    return this;
	  };

	  /**
	   * Mark an instance as ready.
	   */

	  function ready() {
	    this._isAttached = true;
	    this._isReady = true;
	    this._callHook('ready');
	  }

	  /**
	   * Teardown the instance, simply delegate to the internal
	   * _destroy.
	   *
	   * @param {Boolean} remove
	   * @param {Boolean} deferCleanup
	   */

	  Vue.prototype.$destroy = function (remove, deferCleanup) {
	    this._destroy(remove, deferCleanup);
	  };

	  /**
	   * Partially compile a piece of DOM and return a
	   * decompile function.
	   *
	   * @param {Element|DocumentFragment} el
	   * @param {Vue} [host]
	   * @param {Object} [scope]
	   * @param {Fragment} [frag]
	   * @return {Function}
	   */

	  Vue.prototype.$compile = function (el, host, scope, frag) {
	    return compile(el, this.$options, true)(this, el, host, scope, frag);
	  };
	}

	/**
	 * The exposed Vue constructor.
	 *
	 * API conventions:
	 * - public API methods/properties are prefixed with `$`
	 * - internal methods/properties are prefixed with `_`
	 * - non-prefixed properties are assumed to be proxied user
	 *   data.
	 *
	 * @constructor
	 * @param {Object} [options]
	 * @public
	 */

	function Vue(options) {
	  this._init(options);
	}

	// install internals
	initMixin(Vue);
	stateMixin(Vue);
	eventsMixin(Vue);
	lifecycleMixin(Vue);
	miscMixin(Vue);

	// install instance APIs
	dataAPI(Vue);
	domAPI(Vue);
	eventsAPI(Vue);
	lifecycleAPI(Vue);

	var slot = {

	  priority: SLOT,
	  params: ['name'],

	  bind: function bind() {
	    // this was resolved during component transclusion
	    var name = this.params.name || 'default';
	    var content = this.vm._slotContents && this.vm._slotContents[name];
	    if (!content || !content.hasChildNodes()) {
	      this.fallback();
	    } else {
	      this.compile(content.cloneNode(true), this.vm._context, this.vm);
	    }
	  },

	  compile: function compile(content, context, host) {
	    if (content && context) {
	      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {
	        // if the inserted slot has v-if
	        // inject fallback content as the v-else
	        var elseBlock = document.createElement('template');
	        elseBlock.setAttribute('v-else', '');
	        elseBlock.innerHTML = this.el.innerHTML;
	        // the else block should be compiled in child scope
	        elseBlock._context = this.vm;
	        content.appendChild(elseBlock);
	      }
	      var scope = host ? host._scope : this._scope;
	      this.unlink = context.$compile(content, host, scope, this._frag);
	    }
	    if (content) {
	      replace(this.el, content);
	    } else {
	      remove(this.el);
	    }
	  },

	  fallback: function fallback() {
	    this.compile(extractContent(this.el, true), this.vm);
	  },

	  unbind: function unbind() {
	    if (this.unlink) {
	      this.unlink();
	    }
	  }
	};

	var partial = {

	  priority: PARTIAL,

	  params: ['name'],

	  // watch changes to name for dynamic partials
	  paramWatchers: {
	    name: function name(value) {
	      vIf.remove.call(this);
	      if (value) {
	        this.insert(value);
	      }
	    }
	  },

	  bind: function bind() {
	    this.anchor = createAnchor('v-partial');
	    replace(this.el, this.anchor);
	    this.insert(this.params.name);
	  },

	  insert: function insert(id) {
	    var partial = resolveAsset(this.vm.$options, 'partials', id, true);
	    if (partial) {
	      this.factory = new FragmentFactory(this.vm, partial);
	      vIf.insert.call(this);
	    }
	  },

	  unbind: function unbind() {
	    if (this.frag) {
	      this.frag.destroy();
	    }
	  }
	};

	var elementDirectives = {
	  slot: slot,
	  partial: partial
	};

	var convertArray = vFor._postProcess;

	/**
	 * Limit filter for arrays
	 *
	 * @param {Number} n
	 * @param {Number} offset (Decimal expected)
	 */

	function limitBy(arr, n, offset) {
	  offset = offset ? parseInt(offset, 10) : 0;
	  n = toNumber(n);
	  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;
	}

	/**
	 * Filter filter for arrays
	 *
	 * @param {String} search
	 * @param {String} [delimiter]
	 * @param {String} ...dataKeys
	 */

	function filterBy(arr, search, delimiter) {
	  arr = convertArray(arr);
	  if (search == null) {
	    return arr;
	  }
	  if (typeof search === 'function') {
	    return arr.filter(search);
	  }
	  // cast to lowercase string
	  search = ('' + search).toLowerCase();
	  // allow optional `in` delimiter
	  // because why not
	  var n = delimiter === 'in' ? 3 : 2;
	  // extract and flatten keys
	  var keys = Array.prototype.concat.apply([], toArray(arguments, n));
	  var res = [];
	  var item, key, val, j;
	  for (var i = 0, l = arr.length; i < l; i++) {
	    item = arr[i];
	    val = item && item.$value || item;
	    j = keys.length;
	    if (j) {
	      while (j--) {
	        key = keys[j];
	        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {
	          res.push(item);
	          break;
	        }
	      }
	    } else if (contains(item, search)) {
	      res.push(item);
	    }
	  }
	  return res;
	}

	/**
	 * Order filter for arrays
	 *
	 * @param {String|Array<String>|Function} ...sortKeys
	 * @param {Number} [order]
	 */

	function orderBy(arr) {
	  var comparator = null;
	  var sortKeys = undefined;
	  arr = convertArray(arr);

	  // determine order (last argument)
	  var args = toArray(arguments, 1);
	  var order = args[args.length - 1];
	  if (typeof order === 'number') {
	    order = order < 0 ? -1 : 1;
	    args = args.length > 1 ? args.slice(0, -1) : args;
	  } else {
	    order = 1;
	  }

	  // determine sortKeys & comparator
	  var firstArg = args[0];
	  if (!firstArg) {
	    return arr;
	  } else if (typeof firstArg === 'function') {
	    // custom comparator
	    comparator = function (a, b) {
	      return firstArg(a, b) * order;
	    };
	  } else {
	    // string keys. flatten first
	    sortKeys = Array.prototype.concat.apply([], args);
	    comparator = function (a, b, i) {
	      i = i || 0;
	      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);
	    };
	  }

	  function baseCompare(a, b, sortKeyIndex) {
	    var sortKey = sortKeys[sortKeyIndex];
	    if (sortKey) {
	      if (sortKey !== '$key') {
	        if (isObject(a) && '$value' in a) a = a.$value;
	        if (isObject(b) && '$value' in b) b = b.$value;
	      }
	      a = isObject(a) ? getPath(a, sortKey) : a;
	      b = isObject(b) ? getPath(b, sortKey) : b;
	    }
	    return a === b ? 0 : a > b ? order : -order;
	  }

	  // sort on a copy to avoid mutating original array
	  return arr.slice().sort(comparator);
	}

	/**
	 * String contain helper
	 *
	 * @param {*} val
	 * @param {String} search
	 */

	function contains(val, search) {
	  var i;
	  if (isPlainObject(val)) {
	    var keys = Object.keys(val);
	    i = keys.length;
	    while (i--) {
	      if (contains(val[keys[i]], search)) {
	        return true;
	      }
	    }
	  } else if (isArray(val)) {
	    i = val.length;
	    while (i--) {
	      if (contains(val[i], search)) {
	        return true;
	      }
	    }
	  } else if (val != null) {
	    return val.toString().toLowerCase().indexOf(search) > -1;
	  }
	}

	var digitsRE = /(\d{3})(?=\d)/g;

	// asset collections must be a plain object.
	var filters = {

	  orderBy: orderBy,
	  filterBy: filterBy,
	  limitBy: limitBy,

	  /**
	   * Stringify value.
	   *
	   * @param {Number} indent
	   */

	  json: {
	    read: function read(value, indent) {
	      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);
	    },
	    write: function write(value) {
	      try {
	        return JSON.parse(value);
	      } catch (e) {
	        return value;
	      }
	    }
	  },

	  /**
	   * 'abc' => 'Abc'
	   */

	  capitalize: function capitalize(value) {
	    if (!value && value !== 0) return '';
	    value = value.toString();
	    return value.charAt(0).toUpperCase() + value.slice(1);
	  },

	  /**
	   * 'abc' => 'ABC'
	   */

	  uppercase: function uppercase(value) {
	    return value || value === 0 ? value.toString().toUpperCase() : '';
	  },

	  /**
	   * 'AbC' => 'abc'
	   */

	  lowercase: function lowercase(value) {
	    return value || value === 0 ? value.toString().toLowerCase() : '';
	  },

	  /**
	   * 12345 => $12,345.00
	   *
	   * @param {String} sign
	   * @param {Number} decimals Decimal places
	   */

	  currency: function currency(value, _currency, decimals) {
	    value = parseFloat(value);
	    if (!isFinite(value) || !value && value !== 0) return '';
	    _currency = _currency != null ? _currency : '$';
	    decimals = decimals != null ? decimals : 2;
	    var stringified = Math.abs(value).toFixed(decimals);
	    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;
	    var i = _int.length % 3;
	    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';
	    var _float = decimals ? stringified.slice(-1 - decimals) : '';
	    var sign = value < 0 ? '-' : '';
	    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;
	  },

	  /**
	   * 'item' => 'items'
	   *
	   * @params
	   *  an array of strings corresponding to
	   *  the single, double, triple ... forms of the word to
	   *  be pluralized. When the number to be pluralized
	   *  exceeds the length of the args, it will use the last
	   *  entry in the array.
	   *
	   *  e.g. ['single', 'double', 'triple', 'multiple']
	   */

	  pluralize: function pluralize(value) {
	    var args = toArray(arguments, 1);
	    var length = args.length;
	    if (length > 1) {
	      var index = value % 10 - 1;
	      return index in args ? args[index] : args[length - 1];
	    } else {
	      return args[0] + (value === 1 ? '' : 's');
	    }
	  },

	  /**
	   * Debounce a handler function.
	   *
	   * @param {Function} handler
	   * @param {Number} delay = 300
	   * @return {Function}
	   */

	  debounce: function debounce(handler, delay) {
	    if (!handler) return;
	    if (!delay) {
	      delay = 300;
	    }
	    return _debounce(handler, delay);
	  }
	};

	function installGlobalAPI (Vue) {
	  /**
	   * Vue and every constructor that extends Vue has an
	   * associated options object, which can be accessed during
	   * compilation steps as `this.constructor.options`.
	   *
	   * These can be seen as the default options of every
	   * Vue instance.
	   */

	  Vue.options = {
	    directives: directives,
	    elementDirectives: elementDirectives,
	    filters: filters,
	    transitions: {},
	    components: {},
	    partials: {},
	    replace: true
	  };

	  /**
	   * Expose useful internals
	   */

	  Vue.util = util;
	  Vue.config = config;
	  Vue.set = set;
	  Vue['delete'] = del;
	  Vue.nextTick = nextTick;

	  /**
	   * The following are exposed for advanced usage / plugins
	   */

	  Vue.compiler = compiler;
	  Vue.FragmentFactory = FragmentFactory;
	  Vue.internalDirectives = internalDirectives;
	  Vue.parsers = {
	    path: path,
	    text: text,
	    template: template,
	    directive: directive,
	    expression: expression
	  };

	  /**
	   * Each instance constructor, including Vue, has a unique
	   * cid. This enables us to create wrapped "child
	   * constructors" for prototypal inheritance and cache them.
	   */

	  Vue.cid = 0;
	  var cid = 1;

	  /**
	   * Class inheritance
	   *
	   * @param {Object} extendOptions
	   */

	  Vue.extend = function (extendOptions) {
	    extendOptions = extendOptions || {};
	    var Super = this;
	    var isFirstExtend = Super.cid === 0;
	    if (isFirstExtend && extendOptions._Ctor) {
	      return extendOptions._Ctor;
	    }
	    var name = extendOptions.name || Super.options.name;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!/^[a-zA-Z][\w-]*$/.test(name)) {
	        warn('Invalid component name: "' + name + '". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');
	        name = null;
	      }
	    }
	    var Sub = createClass(name || 'VueComponent');
	    Sub.prototype = Object.create(Super.prototype);
	    Sub.prototype.constructor = Sub;
	    Sub.cid = cid++;
	    Sub.options = mergeOptions(Super.options, extendOptions);
	    Sub['super'] = Super;
	    // allow further extension
	    Sub.extend = Super.extend;
	    // create asset registers, so extended classes
	    // can have their private assets too.
	    config._assetTypes.forEach(function (type) {
	      Sub[type] = Super[type];
	    });
	    // enable recursive self-lookup
	    if (name) {
	      Sub.options.components[name] = Sub;
	    }
	    // cache constructor
	    if (isFirstExtend) {
	      extendOptions._Ctor = Sub;
	    }
	    return Sub;
	  };

	  /**
	   * A function that returns a sub-class constructor with the
	   * given name. This gives us much nicer output when
	   * logging instances in the console.
	   *
	   * @param {String} name
	   * @return {Function}
	   */

	  function createClass(name) {
	    /* eslint-disable no-new-func */
	    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();
	    /* eslint-enable no-new-func */
	  }

	  /**
	   * Plugin system
	   *
	   * @param {Object} plugin
	   */

	  Vue.use = function (plugin) {
	    /* istanbul ignore if */
	    if (plugin.installed) {
	      return;
	    }
	    // additional parameters
	    var args = toArray(arguments, 1);
	    args.unshift(this);
	    if (typeof plugin.install === 'function') {
	      plugin.install.apply(plugin, args);
	    } else {
	      plugin.apply(null, args);
	    }
	    plugin.installed = true;
	    return this;
	  };

	  /**
	   * Apply a global mixin by merging it into the default
	   * options.
	   */

	  Vue.mixin = function (mixin) {
	    Vue.options = mergeOptions(Vue.options, mixin);
	  };

	  /**
	   * Create asset registration methods with the following
	   * signature:
	   *
	   * @param {String} id
	   * @param {*} definition
	   */

	  config._assetTypes.forEach(function (type) {
	    Vue[type] = function (id, definition) {
	      if (!definition) {
	        return this.options[type + 's'][id];
	      } else {
	        /* istanbul ignore if */
	        if (process.env.NODE_ENV !== 'production') {
	          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {
	            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);
	          }
	        }
	        if (type === 'component' && isPlainObject(definition)) {
	          if (!definition.name) {
	            definition.name = id;
	          }
	          definition = Vue.extend(definition);
	        }
	        this.options[type + 's'][id] = definition;
	        return definition;
	      }
	    };
	  });

	  // expose internal transition API
	  extend(Vue.transition, transition);
	}

	installGlobalAPI(Vue);

	Vue.version = '1.0.28';

	// devtools global hook
	/* istanbul ignore next */
	setTimeout(function () {
	  if (config.devtools) {
	    if (devtools) {
	      devtools.emit('init', Vue);
	    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\/\d+/.test(window.navigator.userAgent)) {
	      console.log('Download the Vue Devtools for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
	    }
	  }
	}, 0);

	module.exports = Vue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 7 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * vue-router v0.7.13
	 * (c) 2016 Evan You
	 * Released under the MIT License.
	 */
	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  global.VueRouter = factory();
	}(this, function () { 'use strict';

	  var babelHelpers = {};

	  babelHelpers.classCallCheck = function (instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	      throw new TypeError("Cannot call a class as a function");
	    }
	  };
	  function Target(path, matcher, delegate) {
	    this.path = path;
	    this.matcher = matcher;
	    this.delegate = delegate;
	  }

	  Target.prototype = {
	    to: function to(target, callback) {
	      var delegate = this.delegate;

	      if (delegate && delegate.willAddRoute) {
	        target = delegate.willAddRoute(this.matcher.target, target);
	      }

	      this.matcher.add(this.path, target);

	      if (callback) {
	        if (callback.length === 0) {
	          throw new Error("You must have an argument in the function passed to `to`");
	        }
	        this.matcher.addChild(this.path, target, callback, this.delegate);
	      }
	      return this;
	    }
	  };

	  function Matcher(target) {
	    this.routes = {};
	    this.children = {};
	    this.target = target;
	  }

	  Matcher.prototype = {
	    add: function add(path, handler) {
	      this.routes[path] = handler;
	    },

	    addChild: function addChild(path, target, callback, delegate) {
	      var matcher = new Matcher(target);
	      this.children[path] = matcher;

	      var match = generateMatch(path, matcher, delegate);

	      if (delegate && delegate.contextEntered) {
	        delegate.contextEntered(target, match);
	      }

	      callback(match);
	    }
	  };

	  function generateMatch(startingPath, matcher, delegate) {
	    return function (path, nestedCallback) {
	      var fullPath = startingPath + path;

	      if (nestedCallback) {
	        nestedCallback(generateMatch(fullPath, matcher, delegate));
	      } else {
	        return new Target(startingPath + path, matcher, delegate);
	      }
	    };
	  }

	  function addRoute(routeArray, path, handler) {
	    var len = 0;
	    for (var i = 0, l = routeArray.length; i < l; i++) {
	      len += routeArray[i].path.length;
	    }

	    path = path.substr(len);
	    var route = { path: path, handler: handler };
	    routeArray.push(route);
	  }

	  function eachRoute(baseRoute, matcher, callback, binding) {
	    var routes = matcher.routes;

	    for (var path in routes) {
	      if (routes.hasOwnProperty(path)) {
	        var routeArray = baseRoute.slice();
	        addRoute(routeArray, path, routes[path]);

	        if (matcher.children[path]) {
	          eachRoute(routeArray, matcher.children[path], callback, binding);
	        } else {
	          callback.call(binding, routeArray);
	        }
	      }
	    }
	  }

	  function map (callback, addRouteCallback) {
	    var matcher = new Matcher();

	    callback(generateMatch("", matcher, this.delegate));

	    eachRoute([], matcher, function (route) {
	      if (addRouteCallback) {
	        addRouteCallback(this, route);
	      } else {
	        this.add(route);
	      }
	    }, this);
	  }

	  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\'];

	  var escapeRegex = new RegExp('(\\' + specials.join('|\\') + ')', 'g');

	  var noWarning = false;
	  function warn(msg) {
	    if (!noWarning && typeof console !== 'undefined') {
	      console.error('[vue-router] ' + msg);
	    }
	  }

	  function tryDecode(uri, asComponent) {
	    try {
	      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);
	    } catch (e) {
	      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);
	    }
	  }

	  function isArray(test) {
	    return Object.prototype.toString.call(test) === "[object Array]";
	  }

	  // A Segment represents a segment in the original route description.
	  // Each Segment type provides an `eachChar` and `regex` method.
	  //
	  // The `eachChar` method invokes the callback with one or more character
	  // specifications. A character specification consumes one or more input
	  // characters.
	  //
	  // The `regex` method returns a regex fragment for the segment. If the
	  // segment is a dynamic of star segment, the regex fragment also includes
	  // a capture.
	  //
	  // A character specification contains:
	  //
	  // * `validChars`: a String with a list of all valid characters, or
	  // * `invalidChars`: a String with a list of all invalid characters
	  // * `repeat`: true if the character specification can repeat

	  function StaticSegment(string) {
	    this.string = string;
	  }
	  StaticSegment.prototype = {
	    eachChar: function eachChar(callback) {
	      var string = this.string,
	          ch;

	      for (var i = 0, l = string.length; i < l; i++) {
	        ch = string.charAt(i);
	        callback({ validChars: ch });
	      }
	    },

	    regex: function regex() {
	      return this.string.replace(escapeRegex, '\\$1');
	    },

	    generate: function generate() {
	      return this.string;
	    }
	  };

	  function DynamicSegment(name) {
	    this.name = name;
	  }
	  DynamicSegment.prototype = {
	    eachChar: function eachChar(callback) {
	      callback({ invalidChars: "/", repeat: true });
	    },

	    regex: function regex() {
	      return "([^/]+)";
	    },

	    generate: function generate(params) {
	      var val = params[this.name];
	      return val == null ? ":" + this.name : val;
	    }
	  };

	  function StarSegment(name) {
	    this.name = name;
	  }
	  StarSegment.prototype = {
	    eachChar: function eachChar(callback) {
	      callback({ invalidChars: "", repeat: true });
	    },

	    regex: function regex() {
	      return "(.+)";
	    },

	    generate: function generate(params) {
	      var val = params[this.name];
	      return val == null ? ":" + this.name : val;
	    }
	  };

	  function EpsilonSegment() {}
	  EpsilonSegment.prototype = {
	    eachChar: function eachChar() {},
	    regex: function regex() {
	      return "";
	    },
	    generate: function generate() {
	      return "";
	    }
	  };

	  function parse(route, names, specificity) {
	    // normalize route as not starting with a "/". Recognition will
	    // also normalize.
	    if (route.charAt(0) === "/") {
	      route = route.substr(1);
	    }

	    var segments = route.split("/"),
	        results = [];

	    // A routes has specificity determined by the order that its different segments
	    // appear in. This system mirrors how the magnitude of numbers written as strings
	    // works.
	    // Consider a number written as: "abc". An example would be "200". Any other number written
	    // "xyz" will be smaller than "abc" so long as `a > z`. For instance, "199" is smaller
	    // then "200", even though "y" and "z" (which are both 9) are larger than "0" (the value
	    // of (`b` and `c`). This is because the leading symbol, "2", is larger than the other
	    // leading symbol, "1".
	    // The rule is that symbols to the left carry more weight than symbols to the right
	    // when a number is written out as a string. In the above strings, the leading digit
	    // represents how many 100's are in the number, and it carries more weight than the middle
	    // number which represents how many 10's are in the number.
	    // This system of number magnitude works well for route specificity, too. A route written as
	    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than
	    // `x`, irrespective of the other parts.
	    // Because of this similarity, we assign each type of segment a number value written as a
	    // string. We can find the specificity of compound routes by concatenating these strings
	    // together, from left to right. After we have looped through all of the segments,
	    // we convert the string to a number.
	    specificity.val = '';

	    for (var i = 0, l = segments.length; i < l; i++) {
	      var segment = segments[i],
	          match;

	      if (match = segment.match(/^:([^\/]+)$/)) {
	        results.push(new DynamicSegment(match[1]));
	        names.push(match[1]);
	        specificity.val += '3';
	      } else if (match = segment.match(/^\*([^\/]+)$/)) {
	        results.push(new StarSegment(match[1]));
	        specificity.val += '2';
	        names.push(match[1]);
	      } else if (segment === "") {
	        results.push(new EpsilonSegment());
	        specificity.val += '1';
	      } else {
	        results.push(new StaticSegment(segment));
	        specificity.val += '4';
	      }
	    }

	    specificity.val = +specificity.val;

	    return results;
	  }

	  // A State has a character specification and (`charSpec`) and a list of possible
	  // subsequent states (`nextStates`).
	  //
	  // If a State is an accepting state, it will also have several additional
	  // properties:
	  //
	  // * `regex`: A regular expression that is used to extract parameters from paths
	  //   that reached this accepting state.
	  // * `handlers`: Information on how to convert the list of captures into calls
	  //   to registered handlers with the specified parameters
	  // * `types`: How many static, dynamic or star segments in this route. Used to
	  //   decide which route to use if multiple registered routes match a path.
	  //
	  // Currently, State is implemented naively by looping over `nextStates` and
	  // comparing a character specification against a character. A more efficient
	  // implementation would use a hash of keys pointing at one or more next states.

	  function State(charSpec) {
	    this.charSpec = charSpec;
	    this.nextStates = [];
	  }

	  State.prototype = {
	    get: function get(charSpec) {
	      var nextStates = this.nextStates;

	      for (var i = 0, l = nextStates.length; i < l; i++) {
	        var child = nextStates[i];

	        var isEqual = child.charSpec.validChars === charSpec.validChars;
	        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;

	        if (isEqual) {
	          return child;
	        }
	      }
	    },

	    put: function put(charSpec) {
	      var state;

	      // If the character specification already exists in a child of the current
	      // state, just return that state.
	      if (state = this.get(charSpec)) {
	        return state;
	      }

	      // Make a new state for the character spec
	      state = new State(charSpec);

	      // Insert the new state as a child of the current state
	      this.nextStates.push(state);

	      // If this character specification repeats, insert the new state as a child
	      // of itself. Note that this will not trigger an infinite loop because each
	      // transition during recognition consumes a character.
	      if (charSpec.repeat) {
	        state.nextStates.push(state);
	      }

	      // Return the new state
	      return state;
	    },

	    // Find a list of child states matching the next character
	    match: function match(ch) {
	      // DEBUG "Processing `" + ch + "`:"
	      var nextStates = this.nextStates,
	          child,
	          charSpec,
	          chars;

	      // DEBUG "  " + debugState(this)
	      var returned = [];

	      for (var i = 0, l = nextStates.length; i < l; i++) {
	        child = nextStates[i];

	        charSpec = child.charSpec;

	        if (typeof (chars = charSpec.validChars) !== 'undefined') {
	          if (chars.indexOf(ch) !== -1) {
	            returned.push(child);
	          }
	        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {
	          if (chars.indexOf(ch) === -1) {
	            returned.push(child);
	          }
	        }
	      }

	      return returned;
	    }

	    /** IF DEBUG
	    , debug: function() {
	      var charSpec = this.charSpec,
	          debug = "[",
	          chars = charSpec.validChars || charSpec.invalidChars;
	       if (charSpec.invalidChars) { debug += "^"; }
	      debug += chars;
	      debug += "]";
	       if (charSpec.repeat) { debug += "+"; }
	       return debug;
	    }
	    END IF **/
	  };

	  /** IF DEBUG
	  function debug(log) {
	    console.log(log);
	  }

	  function debugState(state) {
	    return state.nextStates.map(function(n) {
	      if (n.nextStates.length === 0) { return "( " + n.debug() + " [accepting] )"; }
	      return "( " + n.debug() + " <then> " + n.nextStates.map(function(s) { return s.debug() }).join(" or ") + " )";
	    }).join(", ")
	  }
	  END IF **/

	  // Sort the routes by specificity
	  function sortSolutions(states) {
	    return states.sort(function (a, b) {
	      return b.specificity.val - a.specificity.val;
	    });
	  }

	  function recognizeChar(states, ch) {
	    var nextStates = [];

	    for (var i = 0, l = states.length; i < l; i++) {
	      var state = states[i];

	      nextStates = nextStates.concat(state.match(ch));
	    }

	    return nextStates;
	  }

	  var oCreate = Object.create || function (proto) {
	    function F() {}
	    F.prototype = proto;
	    return new F();
	  };

	  function RecognizeResults(queryParams) {
	    this.queryParams = queryParams || {};
	  }
	  RecognizeResults.prototype = oCreate({
	    splice: Array.prototype.splice,
	    slice: Array.prototype.slice,
	    push: Array.prototype.push,
	    length: 0,
	    queryParams: null
	  });

	  function findHandler(state, path, queryParams) {
	    var handlers = state.handlers,
	        regex = state.regex;
	    var captures = path.match(regex),
	        currentCapture = 1;
	    var result = new RecognizeResults(queryParams);

	    for (var i = 0, l = handlers.length; i < l; i++) {
	      var handler = handlers[i],
	          names = handler.names,
	          params = {};

	      for (var j = 0, m = names.length; j < m; j++) {
	        params[names[j]] = captures[currentCapture++];
	      }

	      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });
	    }

	    return result;
	  }

	  function addSegment(currentState, segment) {
	    segment.eachChar(function (ch) {
	      var state;

	      currentState = currentState.put(ch);
	    });

	    return currentState;
	  }

	  function decodeQueryParamPart(part) {
	    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1
	    part = part.replace(/\+/gm, '%20');
	    return tryDecode(part, true);
	  }

	  // The main interface

	  var RouteRecognizer = function RouteRecognizer() {
	    this.rootState = new State();
	    this.names = {};
	  };

	  RouteRecognizer.prototype = {
	    add: function add(routes, options) {
	      var currentState = this.rootState,
	          regex = "^",
	          specificity = {},
	          handlers = [],
	          allSegments = [],
	          name;

	      var isEmpty = true;

	      for (var i = 0, l = routes.length; i < l; i++) {
	        var route = routes[i],
	            names = [];

	        var segments = parse(route.path, names, specificity);

	        allSegments = allSegments.concat(segments);

	        for (var j = 0, m = segments.length; j < m; j++) {
	          var segment = segments[j];

	          if (segment instanceof EpsilonSegment) {
	            continue;
	          }

	          isEmpty = false;

	          // Add a "/" for the new segment
	          currentState = currentState.put({ validChars: "/" });
	          regex += "/";

	          // Add a representation of the segment to the NFA and regex
	          currentState = addSegment(currentState, segment);
	          regex += segment.regex();
	        }

	        var handler = { handler: route.handler, names: names };
	        handlers.push(handler);
	      }

	      if (isEmpty) {
	        currentState = currentState.put({ validChars: "/" });
	        regex += "/";
	      }

	      currentState.handlers = handlers;
	      currentState.regex = new RegExp(regex + "$");
	      currentState.specificity = specificity;

	      if (name = options && options.as) {
	        this.names[name] = {
	          segments: allSegments,
	          handlers: handlers
	        };
	      }
	    },

	    handlersFor: function handlersFor(name) {
	      var route = this.names[name],
	          result = [];
	      if (!route) {
	        throw new Error("There is no route named " + name);
	      }

	      for (var i = 0, l = route.handlers.length; i < l; i++) {
	        result.push(route.handlers[i]);
	      }

	      return result;
	    },

	    hasRoute: function hasRoute(name) {
	      return !!this.names[name];
	    },

	    generate: function generate(name, params) {
	      var route = this.names[name],
	          output = "";
	      if (!route) {
	        throw new Error("There is no route named " + name);
	      }

	      var segments = route.segments;

	      for (var i = 0, l = segments.length; i < l; i++) {
	        var segment = segments[i];

	        if (segment instanceof EpsilonSegment) {
	          continue;
	        }

	        output += "/";
	        output += segment.generate(params);
	      }

	      if (output.charAt(0) !== '/') {
	        output = '/' + output;
	      }

	      if (params && params.queryParams) {
	        output += this.generateQueryString(params.queryParams);
	      }

	      return output;
	    },

	    generateQueryString: function generateQueryString(params) {
	      var pairs = [];
	      var keys = [];
	      for (var key in params) {
	        if (params.hasOwnProperty(key)) {
	          keys.push(key);
	        }
	      }
	      keys.sort();
	      for (var i = 0, len = keys.length; i < len; i++) {
	        key = keys[i];
	        var value = params[key];
	        if (value == null) {
	          continue;
	        }
	        var pair = encodeURIComponent(key);
	        if (isArray(value)) {
	          for (var j = 0, l = value.length; j < l; j++) {
	            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);
	            pairs.push(arrayPair);
	          }
	        } else {
	          pair += "=" + encodeURIComponent(value);
	          pairs.push(pair);
	        }
	      }

	      if (pairs.length === 0) {
	        return '';
	      }

	      return "?" + pairs.join("&");
	    },

	    parseQueryString: function parseQueryString(queryString) {
	      var pairs = queryString.split("&"),
	          queryParams = {};
	      for (var i = 0; i < pairs.length; i++) {
	        var pair = pairs[i].split('='),
	            key = decodeQueryParamPart(pair[0]),
	            keyLength = key.length,
	            isArray = false,
	            value;
	        if (pair.length === 1) {
	          value = 'true';
	        } else {
	          //Handle arrays
	          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {
	            isArray = true;
	            key = key.slice(0, keyLength - 2);
	            if (!queryParams[key]) {
	              queryParams[key] = [];
	            }
	          }
	          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';
	        }
	        if (isArray) {
	          queryParams[key].push(value);
	        } else {
	          queryParams[key] = value;
	        }
	      }
	      return queryParams;
	    },

	    recognize: function recognize(path, silent) {
	      noWarning = silent;
	      var states = [this.rootState],
	          pathLen,
	          i,
	          l,
	          queryStart,
	          queryParams = {},
	          isSlashDropped = false;

	      queryStart = path.indexOf('?');
	      if (queryStart !== -1) {
	        var queryString = path.substr(queryStart + 1, path.length);
	        path = path.substr(0, queryStart);
	        if (queryString) {
	          queryParams = this.parseQueryString(queryString);
	        }
	      }

	      path = tryDecode(path);
	      if (!path) return;

	      // DEBUG GROUP path

	      if (path.charAt(0) !== "/") {
	        path = "/" + path;
	      }

	      pathLen = path.length;
	      if (pathLen > 1 && path.charAt(pathLen - 1) === "/") {
	        path = path.substr(0, pathLen - 1);
	        isSlashDropped = true;
	      }

	      for (i = 0, l = path.length; i < l; i++) {
	        states = recognizeChar(states, path.charAt(i));
	        if (!states.length) {
	          break;
	        }
	      }

	      // END DEBUG GROUP

	      var solutions = [];
	      for (i = 0, l = states.length; i < l; i++) {
	        if (states[i].handlers) {
	          solutions.push(states[i]);
	        }
	      }

	      states = sortSolutions(solutions);

	      var state = solutions[0];

	      if (state && state.handlers) {
	        // if a trailing slash was dropped and a star segment is the last segment
	        // specified, put the trailing slash back
	        if (isSlashDropped && state.regex.source.slice(-5) === "(.+)$") {
	          path = path + "/";
	        }
	        return findHandler(state, path, queryParams);
	      }
	    }
	  };

	  RouteRecognizer.prototype.map = map;

	  var genQuery = RouteRecognizer.prototype.generateQueryString;

	  // export default for holding the Vue reference
	  var exports$1 = {};
	  /**
	   * Warn stuff.
	   *
	   * @param {String} msg
	   */

	  function warn$1(msg) {
	    /* istanbul ignore next */
	    if (typeof console !== 'undefined') {
	      console.error('[vue-router] ' + msg);
	    }
	  }

	  /**
	   * Resolve a relative path.
	   *
	   * @param {String} base
	   * @param {String} relative
	   * @param {Boolean} append
	   * @return {String}
	   */

	  function resolvePath(base, relative, append) {
	    var query = base.match(/(\?.*)$/);
	    if (query) {
	      query = query[1];
	      base = base.slice(0, -query.length);
	    }
	    // a query!
	    if (relative.charAt(0) === '?') {
	      return base + relative;
	    }
	    var stack = base.split('/');
	    // remove trailing segment if:
	    // - not appending
	    // - appending to trailing slash (last segment is empty)
	    if (!append || !stack[stack.length - 1]) {
	      stack.pop();
	    }
	    // resolve relative path
	    var segments = relative.replace(/^\//, '').split('/');
	    for (var i = 0; i < segments.length; i++) {
	      var segment = segments[i];
	      if (segment === '.') {
	        continue;
	      } else if (segment === '..') {
	        stack.pop();
	      } else {
	        stack.push(segment);
	      }
	    }
	    // ensure leading slash
	    if (stack[0] !== '') {
	      stack.unshift('');
	    }
	    return stack.join('/');
	  }

	  /**
	   * Forgiving check for a promise
	   *
	   * @param {Object} p
	   * @return {Boolean}
	   */

	  function isPromise(p) {
	    return p && typeof p.then === 'function';
	  }

	  /**
	   * Retrive a route config field from a component instance
	   * OR a component contructor.
	   *
	   * @param {Function|Vue} component
	   * @param {String} name
	   * @return {*}
	   */

	  function getRouteConfig(component, name) {
	    var options = component && (component.$options || component.options);
	    return options && options.route && options.route[name];
	  }

	  /**
	   * Resolve an async component factory. Have to do a dirty
	   * mock here because of Vue core's internal API depends on
	   * an ID check.
	   *
	   * @param {Object} handler
	   * @param {Function} cb
	   */

	  var resolver = undefined;

	  function resolveAsyncComponent(handler, cb) {
	    if (!resolver) {
	      resolver = {
	        resolve: exports$1.Vue.prototype._resolveComponent,
	        $options: {
	          components: {
	            _: handler.component
	          }
	        }
	      };
	    } else {
	      resolver.$options.components._ = handler.component;
	    }
	    resolver.resolve('_', function (Component) {
	      handler.component = Component;
	      cb(Component);
	    });
	  }

	  /**
	   * Map the dynamic segments in a path to params.
	   *
	   * @param {String} path
	   * @param {Object} params
	   * @param {Object} query
	   */

	  function mapParams(path, params, query) {
	    if (params === undefined) params = {};

	    path = path.replace(/:([^\/]+)/g, function (_, key) {
	      var val = params[key];
	      /* istanbul ignore if */
	      if (!val) {
	        warn$1('param "' + key + '" not found when generating ' + 'path for "' + path + '" with params ' + JSON.stringify(params));
	      }
	      return val || '';
	    });
	    if (query) {
	      path += genQuery(query);
	    }
	    return path;
	  }

	  var hashRE = /#.*$/;

	  var HTML5History = (function () {
	    function HTML5History(_ref) {
	      var root = _ref.root;
	      var onChange = _ref.onChange;
	      babelHelpers.classCallCheck(this, HTML5History);

	      if (root && root !== '/') {
	        // make sure there's the starting slash
	        if (root.charAt(0) !== '/') {
	          root = '/' + root;
	        }
	        // remove trailing slash
	        this.root = root.replace(/\/$/, '');
	        this.rootRE = new RegExp('^\\' + this.root);
	      } else {
	        this.root = null;
	      }
	      this.onChange = onChange;
	      // check base tag
	      var baseEl = document.querySelector('base');
	      this.base = baseEl && baseEl.getAttribute('href');
	    }

	    HTML5History.prototype.start = function start() {
	      var _this = this;

	      this.listener = function (e) {
	        var url = location.pathname + location.search;
	        if (_this.root) {
	          url = url.replace(_this.rootRE, '');
	        }
	        _this.onChange(url, e && e.state, location.hash);
	      };
	      window.addEventListener('popstate', this.listener);
	      this.listener();
	    };

	    HTML5History.prototype.stop = function stop() {
	      window.removeEventListener('popstate', this.listener);
	    };

	    HTML5History.prototype.go = function go(path, replace, append) {
	      var url = this.formatPath(path, append);
	      if (replace) {
	        history.replaceState({}, '', url);
	      } else {
	        // record scroll position by replacing current state
	        history.replaceState({
	          pos: {
	            x: window.pageXOffset,
	            y: window.pageYOffset
	          }
	        }, '', location.href);
	        // then push new state
	        history.pushState({}, '', url);
	      }
	      var hashMatch = path.match(hashRE);
	      var hash = hashMatch && hashMatch[0];
	      path = url
	      // strip hash so it doesn't mess up params
	      .replace(hashRE, '')
	      // remove root before matching
	      .replace(this.rootRE, '');
	      this.onChange(path, null, hash);
	    };

	    HTML5History.prototype.formatPath = function formatPath(path, append) {
	      return path.charAt(0) === '/'
	      // absolute path
	      ? this.root ? this.root + '/' + path.replace(/^\//, '') : path : resolvePath(this.base || location.pathname, path, append);
	    };

	    return HTML5History;
	  })();

	  var HashHistory = (function () {
	    function HashHistory(_ref) {
	      var hashbang = _ref.hashbang;
	      var onChange = _ref.onChange;
	      babelHelpers.classCallCheck(this, HashHistory);

	      this.hashbang = hashbang;
	      this.onChange = onChange;
	    }

	    HashHistory.prototype.start = function start() {
	      var self = this;
	      this.listener = function () {
	        var path = location.hash;
	        var raw = path.replace(/^#!?/, '');
	        // always
	        if (raw.charAt(0) !== '/') {
	          raw = '/' + raw;
	        }
	        var formattedPath = self.formatPath(raw);
	        if (formattedPath !== path) {
	          location.replace(formattedPath);
	          return;
	        }
	        // determine query
	        // note it's possible to have queries in both the actual URL
	        // and the hash fragment itself.
	        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;
	        self.onChange(path.replace(/^#!?/, '') + query);
	      };
	      window.addEventListener('hashchange', this.listener);
	      this.listener();
	    };

	    HashHistory.prototype.stop = function stop() {
	      window.removeEventListener('hashchange', this.listener);
	    };

	    HashHistory.prototype.go = function go(path, replace, append) {
	      path = this.formatPath(path, append);
	      if (replace) {
	        location.replace(path);
	      } else {
	        location.hash = path;
	      }
	    };

	    HashHistory.prototype.formatPath = function formatPath(path, append) {
	      var isAbsoloute = path.charAt(0) === '/';
	      var prefix = '#' + (this.hashbang ? '!' : '');
	      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);
	    };

	    return HashHistory;
	  })();

	  var AbstractHistory = (function () {
	    function AbstractHistory(_ref) {
	      var onChange = _ref.onChange;
	      babelHelpers.classCallCheck(this, AbstractHistory);

	      this.onChange = onChange;
	      this.currentPath = '/';
	    }

	    AbstractHistory.prototype.start = function start() {
	      this.onChange('/');
	    };

	    AbstractHistory.prototype.stop = function stop() {
	      // noop
	    };

	    AbstractHistory.prototype.go = function go(path, replace, append) {
	      path = this.currentPath = this.formatPath(path, append);
	      this.onChange(path);
	    };

	    AbstractHistory.prototype.formatPath = function formatPath(path, append) {
	      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);
	    };

	    return AbstractHistory;
	  })();

	  /**
	   * Determine the reusability of an existing router view.
	   *
	   * @param {Directive} view
	   * @param {Object} handler
	   * @param {Transition} transition
	   */

	  function canReuse(view, handler, transition) {
	    var component = view.childVM;
	    if (!component || !handler) {
	      return false;
	    }
	    // important: check view.Component here because it may
	    // have been changed in activate hook
	    if (view.Component !== handler.component) {
	      return false;
	    }
	    var canReuseFn = getRouteConfig(component, 'canReuse');
	    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {
	      to: transition.to,
	      from: transition.from
	    }) : true; // defaults to true
	  }

	  /**
	   * Check if a component can deactivate.
	   *
	   * @param {Directive} view
	   * @param {Transition} transition
	   * @param {Function} next
	   */

	  function canDeactivate(view, transition, next) {
	    var fromComponent = view.childVM;
	    var hook = getRouteConfig(fromComponent, 'canDeactivate');
	    if (!hook) {
	      next();
	    } else {
	      transition.callHook(hook, fromComponent, next, {
	        expectBoolean: true
	      });
	    }
	  }

	  /**
	   * Check if a component can activate.
	   *
	   * @param {Object} handler
	   * @param {Transition} transition
	   * @param {Function} next
	   */

	  function canActivate(handler, transition, next) {
	    resolveAsyncComponent(handler, function (Component) {
	      // have to check due to async-ness
	      if (transition.aborted) {
	        return;
	      }
	      // determine if this component can be activated
	      var hook = getRouteConfig(Component, 'canActivate');
	      if (!hook) {
	        next();
	      } else {
	        transition.callHook(hook, null, next, {
	          expectBoolean: true
	        });
	      }
	    });
	  }

	  /**
	   * Call deactivate hooks for existing router-views.
	   *
	   * @param {Directive} view
	   * @param {Transition} transition
	   * @param {Function} next
	   */

	  function deactivate(view, transition, next) {
	    var component = view.childVM;
	    var hook = getRouteConfig(component, 'deactivate');
	    if (!hook) {
	      next();
	    } else {
	      transition.callHooks(hook, component, next);
	    }
	  }

	  /**
	   * Activate / switch component for a router-view.
	   *
	   * @param {Directive} view
	   * @param {Transition} transition
	   * @param {Number} depth
	   * @param {Function} [cb]
	   */

	  function activate(view, transition, depth, cb, reuse) {
	    var handler = transition.activateQueue[depth];
	    if (!handler) {
	      saveChildView(view);
	      if (view._bound) {
	        view.setComponent(null);
	      }
	      cb && cb();
	      return;
	    }

	    var Component = view.Component = handler.component;
	    var activateHook = getRouteConfig(Component, 'activate');
	    var dataHook = getRouteConfig(Component, 'data');
	    var waitForData = getRouteConfig(Component, 'waitForData');

	    view.depth = depth;
	    view.activated = false;

	    var component = undefined;
	    var loading = !!(dataHook && !waitForData);

	    // "reuse" is a flag passed down when the parent view is
	    // either reused via keep-alive or as a child of a kept-alive view.
	    // of course we can only reuse if the current kept-alive instance
	    // is of the correct type.
	    reuse = reuse && view.childVM && view.childVM.constructor === Component;

	    if (reuse) {
	      // just reuse
	      component = view.childVM;
	      component.$loadingRouteData = loading;
	    } else {
	      saveChildView(view);

	      // unbuild current component. this step also destroys
	      // and removes all nested child views.
	      view.unbuild(true);

	      // build the new component. this will also create the
	      // direct child view of the current one. it will register
	      // itself as view.childView.
	      component = view.build({
	        _meta: {
	          $loadingRouteData: loading
	        },
	        created: function created() {
	          this._routerView = view;
	        }
	      });

	      // handle keep-alive.
	      // when a kept-alive child vm is restored, we need to
	      // add its cached child views into the router's view list,
	      // and also properly update current view's child view.
	      if (view.keepAlive) {
	        component.$loadingRouteData = loading;
	        var cachedChildView = component._keepAliveRouterView;
	        if (cachedChildView) {
	          view.childView = cachedChildView;
	          component._keepAliveRouterView = null;
	        }
	      }
	    }

	    // cleanup the component in case the transition is aborted
	    // before the component is ever inserted.
	    var cleanup = function cleanup() {
	      component.$destroy();
	    };

	    // actually insert the component and trigger transition
	    var insert = function insert() {
	      if (reuse) {
	        cb && cb();
	        return;
	      }
	      var router = transition.router;
	      if (router._rendered || router._transitionOnLoad) {
	        view.transition(component);
	      } else {
	        // no transition on first render, manual transition
	        /* istanbul ignore if */
	        if (view.setCurrent) {
	          // 0.12 compat
	          view.setCurrent(component);
	        } else {
	          // 1.0
	          view.childVM = component;
	        }
	        component.$before(view.anchor, null, false);
	      }
	      cb && cb();
	    };

	    var afterData = function afterData() {
	      // activate the child view
	      if (view.childView) {
	        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);
	      }
	      insert();
	    };

	    // called after activation hook is resolved
	    var afterActivate = function afterActivate() {
	      view.activated = true;
	      if (dataHook && waitForData) {
	        // wait until data loaded to insert
	        loadData(component, transition, dataHook, afterData, cleanup);
	      } else {
	        // load data and insert at the same time
	        if (dataHook) {
	          loadData(component, transition, dataHook);
	        }
	        afterData();
	      }
	    };

	    if (activateHook) {
	      transition.callHooks(activateHook, component, afterActivate, {
	        cleanup: cleanup,
	        postActivate: true
	      });
	    } else {
	      afterActivate();
	    }
	  }

	  /**
	   * Reuse a view, just reload data if necessary.
	   *
	   * @param {Directive} view
	   * @param {Transition} transition
	   */

	  function reuse(view, transition) {
	    var component = view.childVM;
	    var dataHook = getRouteConfig(component, 'data');
	    if (dataHook) {
	      loadData(component, transition, dataHook);
	    }
	  }

	  /**
	   * Asynchronously load and apply data to component.
	   *
	   * @param {Vue} component
	   * @param {Transition} transition
	   * @param {Function} hook
	   * @param {Function} cb
	   * @param {Function} cleanup
	   */

	  function loadData(component, transition, hook, cb, cleanup) {
	    component.$loadingRouteData = true;
	    transition.callHooks(hook, component, function () {
	      component.$loadingRouteData = false;
	      component.$emit('route-data-loaded', component);
	      cb && cb();
	    }, {
	      cleanup: cleanup,
	      postActivate: true,
	      processData: function processData(data) {
	        // handle promise sugar syntax
	        var promises = [];
	        if (isPlainObject(data)) {
	          Object.keys(data).forEach(function (key) {
	            var val = data[key];
	            if (isPromise(val)) {
	              promises.push(val.then(function (resolvedVal) {
	                component.$set(key, resolvedVal);
	              }));
	            } else {
	              component.$set(key, val);
	            }
	          });
	        }
	        if (promises.length) {
	          return promises[0].constructor.all(promises);
	        }
	      }
	    });
	  }

	  /**
	   * Save the child view for a kept-alive view so that
	   * we can restore it when it is switched back to.
	   *
	   * @param {Directive} view
	   */

	  function saveChildView(view) {
	    if (view.keepAlive && view.childVM && view.childView) {
	      view.childVM._keepAliveRouterView = view.childView;
	    }
	    view.childView = null;
	  }

	  /**
	   * Check plain object.
	   *
	   * @param {*} val
	   */

	  function isPlainObject(val) {
	    return Object.prototype.toString.call(val) === '[object Object]';
	  }

	  /**
	   * A RouteTransition object manages the pipeline of a
	   * router-view switching process. This is also the object
	   * passed into user route hooks.
	   *
	   * @param {Router} router
	   * @param {Route} to
	   * @param {Route} from
	   */

	  var RouteTransition = (function () {
	    function RouteTransition(router, to, from) {
	      babelHelpers.classCallCheck(this, RouteTransition);

	      this.router = router;
	      this.to = to;
	      this.from = from;
	      this.next = null;
	      this.aborted = false;
	      this.done = false;
	    }

	    /**
	     * Abort current transition and return to previous location.
	     */

	    RouteTransition.prototype.abort = function abort() {
	      if (!this.aborted) {
	        this.aborted = true;
	        // if the root path throws an error during validation
	        // on initial load, it gets caught in an infinite loop.
	        var abortingOnLoad = !this.from.path && this.to.path === '/';
	        if (!abortingOnLoad) {
	          this.router.replace(this.from.path || '/');
	        }
	      }
	    };

	    /**
	     * Abort current transition and redirect to a new location.
	     *
	     * @param {String} path
	     */

	    RouteTransition.prototype.redirect = function redirect(path) {
	      if (!this.aborted) {
	        this.aborted = true;
	        if (typeof path === 'string') {
	          path = mapParams(path, this.to.params, this.to.query);
	        } else {
	          path.params = path.params || this.to.params;
	          path.query = path.query || this.to.query;
	        }
	        this.router.replace(path);
	      }
	    };

	    /**
	     * A router view transition's pipeline can be described as
	     * follows, assuming we are transitioning from an existing
	     * <router-view> chain [Component A, Component B] to a new
	     * chain [Component A, Component C]:
	     *
	     *  A    A
	     *  | => |
	     *  B    C
	     *
	     * 1. Reusablity phase:
	     *   -> canReuse(A, A)
	     *   -> canReuse(B, C)
	     *   -> determine new queues:
	     *      - deactivation: [B]
	     *      - activation: [C]
	     *
	     * 2. Validation phase:
	     *   -> canDeactivate(B)
	     *   -> canActivate(C)
	     *
	     * 3. Activation phase:
	     *   -> deactivate(B)
	     *   -> activate(C)
	     *
	     * Each of these steps can be asynchronous, and any
	     * step can potentially abort the transition.
	     *
	     * @param {Function} cb
	     */

	    RouteTransition.prototype.start = function start(cb) {
	      var transition = this;

	      // determine the queue of views to deactivate
	      var deactivateQueue = [];
	      var view = this.router._rootView;
	      while (view) {
	        deactivateQueue.unshift(view);
	        view = view.childView;
	      }
	      var reverseDeactivateQueue = deactivateQueue.slice().reverse();

	      // determine the queue of route handlers to activate
	      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {
	        return match.handler;
	      });

	      // 1. Reusability phase
	      var i = undefined,
	          reuseQueue = undefined;
	      for (i = 0; i < reverseDeactivateQueue.length; i++) {
	        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {
	          break;
	        }
	      }
	      if (i > 0) {
	        reuseQueue = reverseDeactivateQueue.slice(0, i);
	        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();
	        activateQueue = activateQueue.slice(i);
	      }

	      // 2. Validation phase
	      transition.runQueue(deactivateQueue, canDeactivate, function () {
	        transition.runQueue(activateQueue, canActivate, function () {
	          transition.runQueue(deactivateQueue, deactivate, function () {
	            // 3. Activation phase

	            // Update router current route
	            transition.router._onTransitionValidated(transition);

	            // trigger reuse for all reused views
	            reuseQueue && reuseQueue.forEach(function (view) {
	              return reuse(view, transition);
	            });

	            // the root of the chain that needs to be replaced
	            // is the top-most non-reusable view.
	            if (deactivateQueue.length) {
	              var _view = deactivateQueue[deactivateQueue.length - 1];
	              var depth = reuseQueue ? reuseQueue.length : 0;
	              activate(_view, transition, depth, cb);
	            } else {
	              cb();
	            }
	          });
	        });
	      });
	    };

	    /**
	     * Asynchronously and sequentially apply a function to a
	     * queue.
	     *
	     * @param {Array} queue
	     * @param {Function} fn
	     * @param {Function} cb
	     */

	    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {
	      var transition = this;
	      step(0);
	      function step(index) {
	        if (index >= queue.length) {
	          cb();
	        } else {
	          fn(queue[index], transition, function () {
	            step(index + 1);
	          });
	        }
	      }
	    };

	    /**
	     * Call a user provided route transition hook and handle
	     * the response (e.g. if the user returns a promise).
	     *
	     * If the user neither expects an argument nor returns a
	     * promise, the hook is assumed to be synchronous.
	     *
	     * @param {Function} hook
	     * @param {*} [context]
	     * @param {Function} [cb]
	     * @param {Object} [options]
	     *                 - {Boolean} expectBoolean
	     *                 - {Boolean} postActive
	     *                 - {Function} processData
	     *                 - {Function} cleanup
	     */

	    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {
	      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

	      var _ref$expectBoolean = _ref.expectBoolean;
	      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;
	      var _ref$postActivate = _ref.postActivate;
	      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;
	      var processData = _ref.processData;
	      var cleanup = _ref.cleanup;

	      var transition = this;
	      var nextCalled = false;

	      // abort the transition
	      var abort = function abort() {
	        cleanup && cleanup();
	        transition.abort();
	      };

	      // handle errors
	      var onError = function onError(err) {
	        postActivate ? next() : abort();
	        if (err && !transition.router._suppress) {
	          warn$1('Uncaught error during transition: ');
	          throw err instanceof Error ? err : new Error(err);
	        }
	      };

	      // since promise swallows errors, we have to
	      // throw it in the next tick...
	      var onPromiseError = function onPromiseError(err) {
	        try {
	          onError(err);
	        } catch (e) {
	          setTimeout(function () {
	            throw e;
	          }, 0);
	        }
	      };

	      // advance the transition to the next step
	      var next = function next() {
	        if (nextCalled) {
	          warn$1('transition.next() should be called only once.');
	          return;
	        }
	        nextCalled = true;
	        if (transition.aborted) {
	          cleanup && cleanup();
	          return;
	        }
	        cb && cb();
	      };

	      var nextWithBoolean = function nextWithBoolean(res) {
	        if (typeof res === 'boolean') {
	          res ? next() : abort();
	        } else if (isPromise(res)) {
	          res.then(function (ok) {
	            ok ? next() : abort();
	          }, onPromiseError);
	        } else if (!hook.length) {
	          next();
	        }
	      };

	      var nextWithData = function nextWithData(data) {
	        var res = undefined;
	        try {
	          res = processData(data);
	        } catch (err) {
	          return onError(err);
	        }
	        if (isPromise(res)) {
	          res.then(next, onPromiseError);
	        } else {
	          next();
	        }
	      };

	      // expose a clone of the transition object, so that each
	      // hook gets a clean copy and prevent the user from
	      // messing with the internals.
	      var exposed = {
	        to: transition.to,
	        from: transition.from,
	        abort: abort,
	        next: processData ? nextWithData : next,
	        redirect: function redirect() {
	          transition.redirect.apply(transition, arguments);
	        }
	      };

	      // actually call the hook
	      var res = undefined;
	      try {
	        res = hook.call(context, exposed);
	      } catch (err) {
	        return onError(err);
	      }

	      if (expectBoolean) {
	        // boolean hooks
	        nextWithBoolean(res);
	      } else if (isPromise(res)) {
	        // promise
	        if (processData) {
	          res.then(nextWithData, onPromiseError);
	        } else {
	          res.then(next, onPromiseError);
	        }
	      } else if (processData && isPlainOjbect(res)) {
	        // data promise sugar
	        nextWithData(res);
	      } else if (!hook.length) {
	        next();
	      }
	    };

	    /**
	     * Call a single hook or an array of async hooks in series.
	     *
	     * @param {Array} hooks
	     * @param {*} context
	     * @param {Function} cb
	     * @param {Object} [options]
	     */

	    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {
	      var _this = this;

	      if (Array.isArray(hooks)) {
	        this.runQueue(hooks, function (hook, _, next) {
	          if (!_this.aborted) {
	            _this.callHook(hook, context, next, options);
	          }
	        }, cb);
	      } else {
	        this.callHook(hooks, context, cb, options);
	      }
	    };

	    return RouteTransition;
	  })();

	  function isPlainOjbect(val) {
	    return Object.prototype.toString.call(val) === '[object Object]';
	  }

	  function toArray(val) {
	    return val ? Array.prototype.slice.call(val) : [];
	  }

	  var internalKeysRE = /^(component|subRoutes|fullPath)$/;

	  /**
	   * Route Context Object
	   *
	   * @param {String} path
	   * @param {Router} router
	   */

	  var Route = function Route(path, router) {
	    var _this = this;

	    babelHelpers.classCallCheck(this, Route);

	    var matched = router._recognizer.recognize(path);
	    if (matched) {
	      // copy all custom fields from route configs
	      [].forEach.call(matched, function (match) {
	        for (var key in match.handler) {
	          if (!internalKeysRE.test(key)) {
	            _this[key] = match.handler[key];
	          }
	        }
	      });
	      // set query and params
	      this.query = matched.queryParams;
	      this.params = [].reduce.call(matched, function (prev, cur) {
	        if (cur.params) {
	          for (var key in cur.params) {
	            prev[key] = cur.params[key];
	          }
	        }
	        return prev;
	      }, {});
	    }
	    // expose path and router
	    this.path = path;
	    // for internal use
	    this.matched = matched || router._notFoundHandler;
	    // internal reference to router
	    Object.defineProperty(this, 'router', {
	      enumerable: false,
	      value: router
	    });
	    // Important: freeze self to prevent observation
	    Object.freeze(this);
	  };

	  function applyOverride (Vue) {
	    var _Vue$util = Vue.util;
	    var extend = _Vue$util.extend;
	    var isArray = _Vue$util.isArray;
	    var defineReactive = _Vue$util.defineReactive;

	    // override Vue's init and destroy process to keep track of router instances
	    var init = Vue.prototype._init;
	    Vue.prototype._init = function (options) {
	      options = options || {};
	      var root = options._parent || options.parent || this;
	      var router = root.$router;
	      var route = root.$route;
	      if (router) {
	        // expose router
	        this.$router = router;
	        router._children.push(this);
	        /* istanbul ignore if */
	        if (this._defineMeta) {
	          // 0.12
	          this._defineMeta('$route', route);
	        } else {
	          // 1.0
	          defineReactive(this, '$route', route);
	        }
	      }
	      init.call(this, options);
	    };

	    var destroy = Vue.prototype._destroy;
	    Vue.prototype._destroy = function () {
	      if (!this._isBeingDestroyed && this.$router) {
	        this.$router._children.$remove(this);
	      }
	      destroy.apply(this, arguments);
	    };

	    // 1.0 only: enable route mixins
	    var strats = Vue.config.optionMergeStrategies;
	    var hooksToMergeRE = /^(data|activate|deactivate)$/;

	    if (strats) {
	      strats.route = function (parentVal, childVal) {
	        if (!childVal) return parentVal;
	        if (!parentVal) return childVal;
	        var ret = {};
	        extend(ret, parentVal);
	        for (var key in childVal) {
	          var a = ret[key];
	          var b = childVal[key];
	          // for data, activate and deactivate, we need to merge them into
	          // arrays similar to lifecycle hooks.
	          if (a && hooksToMergeRE.test(key)) {
	            ret[key] = (isArray(a) ? a : [a]).concat(b);
	          } else {
	            ret[key] = b;
	          }
	        }
	        return ret;
	      };
	    }
	  }

	  function View (Vue) {

	    var _ = Vue.util;
	    var componentDef =
	    // 0.12
	    Vue.directive('_component') ||
	    // 1.0
	    Vue.internalDirectives.component;
	    // <router-view> extends the internal component directive
	    var viewDef = _.extend({}, componentDef);

	    // with some overrides
	    _.extend(viewDef, {

	      _isRouterView: true,

	      bind: function bind() {
	        var route = this.vm.$route;
	        /* istanbul ignore if */
	        if (!route) {
	          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');
	          return;
	        }
	        // force dynamic directive so v-component doesn't
	        // attempt to build right now
	        this._isDynamicLiteral = true;
	        // finally, init by delegating to v-component
	        componentDef.bind.call(this);

	        // locate the parent view
	        var parentView = undefined;
	        var parent = this.vm;
	        while (parent) {
	          if (parent._routerView) {
	            parentView = parent._routerView;
	            break;
	          }
	          parent = parent.$parent;
	        }
	        if (parentView) {
	          // register self as a child of the parent view,
	          // instead of activating now. This is so that the
	          // child's activate hook is called after the
	          // parent's has resolved.
	          this.parentView = parentView;
	          parentView.childView = this;
	        } else {
	          // this is the root view!
	          var router = route.router;
	          router._rootView = this;
	        }

	        // handle late-rendered view
	        // two possibilities:
	        // 1. root view rendered after transition has been
	        //    validated;
	        // 2. child view rendered after parent view has been
	        //    activated.
	        var transition = route.router._currentTransition;
	        if (!parentView && transition.done || parentView && parentView.activated) {
	          var depth = parentView ? parentView.depth + 1 : 0;
	          activate(this, transition, depth);
	        }
	      },

	      unbind: function unbind() {
	        if (this.parentView) {
	          this.parentView.childView = null;
	        }
	        componentDef.unbind.call(this);
	      }
	    });

	    Vue.elementDirective('router-view', viewDef);
	  }

	  var trailingSlashRE = /\/$/;
	  var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;
	  var queryStringRE = /\?.*$/;

	  // install v-link, which provides navigation support for
	  // HTML5 history mode
	  function Link (Vue) {
	    var _Vue$util = Vue.util;
	    var _bind = _Vue$util.bind;
	    var isObject = _Vue$util.isObject;
	    var addClass = _Vue$util.addClass;
	    var removeClass = _Vue$util.removeClass;

	    var onPriority = Vue.directive('on').priority;
	    var LINK_UPDATE = '__vue-router-link-update__';

	    var activeId = 0;

	    Vue.directive('link-active', {
	      priority: 9999,
	      bind: function bind() {
	        var _this = this;

	        var id = String(activeId++);
	        // collect v-links contained within this element.
	        // we need do this here before the parent-child relationship
	        // gets messed up by terminal directives (if, for, components)
	        var childLinks = this.el.querySelectorAll('[v-link]');
	        for (var i = 0, l = childLinks.length; i < l; i++) {
	          var link = childLinks[i];
	          var existingId = link.getAttribute(LINK_UPDATE);
	          var value = existingId ? existingId + ',' + id : id;
	          // leave a mark on the link element which can be persisted
	          // through fragment clones.
	          link.setAttribute(LINK_UPDATE, value);
	        }
	        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {
	          if (link.activeIds.indexOf(id) > -1) {
	            link.updateClasses(path, _this.el);
	          }
	        });
	      },
	      unbind: function unbind() {
	        this.vm.$off(LINK_UPDATE, this.cb);
	      }
	    });

	    Vue.directive('link', {
	      priority: onPriority - 2,

	      bind: function bind() {
	        var vm = this.vm;
	        /* istanbul ignore if */
	        if (!vm.$route) {
	          warn$1('v-link can only be used inside a router-enabled app.');
	          return;
	        }
	        this.router = vm.$route.router;
	        // update things when the route changes
	        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));
	        // check v-link-active ids
	        var activeIds = this.el.getAttribute(LINK_UPDATE);
	        if (activeIds) {
	          this.el.removeAttribute(LINK_UPDATE);
	          this.activeIds = activeIds.split(',');
	        }
	        // no need to handle click if link expects to be opened
	        // in a new window/tab.
	        /* istanbul ignore if */
	        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {
	          return;
	        }
	        // handle click
	        this.handler = _bind(this.onClick, this);
	        this.el.addEventListener('click', this.handler);
	      },

	      update: function update(target) {
	        this.target = target;
	        if (isObject(target)) {
	          this.append = target.append;
	          this.exact = target.exact;
	          this.prevActiveClass = this.activeClass;
	          this.activeClass = target.activeClass;
	        }
	        this.onRouteUpdate(this.vm.$route);
	      },

	      onClick: function onClick(e) {
	        // don't redirect with control keys
	        /* istanbul ignore if */
	        if (e.metaKey || e.ctrlKey || e.shiftKey) return;
	        // don't redirect when preventDefault called
	        /* istanbul ignore if */
	        if (e.defaultPrevented) return;
	        // don't redirect on right click
	        /* istanbul ignore if */
	        if (e.button !== 0) return;

	        var target = this.target;
	        if (target) {
	          // v-link with expression, just go
	          e.preventDefault();
	          this.router.go(target);
	        } else {
	          // no expression, delegate for an <a> inside
	          var el = e.target;
	          while (el.tagName !== 'A' && el !== this.el) {
	            el = el.parentNode;
	          }
	          if (el.tagName === 'A' && sameOrigin(el)) {
	            e.preventDefault();
	            var path = el.pathname;
	            if (this.router.history.root) {
	              path = path.replace(this.router.history.rootRE, '');
	            }
	            this.router.go({
	              path: path,
	              replace: target && target.replace,
	              append: target && target.append
	            });
	          }
	        }
	      },

	      onRouteUpdate: function onRouteUpdate(route) {
	        // router.stringifyPath is dependent on current route
	        // and needs to be called again whenver route changes.
	        var newPath = this.router.stringifyPath(this.target);
	        if (this.path !== newPath) {
	          this.path = newPath;
	          this.updateActiveMatch();
	          this.updateHref();
	        }
	        if (this.activeIds) {
	          this.vm.$emit(LINK_UPDATE, this, route.path);
	        } else {
	          this.updateClasses(route.path, this.el);
	        }
	      },

	      updateActiveMatch: function updateActiveMatch() {
	        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\$&') + '(\\/|$)') : null;
	      },

	      updateHref: function updateHref() {
	        if (this.el.tagName !== 'A') {
	          return;
	        }
	        var path = this.path;
	        var router = this.router;
	        var isAbsolute = path.charAt(0) === '/';
	        // do not format non-hash relative paths
	        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;
	        if (href) {
	          this.el.href = href;
	        } else {
	          this.el.removeAttribute('href');
	        }
	      },

	      updateClasses: function updateClasses(path, el) {
	        var activeClass = this.activeClass || this.router._linkActiveClass;
	        // clear old class
	        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {
	          toggleClasses(el, this.prevActiveClass, removeClass);
	        }
	        // remove query string before matching
	        var dest = this.path.replace(queryStringRE, '');
	        path = path.replace(queryStringRE, '');
	        // add new class
	        if (this.exact) {
	          if (dest === path ||
	          // also allow additional trailing slash
	          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {
	            toggleClasses(el, activeClass, addClass);
	          } else {
	            toggleClasses(el, activeClass, removeClass);
	          }
	        } else {
	          if (this.activeRE && this.activeRE.test(path)) {
	            toggleClasses(el, activeClass, addClass);
	          } else {
	            toggleClasses(el, activeClass, removeClass);
	          }
	        }
	      },

	      unbind: function unbind() {
	        this.el.removeEventListener('click', this.handler);
	        this.unwatch && this.unwatch();
	      }
	    });

	    function sameOrigin(link) {
	      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;
	    }

	    // this function is copied from v-bind:class implementation until
	    // we properly expose it...
	    function toggleClasses(el, key, fn) {
	      key = key.trim();
	      if (key.indexOf(' ') === -1) {
	        fn(el, key);
	        return;
	      }
	      var keys = key.split(/\s+/);
	      for (var i = 0, l = keys.length; i < l; i++) {
	        fn(el, keys[i]);
	      }
	    }
	  }

	  var historyBackends = {
	    abstract: AbstractHistory,
	    hash: HashHistory,
	    html5: HTML5History
	  };

	  // late bind during install
	  var Vue = undefined;

	  /**
	   * Router constructor
	   *
	   * @param {Object} [options]
	   */

	  var Router = (function () {
	    function Router() {
	      var _this = this;

	      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	      var _ref$hashbang = _ref.hashbang;
	      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;
	      var _ref$abstract = _ref.abstract;
	      var abstract = _ref$abstract === undefined ? false : _ref$abstract;
	      var _ref$history = _ref.history;
	      var history = _ref$history === undefined ? false : _ref$history;
	      var _ref$saveScrollPosition = _ref.saveScrollPosition;
	      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;
	      var _ref$transitionOnLoad = _ref.transitionOnLoad;
	      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;
	      var _ref$suppressTransitionError = _ref.suppressTransitionError;
	      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;
	      var _ref$root = _ref.root;
	      var root = _ref$root === undefined ? null : _ref$root;
	      var _ref$linkActiveClass = _ref.linkActiveClass;
	      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;
	      babelHelpers.classCallCheck(this, Router);

	      /* istanbul ignore if */
	      if (!Router.installed) {
	        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');
	      }

	      // Vue instances
	      this.app = null;
	      this._children = [];

	      // route recognizer
	      this._recognizer = new RouteRecognizer();
	      this._guardRecognizer = new RouteRecognizer();

	      // state
	      this._started = false;
	      this._startCb = null;
	      this._currentRoute = {};
	      this._currentTransition = null;
	      this._previousTransition = null;
	      this._notFoundHandler = null;
	      this._notFoundRedirect = null;
	      this._beforeEachHooks = [];
	      this._afterEachHooks = [];

	      // trigger transition on initial render?
	      this._rendered = false;
	      this._transitionOnLoad = transitionOnLoad;

	      // history mode
	      this._root = root;
	      this._abstract = abstract;
	      this._hashbang = hashbang;

	      // check if HTML5 history is available
	      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;
	      this._history = history && hasPushState;
	      this._historyFallback = history && !hasPushState;

	      // create history object
	      var inBrowser = Vue.util.inBrowser;
	      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';

	      var History = historyBackends[this.mode];
	      this.history = new History({
	        root: root,
	        hashbang: this._hashbang,
	        onChange: function onChange(path, state, anchor) {
	          _this._match(path, state, anchor);
	        }
	      });

	      // other options
	      this._saveScrollPosition = saveScrollPosition;
	      this._linkActiveClass = linkActiveClass;
	      this._suppress = suppressTransitionError;
	    }

	    /**
	     * Allow directly passing components to a route
	     * definition.
	     *
	     * @param {String} path
	     * @param {Object} handler
	     */

	    // API ===================================================

	    /**
	    * Register a map of top-level paths.
	    *
	    * @param {Object} map
	    */

	    Router.prototype.map = function map(_map) {
	      for (var route in _map) {
	        this.on(route, _map[route]);
	      }
	      return this;
	    };

	    /**
	     * Register a single root-level path
	     *
	     * @param {String} rootPath
	     * @param {Object} handler
	     *                 - {String} component
	     *                 - {Object} [subRoutes]
	     *                 - {Boolean} [forceRefresh]
	     *                 - {Function} [before]
	     *                 - {Function} [after]
	     */

	    Router.prototype.on = function on(rootPath, handler) {
	      if (rootPath === '*') {
	        this._notFound(handler);
	      } else {
	        this._addRoute(rootPath, handler, []);
	      }
	      return this;
	    };

	    /**
	     * Set redirects.
	     *
	     * @param {Object} map
	     */

	    Router.prototype.redirect = function redirect(map) {
	      for (var path in map) {
	        this._addRedirect(path, map[path]);
	      }
	      return this;
	    };

	    /**
	     * Set aliases.
	     *
	     * @param {Object} map
	     */

	    Router.prototype.alias = function alias(map) {
	      for (var path in map) {
	        this._addAlias(path, map[path]);
	      }
	      return this;
	    };

	    /**
	     * Set global before hook.
	     *
	     * @param {Function} fn
	     */

	    Router.prototype.beforeEach = function beforeEach(fn) {
	      this._beforeEachHooks.push(fn);
	      return this;
	    };

	    /**
	     * Set global after hook.
	     *
	     * @param {Function} fn
	     */

	    Router.prototype.afterEach = function afterEach(fn) {
	      this._afterEachHooks.push(fn);
	      return this;
	    };

	    /**
	     * Navigate to a given path.
	     * The path can be an object describing a named path in
	     * the format of { name: '...', params: {}, query: {}}
	     * The path is assumed to be already decoded, and will
	     * be resolved against root (if provided)
	     *
	     * @param {String|Object} path
	     * @param {Boolean} [replace]
	     */

	    Router.prototype.go = function go(path) {
	      var replace = false;
	      var append = false;
	      if (Vue.util.isObject(path)) {
	        replace = path.replace;
	        append = path.append;
	      }
	      path = this.stringifyPath(path);
	      if (path) {
	        this.history.go(path, replace, append);
	      }
	    };

	    /**
	     * Short hand for replacing current path
	     *
	     * @param {String} path
	     */

	    Router.prototype.replace = function replace(path) {
	      if (typeof path === 'string') {
	        path = { path: path };
	      }
	      path.replace = true;
	      this.go(path);
	    };

	    /**
	     * Start the router.
	     *
	     * @param {VueConstructor} App
	     * @param {String|Element} container
	     * @param {Function} [cb]
	     */

	    Router.prototype.start = function start(App, container, cb) {
	      /* istanbul ignore if */
	      if (this._started) {
	        warn$1('already started.');
	        return;
	      }
	      this._started = true;
	      this._startCb = cb;
	      if (!this.app) {
	        /* istanbul ignore if */
	        if (!App || !container) {
	          throw new Error('Must start vue-router with a component and a ' + 'root container.');
	        }
	        /* istanbul ignore if */
	        if (App instanceof Vue) {
	          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');
	        }
	        this._appContainer = container;
	        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);
	        // give it a name for better debugging
	        Ctor.options.name = Ctor.options.name || 'RouterApp';
	      }

	      // handle history fallback in browsers that do not
	      // support HTML5 history API
	      if (this._historyFallback) {
	        var _location = window.location;
	        var _history = new HTML5History({ root: this._root });
	        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;
	        if (path && path !== '/') {
	          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);
	          return;
	        }
	      }

	      this.history.start();
	    };

	    /**
	     * Stop listening to route changes.
	     */

	    Router.prototype.stop = function stop() {
	      this.history.stop();
	      this._started = false;
	    };

	    /**
	     * Normalize named route object / string paths into
	     * a string.
	     *
	     * @param {Object|String|Number} path
	     * @return {String}
	     */

	    Router.prototype.stringifyPath = function stringifyPath(path) {
	      var generatedPath = '';
	      if (path && typeof path === 'object') {
	        if (path.name) {
	          var extend = Vue.util.extend;
	          var currentParams = this._currentTransition && this._currentTransition.to.params;
	          var targetParams = path.params || {};
	          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;
	          generatedPath = encodeURI(this._recognizer.generate(path.name, params));
	        } else if (path.path) {
	          generatedPath = encodeURI(path.path);
	        }
	        if (path.query) {
	          // note: the generated query string is pre-URL-encoded by the recognizer
	          var query = this._recognizer.generateQueryString(path.query);
	          if (generatedPath.indexOf('?') > -1) {
	            generatedPath += '&' + query.slice(1);
	          } else {
	            generatedPath += query;
	          }
	        }
	      } else {
	        generatedPath = encodeURI(path ? path + '' : '');
	      }
	      return generatedPath;
	    };

	    // Internal methods ======================================

	    /**
	    * Add a route containing a list of segments to the internal
	    * route recognizer. Will be called recursively to add all
	    * possible sub-routes.
	    *
	    * @param {String} path
	    * @param {Object} handler
	    * @param {Array} segments
	    */

	    Router.prototype._addRoute = function _addRoute(path, handler, segments) {
	      guardComponent(path, handler);
	      handler.path = path;
	      handler.fullPath = (segments.reduce(function (path, segment) {
	        return path + segment.path;
	      }, '') + path).replace('//', '/');
	      segments.push({
	        path: path,
	        handler: handler
	      });
	      this._recognizer.add(segments, {
	        as: handler.name
	      });
	      // add sub routes
	      if (handler.subRoutes) {
	        for (var subPath in handler.subRoutes) {
	          // recursively walk all sub routes
	          this._addRoute(subPath, handler.subRoutes[subPath],
	          // pass a copy in recursion to avoid mutating
	          // across branches
	          segments.slice());
	        }
	      }
	    };

	    /**
	     * Set the notFound route handler.
	     *
	     * @param {Object} handler
	     */

	    Router.prototype._notFound = function _notFound(handler) {
	      guardComponent('*', handler);
	      this._notFoundHandler = [{ handler: handler }];
	    };

	    /**
	     * Add a redirect record.
	     *
	     * @param {String} path
	     * @param {String} redirectPath
	     */

	    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {
	      if (path === '*') {
	        this._notFoundRedirect = redirectPath;
	      } else {
	        this._addGuard(path, redirectPath, this.replace);
	      }
	    };

	    /**
	     * Add an alias record.
	     *
	     * @param {String} path
	     * @param {String} aliasPath
	     */

	    Router.prototype._addAlias = function _addAlias(path, aliasPath) {
	      this._addGuard(path, aliasPath, this._match);
	    };

	    /**
	     * Add a path guard.
	     *
	     * @param {String} path
	     * @param {String} mappedPath
	     * @param {Function} handler
	     */

	    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {
	      var _this2 = this;

	      this._guardRecognizer.add([{
	        path: path,
	        handler: function handler(match, query) {
	          var realPath = mapParams(mappedPath, match.params, query);
	          _handler.call(_this2, realPath);
	        }
	      }]);
	    };

	    /**
	     * Check if a path matches any redirect records.
	     *
	     * @param {String} path
	     * @return {Boolean} - if true, will skip normal match.
	     */

	    Router.prototype._checkGuard = function _checkGuard(path) {
	      var matched = this._guardRecognizer.recognize(path, true);
	      if (matched) {
	        matched[0].handler(matched[0], matched.queryParams);
	        return true;
	      } else if (this._notFoundRedirect) {
	        matched = this._recognizer.recognize(path);
	        if (!matched) {
	          this.replace(this._notFoundRedirect);
	          return true;
	        }
	      }
	    };

	    /**
	     * Match a URL path and set the route context on vm,
	     * triggering view updates.
	     *
	     * @param {String} path
	     * @param {Object} [state]
	     * @param {String} [anchor]
	     */

	    Router.prototype._match = function _match(path, state, anchor) {
	      var _this3 = this;

	      if (this._checkGuard(path)) {
	        return;
	      }

	      var currentRoute = this._currentRoute;
	      var currentTransition = this._currentTransition;

	      if (currentTransition) {
	        if (currentTransition.to.path === path) {
	          // do nothing if we have an active transition going to the same path
	          return;
	        } else if (currentRoute.path === path) {
	          // We are going to the same path, but we also have an ongoing but
	          // not-yet-validated transition. Abort that transition and reset to
	          // prev transition.
	          currentTransition.aborted = true;
	          this._currentTransition = this._prevTransition;
	          return;
	        } else {
	          // going to a totally different path. abort ongoing transition.
	          currentTransition.aborted = true;
	        }
	      }

	      // construct new route and transition context
	      var route = new Route(path, this);
	      var transition = new RouteTransition(this, route, currentRoute);

	      // current transition is updated right now.
	      // however, current route will only be updated after the transition has
	      // been validated.
	      this._prevTransition = currentTransition;
	      this._currentTransition = transition;

	      if (!this.app) {
	        (function () {
	          // initial render
	          var router = _this3;
	          _this3.app = new _this3._appConstructor({
	            el: _this3._appContainer,
	            created: function created() {
	              this.$router = router;
	            },
	            _meta: {
	              $route: route
	            }
	          });
	        })();
	      }

	      // check global before hook
	      var beforeHooks = this._beforeEachHooks;
	      var startTransition = function startTransition() {
	        transition.start(function () {
	          _this3._postTransition(route, state, anchor);
	        });
	      };

	      if (beforeHooks.length) {
	        transition.runQueue(beforeHooks, function (hook, _, next) {
	          if (transition === _this3._currentTransition) {
	            transition.callHook(hook, null, next, {
	              expectBoolean: true
	            });
	          }
	        }, startTransition);
	      } else {
	        startTransition();
	      }

	      if (!this._rendered && this._startCb) {
	        this._startCb.call(null);
	      }

	      // HACK:
	      // set rendered to true after the transition start, so
	      // that components that are acitvated synchronously know
	      // whether it is the initial render.
	      this._rendered = true;
	    };

	    /**
	     * Set current to the new transition.
	     * This is called by the transition object when the
	     * validation of a route has succeeded.
	     *
	     * @param {Transition} transition
	     */

	    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {
	      // set current route
	      var route = this._currentRoute = transition.to;
	      // update route context for all children
	      if (this.app.$route !== route) {
	        this.app.$route = route;
	        this._children.forEach(function (child) {
	          child.$route = route;
	        });
	      }
	      // call global after hook
	      if (this._afterEachHooks.length) {
	        this._afterEachHooks.forEach(function (hook) {
	          return hook.call(null, {
	            to: transition.to,
	            from: transition.from
	          });
	        });
	      }
	      this._currentTransition.done = true;
	    };

	    /**
	     * Handle stuff after the transition.
	     *
	     * @param {Route} route
	     * @param {Object} [state]
	     * @param {String} [anchor]
	     */

	    Router.prototype._postTransition = function _postTransition(route, state, anchor) {
	      // handle scroll positions
	      // saved scroll positions take priority
	      // then we check if the path has an anchor
	      var pos = state && state.pos;
	      if (pos && this._saveScrollPosition) {
	        Vue.nextTick(function () {
	          window.scrollTo(pos.x, pos.y);
	        });
	      } else if (anchor) {
	        Vue.nextTick(function () {
	          var el = document.getElementById(anchor.slice(1));
	          if (el) {
	            window.scrollTo(window.scrollX, el.offsetTop);
	          }
	        });
	      }
	    };

	    return Router;
	  })();

	  function guardComponent(path, handler) {
	    var comp = handler.component;
	    if (Vue.util.isPlainObject(comp)) {
	      comp = handler.component = Vue.extend(comp);
	    }
	    /* istanbul ignore if */
	    if (typeof comp !== 'function') {
	      handler.component = null;
	      warn$1('invalid component for route "' + path + '".');
	    }
	  }

	  /* Installation */

	  Router.installed = false;

	  /**
	   * Installation interface.
	   * Install the necessary directives.
	   */

	  Router.install = function (externalVue) {
	    /* istanbul ignore if */
	    if (Router.installed) {
	      warn$1('already installed.');
	      return;
	    }
	    Vue = externalVue;
	    applyOverride(Vue);
	    View(Vue);
	    Link(Vue);
	    exports$1.Vue = Vue;
	    Router.installed = true;
	  };

	  // auto install
	  /* istanbul ignore if */
	  if (typeof window !== 'undefined' && window.Vue) {
	    window.Vue.use(Router);
	  }

	  return Router;

	}));

/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	function default_1(value, defaultValue) {
	    if (!value) {
	        return defaultValue;
	    }
	    return value;
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = default_1;


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Index_page_1 = __webpack_require__(11);
	var AggregateRoot_page_1 = __webpack_require__(15);
	var Entity_page_1 = __webpack_require__(50);
	var CreateEntity_page_1 = __webpack_require__(66);
	var EditEntity_page_1 = __webpack_require__(78);
	var EditSubEntity_page_1 = __webpack_require__(79);
	var CreateSubEntity_page_1 = __webpack_require__(82);
	var EntityTree_page_1 = __webpack_require__(83);
	var ui_page_1 = __webpack_require__(95);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
	    '/': {
	        name: 'index',
	        component: Index_page_1.default
	    },
	    '/entities/:name/': {
	        name: 'entities',
	        component: AggregateRoot_page_1.default
	    },
	    '/entity/:hierarchies/': {
	        name: 'entity',
	        component: Entity_page_1.default
	    },
	    '/create/:name/': {
	        name: 'createEntity',
	        component: CreateEntity_page_1.default
	    },
	    '/edit/:hierarchies/': {
	        name: 'editEntity',
	        component: EditEntity_page_1.default
	    },
	    '/create-sub/:hierarchies/:name': {
	        name: 'createSubEntity',
	        component: CreateSubEntity_page_1.default
	    },
	    '/edit-sub/:hierarchies/': {
	        name: 'editSubEntity',
	        component: EditSubEntity_page_1.default
	    },
	    '/tree/:name': {
	        name: 'tree',
	        component: EntityTree_page_1.default
	    },
	    '/ui/:name': {
	        name: 'ui',
	        component: ui_page_1.default
	    }
	};


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Navigator_component_1 = __webpack_require__(12);
	var Vue = __webpack_require__(6);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(14),
	    data: function () {
	        return {};
	    },
	    components: {
	        Navigator: Navigator_component_1.default
	    },
	});


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(13),
	    data: function () {
	        return {};
	    },
	    props: {
	        navigator: []
	    }
	});


/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = "<ol class=\"breadcrumb\">\r\n    <li><a v-link=\"{name: 'index'}\"><i class=\"fa fa-dashboard\"></i> 首页</a></li>\r\n    <li v-for=\"item in navigator\"><a v-link=\"item.route\">{{item.label}}</a>\r\n    </li>\r\n</ol>";

/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = "<div class=\"content-wrapper\">\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n        <h1>\r\n            空白页面演示\r\n            <small>最基本的结构模板</small>\r\n        </h1>\r\n        <navigator :navigator=\"$root.navigator\"></navigator>\r\n    </section>\r\n\r\n    <!-- Main content -->\r\n    <section class=\"content\">\r\n\r\n        <!-- Default box -->\r\n        <div class=\"box\">\r\n            <div class=\"box-header with-border\">\r\n                <h3 class=\"box-title\">标题</h3>\r\n            </div>\r\n            <div class=\"box-body\">\r\n                欢迎使用 Dddml 后台\r\n            </div>\r\n            <!-- /.box-body -->\r\n            <div class=\"box-footer\">\r\n                脚部\r\n            </div>\r\n            <!-- /.box-footer-->\r\n        </div>\r\n        <!-- /.box -->\r\n\r\n    </section>\r\n    <!-- /.content -->\r\n</div>\r\n\r\n";

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Table_1 = __webpack_require__(16);
	var Navigator_component_1 = __webpack_require__(12);
	var Alert_component_1 = __webpack_require__(20);
	var Vue = __webpack_require__(6);
	var EntityCollection_1 = __webpack_require__(22);
	var TableModelFactory_1 = __webpack_require__(35);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(49),
	    data: function () {
	        return {
	            table: null,
	            createBtn: null,
	            navigator: null,
	            showError: false,
	            errorMessage: "",
	        };
	    },
	    components: {
	        VTable: Table_1.default,
	        Navigator: Navigator_component_1.default,
	        Alert: Alert_component_1.default
	    },
	    computed: {
	        title: function () {
	            return this.$route.params.name;
	        }
	    },
	    route: {
	        data: function () {
	            var _this = this;
	            console.info('AggregateRoot.page');
	            console.log(this.$route);
	            var entityCollectionName = this.$route.params.name;
	            this.$http.get(entityCollectionName).then(function (response) {
	                console.log(response);
	                var entityCollection = EntityCollection_1.default.create(entityCollectionName, null, response.data);
	                console.log(entityCollection);
	                _this.table = TableModelFactory_1.default.create(entityCollection);
	                _this.createBtn = {
	                    styleClasses: 'btn btn-block btn-warning',
	                    link: {
	                        label: '创建',
	                        route: {
	                            name: 'createEntity',
	                            params: {
	                                name: entityCollection.name,
	                            }
	                        },
	                    },
	                };
	                _this.navigator = NavigatorModelFactory_1.default
	                    .createEntities(_this.$route.params.name);
	            }, function (response) {
	                _this.showError = true;
	                _this.errorMessage = response.statusText;
	            });
	        }
	    },
	    ready: function () {
	        this.$watch('$route.params.name', function () {
	            this.table = null;
	            this.navigator = null;
	            this.createBtn = null;
	            this.showError = false;
	            this.errorMessage = '';
	        });
	    }
	});


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	var ButtonGroup_component_1 = __webpack_require__(17);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(19),
	    data: function () {
	        return {};
	    },
	    props: {
	        tableData: Object
	    },
	    components: {
	        ButtonGroup: ButtonGroup_component_1.default,
	    }
	});


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(18),
	    data: function () {
	        return {};
	    },
	    props: {
	        buttonGroup: Object
	    },
	    components: {}
	});


/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = "<a v-for=\"button in buttonGroup.buttons\" v-link=\"button.link.route\" class=\"{{button.styleClasses}}\">\r\n    {{button.link.label}}\r\n</a>";

/***/ },
/* 19 */
/***/ function(module, exports) {

	module.exports = "<table class=\"table table-bordered\">\r\n    <thead>\r\n    <tr>\r\n        <th v-for=\"column in tableData.columns\">\r\n            <span :style=\"{display:'inline-block',width:column.width}\">{{column.name}}</span>\r\n        </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr v-for=\"row in tableData.rows\">\r\n        <td v-for=\"field in row.fields\">\r\n            <span v-if=\"field.type=='buttonGroup'\">\r\n                <button-group :button-group=\"field\"></button-group>\r\n            </span>\r\n            <span v-else>{{field.data}}</span>\r\n        </td>\r\n    </tr>\r\n    </tbody>\r\n</table>";

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(21),
	    data: function () {
	        return {};
	    },
	    props: {
	        show: false,
	        type: 'alert-danger',
	        title: '',
	        content: '',
	    }
	});


/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = "<div v-show=\"show\" class=\"alert {{type}} alert-dismissible\">\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n    <h4><i class=\"icon fa fa-ban\"></i> {{title}}</h4>\r\n    {{content}}\r\n</div>";

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Entity_1 = __webpack_require__(23);
	var AggregatesMetadata_1 = __webpack_require__(24);
	var EntityHierarchies_1 = __webpack_require__(34);
	var ValueObject_1 = __webpack_require__(31);
	var EntityCollection = (function () {
	    function EntityCollection(name, hierarchies, data) {
	        if (hierarchies === void 0) { hierarchies = null; }
	        if (data === void 0) { data = []; }
	        this.data = data;
	        this._hierarchies = hierarchies;
	        var path = hierarchies ? hierarchies.metadataPath : [];
	        path.push(_.upperFirst(name));
	        this.metadata = AggregatesMetadata_1.default
	            .getInstance()
	            .getMetadataByHierarchies(path);
	    }
	    Object.defineProperty(EntityCollection.prototype, "name", {
	        get: function () {
	            return this.metadata.plural;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityCollection.prototype, "entityName", {
	        get: function () {
	            return this.metadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityCollection.prototype, "label", {
	        get: function () {
	            return this.metadata.collectionLabel;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityCollection.prototype, "hierarchies", {
	        get: function () {
	            return this._hierarchies;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    EntityCollection.create = function (name, hierarchies, data) {
	        if (hierarchies === void 0) { hierarchies = null; }
	        if (data === void 0) { data = []; }
	        if (!hierarchies) {
	            hierarchies = new EntityHierarchies_1.default();
	        }
	        return new EntityCollection(_.upperFirst(name), hierarchies, data);
	    };
	    /**
	     * 获得实体
	     *
	     * @param hierarchies 层次
	     * @param absolute 是否从根层次开始索引，否的话，从当前位置开始索引
	     */
	    EntityCollection.prototype.findEntity = function (hierarchies, absolute) {
	        if (absolute === void 0) { absolute = true; }
	    };
	    /**
	     * 获取下级实体
	     *
	     * @param id
	     */
	    EntityCollection.prototype.subEntity = function (id) {
	        return _.find(this.all(), function (entity) {
	            return entity.getStringId(false) == id;
	        });
	    };
	    EntityCollection.prototype.findEntities = function (hierarchies, name, absolute) {
	        if (absolute === void 0) { absolute = true; }
	    };
	    EntityCollection.prototype.subEntities = function (name) {
	    };
	    EntityCollection.prototype.all = function () {
	        var entities = [];
	        for (var _i = 0, _a = this.data; _i < _a.length; _i++) {
	            var entity = _a[_i];
	            var id = entity[this.metadata.id.name];
	            if (_.isObject(id)) {
	                id = new ValueObject_1.default(this.metadata.id.type, id);
	                id = id.toString();
	            }
	            var hierarchies = this.hierarchies.concat([{
	                    name: this.metadata.plural,
	                    id: id
	                }]);
	            entities.push(new Entity_1.default(hierarchies, entity));
	        }
	        return entities;
	    };
	    return EntityCollection;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EntityCollection;


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var EntityCollection_1 = __webpack_require__(22);
	var AggregatesMetadata_1 = __webpack_require__(24);
	var Property_1 = __webpack_require__(30);
	var Entity = (function () {
	    function Entity(hierarchies, data) {
	        if (data === void 0) { data = {}; }
	        this._rawData = data;
	        // 获得源数据
	        this._metadata = AggregatesMetadata_1.default
	            .getInstance()
	            .getMetadataByHierarchies(hierarchies.metadataPath);
	        this._hierarchies = hierarchies;
	    }
	    Object.defineProperty(Entity.prototype, "name", {
	        get: function () {
	            return this._metadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "label", {
	        get: function () {
	            return this._metadata.label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "hierarchies", {
	        get: function () {
	            return this._hierarchies;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "isRoot", {
	        get: function () {
	            return this._hierarchies.hierarchies.length === 1 ? true : false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "id", {
	        get: function () {
	            return new Property_1.default(this._metadata.id, this._rawData[this.idName]);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "rawId", {
	        get: function () {
	            return this._rawData[this.idName];
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "idName", {
	        get: function () {
	            return this._metadata.idName;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "metadata", {
	        get: function () {
	            return this._metadata;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Entity.prototype.property = function (name, value) {
	        if (value) {
	            this._rawData[name] = value;
	        }
	        else {
	            return new Property_1.default(this._metadata.property(name), this._rawData[name]);
	        }
	    };
	    Object.defineProperty(Entity.prototype, "properties", {
	        get: function () {
	            var _this = this;
	            return _.map(this.metadata.properties, function (property) {
	                return new Property_1.default(property, _this._rawData[property.name]);
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Entity.prototype, "topLevelEntity", {
	        /**
	         * 获得顶层实体
	         * @return {Entity}
	         */
	        get: function () {
	            var _this = this;
	            var data = {
	                version: this.rawData['version'],
	            };
	            data[this.idName] = this.rawData[this.idName];
	            _.map(this.properties, function (property) {
	                data[property.name] = _this.rawData[property.name];
	            });
	            delete data['createdBy'];
	            delete data['createdAt'];
	            delete data['updatedBy'];
	            delete data['updatedAt'];
	            return new Entity(this._hierarchies, data);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Entity.prototype.entities = function (name) {
	        if (name) {
	            var entities = void 0;
	            if (entities = this._rawData[_.lowerFirst(name)]) {
	                return new EntityCollection_1.default(name, this.hierarchies, entities);
	            }
	            return null;
	        }
	        else {
	            var _this_1 = this;
	            return _.map(this.metadata.subEntityPluralNames, function (name) {
	                return _this_1.entities(name);
	            });
	        }
	    };
	    Object.defineProperty(Entity.prototype, "rawData", {
	        get: function () {
	            return this._rawData;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Entity.prototype.getStringId = function (encode) {
	        if (encode === void 0) { encode = true; }
	        var id = "";
	        if (this.id.isBuiltInType) {
	            id = this.id.data;
	        }
	        else if (this.id.isMap) {
	            id = this.id.data;
	        }
	        else if (this.id.isValueObject) {
	            id = this.id.data.toString();
	        }
	        return encode ? encodeURI(id) : id;
	    };
	    return Entity;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Entity;


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var aggregates_1 = __webpack_require__(25);
	var EntityMetadataCollection_1 = __webpack_require__(26);
	var AggregatesMetadata = (function (_super) {
	    __extends(AggregatesMetadata, _super);
	    function AggregatesMetadata() {
	        _super.apply(this, arguments);
	    }
	    /**
	     * 获取元数据的实例 - 单例模式
	     * @return {AggregatesMetadata}
	     */
	    AggregatesMetadata.getInstance = function () {
	        if (!AggregatesMetadata.metadata) {
	            AggregatesMetadata.metadata = new AggregatesMetadata(aggregates_1.AGGREGATES_METADATA);
	        }
	        return AggregatesMetadata.metadata;
	    };
	    /**
	     * 返回层次结构中的最后一个实体的元数据
	     * ['Cars', 'Wheels'] 返回 Wheels， ['Cars'] 返回 Cars
	     * @param hierarchies
	     * @return {EntityMetadata}
	     */
	    AggregatesMetadata.prototype.getMetadataByHierarchies = function (hierarchies) {
	        if (_.isEmpty(hierarchies)) {
	            throw new Error('Hierarchies 不能为空');
	        }
	        var entityMetadata = this.entity(hierarchies.shift());
	        for (var _i = 0, hierarchies_1 = hierarchies; _i < hierarchies_1.length; _i++) {
	            var name_1 = hierarchies_1[_i];
	            entityMetadata = entityMetadata.entities.entity(name_1);
	        }
	        return entityMetadata;
	    };
	    return AggregatesMetadata;
	}(EntityMetadataCollection_1.default));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AggregatesMetadata;


/***/ },
/* 25 */
/***/ function(module, exports) {

	"use strict";
	exports.AGGREGATES_METADATA = [
	    {
	        "name": "Car",
	        "plural": "Cars",
	        "label": "Car",
	        "collectionLabel": "Cars",
	        "id": {
	            "name": "id",
	            "type": "string"
	        },
	        "properties": [
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }],
	        "entities": [
	            {
	                "name": "Wheel",
	                "plural": "Wheels",
	                "label": "Wheel",
	                "collectionLabel": "Wheels",
	                "id": {
	                    "name": "wheelId",
	                    "type": "string",
	                    enumValuesKey: "WheelId"
	                },
	                "properties": [{
	                        "name": "version",
	                        "type": "long"
	                    },
	                    {
	                        "name": "createdBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "createdAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "updatedBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "updatedAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "active",
	                        "type": "bool"
	                    },
	                    {
	                        "name": "deleted",
	                        "type": "bool"
	                    }]
	            },
	            {
	                "name": "Tire",
	                "plural": "Tires",
	                "label": "Tire",
	                "collectionLabel": "Tires",
	                "id": {
	                    "name": "tireId",
	                    "type": "string"
	                },
	                "properties": [{
	                        "name": "version",
	                        "type": "long"
	                    },
	                    {
	                        "name": "createdBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "createdAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "updatedBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "updatedAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "active",
	                        "type": "bool"
	                    },
	                    {
	                        "name": "deleted",
	                        "type": "bool"
	                    }],
	                "entities": [
	                    {
	                        "name": "Position",
	                        "plural": "Positions",
	                        "label": "Position",
	                        "collectionLabel": "Positions",
	                        "id": {
	                            "name": "id",
	                            "type": "long"
	                        },
	                        "properties": [{
	                                "name": "timePeriod",
	                                "type": "TimePeriod"
	                            },
	                            {
	                                "name": "mileAge",
	                                "type": "long"
	                            },
	                            {
	                                "name": "wheelId",
	                                "type": "string",
	                                enumValuesKey: "WheelId",
	                                referenceType: "Wheel"
	                            },
	                            {
	                                "name": "version",
	                                "type": "long"
	                            },
	                            {
	                                "name": "createdBy",
	                                "type": "string"
	                            },
	                            {
	                                "name": "createdAt",
	                                "type": "DateTime"
	                            },
	                            {
	                                "name": "updatedBy",
	                                "type": "string"
	                            },
	                            {
	                                "name": "updatedAt",
	                                "type": "DateTime"
	                            },
	                            {
	                                "name": "active",
	                                "type": "bool"
	                            },
	                            {
	                                "name": "deleted",
	                                "type": "bool"
	                            }]
	                    }
	                ]
	            }
	        ]
	    },
	    {
	        "name": "Garden",
	        "plural": "Gardens",
	        "label": "Garden",
	        "collectionLabel": "Gardens",
	        "id": {
	            "name": "id",
	            "type": "string"
	        },
	        "properties": [
	            {
	                "name": "address",
	                "type": "string"
	            },
	            {
	                "name": "city",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }],
	        "entities": [
	            {
	                "name": "Building",
	                "plural": "Buildings",
	                "label": "Building",
	                "collectionLabel": "Buildings",
	                "id": {
	                    "name": "buildingNumber",
	                    "type": "string"
	                },
	                "properties": [{
	                        "name": "name",
	                        "type": "string"
	                    },
	                    {
	                        "name": "description",
	                        "type": "string"
	                    },
	                    {
	                        "name": "version",
	                        "type": "long"
	                    },
	                    {
	                        "name": "createdBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "createdAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "updatedBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "updatedAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "active",
	                        "type": "bool"
	                    },
	                    {
	                        "name": "deleted",
	                        "type": "bool"
	                    }],
	                "entities": [
	                    {
	                        "name": "Room",
	                        "plural": "Rooms",
	                        "label": "Room",
	                        "collectionLabel": "Rooms",
	                        "id": {
	                            "name": "roomNumber",
	                            "type": "string"
	                        },
	                        "properties": [{
	                                "name": "name",
	                                "type": "string"
	                            },
	                            {
	                                "name": "description",
	                                "type": "string"
	                            },
	                            {
	                                "name": "version",
	                                "type": "long"
	                            },
	                            {
	                                "name": "createdBy",
	                                "type": "string"
	                            },
	                            {
	                                "name": "createdAt",
	                                "type": "DateTime"
	                            },
	                            {
	                                "name": "updatedBy",
	                                "type": "string"
	                            },
	                            {
	                                "name": "updatedAt",
	                                "type": "DateTime"
	                            },
	                            {
	                                "name": "active",
	                                "type": "bool"
	                            },
	                            {
	                                "name": "deleted",
	                                "type": "bool"
	                            }]
	                    }
	                ]
	            }
	        ]
	    },
	    {
	        "name": "Image",
	        "plural": "Images",
	        "label": "Image",
	        "collectionLabel": "Images",
	        "id": {
	            "name": "id",
	            "type": "long"
	        },
	        "properties": [
	            {
	                "name": "imageName",
	                "type": "string"
	            },
	            {
	                "name": "imagePath",
	                "type": "string"
	            },
	            {
	                "name": "imageType",
	                "type": "string",
	                enumValuesKey: "ImageType"
	            },
	            {
	                "name": "isDefault",
	                "type": "bool"
	            },
	            {
	                "name": "sortNumber",
	                "type": "int"
	            },
	            {
	                "name": "refererId",
	                "type": "long"
	            },
	            {
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "Organization",
	        "plural": "Organizations",
	        "label": "Organization",
	        "collectionLabel": "Organizations",
	        "id": {
	            "name": "organizationId",
	            "type": "string"
	        },
	        "properties": [{
	                "name": "name",
	                "type": "string"
	            },
	            {
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "type",
	                "type": "string"
	            },
	            {
	                "name": "isSummary",
	                "type": "bool"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "OrganizationStructureType",
	        "plural": "OrganizationStructureTypes",
	        "label": "Organization Structure Type",
	        "collectionLabel": "Organization Structure Types",
	        "id": {
	            "name": "id",
	            "type": "string"
	        },
	        "properties": [{
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "OrganizationStructure",
	        "plural": "OrganizationStructures",
	        "label": "Organization Structure",
	        "collectionLabel": "Organization Structures",
	        "id": {
	            "name": "id",
	            "type": "OrganizationStructureId"
	        },
	        "properties": [{
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "Package",
	        "plural": "Packages",
	        "label": "Package",
	        "collectionLabel": "Packages",
	        "id": {
	            "name": "packageId",
	            "type": "long"
	        },
	        "properties": [{
	                "name": "rowVersion",
	                "type": "long"
	            },
	            {
	                "name": "packageType",
	                "type": "int",
	                enumValuesKey: "PackageType"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "serialNumber",
	                "type": "string"
	            },
	            {
	                "name": "materialNumber",
	                "type": "string"
	            },
	            {
	                "name": "customerNumber",
	                "type": "string"
	            },
	            {
	                "name": "workOrderNumber",
	                "type": "string"
	            },
	            {
	                "name": "lotNumber",
	                "type": "string"
	            },
	            {
	                "name": "rank",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "string"
	            },
	            {
	                "name": "quantity",
	                "type": "int"
	            },
	            {
	                "name": "isMixed",
	                "type": "bool"
	            }],
	        "entities": [
	            {
	                "name": "PackagePart",
	                "plural": "PackageParts",
	                "label": "Package Part",
	                "collectionLabel": "Package Parts",
	                "id": {
	                    "name": "partId",
	                    "type": "long"
	                },
	                "properties": [{
	                        "name": "rowVersion",
	                        "type": "long"
	                    },
	                    {
	                        "name": "packagePartType",
	                        "type": "int",
	                        enumValuesKey: "PackagePartType"
	                    },
	                    {
	                        "name": "parentPackagePartId",
	                        "type": "long",
	                        referenceType: "PackagePart"
	                    },
	                    {
	                        "name": "createdBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "createdAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "updatedBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "updatedAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "active",
	                        "type": "bool"
	                    },
	                    {
	                        "name": "deleted",
	                        "type": "bool"
	                    },
	                    {
	                        "name": "serialNumber",
	                        "type": "string"
	                    },
	                    {
	                        "name": "materialNumber",
	                        "type": "string"
	                    },
	                    {
	                        "name": "customerNumber",
	                        "type": "string"
	                    },
	                    {
	                        "name": "workOrderNumber",
	                        "type": "string"
	                    },
	                    {
	                        "name": "lotNumber",
	                        "type": "string"
	                    },
	                    {
	                        "name": "rank",
	                        "type": "string"
	                    },
	                    {
	                        "name": "version",
	                        "type": "string"
	                    },
	                    {
	                        "name": "quantity",
	                        "type": "int"
	                    },
	                    {
	                        "name": "isMixed",
	                        "type": "bool"
	                    }]
	            }
	        ]
	    },
	    {
	        "name": "Person",
	        "plural": "People",
	        "label": "Person",
	        "collectionLabel": "People",
	        "id": {
	            "name": "personalName",
	            "type": "PersonalName"
	        },
	        "properties": [{
	                "name": "refToEntInAnotherAggInst",
	                "type": "PackagePartId",
	                referenceType: "PackagePart"
	            },
	            {
	                "name": "birthDate",
	                "type": "DateTime"
	            },
	            {
	                "name": "loves",
	                "type": "PersonalName",
	                referenceType: "Person"
	            },
	            {
	                "name": "emergencyContact",
	                "type": "Contact"
	            },
	            {
	                "name": "email",
	                "type": "string"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }],
	        "entities": [
	            {
	                "name": "YearPlan",
	                "plural": "YearPlans",
	                "label": "Year Plan",
	                "collectionLabel": "Year Plans",
	                "id": {
	                    "name": "year",
	                    "type": "int"
	                },
	                "properties": [{
	                        "name": "description",
	                        "type": "string"
	                    },
	                    {
	                        "name": "createdBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "updatedBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "version",
	                        "type": "long"
	                    },
	                    {
	                        "name": "createdAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "updatedAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "active",
	                        "type": "bool"
	                    },
	                    {
	                        "name": "deleted",
	                        "type": "bool"
	                    }],
	                "entities": [
	                    {
	                        "name": "MonthPlan",
	                        "plural": "MonthPlans",
	                        "label": "Month Plan",
	                        "collectionLabel": "Month Plans",
	                        "id": {
	                            "name": "month",
	                            "type": "int"
	                        },
	                        "properties": [{
	                                "name": "description",
	                                "type": "string"
	                            },
	                            {
	                                "name": "createdBy",
	                                "type": "string"
	                            },
	                            {
	                                "name": "updatedBy",
	                                "type": "string"
	                            },
	                            {
	                                "name": "version",
	                                "type": "long"
	                            },
	                            {
	                                "name": "createdAt",
	                                "type": "DateTime"
	                            },
	                            {
	                                "name": "updatedAt",
	                                "type": "DateTime"
	                            },
	                            {
	                                "name": "active",
	                                "type": "bool"
	                            },
	                            {
	                                "name": "deleted",
	                                "type": "bool"
	                            }],
	                        "entities": [
	                            {
	                                "name": "DayPlan",
	                                "plural": "DayPlans",
	                                "label": "Day Plan",
	                                "collectionLabel": "Day Plans",
	                                "id": {
	                                    "name": "day",
	                                    "type": "int"
	                                },
	                                "properties": [{
	                                        "name": "description",
	                                        "type": "string"
	                                    },
	                                    {
	                                        "name": "createdBy",
	                                        "type": "string"
	                                    },
	                                    {
	                                        "name": "updatedBy",
	                                        "type": "string"
	                                    },
	                                    {
	                                        "name": "version",
	                                        "type": "long"
	                                    },
	                                    {
	                                        "name": "createdAt",
	                                        "type": "DateTime"
	                                    },
	                                    {
	                                        "name": "updatedAt",
	                                        "type": "DateTime"
	                                    },
	                                    {
	                                        "name": "active",
	                                        "type": "bool"
	                                    },
	                                    {
	                                        "name": "deleted",
	                                        "type": "bool"
	                                    }]
	                            }
	                        ]
	                    }
	                ]
	            }
	        ]
	    },
	    {
	        "name": "Team",
	        "plural": "Teams",
	        "label": "Team",
	        "collectionLabel": "Teams",
	        "id": {
	            "name": "teamName",
	            "type": "string"
	        },
	        "properties": [{
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "players",
	                "itemType": "PersonalName"
	            },
	            {
	                "name": "mascots",
	                "itemType": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "Warehouse",
	        "plural": "Warehouses",
	        "label": "Warehouse",
	        "collectionLabel": "Warehouses",
	        "id": {
	            "name": "warehouseId",
	            "type": "string"
	        },
	        "properties": [{
	                "name": "name",
	                "type": "string"
	            },
	            {
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "isInTransit",
	                "type": "bool"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "Locator",
	        "plural": "Locators",
	        "label": "Locator",
	        "collectionLabel": "Locators",
	        "id": {
	            "name": "locatorId",
	            "type": "string"
	        },
	        "properties": [{
	                "name": "warehouseId",
	                "type": "string",
	                referenceType: "Warehouse"
	            },
	            {
	                "name": "parentLocatorId",
	                "type": "string"
	            },
	            {
	                "name": "locatorType",
	                "type": "string"
	            },
	            {
	                "name": "priorityNumber",
	                "type": "string"
	            },
	            {
	                "name": "isDefault",
	                "type": "bool"
	            },
	            {
	                "name": "x",
	                "type": "string"
	            },
	            {
	                "name": "y",
	                "type": "string"
	            },
	            {
	                "name": "z",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "Storage",
	        "plural": "Storages",
	        "label": "Storage",
	        "collectionLabel": "Storages",
	        "id": {
	            "name": "storageId",
	            "type": "StorageId"
	        },
	        "properties": [{
	                "name": "quantity",
	                "type": "int"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "MovementTransaction",
	        "plural": "MovementTransactions",
	        "label": "Movement Transaction",
	        "collectionLabel": "Movement Transactions",
	        "id": {
	            "name": "movementTransactionId",
	            "type": "string"
	        },
	        "properties": [{
	                "name": "sourceLocatorId",
	                "type": "string",
	                referenceType: "Locator"
	            },
	            {
	                "name": "targetLocatorId",
	                "type": "string",
	                referenceType: "Locator"
	            },
	            {
	                "name": "productId",
	                "type": "string"
	            },
	            {
	                "name": "quantity",
	                "type": "int"
	            },
	            {
	                "name": "isInSameHouse",
	                "type": "bool"
	            },
	            {
	                "name": "processState",
	                "type": "string"
	            },
	            {
	                "name": "errorName",
	                "type": "string"
	            },
	            {
	                "name": "message",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            }],
	        "entities": [
	            {
	                "name": "MovementEntry",
	                "plural": "MovementEntries",
	                "label": "Movement Entry",
	                "collectionLabel": "Movement Entries",
	                "id": {
	                    "name": "entryName",
	                    "type": "string"
	                },
	                "properties": [{
	                        "name": "locatorId",
	                        "type": "string",
	                        referenceType: "Locator"
	                    },
	                    {
	                        "name": "productId",
	                        "type": "string"
	                    },
	                    {
	                        "name": "quantity",
	                        "type": "int"
	                    },
	                    {
	                        "name": "storageQuantity",
	                        "type": "int"
	                    },
	                    {
	                        "name": "taskState",
	                        "type": "string"
	                    },
	                    {
	                        "name": "storageVersion",
	                        "type": "long"
	                    },
	                    {
	                        "name": "taskCommandId",
	                        "type": "string"
	                    },
	                    {
	                        "name": "errorName",
	                        "type": "string"
	                    },
	                    {
	                        "name": "version",
	                        "type": "long"
	                    },
	                    {
	                        "name": "createdBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "createdAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "updatedBy",
	                        "type": "string"
	                    },
	                    {
	                        "name": "updatedAt",
	                        "type": "DateTime"
	                    },
	                    {
	                        "name": "active",
	                        "type": "bool"
	                    },
	                    {
	                        "name": "deleted",
	                        "type": "bool"
	                    }]
	            }
	        ]
	    },
	    {
	        "name": "WheelMvo",
	        "plural": "WheelMvos",
	        "label": "Wheel Mvo",
	        "collectionLabel": "Wheel Mvos",
	        "id": {
	            "name": "carWheelId",
	            "type": "CarWheelId"
	        },
	        "properties": [{
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "carVersion",
	                "type": "long"
	            },
	            {
	                "name": "carCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "carCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "carUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "carUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "carActive",
	                "type": "bool"
	            },
	            {
	                "name": "carDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "TireMvo",
	        "plural": "TireMvos",
	        "label": "Tire Mvo",
	        "collectionLabel": "Tire Mvos",
	        "id": {
	            "name": "carTireId",
	            "type": "CarTireId"
	        },
	        "properties": [{
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "carVersion",
	                "type": "long"
	            },
	            {
	                "name": "carCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "carCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "carUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "carUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "carActive",
	                "type": "bool"
	            },
	            {
	                "name": "carDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "PositionMvo",
	        "plural": "PositionMvos",
	        "label": "Position Mvo",
	        "collectionLabel": "Position Mvos",
	        "id": {
	            "name": "carPositionId",
	            "type": "CarPositionId"
	        },
	        "properties": [{
	                "name": "timePeriod",
	                "type": "TimePeriod"
	            },
	            {
	                "name": "mileAge",
	                "type": "long"
	            },
	            {
	                "name": "wheelId",
	                "type": "string",
	                enumValuesKey: "WheelId"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "tireVersion",
	                "type": "long"
	            },
	            {
	                "name": "tireCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "tireCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "tireUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "tireUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "tireActive",
	                "type": "bool"
	            },
	            {
	                "name": "tireDeleted",
	                "type": "bool"
	            },
	            {
	                "name": "carVersion",
	                "type": "long"
	            },
	            {
	                "name": "carCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "carCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "carUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "carUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "carActive",
	                "type": "bool"
	            },
	            {
	                "name": "carDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "BuildingMvo",
	        "plural": "BuildingMvos",
	        "label": "Building Mvo",
	        "collectionLabel": "Building Mvos",
	        "id": {
	            "name": "buildingId",
	            "type": "BuildingId"
	        },
	        "properties": [{
	                "name": "name",
	                "type": "string"
	            },
	            {
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "gardenAddress",
	                "type": "string"
	            },
	            {
	                "name": "gardenCity",
	                "type": "string"
	            },
	            {
	                "name": "gardenVersion",
	                "type": "long"
	            },
	            {
	                "name": "gardenCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "gardenCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "gardenUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "gardenUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "gardenActive",
	                "type": "bool"
	            },
	            {
	                "name": "gardenDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "RoomMvo",
	        "plural": "RoomMvos",
	        "label": "Room Mvo",
	        "collectionLabel": "Room Mvos",
	        "id": {
	            "name": "roomId",
	            "type": "RoomId"
	        },
	        "properties": [{
	                "name": "name",
	                "type": "string"
	            },
	            {
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "buildingName",
	                "type": "string"
	            },
	            {
	                "name": "buildingDescription",
	                "type": "string"
	            },
	            {
	                "name": "buildingVersion",
	                "type": "long"
	            },
	            {
	                "name": "buildingCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "buildingCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "buildingUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "buildingUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "buildingActive",
	                "type": "bool"
	            },
	            {
	                "name": "buildingDeleted",
	                "type": "bool"
	            },
	            {
	                "name": "gardenAddress",
	                "type": "string"
	            },
	            {
	                "name": "gardenCity",
	                "type": "string"
	            },
	            {
	                "name": "gardenVersion",
	                "type": "long"
	            },
	            {
	                "name": "gardenCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "gardenCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "gardenUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "gardenUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "gardenActive",
	                "type": "bool"
	            },
	            {
	                "name": "gardenDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "PackagePartMvo",
	        "plural": "PackagePartMvos",
	        "label": "Package Part Mvo",
	        "collectionLabel": "Package Part Mvos",
	        "id": {
	            "name": "packagePartId",
	            "type": "PackagePartId"
	        },
	        "properties": [{
	                "name": "rowVersion",
	                "type": "long"
	            },
	            {
	                "name": "packagePartType",
	                "type": "int",
	                enumValuesKey: "PackagePartType"
	            },
	            {
	                "name": "parentPackagePartId",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "serialNumber",
	                "type": "string"
	            },
	            {
	                "name": "materialNumber",
	                "type": "string"
	            },
	            {
	                "name": "customerNumber",
	                "type": "string"
	            },
	            {
	                "name": "workOrderNumber",
	                "type": "string"
	            },
	            {
	                "name": "lotNumber",
	                "type": "string"
	            },
	            {
	                "name": "rank",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "string"
	            },
	            {
	                "name": "quantity",
	                "type": "int"
	            },
	            {
	                "name": "isMixed",
	                "type": "bool"
	            },
	            {
	                "name": "packageRowVersion",
	                "type": "long"
	            },
	            {
	                "name": "packagePackageType",
	                "type": "int",
	                enumValuesKey: "PackageType"
	            },
	            {
	                "name": "packageCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "packageCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "packageUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "packageUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "packageActive",
	                "type": "bool"
	            },
	            {
	                "name": "packageDeleted",
	                "type": "bool"
	            },
	            {
	                "name": "packageSerialNumber",
	                "type": "string"
	            },
	            {
	                "name": "packageMaterialNumber",
	                "type": "string"
	            },
	            {
	                "name": "packageCustomerNumber",
	                "type": "string"
	            },
	            {
	                "name": "packageWorkOrderNumber",
	                "type": "string"
	            },
	            {
	                "name": "packageLotNumber",
	                "type": "string"
	            },
	            {
	                "name": "packageRank",
	                "type": "string"
	            },
	            {
	                "name": "packageVersion",
	                "type": "string"
	            },
	            {
	                "name": "packageQuantity",
	                "type": "int"
	            },
	            {
	                "name": "packageIsMixed",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "YearPlanMvo",
	        "plural": "YearPlanMvos",
	        "label": "Year Plan Mvo",
	        "collectionLabel": "Year Plan Mvos",
	        "id": {
	            "name": "yearPlanId",
	            "type": "YearPlanId"
	        },
	        "properties": [{
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "personRefToEntInAnotherAggInst",
	                "type": "PackagePartId"
	            },
	            {
	                "name": "personBirthDate",
	                "type": "DateTime"
	            },
	            {
	                "name": "personLoves",
	                "type": "PersonalName"
	            },
	            {
	                "name": "personEmergencyContact",
	                "type": "Contact"
	            },
	            {
	                "name": "personEmail",
	                "type": "string"
	            },
	            {
	                "name": "personCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "personUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "personVersion",
	                "type": "long"
	            },
	            {
	                "name": "personCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "personUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "personActive",
	                "type": "bool"
	            },
	            {
	                "name": "personDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "MonthPlanMvo",
	        "plural": "MonthPlanMvos",
	        "label": "Month Plan Mvo",
	        "collectionLabel": "Month Plan Mvos",
	        "id": {
	            "name": "monthPlanId",
	            "type": "MonthPlanId"
	        },
	        "properties": [{
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "yearPlanDescription",
	                "type": "string"
	            },
	            {
	                "name": "yearPlanCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "yearPlanUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "yearPlanVersion",
	                "type": "long"
	            },
	            {
	                "name": "yearPlanCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "yearPlanUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "yearPlanActive",
	                "type": "bool"
	            },
	            {
	                "name": "yearPlanDeleted",
	                "type": "bool"
	            },
	            {
	                "name": "personRefToEntInAnotherAggInst",
	                "type": "PackagePartId"
	            },
	            {
	                "name": "personBirthDate",
	                "type": "DateTime"
	            },
	            {
	                "name": "personLoves",
	                "type": "PersonalName"
	            },
	            {
	                "name": "personEmergencyContact",
	                "type": "Contact"
	            },
	            {
	                "name": "personEmail",
	                "type": "string"
	            },
	            {
	                "name": "personCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "personUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "personVersion",
	                "type": "long"
	            },
	            {
	                "name": "personCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "personUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "personActive",
	                "type": "bool"
	            },
	            {
	                "name": "personDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "DayPlanMvo",
	        "plural": "DayPlanMvos",
	        "label": "Day Plan Mvo",
	        "collectionLabel": "Day Plan Mvos",
	        "id": {
	            "name": "dayPlanId",
	            "type": "DayPlanId"
	        },
	        "properties": [{
	                "name": "description",
	                "type": "string"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "monthPlanDescription",
	                "type": "string"
	            },
	            {
	                "name": "monthPlanCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "monthPlanUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "monthPlanVersion",
	                "type": "long"
	            },
	            {
	                "name": "monthPlanCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "monthPlanUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "monthPlanActive",
	                "type": "bool"
	            },
	            {
	                "name": "monthPlanDeleted",
	                "type": "bool"
	            },
	            {
	                "name": "yearPlanDescription",
	                "type": "string"
	            },
	            {
	                "name": "yearPlanCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "yearPlanUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "yearPlanVersion",
	                "type": "long"
	            },
	            {
	                "name": "yearPlanCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "yearPlanUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "yearPlanActive",
	                "type": "bool"
	            },
	            {
	                "name": "yearPlanDeleted",
	                "type": "bool"
	            },
	            {
	                "name": "personRefToEntInAnotherAggInst",
	                "type": "PackagePartId"
	            },
	            {
	                "name": "personBirthDate",
	                "type": "DateTime"
	            },
	            {
	                "name": "personLoves",
	                "type": "PersonalName"
	            },
	            {
	                "name": "personEmergencyContact",
	                "type": "Contact"
	            },
	            {
	                "name": "personEmail",
	                "type": "string"
	            },
	            {
	                "name": "personCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "personUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "personVersion",
	                "type": "long"
	            },
	            {
	                "name": "personCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "personUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "personActive",
	                "type": "bool"
	            },
	            {
	                "name": "personDeleted",
	                "type": "bool"
	            }]
	    },
	    {
	        "name": "MovementEntryMvo",
	        "plural": "MovementEntryMvos",
	        "label": "Movement Entry Mvo",
	        "collectionLabel": "Movement Entry Mvos",
	        "id": {
	            "name": "movementEntryId",
	            "type": "MovementEntryId"
	        },
	        "properties": [{
	                "name": "locatorId",
	                "type": "string"
	            },
	            {
	                "name": "productId",
	                "type": "string"
	            },
	            {
	                "name": "quantity",
	                "type": "int"
	            },
	            {
	                "name": "storageQuantity",
	                "type": "int"
	            },
	            {
	                "name": "taskState",
	                "type": "string"
	            },
	            {
	                "name": "storageVersion",
	                "type": "long"
	            },
	            {
	                "name": "taskCommandId",
	                "type": "string"
	            },
	            {
	                "name": "errorName",
	                "type": "string"
	            },
	            {
	                "name": "version",
	                "type": "long"
	            },
	            {
	                "name": "createdBy",
	                "type": "string"
	            },
	            {
	                "name": "createdAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "updatedBy",
	                "type": "string"
	            },
	            {
	                "name": "updatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "active",
	                "type": "bool"
	            },
	            {
	                "name": "deleted",
	                "type": "bool"
	            },
	            {
	                "name": "movementTransactionSourceLocatorId",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionTargetLocatorId",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionProductId",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionQuantity",
	                "type": "int"
	            },
	            {
	                "name": "movementTransactionIsInSameHouse",
	                "type": "bool"
	            },
	            {
	                "name": "movementTransactionProcessState",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionErrorName",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionMessage",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionVersion",
	                "type": "long"
	            },
	            {
	                "name": "movementTransactionCreatedBy",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionCreatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "movementTransactionUpdatedBy",
	                "type": "string"
	            },
	            {
	                "name": "movementTransactionUpdatedAt",
	                "type": "DateTime"
	            },
	            {
	                "name": "movementTransactionActive",
	                "type": "bool"
	            },
	            {
	                "name": "movementTransactionDeleted",
	                "type": "bool"
	            }]
	    }
	];


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var EntityMetadata_1 = __webpack_require__(27);
	var EntityMetadataCollection = (function () {
	    function EntityMetadataCollection(metadata) {
	        this.rawMetadata = metadata || [];
	    }
	    /**
	     * 从元数据中，根据name获得实体对象
	     * @param name {String} 实体的name
	     * @return {EntityMetadata}
	     */
	    EntityMetadataCollection.prototype.entity = function (name) {
	        name = _.upperFirst(name);
	        var metadata = _.find(this.rawMetadata, function (entity) {
	            return (entity.plural == name) || (entity.name == name);
	        });
	        return new EntityMetadata_1.default(metadata);
	    };
	    /**
	     * 返回所有的实体元数据
	     * @return {EntityMetadata[]}
	     */
	    EntityMetadataCollection.prototype.all = function () {
	        var entities = [];
	        for (var _i = 0, _a = this.rawMetadata; _i < _a.length; _i++) {
	            var metadata = _a[_i];
	            entities.push(new EntityMetadata_1.default(metadata));
	        }
	        return entities;
	    };
	    return EntityMetadataCollection;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EntityMetadataCollection;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var PropertyMetadata_1 = __webpack_require__(28);
	var EntityMetadataCollection_1 = __webpack_require__(26);
	var EntityMetadata = (function () {
	    function EntityMetadata(metadata) {
	        this._entity = metadata;
	    }
	    Object.defineProperty(EntityMetadata.prototype, "name", {
	        get: function () {
	            return this._entity.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "plural", {
	        get: function () {
	            return this._entity.plural;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "label", {
	        get: function () {
	            return this._entity.label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "collectionLabel", {
	        get: function () {
	            return this._entity.collectionLabel;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "id", {
	        get: function () {
	            return new PropertyMetadata_1.default(this._entity.id);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "idName", {
	        get: function () {
	            return this._entity.id.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "properties", {
	        get: function () {
	            return _.map(this._entity.properties, function (property) {
	                return new PropertyMetadata_1.default(property);
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "propertyNames", {
	        get: function () {
	            return _.map(this.properties, 'name');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "entities", {
	        get: function () {
	            return new EntityMetadataCollection_1.default(this._entity.entities);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "subEntityNames", {
	        get: function () {
	            return _.map(this.entities.all(), 'name');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityMetadata.prototype, "subEntityPluralNames", {
	        get: function () {
	            return _.map(this.entities.all(), 'plural');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    EntityMetadata.prototype.hasProperty = function (name) {
	        return _.find(this.properties, ['name', name]) ? true : false;
	    };
	    EntityMetadata.prototype.property = function (name) {
	        if (!this.hasProperty(name)) {
	            throw new Error("\u5C5E\u6027 " + name + " \u4E0D\u5B58\u5728\u3002");
	        }
	        return new PropertyMetadata_1.default(_.find(this.properties, ['name', name]));
	    };
	    return EntityMetadata;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EntityMetadata;


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var enumValuesMap_1 = __webpack_require__(29);
	var PropertyMetadata = (function () {
	    function PropertyMetadata(metadata) {
	        this._rawMetadata = metadata;
	    }
	    Object.defineProperty(PropertyMetadata.prototype, "name", {
	        get: function () {
	            return _.trimEnd(this._rawMetadata.name, '?');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "label", {
	        get: function () {
	            return _.upperFirst(this.name);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "type", {
	        get: function () {
	            return this._rawMetadata.type;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "required", {
	        get: function () {
	            return this._rawMetadata.name.slice(-1) == '?' ? false : true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "isBuiltInType", {
	        get: function () {
	            if (this.type && !this._rawMetadata.enumValuesKey) {
	                return _.includes(PropertyMetadata.builtInTypes, this.type);
	            }
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "isSet", {
	        get: function () {
	            return this._rawMetadata.itemType ? true : false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "isMap", {
	        get: function () {
	            return this._rawMetadata.enumValuesKey ? true : false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "map", {
	        get: function () {
	            return _.find(enumValuesMap_1.ENUM_VALUES_MAP, ['name', this._rawMetadata.enumValuesKey]).values;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "isValueObject", {
	        get: function () {
	            return !this.isBuiltInType && !this.isSet && !this.isMap;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(PropertyMetadata.prototype, "raw", {
	        get: function () {
	            return this._rawMetadata;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    PropertyMetadata.builtInTypes = [
	        'bool',
	        'DateTime',
	        'decimal',
	        'int',
	        'long',
	        'string'
	    ];
	    return PropertyMetadata;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = PropertyMetadata;


/***/ },
/* 29 */
/***/ function(module, exports) {

	"use strict";
	exports.ENUM_VALUES_MAP = [
	    {
	        "name": "WheelId",
	        "values": {
	            "LF": "LF",
	            "LR": "LR",
	            "RF": "RF",
	            "RR": "RR",
	        }
	    },
	    {
	        "name": "ImageType",
	        "values": {
	            "Image": "*",
	            "ProductImage": "PRODUCT",
	            "ProductQRCodeImage": "PRODUCT_QR_CODE",
	            "OrderRemarkImage": "ORDER_REMARK",
	            "BrandImage": "BRAND",
	            "DesignPlanImage": "DESIGN_PLAN",
	        }
	    },
	    {
	        "name": "PackageType",
	        "values": {
	            "Piece": 1,
	            "Box": 2,
	            "BigBox": 3,
	        }
	    },
	    {
	        "name": "PackagePartType",
	        "values": {
	            "Piece": 1,
	            "Box": 2,
	            "Lot": 4,
	        }
	    }
	];


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ValueObject_1 = __webpack_require__(31);
	var Property = (function () {
	    /**
	     *
	     * @param metadata 属性元数据
	     * @param data
	     */
	    function Property(metadata, data) {
	        if (data === void 0) { data = null; }
	        this._metadata = metadata;
	        if (data === null) {
	            if (this.isSet) {
	                data = [];
	            }
	            if (this.isValueObject) {
	                data = {};
	            }
	        }
	        this._data = data;
	    }
	    Object.defineProperty(Property.prototype, "data", {
	        get: function () {
	            if (this.isValueObject) {
	                return new ValueObject_1.default(this.type, this._data);
	            }
	            return this._data;
	        },
	        set: function (data) {
	            this._data = data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Property.prototype.toString = function () {
	        if (this.isValueObject) {
	            return (new ValueObject_1.default(this.type, this._data)).toString();
	        }
	        return this._data;
	    };
	    Object.defineProperty(Property.prototype, "name", {
	        get: function () {
	            return this._metadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "label", {
	        get: function () {
	            return this._metadata.label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "type", {
	        get: function () {
	            return this._metadata.type;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "required", {
	        get: function () {
	            return this._metadata.required;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "raw", {
	        //todo 改成 rawMetadata
	        get: function () {
	            return this._metadata.raw;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "isBuiltInType", {
	        get: function () {
	            return this._metadata.isBuiltInType;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "isMap", {
	        get: function () {
	            return this._metadata.isMap;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "map", {
	        get: function () {
	            return this._metadata.map;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "isSet", {
	        get: function () {
	            return this._metadata.isSet;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Property.prototype, "isValueObject", {
	        get: function () {
	            return this._metadata.isValueObject;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Property;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Property;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ValueObjectMetadata_1 = __webpack_require__(32);
	var Property_1 = __webpack_require__(30);
	var ValueObject = (function () {
	    function ValueObject(name, data) {
	        if (data === void 0) { data = {}; }
	        this.metadata = ValueObjectMetadata_1.default.create(_.upperFirst(name));
	        this._rawData = data || {};
	    }
	    Object.defineProperty(ValueObject.prototype, "name", {
	        get: function () {
	            return this.metadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObject.prototype, "plural", {
	        get: function () {
	            return this.metadata.plural;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObject.prototype, "label", {
	        get: function () {
	            return this.metadata.label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObject.prototype, "collectionLabel", {
	        get: function () {
	            return this.metadata.collectionLabel;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ValueObject.prototype.property = function (name) {
	    };
	    Object.defineProperty(ValueObject.prototype, "properties", {
	        get: function () {
	            var _this = this;
	            return _.map(this.metadata.properties, function (property) {
	                return new Property_1.default(property, _this._rawData[property.name]);
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ValueObject.prototype.toString = function () {
	        var values = [];
	        _.map(this.properties, function (property) {
	            if (property.isBuiltInType) {
	                values.push(property.data);
	            }
	            else if (property.isValueObject) {
	                values.push(property.data.toString());
	            }
	        });
	        return values.join(',');
	    };
	    Object.defineProperty(ValueObject.prototype, "rawData", {
	        get: function () {
	            return this._rawData;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ValueObject.createFromString = function (str, metadata) {
	    };
	    return ValueObject;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ValueObject;


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var PropertyMetadata_1 = __webpack_require__(28);
	var valueObjects_1 = __webpack_require__(33);
	var ValueObjectMetadata = (function () {
	    function ValueObjectMetadata(metadata) {
	        this._rawMetadata = metadata;
	    }
	    ValueObjectMetadata.create = function (name) {
	        var metadata = _.find(valueObjects_1.VALUE_OBJECT_METADATA, ['name', _.upperFirst(name)]);
	        if (!metadata) {
	            throw new Error("\u503C\u5BF9\u8C61 " + name + " \u4E0D\u5B58\u5728");
	        }
	        return new ValueObjectMetadata(metadata);
	    };
	    Object.defineProperty(ValueObjectMetadata.prototype, "name", {
	        get: function () {
	            return this._rawMetadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObjectMetadata.prototype, "plural", {
	        get: function () {
	            return this._rawMetadata.plural;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObjectMetadata.prototype, "label", {
	        get: function () {
	            return this._rawMetadata.label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObjectMetadata.prototype, "collectionLabel", {
	        get: function () {
	            return this._rawMetadata.collectionLabel;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObjectMetadata.prototype, "properties", {
	        get: function () {
	            return _.map(this._rawMetadata.properties, function (property) {
	                return new PropertyMetadata_1.default(property);
	            });
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ValueObjectMetadata.prototype.hasProperty = function (name) {
	        return _.find(this.properties, ['name', name]) ? true : false;
	    };
	    ValueObjectMetadata.prototype.property = function (name) {
	        if (!this.hasProperty(name)) {
	            throw new Error("\u5C5E\u6027 " + name + " \u4E0D\u5B58\u5728\u4E8E\u503C\u5BF9\u8C61 " + this.name);
	        }
	        return new PropertyMetadata_1.default(_.find(this.properties, ['name', name]));
	    };
	    return ValueObjectMetadata;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ValueObjectMetadata;


/***/ },
/* 33 */
/***/ function(module, exports) {

	"use strict";
	exports.VALUE_OBJECT_METADATA = [
	    {
	        "name": "OrganizationStructureId",
	        "plural": "OrganizationStructureIds",
	        "label": "Organization Structure Id",
	        "collectionLabel": "Organization Structure Ids",
	        "properties": [
	            {
	                name: "organizationStructureTypeId",
	                label: "Organization Structure Type Id",
	                type: "string",
	                referenceType: "OrganizationStructureType"
	            },
	            {
	                name: "parentId",
	                label: "Parent Id",
	                type: "string",
	                referenceType: "Organization"
	            },
	            {
	                name: "subsidiaryId",
	                label: "Subsidiary Id",
	                type: "string",
	                referenceType: "Organization"
	            }
	        ]
	    },
	    {
	        "name": "PersonalName",
	        "plural": "PersonalNames",
	        "label": "Personal Name",
	        "collectionLabel": "Personal Names",
	        "properties": [
	            {
	                name: "firstName",
	                label: "First Name",
	                type: "string"
	            },
	            {
	                name: "lastName",
	                label: "Last Name",
	                type: "string"
	            }
	        ]
	    },
	    {
	        "name": "Contact",
	        "plural": "Contacts",
	        "label": "Contact",
	        "collectionLabel": "Contacts",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "phoneNumber",
	                label: "Phone Number",
	                type: "string"
	            },
	            {
	                name: "address",
	                label: "Address",
	                type: "string"
	            }
	        ]
	    },
	    {
	        "name": "TimePeriod",
	        "plural": "TimePeriods",
	        "label": "Time Period",
	        "collectionLabel": "Time Periods",
	        "properties": [
	            {
	                name: "from",
	                label: "From",
	                type: "DateTime"
	            },
	            {
	                name: "to",
	                label: "To",
	                type: "DateTime"
	            }
	        ]
	    },
	    {
	        "name": "CarWheelId",
	        "plural": "CarWheelIds",
	        "label": "Car Wheel Id",
	        "collectionLabel": "Car Wheel Ids",
	        "properties": [
	            {
	                name: "carId",
	                label: "Car Id",
	                type: "string"
	            },
	            {
	                name: "wheelId",
	                label: "Wheel Id",
	                type: "string",
	                enumValuesKey: "WheelId"
	            }
	        ]
	    },
	    {
	        "name": "CarTireId",
	        "plural": "CarTireIds",
	        "label": "Car Tire Id",
	        "collectionLabel": "Car Tire Ids",
	        "properties": [
	            {
	                name: "carId",
	                label: "Car Id",
	                type: "string"
	            },
	            {
	                name: "tireId",
	                label: "Tire Id",
	                type: "string"
	            }
	        ]
	    },
	    {
	        "name": "CarPositionId",
	        "plural": "CarPositionIds",
	        "label": "Car Position Id",
	        "collectionLabel": "Car Position Ids",
	        "properties": [
	            {
	                name: "carId",
	                label: "Car Id",
	                type: "string"
	            },
	            {
	                name: "tireId",
	                label: "Tire Id",
	                type: "string"
	            },
	            {
	                name: "id",
	                label: "Id",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "CarStateEventId",
	        "plural": "CarStateEventIds",
	        "label": "Car State Event Id",
	        "collectionLabel": "Car State Event Ids",
	        "properties": [
	            {
	                name: "id",
	                label: "Id",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "WheelStateEventId",
	        "plural": "WheelStateEventIds",
	        "label": "Wheel State Event Id",
	        "collectionLabel": "Wheel State Event Ids",
	        "properties": [
	            {
	                name: "carId",
	                label: "Car Id",
	                type: "string"
	            },
	            {
	                name: "wheelId",
	                label: "Wheel Id",
	                type: "string",
	                enumValuesKey: "WheelId"
	            },
	            {
	                name: "carVersion",
	                label: "Car Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "TireStateEventId",
	        "plural": "TireStateEventIds",
	        "label": "Tire State Event Id",
	        "collectionLabel": "Tire State Event Ids",
	        "properties": [
	            {
	                name: "carId",
	                label: "Car Id",
	                type: "string"
	            },
	            {
	                name: "tireId",
	                label: "Tire Id",
	                type: "string"
	            },
	            {
	                name: "carVersion",
	                label: "Car Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "PositionStateEventId",
	        "plural": "PositionStateEventIds",
	        "label": "Position State Event Id",
	        "collectionLabel": "Position State Event Ids",
	        "properties": [
	            {
	                name: "carId",
	                label: "Car Id",
	                type: "string"
	            },
	            {
	                name: "tireId",
	                label: "Tire Id",
	                type: "string"
	            },
	            {
	                name: "id",
	                label: "Id",
	                type: "long"
	            },
	            {
	                name: "carVersion",
	                label: "Car Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "BuildingId",
	        "plural": "BuildingIds",
	        "label": "Building Id",
	        "collectionLabel": "Building Ids",
	        "properties": [
	            {
	                name: "gardenId",
	                label: "Garden Id",
	                type: "string"
	            },
	            {
	                name: "buildingNumber",
	                label: "Building Number",
	                type: "string"
	            }
	        ]
	    },
	    {
	        "name": "RoomId",
	        "plural": "RoomIds",
	        "label": "Room Id",
	        "collectionLabel": "Room Ids",
	        "properties": [
	            {
	                name: "gardenId",
	                label: "Garden Id",
	                type: "string"
	            },
	            {
	                name: "buildingNumber",
	                label: "Building Number",
	                type: "string"
	            },
	            {
	                name: "roomNumber",
	                label: "Room Number",
	                type: "string"
	            }
	        ]
	    },
	    {
	        "name": "GardenStateEventId",
	        "plural": "GardenStateEventIds",
	        "label": "Garden State Event Id",
	        "collectionLabel": "Garden State Event Ids",
	        "properties": [
	            {
	                name: "id",
	                label: "Id",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "BuildingStateEventId",
	        "plural": "BuildingStateEventIds",
	        "label": "Building State Event Id",
	        "collectionLabel": "Building State Event Ids",
	        "properties": [
	            {
	                name: "gardenId",
	                label: "Garden Id",
	                type: "string"
	            },
	            {
	                name: "buildingNumber",
	                label: "Building Number",
	                type: "string"
	            },
	            {
	                name: "gardenVersion",
	                label: "Garden Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "RoomStateEventId",
	        "plural": "RoomStateEventIds",
	        "label": "Room State Event Id",
	        "collectionLabel": "Room State Event Ids",
	        "properties": [
	            {
	                name: "gardenId",
	                label: "Garden Id",
	                type: "string"
	            },
	            {
	                name: "buildingNumber",
	                label: "Building Number",
	                type: "string"
	            },
	            {
	                name: "roomNumber",
	                label: "Room Number",
	                type: "string"
	            },
	            {
	                name: "gardenVersion",
	                label: "Garden Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "ImageStateEventId",
	        "plural": "ImageStateEventIds",
	        "label": "Image State Event Id",
	        "collectionLabel": "Image State Event Ids",
	        "properties": [
	            {
	                name: "id",
	                label: "Id",
	                type: "long"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "OrganizationStateEventId",
	        "plural": "OrganizationStateEventIds",
	        "label": "Organization State Event Id",
	        "collectionLabel": "Organization State Event Ids",
	        "properties": [
	            {
	                name: "organizationId",
	                label: "Organization Id",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "OrganizationStructureTypeStateEventId",
	        "plural": "OrganizationStructureTypeStateEventIds",
	        "label": "Organization Structure Type State Event Id",
	        "collectionLabel": "Organization Structure Type State Event Ids",
	        "properties": [
	            {
	                name: "id",
	                label: "Id",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "OrganizationStructureStateEventId",
	        "plural": "OrganizationStructureStateEventIds",
	        "label": "Organization Structure State Event Id",
	        "collectionLabel": "Organization Structure State Event Ids",
	        "properties": [
	            {
	                name: "id",
	                label: "Id",
	                type: "OrganizationStructureId"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "PackagePartId",
	        "plural": "PackagePartIds",
	        "label": "Package Part Id",
	        "collectionLabel": "Package Part Ids",
	        "properties": [
	            {
	                name: "packageId",
	                label: "Package Id",
	                type: "long"
	            },
	            {
	                name: "partId",
	                label: "Part Id",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "PackageStateEventId",
	        "plural": "PackageStateEventIds",
	        "label": "Package State Event Id",
	        "collectionLabel": "Package State Event Ids",
	        "properties": [
	            {
	                name: "packageId",
	                label: "Package Id",
	                type: "long"
	            },
	            {
	                name: "rowVersion",
	                label: "Row Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "PackagePartStateEventId",
	        "plural": "PackagePartStateEventIds",
	        "label": "Package Part State Event Id",
	        "collectionLabel": "Package Part State Event Ids",
	        "properties": [
	            {
	                name: "packageId",
	                label: "Package Id",
	                type: "long"
	            },
	            {
	                name: "partId",
	                label: "Part Id",
	                type: "long"
	            },
	            {
	                name: "packageRowVersion",
	                label: "Package Row Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "YearPlanId",
	        "plural": "YearPlanIds",
	        "label": "Year Plan Id",
	        "collectionLabel": "Year Plan Ids",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "year",
	                label: "Year",
	                type: "int"
	            }
	        ]
	    },
	    {
	        "name": "MonthPlanId",
	        "plural": "MonthPlanIds",
	        "label": "Month Plan Id",
	        "collectionLabel": "Month Plan Ids",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "year",
	                label: "Year",
	                type: "int"
	            },
	            {
	                name: "month",
	                label: "Month",
	                type: "int"
	            }
	        ]
	    },
	    {
	        "name": "DayPlanId",
	        "plural": "DayPlanIds",
	        "label": "Day Plan Id",
	        "collectionLabel": "Day Plan Ids",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "year",
	                label: "Year",
	                type: "int"
	            },
	            {
	                name: "month",
	                label: "Month",
	                type: "int"
	            },
	            {
	                name: "day",
	                label: "Day",
	                type: "int"
	            }
	        ]
	    },
	    {
	        "name": "PersonStateEventId",
	        "plural": "PersonStateEventIds",
	        "label": "Person State Event Id",
	        "collectionLabel": "Person State Event Ids",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "YearPlanStateEventId",
	        "plural": "YearPlanStateEventIds",
	        "label": "Year Plan State Event Id",
	        "collectionLabel": "Year Plan State Event Ids",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "year",
	                label: "Year",
	                type: "int"
	            },
	            {
	                name: "personVersion",
	                label: "Person Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "MonthPlanStateEventId",
	        "plural": "MonthPlanStateEventIds",
	        "label": "Month Plan State Event Id",
	        "collectionLabel": "Month Plan State Event Ids",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "year",
	                label: "Year",
	                type: "int"
	            },
	            {
	                name: "month",
	                label: "Month",
	                type: "int"
	            },
	            {
	                name: "personVersion",
	                label: "Person Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "DayPlanStateEventId",
	        "plural": "DayPlanStateEventIds",
	        "label": "Day Plan State Event Id",
	        "collectionLabel": "Day Plan State Event Ids",
	        "properties": [
	            {
	                name: "personalName",
	                label: "Personal Name",
	                type: "PersonalName"
	            },
	            {
	                name: "year",
	                label: "Year",
	                type: "int"
	            },
	            {
	                name: "month",
	                label: "Month",
	                type: "int"
	            },
	            {
	                name: "day",
	                label: "Day",
	                type: "int"
	            },
	            {
	                name: "personVersion",
	                label: "Person Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "TeamStateEventId",
	        "plural": "TeamStateEventIds",
	        "label": "Team State Event Id",
	        "collectionLabel": "Team State Event Ids",
	        "properties": [
	            {
	                name: "teamName",
	                label: "Team Name",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "WarehouseStateEventId",
	        "plural": "WarehouseStateEventIds",
	        "label": "Warehouse State Event Id",
	        "collectionLabel": "Warehouse State Event Ids",
	        "properties": [
	            {
	                name: "warehouseId",
	                label: "Warehouse Id",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "LocatorStateEventId",
	        "plural": "LocatorStateEventIds",
	        "label": "Locator State Event Id",
	        "collectionLabel": "Locator State Event Ids",
	        "properties": [
	            {
	                name: "locatorId",
	                label: "Locator Id",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "StorageId",
	        "plural": "StorageIds",
	        "label": "Storage Id",
	        "collectionLabel": "Storage Ids",
	        "properties": [
	            {
	                name: "productId",
	                label: "Product Id",
	                type: "string"
	            },
	            {
	                name: "locatorId",
	                label: "Locator Id",
	                type: "string",
	                referenceType: "Locator"
	            }
	        ]
	    },
	    {
	        "name": "StorageStateEventId",
	        "plural": "StorageStateEventIds",
	        "label": "Storage State Event Id",
	        "collectionLabel": "Storage State Event Ids",
	        "properties": [
	            {
	                name: "storageId",
	                label: "Storage Id",
	                type: "StorageId"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "MovementEntryId",
	        "plural": "MovementEntryIds",
	        "label": "Movement Entry Id",
	        "collectionLabel": "Movement Entry Ids",
	        "properties": [
	            {
	                name: "movementTransactionId",
	                label: "Movement Transaction Id",
	                type: "string"
	            },
	            {
	                name: "entryName",
	                label: "Entry Name",
	                type: "string"
	            }
	        ]
	    },
	    {
	        "name": "MovementTransactionStateEventId",
	        "plural": "MovementTransactionStateEventIds",
	        "label": "Movement Transaction State Event Id",
	        "collectionLabel": "Movement Transaction State Event Ids",
	        "properties": [
	            {
	                name: "movementTransactionId",
	                label: "Movement Transaction Id",
	                type: "string"
	            },
	            {
	                name: "version",
	                label: "Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "MovementEntryStateEventId",
	        "plural": "MovementEntryStateEventIds",
	        "label": "Movement Entry State Event Id",
	        "collectionLabel": "Movement Entry State Event Ids",
	        "properties": [
	            {
	                name: "movementTransactionId",
	                label: "Movement Transaction Id",
	                type: "string"
	            },
	            {
	                name: "entryName",
	                label: "Entry Name",
	                type: "string"
	            },
	            {
	                name: "movementTransactionVersion",
	                label: "Movement Transaction Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "WheelMvoStateEventId",
	        "plural": "WheelMvoStateEventIds",
	        "label": "Wheel Mvo State Event Id",
	        "collectionLabel": "Wheel Mvo State Event Ids",
	        "properties": [
	            {
	                name: "carWheelId",
	                label: "Car Wheel Id",
	                type: "CarWheelId"
	            },
	            {
	                name: "carVersion",
	                label: "Car Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "TireMvoStateEventId",
	        "plural": "TireMvoStateEventIds",
	        "label": "Tire Mvo State Event Id",
	        "collectionLabel": "Tire Mvo State Event Ids",
	        "properties": [
	            {
	                name: "carTireId",
	                label: "Car Tire Id",
	                type: "CarTireId"
	            },
	            {
	                name: "carVersion",
	                label: "Car Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "PositionMvoStateEventId",
	        "plural": "PositionMvoStateEventIds",
	        "label": "Position Mvo State Event Id",
	        "collectionLabel": "Position Mvo State Event Ids",
	        "properties": [
	            {
	                name: "carPositionId",
	                label: "Car Position Id",
	                type: "CarPositionId"
	            },
	            {
	                name: "carVersion",
	                label: "Car Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "BuildingMvoStateEventId",
	        "plural": "BuildingMvoStateEventIds",
	        "label": "Building Mvo State Event Id",
	        "collectionLabel": "Building Mvo State Event Ids",
	        "properties": [
	            {
	                name: "buildingId",
	                label: "Building Id",
	                type: "BuildingId"
	            },
	            {
	                name: "gardenVersion",
	                label: "Garden Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "RoomMvoStateEventId",
	        "plural": "RoomMvoStateEventIds",
	        "label": "Room Mvo State Event Id",
	        "collectionLabel": "Room Mvo State Event Ids",
	        "properties": [
	            {
	                name: "roomId",
	                label: "Room Id",
	                type: "RoomId"
	            },
	            {
	                name: "gardenVersion",
	                label: "Garden Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "PackagePartMvoStateEventId",
	        "plural": "PackagePartMvoStateEventIds",
	        "label": "Package Part Mvo State Event Id",
	        "collectionLabel": "Package Part Mvo State Event Ids",
	        "properties": [
	            {
	                name: "packagePartId",
	                label: "Package Part Id",
	                type: "PackagePartId"
	            },
	            {
	                name: "packageRowVersion",
	                label: "Package Row Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "YearPlanMvoStateEventId",
	        "plural": "YearPlanMvoStateEventIds",
	        "label": "Year Plan Mvo State Event Id",
	        "collectionLabel": "Year Plan Mvo State Event Ids",
	        "properties": [
	            {
	                name: "yearPlanId",
	                label: "Year Plan Id",
	                type: "YearPlanId"
	            },
	            {
	                name: "personVersion",
	                label: "Person Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "MonthPlanMvoStateEventId",
	        "plural": "MonthPlanMvoStateEventIds",
	        "label": "Month Plan Mvo State Event Id",
	        "collectionLabel": "Month Plan Mvo State Event Ids",
	        "properties": [
	            {
	                name: "monthPlanId",
	                label: "Month Plan Id",
	                type: "MonthPlanId"
	            },
	            {
	                name: "personVersion",
	                label: "Person Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "DayPlanMvoStateEventId",
	        "plural": "DayPlanMvoStateEventIds",
	        "label": "Day Plan Mvo State Event Id",
	        "collectionLabel": "Day Plan Mvo State Event Ids",
	        "properties": [
	            {
	                name: "dayPlanId",
	                label: "Day Plan Id",
	                type: "DayPlanId"
	            },
	            {
	                name: "personVersion",
	                label: "Person Version",
	                type: "long"
	            }
	        ]
	    },
	    {
	        "name": "MovementEntryMvoStateEventId",
	        "plural": "MovementEntryMvoStateEventIds",
	        "label": "Movement Entry Mvo State Event Id",
	        "collectionLabel": "Movement Entry Mvo State Event Ids",
	        "properties": [
	            {
	                name: "movementEntryId",
	                label: "Movement Entry Id",
	                type: "MovementEntryId"
	            },
	            {
	                name: "movementTransactionVersion",
	                label: "Movement Transaction Version",
	                type: "long"
	            }
	        ]
	    }
	];


/***/ },
/* 34 */
/***/ function(module, exports) {

	"use strict";
	var EntityHierarchies = (function () {
	    function EntityHierarchies(hierarchies) {
	        if (hierarchies === void 0) { hierarchies = []; }
	        this._hierarchies = hierarchies;
	    }
	    EntityHierarchies.prototype.push = function (hierarchy) {
	        this._hierarchies.push(hierarchy);
	    };
	    EntityHierarchies.prototype.concat = function (hierarchies) {
	        return new EntityHierarchies(_.concat(this._hierarchies, hierarchies));
	    };
	    Object.defineProperty(EntityHierarchies.prototype, "metadataPath", {
	        get: function () {
	            return _.map(this._hierarchies, 'name');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    EntityHierarchies.prototype.toString = function () {
	        return encodeURIComponent(JSON.stringify(this._hierarchies));
	    };
	    Object.defineProperty(EntityHierarchies.prototype, "apiPath", {
	        /**
	         * 获得api请求地址
	         * @return {string}
	         */
	        get: function () {
	            var path = '';
	            for (var _i = 0, _a = this._hierarchies; _i < _a.length; _i++) {
	                var hierarchy = _a[_i];
	                path += hierarchy.name + "/" + hierarchy.id + "/";
	            }
	            return path.substr(0, path.length - 1);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityHierarchies.prototype, "apiRootPath", {
	        get: function () {
	            var hierarchy = this._hierarchies[0];
	            return hierarchy.name + "/" + hierarchy.id;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityHierarchies.prototype, "rootHierarchies", {
	        get: function () {
	            return new EntityHierarchies([this._hierarchies[0]]);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityHierarchies.prototype, "rootName", {
	        get: function () {
	            return this._hierarchies[0].name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityHierarchies.prototype, "hierarchies", {
	        get: function () {
	            return this._hierarchies;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    EntityHierarchies.createFromString = function (hierarchies) {
	        return new EntityHierarchies(JSON.parse(decodeURIComponent(hierarchies)));
	    };
	    return EntityHierarchies;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EntityHierarchies;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var tables_1 = __webpack_require__(36);
	var TableModel_1 = __webpack_require__(37);
	var TableRowModelFactory_1 = __webpack_require__(38);
	var TableModelFactory = (function () {
	    function TableModelFactory() {
	    }
	    TableModelFactory.create = function (entityCollection) {
	        var rows = [];
	        var columns = [];
	        _.map(Object.keys(tables_1.default[entityCollection.entityName].displayableFields), function (field) {
	            columns.push({
	                name: field
	            });
	        });
	        for (var _i = 0, _a = entityCollection.all(); _i < _a.length; _i++) {
	            var entity = _a[_i];
	            rows.push(TableRowModelFactory_1.default.create(entity, columns));
	        }
	        columns.push({
	            name: '操作',
	            width: '100px',
	        });
	        return new TableModel_1.default(entityCollection.name, rows, columns);
	    };
	    return TableModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableModelFactory;


/***/ },
/* 36 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
	    Car: {
	        displayableFields: {
	            id: {},
	            active: {},
	        }
	    },
	    Wheel: {
	        displayableFields: {
	            wheelId: {},
	            active: {},
	        }
	    },
	    Tire: {
	        displayableFields: {
	            tireId: {},
	            active: {},
	        }
	    },
	    Position: {
	        displayableFields: {
	            id: {},
	            timePeriod: {},
	            mileAge: {},
	            wheelId: {},
	            active: {},
	        }
	    },
	    Garden: {
	        displayableFields: {
	            id: {},
	            address: {},
	            city: {},
	            active: {},
	        }
	    },
	    Building: {
	        displayableFields: {
	            buildingNumber: {},
	            name: {},
	            description: {},
	            active: {},
	        }
	    },
	    Room: {
	        displayableFields: {
	            roomNumber: {},
	            name: {},
	            description: {},
	            active: {},
	        }
	    },
	    Image: {
	        displayableFields: {
	            id: {},
	            imageName: {},
	            imagePath: {},
	            imageType: {},
	            isDefault: {},
	            sortNumber: {},
	            refererId: {},
	            description: {},
	            active: {},
	        }
	    },
	    Organization: {
	        displayableFields: {
	            organizationId: {},
	            name: {},
	            description: {},
	            type: {},
	            isSummary: {},
	            active: {},
	        }
	    },
	    OrganizationStructureType: {
	        displayableFields: {
	            id: {},
	            active: {},
	        }
	    },
	    OrganizationStructure: {
	        displayableFields: {
	            id: {},
	            active: {},
	        }
	    },
	    Package: {
	        displayableFields: {
	            packageId: {},
	            packageType: {},
	            active: {},
	            serialNumber: {},
	            materialNumber: {},
	            customerNumber: {},
	            workOrderNumber: {},
	            lotNumber: {},
	            rank: {},
	            version: {},
	            quantity: {},
	            isMixed: {},
	        }
	    },
	    PackagePart: {
	        displayableFields: {
	            partId: {},
	            packagePartType: {},
	            parentPackagePartId: {},
	            active: {},
	            serialNumber: {},
	            materialNumber: {},
	            customerNumber: {},
	            workOrderNumber: {},
	            lotNumber: {},
	            rank: {},
	            version: {},
	            quantity: {},
	            isMixed: {},
	        }
	    },
	    Person: {
	        displayableFields: {
	            personalName: {},
	            refToEntInAnotherAggInst: {},
	            birthDate: {},
	            loves: {},
	            emergencyContact: {},
	            email: {},
	            active: {},
	        }
	    },
	    YearPlan: {
	        displayableFields: {
	            year: {},
	            description: {},
	            active: {},
	        }
	    },
	    MonthPlan: {
	        displayableFields: {
	            month: {},
	            description: {},
	            active: {},
	        }
	    },
	    DayPlan: {
	        displayableFields: {
	            day: {},
	            description: {},
	            active: {},
	        }
	    },
	    Team: {
	        displayableFields: {
	            teamName: {},
	            description: {},
	            players: {},
	            mascots: {},
	            active: {},
	        }
	    },
	    Warehouse: {
	        displayableFields: {
	            warehouseId: {},
	            name: {},
	            description: {},
	            isInTransit: {},
	            active: {},
	        }
	    },
	    Locator: {
	        displayableFields: {
	            locatorId: {},
	            warehouseId: {},
	            parentLocatorId: {},
	            locatorType: {},
	            priorityNumber: {},
	            isDefault: {},
	            x: {},
	            y: {},
	            z: {},
	            active: {},
	        }
	    },
	    WheelMvo: {
	        displayableFields: {
	            carWheelId: {},
	            version: {},
	            active: {},
	            carCreatedBy: {},
	            carCreatedAt: {},
	            carUpdatedBy: {},
	            carUpdatedAt: {},
	            carActive: {},
	            carDeleted: {},
	        }
	    },
	    TireMvo: {
	        displayableFields: {
	            carTireId: {},
	            version: {},
	            active: {},
	            carCreatedBy: {},
	            carCreatedAt: {},
	            carUpdatedBy: {},
	            carUpdatedAt: {},
	            carActive: {},
	            carDeleted: {},
	        }
	    },
	    PositionMvo: {
	        displayableFields: {
	            carPositionId: {},
	            timePeriod: {},
	            mileAge: {},
	            wheelId: {},
	            version: {},
	            active: {},
	            tireVersion: {},
	            tireCreatedBy: {},
	            tireCreatedAt: {},
	            tireUpdatedBy: {},
	            tireUpdatedAt: {},
	            tireActive: {},
	            tireDeleted: {},
	            carCreatedBy: {},
	            carCreatedAt: {},
	            carUpdatedBy: {},
	            carUpdatedAt: {},
	            carActive: {},
	            carDeleted: {},
	        }
	    },
	    BuildingMvo: {
	        displayableFields: {
	            buildingId: {},
	            name: {},
	            description: {},
	            version: {},
	            active: {},
	            gardenAddress: {},
	            gardenCity: {},
	            gardenCreatedBy: {},
	            gardenCreatedAt: {},
	            gardenUpdatedBy: {},
	            gardenUpdatedAt: {},
	            gardenActive: {},
	            gardenDeleted: {},
	        }
	    },
	    RoomMvo: {
	        displayableFields: {
	            roomId: {},
	            name: {},
	            description: {},
	            version: {},
	            active: {},
	            buildingName: {},
	            buildingDescription: {},
	            buildingVersion: {},
	            buildingCreatedBy: {},
	            buildingCreatedAt: {},
	            buildingUpdatedBy: {},
	            buildingUpdatedAt: {},
	            buildingActive: {},
	            buildingDeleted: {},
	            gardenAddress: {},
	            gardenCity: {},
	            gardenCreatedBy: {},
	            gardenCreatedAt: {},
	            gardenUpdatedBy: {},
	            gardenUpdatedAt: {},
	            gardenActive: {},
	            gardenDeleted: {},
	        }
	    },
	    PackagePartMvo: {
	        displayableFields: {
	            packagePartId: {},
	            rowVersion: {},
	            packagePartType: {},
	            parentPackagePartId: {},
	            active: {},
	            serialNumber: {},
	            materialNumber: {},
	            customerNumber: {},
	            workOrderNumber: {},
	            lotNumber: {},
	            rank: {},
	            version: {},
	            quantity: {},
	            isMixed: {},
	            packagePackageType: {},
	            packageCreatedBy: {},
	            packageCreatedAt: {},
	            packageUpdatedBy: {},
	            packageUpdatedAt: {},
	            packageActive: {},
	            packageDeleted: {},
	            packageSerialNumber: {},
	            packageMaterialNumber: {},
	            packageCustomerNumber: {},
	            packageWorkOrderNumber: {},
	            packageLotNumber: {},
	            packageRank: {},
	            packageVersion: {},
	            packageQuantity: {},
	            packageIsMixed: {},
	        }
	    },
	    YearPlanMvo: {
	        displayableFields: {
	            yearPlanId: {},
	            description: {},
	            version: {},
	            active: {},
	            personRefToEntInAnotherAggInst: {},
	            personBirthDate: {},
	            personLoves: {},
	            personEmergencyContact: {},
	            personEmail: {},
	            personCreatedBy: {},
	            personUpdatedBy: {},
	            personCreatedAt: {},
	            personUpdatedAt: {},
	            personActive: {},
	            personDeleted: {},
	        }
	    },
	    MonthPlanMvo: {
	        displayableFields: {
	            monthPlanId: {},
	            description: {},
	            version: {},
	            active: {},
	            yearPlanDescription: {},
	            yearPlanCreatedBy: {},
	            yearPlanUpdatedBy: {},
	            yearPlanVersion: {},
	            yearPlanCreatedAt: {},
	            yearPlanUpdatedAt: {},
	            yearPlanActive: {},
	            yearPlanDeleted: {},
	            personRefToEntInAnotherAggInst: {},
	            personBirthDate: {},
	            personLoves: {},
	            personEmergencyContact: {},
	            personEmail: {},
	            personCreatedBy: {},
	            personUpdatedBy: {},
	            personCreatedAt: {},
	            personUpdatedAt: {},
	            personActive: {},
	            personDeleted: {},
	        }
	    },
	    DayPlanMvo: {
	        displayableFields: {
	            dayPlanId: {},
	            description: {},
	            version: {},
	            active: {},
	            monthPlanDescription: {},
	            monthPlanCreatedBy: {},
	            monthPlanUpdatedBy: {},
	            monthPlanVersion: {},
	            monthPlanCreatedAt: {},
	            monthPlanUpdatedAt: {},
	            monthPlanActive: {},
	            monthPlanDeleted: {},
	            yearPlanDescription: {},
	            yearPlanCreatedBy: {},
	            yearPlanUpdatedBy: {},
	            yearPlanVersion: {},
	            yearPlanCreatedAt: {},
	            yearPlanUpdatedAt: {},
	            yearPlanActive: {},
	            yearPlanDeleted: {},
	            personRefToEntInAnotherAggInst: {},
	            personBirthDate: {},
	            personLoves: {},
	            personEmergencyContact: {},
	            personEmail: {},
	            personCreatedBy: {},
	            personUpdatedBy: {},
	            personCreatedAt: {},
	            personUpdatedAt: {},
	            personActive: {},
	            personDeleted: {},
	        }
	    }
	};


/***/ },
/* 37 */
/***/ function(module, exports) {

	"use strict";
	var TableModel = (function () {
	    function TableModel(name, rows, columns) {
	        if (rows === void 0) { rows = []; }
	        this.name = name;
	        this.rows = rows;
	        this.columns = columns;
	    }
	    return TableModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableModel;


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var TableRowModel_1 = __webpack_require__(39);
	var TableFieldModelFactory_1 = __webpack_require__(40);
	var TableButtonGroupFieldModel_1 = __webpack_require__(47);
	var TableRowModelFactory = (function () {
	    function TableRowModelFactory() {
	    }
	    TableRowModelFactory.create = function (entity, displayableFields) {
	        var row = new TableRowModel_1.default();
	        var entityMetadata = entity.metadata;
	        for (var _i = 0, displayableFields_1 = displayableFields; _i < displayableFields_1.length; _i++) {
	            var column = displayableFields_1[_i];
	            var metadata = void 0;
	            var property = void 0;
	            if (column.name == entityMetadata.id.name) {
	                metadata = entityMetadata.id;
	                property = entity.id;
	            }
	            else {
	                metadata = entityMetadata.property(column.name);
	                property = entity.property(column.name);
	            }
	            row.add(TableFieldModelFactory_1.default.create(metadata, property.data));
	        }
	        var buttonGroupModel = new TableButtonGroupFieldModel_1.default();
	        buttonGroupModel.addButton({
	            styleClasses: 'btn btn-sm bg-light-blue',
	            link: {
	                label: '查看',
	                route: {
	                    name: 'entity',
	                    params: {
	                        hierarchies: entity.hierarchies.toString(),
	                    }
	                },
	            },
	        });
	        if (entity.isRoot) {
	            buttonGroupModel.addButton({
	                styleClasses: 'btn btn-sm btn-warning',
	                link: {
	                    label: '编辑',
	                    route: {
	                        name: 'editEntity',
	                        params: {
	                            hierarchies: entity.hierarchies.toString(),
	                        }
	                    },
	                },
	            });
	        }
	        else {
	            buttonGroupModel.addButton({
	                styleClasses: 'btn btn-sm btn-warning',
	                link: {
	                    label: '编辑',
	                    route: {
	                        name: 'editSubEntity',
	                        params: {
	                            hierarchies: entity.hierarchies.toString(),
	                        }
	                    },
	                },
	            });
	        }
	        row.add(buttonGroupModel);
	        return row;
	    };
	    return TableRowModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableRowModelFactory;


/***/ },
/* 39 */
/***/ function(module, exports) {

	"use strict";
	var TableRowModel = (function () {
	    function TableRowModel() {
	        this._fields = [];
	    }
	    Object.defineProperty(TableRowModel.prototype, "fields", {
	        get: function () {
	            return this._fields;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TableRowModel.prototype.add = function (field) {
	        this._fields.push(field);
	    };
	    return TableRowModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableRowModel;


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var TableTextFieldModel_1 = __webpack_require__(41);
	var TableNumberFieldModel_1 = __webpack_require__(42);
	var TableBoolFieldModel_1 = __webpack_require__(43);
	var TableDecimalFieldModel_1 = __webpack_require__(44);
	var TableDateTimeFieldModel_1 = __webpack_require__(45);
	var TableValueObjectFieldModel_1 = __webpack_require__(46);
	var TableFieldModelFactory = (function () {
	    function TableFieldModelFactory() {
	    }
	    TableFieldModelFactory.create = function (metadata, data) {
	        switch (metadata.type) {
	            case 'string':
	                return new TableTextFieldModel_1.default(data);
	            case 'int':
	            case 'long':
	                return new TableNumberFieldModel_1.default(data);
	            case 'bool':
	                return new TableBoolFieldModel_1.default(data);
	            case 'decimal':
	                return new TableDecimalFieldModel_1.default(data);
	            case 'DateTime':
	                return new TableDateTimeFieldModel_1.default(data);
	            default:
	                return new TableValueObjectFieldModel_1.default(data);
	        }
	    };
	    return TableFieldModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableFieldModelFactory;


/***/ },
/* 41 */
/***/ function(module, exports) {

	"use strict";
	var TableTextFieldModel = (function () {
	    function TableTextFieldModel(data) {
	        if (data === void 0) { data = ''; }
	        this._data = data;
	    }
	    Object.defineProperty(TableTextFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TableTextFieldModel.prototype, "type", {
	        get: function () {
	            return 'text';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TableTextFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableTextFieldModel;


/***/ },
/* 42 */
/***/ function(module, exports) {

	"use strict";
	var TableNumberFieldModel = (function () {
	    function TableNumberFieldModel(data) {
	        if (data === void 0) { data = null; }
	        this._data = data;
	    }
	    Object.defineProperty(TableNumberFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TableNumberFieldModel.prototype, "type", {
	        get: function () {
	            return 'number';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TableNumberFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableNumberFieldModel;


/***/ },
/* 43 */
/***/ function(module, exports) {

	"use strict";
	var TableBoolFieldModel = (function () {
	    function TableBoolFieldModel(data) {
	        if (data === void 0) { data = false; }
	        this._data = data;
	    }
	    Object.defineProperty(TableBoolFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TableBoolFieldModel.prototype, "type", {
	        get: function () {
	            return 'bool';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TableBoolFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableBoolFieldModel;


/***/ },
/* 44 */
/***/ function(module, exports) {

	"use strict";
	var TableDecimalFieldModel = (function () {
	    function TableDecimalFieldModel(data) {
	        if (data === void 0) { data = null; }
	        this._data = data;
	    }
	    Object.defineProperty(TableDecimalFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TableDecimalFieldModel.prototype, "type", {
	        get: function () {
	            return 'decimal';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TableDecimalFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableDecimalFieldModel;


/***/ },
/* 45 */
/***/ function(module, exports) {

	"use strict";
	var TableDateTimeFieldModel = (function () {
	    function TableDateTimeFieldModel(data) {
	        if (data === void 0) { data = ''; }
	        this._data = data;
	    }
	    Object.defineProperty(TableDateTimeFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TableDateTimeFieldModel.prototype, "type", {
	        get: function () {
	            return 'datetime';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TableDateTimeFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableDateTimeFieldModel;


/***/ },
/* 46 */
/***/ function(module, exports) {

	"use strict";
	var TableValueObjectFieldModel = (function () {
	    function TableValueObjectFieldModel(data) {
	        this._data = data;
	    }
	    Object.defineProperty(TableValueObjectFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TableValueObjectFieldModel.prototype, "type", {
	        get: function () {
	            return 'valueObject';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TableValueObjectFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableValueObjectFieldModel;


/***/ },
/* 47 */
/***/ function(module, exports) {

	"use strict";
	var TableButtonGroupFieldModel = (function () {
	    function TableButtonGroupFieldModel(data) {
	        if (data === void 0) { data = []; }
	        this._data = data;
	    }
	    Object.defineProperty(TableButtonGroupFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TableButtonGroupFieldModel.prototype, "buttons", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TableButtonGroupFieldModel.prototype.addButton = function (button) {
	        this._data.push(button);
	        return this;
	    };
	    Object.defineProperty(TableButtonGroupFieldModel.prototype, "type", {
	        get: function () {
	            return 'buttonGroup';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TableButtonGroupFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TableButtonGroupFieldModel;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var EntityHierarchies_1 = __webpack_require__(34);
	var AggregatesMetadata_1 = __webpack_require__(24);
	var NavigatorModelFactory = (function () {
	    function NavigatorModelFactory() {
	    }
	    NavigatorModelFactory.createEntities = function (name) {
	        return [{
	                label: name,
	                route: {
	                    name: 'entities',
	                    params: {
	                        name: name
	                    }
	                }
	            }];
	    };
	    /**
	     * 创建导航栏模型数据
	     * @param hierarchies
	     * @return {LinkModelInterface[]}
	     */
	    NavigatorModelFactory.createEntity = function (hierarchies) {
	        console.log(hierarchies);
	        var links = [{
	                label: hierarchies.hierarchies[0].name,
	                route: {
	                    name: 'entities',
	                    params: {
	                        name: hierarchies.hierarchies[0].name
	                    }
	                }
	            }];
	        var hs = [];
	        var metadataPath = hierarchies.metadataPath;
	        var metadata = AggregatesMetadata_1.default.getInstance()
	            .getMetadataByHierarchies(metadataPath);
	        _.map(hierarchies.hierarchies, function (h) {
	            hs.push(h);
	            links.push({
	                label: metadata.label + (": " + hierarchies.hierarchies[0].id),
	                route: {
	                    name: 'entity',
	                    params: {
	                        hierarchies: (new EntityHierarchies_1.default(hs)).toString()
	                    }
	                }
	            });
	        });
	        return links;
	    };
	    NavigatorModelFactory.createCreateEntity = function (name) {
	        return [{
	                label: name,
	                route: {
	                    name: 'entities',
	                    params: {
	                        name: name
	                    }
	                }
	            }, {
	                label: "\u65B0\u5EFA",
	                route: {
	                    name: 'createEntity',
	                    params: {
	                        name: name
	                    }
	                }
	            }];
	    };
	    NavigatorModelFactory.createEditEntity = function (hierarchies) {
	        var links = [{
	                label: hierarchies.hierarchies[0].name,
	                route: {
	                    name: 'entities',
	                    params: {
	                        name: hierarchies.hierarchies[0].name
	                    }
	                }
	            }];
	        var hs = [];
	        _.map(hierarchies.hierarchies, function (h) {
	            hs.push(h);
	            links.push({
	                label: h.name + ":" + h.id,
	                route: {
	                    name: 'entity',
	                    params: {
	                        hierarchies: (new EntityHierarchies_1.default(hs)).toString()
	                    }
	                }
	            });
	        });
	        links.push({
	            label: "\u7F16\u8F91",
	            route: {
	                name: 'editEntity',
	                params: {
	                    hierarchies: hierarchies.toString()
	                }
	            }
	        });
	        return links;
	    };
	    NavigatorModelFactory.createCreateSubEntity = function (hierarchies, name) {
	        var links = [{
	                label: hierarchies.hierarchies[0].name,
	                route: {
	                    name: 'entities',
	                    params: {
	                        name: hierarchies.hierarchies[0].name
	                    }
	                }
	            }];
	        var hs = [];
	        _.map(hierarchies.hierarchies, function (h) {
	            hs.push(h);
	            links.push({
	                label: h.name + ":" + h.id,
	                route: {
	                    name: 'entity',
	                    params: {
	                        hierarchies: (new EntityHierarchies_1.default(hs)).toString()
	                    }
	                }
	            });
	        });
	        links.push({
	            label: "\u65B0\u5EFA " + name,
	            route: {
	                name: 'createSubEntity',
	                params: {
	                    hierarchies: hierarchies.toString(),
	                    name: name
	                }
	            }
	        });
	        return links;
	    };
	    NavigatorModelFactory.createEditSubEntity = function (hierarchies) {
	        var links = [{
	                label: hierarchies.hierarchies[0].name,
	                route: {
	                    name: 'entities',
	                    params: {
	                        name: hierarchies.hierarchies[0].name
	                    }
	                }
	            }];
	        var hs = [];
	        _.map(hierarchies.hierarchies, function (h) {
	            hs.push(h);
	            links.push({
	                label: h.name + ":" + h.id,
	                route: {
	                    name: 'entity',
	                    params: {
	                        hierarchies: (new EntityHierarchies_1.default(hs)).toString()
	                    }
	                }
	            });
	        });
	        links.push({
	            label: "\u7F16\u8F91",
	            route: {
	                name: 'editSubEntity',
	                params: {
	                    hierarchies: hierarchies.toString()
	                }
	            }
	        });
	        return links;
	    };
	    NavigatorModelFactory.createTree = function (name) {
	        return [{
	                label: name,
	                route: {
	                    name: 'tree',
	                    params: {
	                        name: name
	                    }
	                }
	            }];
	    };
	    return NavigatorModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = NavigatorModelFactory;


/***/ },
/* 49 */
/***/ function(module, exports) {

	module.exports = "<div class=\"content-wrapper\">\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n        <h1>\r\n            {{title}}\r\n        </h1>\r\n        <navigator :navigator=\"navigator\"></navigator>\r\n    </section>\r\n\r\n    <!-- Main content -->\r\n    <section class=\"content\">\r\n        <alert :show.sync=\"showError\" title=\"出现错误\" :content=\"errorMessage\" type=\"alert-danger\"></alert>\r\n        <!-- Default box -->\r\n        <div class=\"box\">\r\n            <div class=\"box-header with-border\">\r\n                <h3 class=\"box-title\">{{title}}</h3>\r\n                <div class=\"box-tools\">\r\n                    <a v-if=\"createBtn\" v-link=\"createBtn.link.route\" class=\"{{createBtn.styleClasses}}\">\r\n                        {{createBtn.link.label}}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"table\" class=\"box-body no-padding table-responsive\">\r\n                <v-table :table-data=\"table\"></v-table>\r\n            </div>\r\n            <!-- /.box-body -->\r\n            <div class=\"box-footer\">\r\n                脚部\r\n            </div>\r\n            <!-- /.box-footer-->\r\n        </div>\r\n        <!-- /.box -->\r\n    </section>\r\n    <!-- /.content -->\r\n</div>";

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Navigator_component_1 = __webpack_require__(12);
	var SubEntities_component_1 = __webpack_require__(51);
	var Vue = __webpack_require__(6);
	var EntityHierarchies_1 = __webpack_require__(34);
	var Entity_1 = __webpack_require__(23);
	var DetailModelFactory_1 = __webpack_require__(53);
	var TablesModelFactory_1 = __webpack_require__(63);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(65),
	    data: function () {
	        return {
	            entity: {},
	            tables: {},
	            navigator: [],
	        };
	    },
	    components: {
	        Navigator: Navigator_component_1.default,
	        SubEntities: SubEntities_component_1.default,
	    },
	    computed: {
	        title: function () {
	            if (this.entity.name) {
	                return this.entity.name;
	            }
	        },
	        hasSubEntities: function () {
	            return this.tables.names ? this.tables.names.length : false;
	        }
	    },
	    route: {
	        data: function () {
	            var _this = this;
	            console.info('Entity Page');
	            console.log(this.$route);
	            var hierarchies = EntityHierarchies_1.default.createFromString(this.$route.params.hierarchies);
	            this.$http.get(hierarchies.apiPath).then(function (response) {
	                console.log(response.data);
	                var entity = new Entity_1.default(hierarchies, response.data);
	                _this.entity = DetailModelFactory_1.default.create(entity);
	                _this.tables = TablesModelFactory_1.default.create(entity.entities());
	                _this.navigator = NavigatorModelFactory_1.default.createEntity(hierarchies);
	            }, function (response) {
	                // error callback
	            });
	        }
	    }
	});


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	var Table_1 = __webpack_require__(16);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(52),
	    data: function () {
	        return {
	            current: {},
	            selected: false,
	            createRoute: {},
	        };
	    },
	    components: {
	        VTable: Table_1.default,
	    },
	    props: {
	        tables: Object
	    },
	    computed: {},
	    methods: {
	        change: function (key) {
	            this.selected = true;
	            this.createRoute = {
	                name: 'createSubEntity',
	                params: {
	                    hierarchies: this.$route.params.hierarchies,
	                    name: key
	                }
	            };
	            this.current = _.find(this.tables.all(), ['name', key]);
	        }
	    },
	    ready: function () {
	        this.$watch('tables', function () {
	            this.current = {};
	            this.selected = false;
	        });
	    }
	});


/***/ },
/* 52 */
/***/ function(module, exports) {

	module.exports = "<div class=\"box\">\r\n    <div class=\"box-header with-border nav-tabs-custom\">\r\n        <ul class=\"nav nav-tabs\">\r\n            <li role=\"presentation\" data-toggle=\"tab\" v-for=\"name in tables.names\">\r\n                <a href=\"javascript:;\" v-on:click=\"change(name)\">{{name}}</a>\r\n            </li>\r\n            <li v-if=\"selected\" class=\"pull-right\"><a v-link=\"createRoute\" class=\"btn btn-sm bg-orange\">创建</a></li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"box-body no-padding table-responsive\">\r\n        <v-table :table-data=\"current\"></v-table>\r\n    </div>\r\n</div>";

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var DetailModel_1 = __webpack_require__(54);
	var details_1 = __webpack_require__(55);
	var DetailFieldModelFactory_1 = __webpack_require__(56);
	var DetailModelFactory = (function () {
	    function DetailModelFactory() {
	    }
	    DetailModelFactory.create = function (entity) {
	        var displayableFields = Object.keys(details_1.default[entity.name].displayableFields);
	        var detailModel = new DetailModel_1.default(entity.name);
	        var entityMetadata = entity.metadata;
	        for (var _i = 0, displayableFields_1 = displayableFields; _i < displayableFields_1.length; _i++) {
	            var name_1 = displayableFields_1[_i];
	            var metadata = void 0;
	            var property = void 0;
	            if (name_1 == entityMetadata.id.name) {
	                metadata = entityMetadata.id;
	                property = entity.id;
	            }
	            else {
	                metadata = entityMetadata.property(name_1);
	                property = entity.property(name_1);
	            }
	            detailModel.add(DetailFieldModelFactory_1.default.create(metadata, property.data));
	        }
	        return detailModel;
	    };
	    return DetailModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailModelFactory;


/***/ },
/* 54 */
/***/ function(module, exports) {

	"use strict";
	var DetailModel = (function () {
	    function DetailModel(name, fields) {
	        if (fields === void 0) { fields = []; }
	        this._name = name;
	        this._fields = fields;
	    }
	    Object.defineProperty(DetailModel.prototype, "fields", {
	        get: function () {
	            return this._fields;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailModel.prototype, "name", {
	        get: function () {
	            return this._name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DetailModel.prototype.add = function (field) {
	        this._fields.push(field);
	    };
	    return DetailModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailModel;


/***/ },
/* 55 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
	    Car: {
	        displayableFields: {
	            id: {},
	            active: {},
	        }
	    },
	    Wheel: {
	        displayableFields: {
	            wheelId: {},
	            active: {},
	        }
	    },
	    Tire: {
	        displayableFields: {
	            tireId: {},
	            active: {},
	        }
	    },
	    Position: {
	        displayableFields: {
	            id: {},
	            timePeriod: {},
	            mileAge: {},
	            wheelId: {},
	            active: {},
	        }
	    },
	    Garden: {
	        displayableFields: {
	            id: {},
	            address: {},
	            city: {},
	            active: {},
	        }
	    },
	    Building: {
	        displayableFields: {
	            buildingNumber: {},
	            name: {},
	            description: {},
	            active: {},
	        }
	    },
	    Room: {
	        displayableFields: {
	            roomNumber: {},
	            name: {},
	            description: {},
	            active: {},
	        }
	    },
	    Image: {
	        displayableFields: {
	            id: {},
	            imageName: {},
	            imagePath: {},
	            imageType: {},
	            isDefault: {},
	            sortNumber: {},
	            refererId: {},
	            description: {},
	            active: {},
	        }
	    },
	    Organization: {
	        displayableFields: {
	            organizationId: {},
	            name: {},
	            description: {},
	            type: {},
	            isSummary: {},
	            active: {},
	        }
	    },
	    OrganizationStructureType: {
	        displayableFields: {
	            id: {},
	            active: {},
	        }
	    },
	    OrganizationStructure: {
	        displayableFields: {
	            id: {},
	            active: {},
	        }
	    },
	    Package: {
	        displayableFields: {
	            packageId: {},
	            packageType: {},
	            active: {},
	            serialNumber: {},
	            materialNumber: {},
	            customerNumber: {},
	            workOrderNumber: {},
	            lotNumber: {},
	            rank: {},
	            version: {},
	            quantity: {},
	            isMixed: {},
	        }
	    },
	    PackagePart: {
	        displayableFields: {
	            partId: {},
	            packagePartType: {},
	            parentPackagePartId: {},
	            active: {},
	            serialNumber: {},
	            materialNumber: {},
	            customerNumber: {},
	            workOrderNumber: {},
	            lotNumber: {},
	            rank: {},
	            version: {},
	            quantity: {},
	            isMixed: {},
	        }
	    },
	    Person: {
	        displayableFields: {
	            personalName: {},
	            refToEntInAnotherAggInst: {},
	            birthDate: {},
	            loves: {},
	            emergencyContact: {},
	            email: {},
	            active: {},
	        }
	    },
	    YearPlan: {
	        displayableFields: {
	            year: {},
	            description: {},
	            active: {},
	        }
	    },
	    MonthPlan: {
	        displayableFields: {
	            month: {},
	            description: {},
	            active: {},
	        }
	    },
	    DayPlan: {
	        displayableFields: {
	            day: {},
	            description: {},
	            active: {},
	        }
	    },
	    Team: {
	        displayableFields: {
	            teamName: {},
	            description: {},
	            players: {},
	            mascots: {},
	            active: {},
	        }
	    },
	    Warehouse: {
	        displayableFields: {
	            warehouseId: {},
	            name: {},
	            description: {},
	            isInTransit: {},
	            active: {},
	        }
	    },
	    Locator: {
	        displayableFields: {
	            locatorId: {},
	            warehouseId: {},
	            parentLocatorId: {},
	            locatorType: {},
	            priorityNumber: {},
	            isDefault: {},
	            x: {},
	            y: {},
	            z: {},
	            active: {},
	        }
	    },
	    WheelMvo: {
	        displayableFields: {
	            carWheelId: {},
	            version: {},
	            active: {},
	            carCreatedBy: {},
	            carCreatedAt: {},
	            carUpdatedBy: {},
	            carUpdatedAt: {},
	            carActive: {},
	            carDeleted: {},
	        }
	    },
	    TireMvo: {
	        displayableFields: {
	            carTireId: {},
	            version: {},
	            active: {},
	            carCreatedBy: {},
	            carCreatedAt: {},
	            carUpdatedBy: {},
	            carUpdatedAt: {},
	            carActive: {},
	            carDeleted: {},
	        }
	    },
	    PositionMvo: {
	        displayableFields: {
	            carPositionId: {},
	            timePeriod: {},
	            mileAge: {},
	            wheelId: {},
	            version: {},
	            active: {},
	            tireVersion: {},
	            tireCreatedBy: {},
	            tireCreatedAt: {},
	            tireUpdatedBy: {},
	            tireUpdatedAt: {},
	            tireActive: {},
	            tireDeleted: {},
	            carCreatedBy: {},
	            carCreatedAt: {},
	            carUpdatedBy: {},
	            carUpdatedAt: {},
	            carActive: {},
	            carDeleted: {},
	        }
	    },
	    BuildingMvo: {
	        displayableFields: {
	            buildingId: {},
	            name: {},
	            description: {},
	            version: {},
	            active: {},
	            gardenAddress: {},
	            gardenCity: {},
	            gardenCreatedBy: {},
	            gardenCreatedAt: {},
	            gardenUpdatedBy: {},
	            gardenUpdatedAt: {},
	            gardenActive: {},
	            gardenDeleted: {},
	        }
	    },
	    RoomMvo: {
	        displayableFields: {
	            roomId: {},
	            name: {},
	            description: {},
	            version: {},
	            active: {},
	            buildingName: {},
	            buildingDescription: {},
	            buildingVersion: {},
	            buildingCreatedBy: {},
	            buildingCreatedAt: {},
	            buildingUpdatedBy: {},
	            buildingUpdatedAt: {},
	            buildingActive: {},
	            buildingDeleted: {},
	            gardenAddress: {},
	            gardenCity: {},
	            gardenCreatedBy: {},
	            gardenCreatedAt: {},
	            gardenUpdatedBy: {},
	            gardenUpdatedAt: {},
	            gardenActive: {},
	            gardenDeleted: {},
	        }
	    },
	    PackagePartMvo: {
	        displayableFields: {
	            packagePartId: {},
	            rowVersion: {},
	            packagePartType: {},
	            parentPackagePartId: {},
	            active: {},
	            serialNumber: {},
	            materialNumber: {},
	            customerNumber: {},
	            workOrderNumber: {},
	            lotNumber: {},
	            rank: {},
	            version: {},
	            quantity: {},
	            isMixed: {},
	            packagePackageType: {},
	            packageCreatedBy: {},
	            packageCreatedAt: {},
	            packageUpdatedBy: {},
	            packageUpdatedAt: {},
	            packageActive: {},
	            packageDeleted: {},
	            packageSerialNumber: {},
	            packageMaterialNumber: {},
	            packageCustomerNumber: {},
	            packageWorkOrderNumber: {},
	            packageLotNumber: {},
	            packageRank: {},
	            packageVersion: {},
	            packageQuantity: {},
	            packageIsMixed: {},
	        }
	    },
	    YearPlanMvo: {
	        displayableFields: {
	            yearPlanId: {},
	            description: {},
	            version: {},
	            active: {},
	            personRefToEntInAnotherAggInst: {},
	            personBirthDate: {},
	            personLoves: {},
	            personEmergencyContact: {},
	            personEmail: {},
	            personCreatedBy: {},
	            personUpdatedBy: {},
	            personCreatedAt: {},
	            personUpdatedAt: {},
	            personActive: {},
	            personDeleted: {},
	        }
	    },
	    MonthPlanMvo: {
	        displayableFields: {
	            monthPlanId: {},
	            description: {},
	            version: {},
	            active: {},
	            yearPlanDescription: {},
	            yearPlanCreatedBy: {},
	            yearPlanUpdatedBy: {},
	            yearPlanVersion: {},
	            yearPlanCreatedAt: {},
	            yearPlanUpdatedAt: {},
	            yearPlanActive: {},
	            yearPlanDeleted: {},
	            personRefToEntInAnotherAggInst: {},
	            personBirthDate: {},
	            personLoves: {},
	            personEmergencyContact: {},
	            personEmail: {},
	            personCreatedBy: {},
	            personUpdatedBy: {},
	            personCreatedAt: {},
	            personUpdatedAt: {},
	            personActive: {},
	            personDeleted: {},
	        }
	    },
	    DayPlanMvo: {
	        displayableFields: {
	            dayPlanId: {},
	            description: {},
	            version: {},
	            active: {},
	            monthPlanDescription: {},
	            monthPlanCreatedBy: {},
	            monthPlanUpdatedBy: {},
	            monthPlanVersion: {},
	            monthPlanCreatedAt: {},
	            monthPlanUpdatedAt: {},
	            monthPlanActive: {},
	            monthPlanDeleted: {},
	            yearPlanDescription: {},
	            yearPlanCreatedBy: {},
	            yearPlanUpdatedBy: {},
	            yearPlanVersion: {},
	            yearPlanCreatedAt: {},
	            yearPlanUpdatedAt: {},
	            yearPlanActive: {},
	            yearPlanDeleted: {},
	            personRefToEntInAnotherAggInst: {},
	            personBirthDate: {},
	            personLoves: {},
	            personEmergencyContact: {},
	            personEmail: {},
	            personCreatedBy: {},
	            personUpdatedBy: {},
	            personCreatedAt: {},
	            personUpdatedAt: {},
	            personActive: {},
	            personDeleted: {},
	        }
	    }
	};


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var DetailTextFieldModel_1 = __webpack_require__(57);
	var DetailNumberFieldModel_1 = __webpack_require__(58);
	var DetailBoolFieldModel_1 = __webpack_require__(59);
	var DetailDecimalFieldModel_1 = __webpack_require__(60);
	var DetailDateTimeFieldModel_1 = __webpack_require__(61);
	var DetailValueObjectFieldModel_1 = __webpack_require__(62);
	var DetailFieldModelFactory = (function () {
	    function DetailFieldModelFactory() {
	    }
	    DetailFieldModelFactory.create = function (metadata, data) {
	        switch (metadata.type) {
	            case 'string':
	                return new DetailTextFieldModel_1.default(metadata.label, data);
	            case 'int':
	            case 'long':
	                return new DetailNumberFieldModel_1.default(metadata.label, data);
	            case 'bool':
	                return new DetailBoolFieldModel_1.default(metadata.label, data);
	            case 'decimal':
	                return new DetailDecimalFieldModel_1.default(metadata.label, data);
	            case 'DateTime':
	                return new DetailDateTimeFieldModel_1.default(metadata.label, data);
	            default:
	                return new DetailValueObjectFieldModel_1.default(metadata.label, data);
	        }
	    };
	    return DetailFieldModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailFieldModelFactory;


/***/ },
/* 57 */
/***/ function(module, exports) {

	"use strict";
	var DetailTextFieldModel = (function () {
	    function DetailTextFieldModel(label, data) {
	        if (data === void 0) { data = ''; }
	        this._data = data;
	        this._label = label;
	    }
	    Object.defineProperty(DetailTextFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailTextFieldModel.prototype, "label", {
	        get: function () {
	            return this._label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailTextFieldModel.prototype, "type", {
	        get: function () {
	            return 'text';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return DetailTextFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailTextFieldModel;


/***/ },
/* 58 */
/***/ function(module, exports) {

	"use strict";
	var DetailNumberFieldModel = (function () {
	    function DetailNumberFieldModel(label, data) {
	        if (data === void 0) { data = null; }
	        this._data = data;
	        this._label = label;
	    }
	    Object.defineProperty(DetailNumberFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailNumberFieldModel.prototype, "label", {
	        get: function () {
	            return this._label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailNumberFieldModel.prototype, "type", {
	        get: function () {
	            return 'number';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return DetailNumberFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailNumberFieldModel;


/***/ },
/* 59 */
/***/ function(module, exports) {

	"use strict";
	var DetailBoolFieldModel = (function () {
	    function DetailBoolFieldModel(label, data) {
	        if (data === void 0) { data = false; }
	        this._data = data;
	        this._label = label;
	    }
	    Object.defineProperty(DetailBoolFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailBoolFieldModel.prototype, "label", {
	        get: function () {
	            return this._label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailBoolFieldModel.prototype, "type", {
	        get: function () {
	            return 'bool';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return DetailBoolFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailBoolFieldModel;


/***/ },
/* 60 */
/***/ function(module, exports) {

	"use strict";
	var DetailDecimalFieldModel = (function () {
	    function DetailDecimalFieldModel(label, data) {
	        if (data === void 0) { data = null; }
	        this._data = data;
	        this._label = label;
	    }
	    Object.defineProperty(DetailDecimalFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailDecimalFieldModel.prototype, "label", {
	        get: function () {
	            return this._label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailDecimalFieldModel.prototype, "type", {
	        get: function () {
	            return 'decimal';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return DetailDecimalFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailDecimalFieldModel;


/***/ },
/* 61 */
/***/ function(module, exports) {

	"use strict";
	var DetailDateTimeFieldModel = (function () {
	    function DetailDateTimeFieldModel(label, data) {
	        if (data === void 0) { data = ''; }
	        this._data = data;
	        this._label = label;
	    }
	    Object.defineProperty(DetailDateTimeFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailDateTimeFieldModel.prototype, "label", {
	        get: function () {
	            return this._label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailDateTimeFieldModel.prototype, "type", {
	        get: function () {
	            return 'datetime';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return DetailDateTimeFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailDateTimeFieldModel;


/***/ },
/* 62 */
/***/ function(module, exports) {

	"use strict";
	var DetailValueObjectFieldModel = (function () {
	    function DetailValueObjectFieldModel(label, data) {
	        this._data = data;
	        this._label = label;
	    }
	    Object.defineProperty(DetailValueObjectFieldModel.prototype, "data", {
	        get: function () {
	            return this._data;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailValueObjectFieldModel.prototype, "label", {
	        get: function () {
	            return this._label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(DetailValueObjectFieldModel.prototype, "type", {
	        get: function () {
	            return 'valueObject';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return DetailValueObjectFieldModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = DetailValueObjectFieldModel;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var TablesModel_1 = __webpack_require__(64);
	var TableModelFactory_1 = __webpack_require__(35);
	var TablesModelFactory = (function () {
	    function TablesModelFactory() {
	    }
	    TablesModelFactory.create = function (entityCollections) {
	        var tables = new TablesModel_1.default();
	        for (var _i = 0, entityCollections_1 = entityCollections; _i < entityCollections_1.length; _i++) {
	            var collection = entityCollections_1[_i];
	            tables.addTable(TableModelFactory_1.default.create(collection));
	        }
	        return tables;
	    };
	    return TablesModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TablesModelFactory;


/***/ },
/* 64 */
/***/ function(module, exports) {

	"use strict";
	var TablesModel = (function () {
	    function TablesModel(tables) {
	        if (tables === void 0) { tables = []; }
	        this._tables = tables;
	    }
	    TablesModel.prototype.addTable = function (table) {
	        this._tables.push(table);
	    };
	    Object.defineProperty(TablesModel.prototype, "names", {
	        get: function () {
	            return _.map(this._tables, 'name');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TablesModel.prototype.all = function () {
	        return this._tables;
	    };
	    return TablesModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TablesModel;


/***/ },
/* 65 */
/***/ function(module, exports) {

	module.exports = "<div class=\"content-wrapper\">\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n        <h1>\r\n            {{title}}\r\n        </h1>\r\n        <navigator :navigator=\"navigator\"></navigator>\r\n    </section>\r\n\r\n    <!-- Main content -->\r\n    <section class=\"content\">\r\n\r\n        <!-- Default box -->\r\n        <div class=\"box\">\r\n            <div class=\"box-header with-border\">\r\n                <h3 class=\"box-title\">{{title}}</h3>\r\n            </div>\r\n            <div class=\"box-body form-horizontal\">\r\n                <div class=\"form-group\" v-for=\"field in entity.fields\">\r\n                    <label class=\"col-sm-2 control-label\">{{ field.label }}</label>\r\n                    <div class=\"col-sm-10\">\r\n                        <span class=\"form-control\">{{field.data}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- /.box-body -->\r\n            <div class=\"box-footer\">\r\n                脚部\r\n            </div>\r\n            <!-- /.box-footer-->\r\n        </div>\r\n        <!-- /.box -->\r\n        <template v-if=\"hasSubEntities\">\r\n            <sub-entities :tables=\"tables\"></sub-entities>\r\n        </template>\r\n    </section>\r\n</div>";

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Form_component_1 = __webpack_require__(67);
	var Navigator_component_1 = __webpack_require__(12);
	var Vue = __webpack_require__(6);
	var EntityHierarchies_1 = __webpack_require__(34);
	var Entity_1 = __webpack_require__(23);
	var FormModelFactory_1 = __webpack_require__(71);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	var Alert_component_1 = __webpack_require__(20);
	var uuid = __webpack_require__(76);
	var entity;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(77),
	    data: function () {
	        return {
	            form: {},
	            navigator: [],
	            message: {
	                show: false,
	                title: "",
	                content: "",
	                type: "",
	            },
	            title: "",
	        };
	    },
	    components: {
	        vvForm: Form_component_1.default,
	        Navigator: Navigator_component_1.default,
	        Alert: Alert_component_1.default
	    },
	    events: {
	        submit: function (form) {
	            var _this = this;
	            console.log(form);
	            var chl = uuid.raw();
	            console.log(chl);
	            var jsonData = form.data;
	            console.log(jsonData);
	            var hierarchies = new EntityHierarchies_1.default([{
	                    name: this.$route.params.name,
	                    id: null
	                }]);
	            var entity = new Entity_1.default(hierarchies, form.data);
	            this.$http.put(this.$route.params.name + '/' + entity.getStringId(), jsonData).then(function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作成功！';
	                _this.message.content = '创建成功！';
	                _this.message.type = 'alert-success';
	            }, function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作失败！';
	                _this.message.content = '创建失败，请重试！';
	                _this.message.type = 'alert-danger';
	            });
	        }
	    },
	    computed: {},
	    route: {
	        data: function () {
	            entity = new Entity_1.default(new EntityHierarchies_1.default([{
	                    name: this.$route.params.name,
	                    id: null
	                },]));
	            this.title = '新建 ' + entity.name;
	            this.form = FormModelFactory_1.default.create(entity);
	            console.log('this.form in createdEntity:');
	            console.log(this.form);
	            this.navigator = NavigatorModelFactory_1.default
	                .createCreateEntity(this.$route.params.name);
	        }
	    }
	});


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var FormElement_component_1 = __webpack_require__(68);
	var Vue = __webpack_require__(6);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(70),
	    data: function () {
	        return {};
	    },
	    components: {
	        FormElement: FormElement_component_1.default
	    },
	    props: {
	        form: Object
	    },
	    methods: {
	        submit: function () {
	            this.$dispatch('submit', this.form);
	        }
	    },
	    created: function () {
	        console.log('this.form in Form.com');
	        console.info(this.form);
	    }
	});


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(69),
	    data: function () {
	        return {};
	    },
	    components: {},
	    props: {
	        element: {
	            type: Object,
	            twoWay: true
	        }
	    }
	});


/***/ },
/* 69 */
/***/ function(module, exports) {

	module.exports = "<div class=\"form-group\">\r\n    <label class=\"col-sm-2 control-label\">{{element.label}}</label>\r\n    <div class=\"col-sm-10\" v-if=\"element.type == 1\">\r\n        <input type=\"text\" class=\"form-control\" v-model=\"element.value\" name=\"{{element.elementName}}\"\r\n               id=\"{{element.elementName}}\">\r\n    </div>\r\n    <div class=\"col-sm-10\" v-if=\"element.type == 2\">\r\n        <input type=\"number\" class=\"form-control\" v-model=\"element.value\" name=\"{{element.elementName}}\"\r\n               id=\"{{element.elementName}}\">\r\n    </div>\r\n    <div class=\"col-sm-10\" v-if=\"element.type == 3\">\r\n        <select class=\"form-control\" v-model=\"element.value\">\r\n            <option v-for=\"(k, v) in element.extData\" v-bind:value=\"k\">\r\n                {{ v }}\r\n            </option>\r\n        </select>\r\n    </div>\r\n    <div class=\"col-sm-10\" v-if=\"element.type == 6\">\r\n        <input type=\"text\" class=\"form-control\" v-model=\"element.value\" name=\"{{element.elementName}}\"\r\n               id=\"{{element.elementName}}\">\r\n    </div>\r\n    <div class=\"col-sm-10\" v-if=\"element.type == 4\">\r\n        <input type=\"checkbox\" id=\"{{element.elementName}}\" name=\"{{element.elementName}}\"\r\n               v-if=\"element.value\" checked v-model=\"element.value\">\r\n        <input type=\"checkbox\" id=\"{{element.elementName}}\" name=\"{{element.elementName}}\"\r\n               v-else v-model=\"element.value\">\r\n    </div>\r\n</div>";

/***/ },
/* 70 */
/***/ function(module, exports) {

	module.exports = "<form role=\"form\" class=\"form-horizontal\">\r\n    <template v-for=\"vof in form.valueObjectForms\">\r\n        <div class=\"box\">\r\n            <div class=\"box-header with-border\">\r\n                <h3 class=\"box-title\">{{vof.title}}</h3>\r\n            </div>\r\n            <div class=\"box-body\">\r\n                <template v-for=\"element in vof.elements\">\r\n                    <form-element :element.sync=\"element\"></form-element>\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </template>\r\n\r\n    <div class=\"box\">\r\n        <div class=\"box-body\">\r\n            <template v-for=\"element in form.elements\">\r\n                <form-element :element.sync=\"element\"></form-element>\r\n            </template>\r\n        </div>\r\n        <div class=\"box-footer\">\r\n            <div class=\"form-group\">\r\n                <label class=\"col-sm-2 control-label\"></label>\r\n                <div class=\"col-sm-10\">\r\n                    <button v-on:click=\"submit\" type=\"button\" class=\"btn bg-orange\">\r\n                        <i class=\"fa fa-fw fa-check\"></i> 确定\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- /.box-footer-->\r\n    </div>\r\n    <!-- /.box -->\r\n</form>";

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var tables_1 = __webpack_require__(36);
	var EntityFormModel_1 = __webpack_require__(72);
	var FormModelFactory = (function () {
	    function FormModelFactory() {
	    }
	    FormModelFactory.create = function (entity) {
	        return new EntityFormModel_1.default(entity, tables_1.default[entity.name]);
	    };
	    return FormModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = FormModelFactory;


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ValueObjectFormModel_1 = __webpack_require__(73);
	var FormElementModel_1 = __webpack_require__(74);
	var FormElementModel_2 = __webpack_require__(74);
	var FormElementType_1 = __webpack_require__(75);
	var uuid = __webpack_require__(76);
	var EntityFormModel = (function () {
	    function EntityFormModel(entity, config) {
	        this.entity = entity;
	        this.data = entity.rawData;
	        /* 增加uuid */
	        this.data.commandId = uuid.raw();
	        this.config = config;
	        this.valueObjectForms = [];
	        this.elements = [];
	        this.build();
	    }
	    Object.defineProperty(EntityFormModel.prototype, "name", {
	        get: function () {
	            return this.entity.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EntityFormModel.prototype, "title", {
	        get: function () {
	            return this.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    EntityFormModel.prototype.addItemFromProperty = function (property) {
	        if (property.isBuiltInType) {
	            if (!this.data[property.name]) {
	                this.data[property.name] = '';
	            }
	            this.elements.push(new FormElementModel_1.default(property.name, property.label, this.data, FormElementModel_2.default.typeMap[property.type]));
	        }
	        else if (property.isMap) {
	            if (!this.data[property.name]) {
	                this.data[property.name] = '';
	            }
	            this.elements.push(new FormElementModel_1.default(property.name, property.label, this.data, FormElementType_1.default.SingleSelect, property.map));
	        }
	        else if (property.isValueObject) {
	            this.valueObjectForms.push(new ValueObjectFormModel_1.default(property, this.data));
	        }
	    };
	    EntityFormModel.prototype.hasDisplayableField = function (fieldName) {
	        return this.config.displayableFields[fieldName];
	    };
	    EntityFormModel.prototype.build = function () {
	        this.addItemFromProperty(this.entity.id);
	        for (var _i = 0, _a = this.entity.properties; _i < _a.length; _i++) {
	            var property = _a[_i];
	            if (this.hasDisplayableField(property.name)) {
	                this.addItemFromProperty(property);
	            }
	        }
	    };
	    return EntityFormModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EntityFormModel;
	;


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var FormElementModel_1 = __webpack_require__(74);
	var Property_1 = __webpack_require__(30);
	var FormElementModel_2 = __webpack_require__(74);
	var FormElementType_1 = __webpack_require__(75);
	var ValueObjectFormModel = (function () {
	    function ValueObjectFormModel(property, parentData) {
	        if (parentData === void 0) { parentData = {}; }
	        if (!(property instanceof Property_1.default)) {
	            throw new Error('类型错误');
	        }
	        this.property = property;
	        this.valueObject = property.data;
	        this.parentData = parentData;
	        this.parentData[this.name] = {};
	        this.elements = [];
	        this.build();
	    }
	    Object.defineProperty(ValueObjectFormModel.prototype, "name", {
	        get: function () {
	            return this.property.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValueObjectFormModel.prototype, "title", {
	        get: function () {
	            return _.upperFirst(this.property.name);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ValueObjectFormModel.prototype.addItemFromProperty = function (property) {
	        if (property.isBuiltInType) {
	            this.parentData[this.name][property.name] = property.data ? property.data : "";
	            this.elements.push(new FormElementModel_1.default(property.name, property.label, this.parentData[this.name], FormElementModel_2.default.typeMap[property.type]));
	        }
	        else if (property.isMap) {
	            this.elements.push(new FormElementModel_1.default(property.name, property.label, this.parentData[this.name], FormElementType_1.default.SingleSelect, property.map));
	        }
	        else if (property.isValueObject) {
	            this.parentData[this.name][property.name] = property.data ? property.data : {};
	            var childForm = new ValueObjectFormModel(property, this.parentData[this.name]);
	            for (var _i = 0, _a = childForm.elements; _i < _a.length; _i++) {
	                var element = _a[_i];
	                this.elements.push(element);
	            }
	        }
	    };
	    ValueObjectFormModel.prototype.build = function () {
	        var _this = this;
	        _.map(this.valueObject.properties, function (property) {
	            _this.addItemFromProperty(property);
	        });
	    };
	    return ValueObjectFormModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ValueObjectFormModel;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var FormElementType_1 = __webpack_require__(75);
	var FormElementModel = (function () {
	    function FormElementModel(name, label, parentData, type, extData) {
	        if (type === void 0) { type = FormElementType_1.default.Input; }
	        if (extData === void 0) { extData = null; }
	        this._name = name;
	        this._label = label;
	        this.parentData = parentData;
	        this._type = type;
	        this._extData = extData;
	    }
	    Object.defineProperty(FormElementModel.prototype, "label", {
	        get: function () {
	            return this._label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FormElementModel.prototype, "name", {
	        get: function () {
	            return this._name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FormElementModel.prototype, "value", {
	        get: function () {
	            return this.parentData[this.name];
	        },
	        set: function (value) {
	            this.parentData[this.name] = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FormElementModel.prototype, "type", {
	        get: function () {
	            return this._type;
	        },
	        set: function (value) {
	            this._type = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FormElementModel.prototype, "extData", {
	        get: function () {
	            return this._extData;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    FormElementModel.typeMap = {
	        'bool': FormElementType_1.default.Toggle,
	        'DateTime': FormElementType_1.default.DateTime,
	        'decimal': FormElementType_1.default.Input,
	        'int': FormElementType_1.default.Number,
	        'long': FormElementType_1.default.Number,
	        'string': FormElementType_1.default.Input,
	    };
	    return FormElementModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = FormElementModel;


/***/ },
/* 75 */
/***/ function(module, exports) {

	"use strict";
	var FormElementType;
	(function (FormElementType) {
	    FormElementType[FormElementType["Input"] = 1] = "Input";
	    FormElementType[FormElementType["Number"] = 2] = "Number";
	    FormElementType[FormElementType["SingleSelect"] = 3] = "SingleSelect";
	    FormElementType[FormElementType["Toggle"] = 4] = "Toggle";
	    FormElementType[FormElementType["Date"] = 5] = "Date";
	    FormElementType[FormElementType["DateTime"] = 6] = "DateTime";
	})(FormElementType || (FormElementType = {}));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = FormElementType;


/***/ },
/* 76 */
/***/ function(module, exports) {

	var validator = new RegExp("^[a-z0-9]{32}$", "i");

	function gen(count) {
	  var out = "";
	  for (var i=0; i<count; i++) {
	    out += (((1+Math.random())*0x10000)|0).toString(16).substring(1);
	  }
	  return out;
	}

	function Uuid(uuid) {
	  if (!uuid) throw new TypeError("Invalid argument; `value` has no value.");
	    
	  var value = Uuid.EMPTY;
	  
	  if (uuid && uuid instanceof Uuid) {
	    value = Uuid.toString();

	  } else if (uuid && Object.prototype.toString.call(uuid) === "[object String]" && Uuid.isUuid(uuid)) {
	    value = uuid;
	  }
	  
	  this.equals = function(other) {
	    // Comparing string `value` against provided `uuid` will auto-call
	    // toString on `uuid` for comparison
	    return Uuid.isUuid(other) && value == other;
	  };

	  this.isEmpty = function() {
	    return value === Uuid.EMPTY;
	  };
	  
	  this.toString = function() {
	    return value;
	  };
	  
	  this.toJSON = function() {
	    return value;
	  };
	  
	  Object.defineProperty(this, "value", {
	    get: function() { return value; },
	    enumerable: true
	  });
	};

	Object.defineProperty(Uuid, "EMPTY", {
	  value: "00000000000000000000000000000000"
	});

	Uuid.isUuid = function(value) {
	  return value && (value instanceof Uuid || validator.test(value.toString()));
	};

	Uuid.create = function() {
	  return new Uuid(gen(8));
	};

	Uuid.raw = function() {
	  return gen(8);
	};

	module.exports = Uuid;


/***/ },
/* 77 */
/***/ function(module, exports) {

	module.exports = "<div class=\"content-wrapper\">\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n        <h1>\r\n            {{title}}\r\n        </h1>\r\n        <navigator :navigator=\"navigator\"></navigator>\r\n    </section>\r\n\r\n    <section class=\"content\">\r\n        <alert :show.sync=\"message.show\" :title=\"message.title\" :content=\"message.content\" :type=\"message.type\"></alert>\r\n        <vv-form :form=\"form\"></vv-form>\r\n        {{form.data | json}}\r\n    </section>\r\n</div>";

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Form_component_1 = __webpack_require__(67);
	var Navigator_component_1 = __webpack_require__(12);
	var Vue = __webpack_require__(6);
	var EntityHierarchies_1 = __webpack_require__(34);
	var Entity_1 = __webpack_require__(23);
	var FormModelFactory_1 = __webpack_require__(71);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	var Alert_component_1 = __webpack_require__(20);
	var hierarchies;
	var entity;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(77),
	    data: function () {
	        return {
	            form: {},
	            navigator: [],
	            message: {
	                show: false,
	                title: "",
	                content: "",
	                type: "",
	            },
	        };
	    },
	    components: {
	        vvForm: Form_component_1.default,
	        Navigator: Navigator_component_1.default,
	        Alert: Alert_component_1.default
	    },
	    events: {
	        submit: function (form) {
	            var _this = this;
	            var jsonData = form.data;
	            this.$http.patch(entity.metadata.plural + '/' + entity.getStringId(), jsonData).then(function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作成功！';
	                _this.message.content = '修改成功！';
	                _this.message.type = 'alert-success';
	            }, function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作失败！';
	                _this.message.content = '修改失败，请重试！';
	                _this.message.type = 'alert-danger';
	            });
	        }
	    },
	    computed: {
	        title: function () {
	            return '编辑 ' + this.form.title;
	        }
	    },
	    route: {
	        data: function () {
	            var _this = this;
	            hierarchies = EntityHierarchies_1.default.createFromString(this.$route.params.hierarchies);
	            this.$http.get(hierarchies.apiPath).then(function (response) {
	                entity = new Entity_1.default(hierarchies, response.data);
	                _this.form = FormModelFactory_1.default.create(entity.topLevelEntity);
	                console.info(_this.form);
	                _this.navigator = NavigatorModelFactory_1.default.createEditEntity(hierarchies);
	            });
	        }
	    }
	});


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Form_component_1 = __webpack_require__(67);
	var Navigator_component_1 = __webpack_require__(12);
	var Vue = __webpack_require__(6);
	var Entity_1 = __webpack_require__(23);
	var EntityHierarchies_1 = __webpack_require__(34);
	var MergePatchFormModelFactory_1 = __webpack_require__(80);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	var Alert_component_1 = __webpack_require__(20);
	var hierarchies;
	var aggregate;
	var lastHierarchy;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(81),
	    data: function () {
	        return {
	            postEntity: {},
	            form: null,
	            navigator: [],
	            message: {
	                show: false,
	                title: "",
	                content: "",
	                type: "",
	            },
	        };
	    },
	    components: {
	        vvForm: Form_component_1.default,
	        Navigator: Navigator_component_1.default,
	        Alert: Alert_component_1.default
	    },
	    computed: {
	        title: function () {
	            if (lastHierarchy) {
	                return "\u7F16\u8F91 " + lastHierarchy.name + "\uFF1A";
	            }
	        }
	    },
	    events: {
	        submit: function (form) {
	            var _this = this;
	            this.$http.patch(hierarchies.rootName + '/' + aggregate.getStringId(), this.postEntity).then(function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作成功！';
	                _this.message.content = '修改成功！';
	                _this.message.type = 'alert-success';
	            }, function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作失败！';
	                _this.message.content = '修改失败，请重试！';
	                _this.message.type = 'alert-danger';
	            });
	        }
	    },
	    route: {
	        data: function () {
	            var _this = this;
	            hierarchies = EntityHierarchies_1.default.createFromString(this.$route.params.hierarchies);
	            var parentHierarchies = _.cloneDeep(hierarchies);
	            lastHierarchy = parentHierarchies.hierarchies.pop();
	            this.$http.get(hierarchies.apiRootPath).then(function (response) {
	                aggregate = new Entity_1.default(hierarchies.rootHierarchies, response.data);
	                var postData = {};
	                _this.form = MergePatchFormModelFactory_1.default.create(parentHierarchies, _.lowerFirst(lastHierarchy.name), aggregate, postData, lastHierarchy.id);
	                _this.postEntity = postData;
	                _this.navigator = NavigatorModelFactory_1.default.createEditSubEntity(hierarchies);
	            }, function (response) {
	                // error callback
	            });
	        }
	    }
	});


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Entity_1 = __webpack_require__(23);
	var FormModelFactory_1 = __webpack_require__(71);
	var MergePatchFormModelFactory = (function () {
	    function MergePatchFormModelFactory() {
	    }
	    MergePatchFormModelFactory.create = function (hierarchies, collectionName, aggregate, data, id) {
	        if (id === void 0) { id = null; }
	        collectionName = _.lowerFirst(collectionName);
	        data['commandType'] = 'MergePatch';
	        data['version'] = aggregate.rawData['version'];
	        data[aggregate.id.name] = _.isObject(aggregate.id.data)
	            ? aggregate.id.data.rawData
	            : aggregate.id.data;
	        var current = data;
	        var currentEntity = aggregate;
	        var hs = _.cloneDeep(hierarchies.hierarchies);
	        hs.shift();
	        _.map(hs, function (h) {
	            name = _.lowerFirst(h.name);
	            var subEntity = currentEntity.entities(name).subEntity(h.id);
	            var subData = {
	                version: subEntity.rawData['version'],
	                commandType: 'MergePatch',
	            };
	            subData[subEntity.idName] = subEntity.rawId;
	            subData['version'] = subEntity.rawData['version'];
	            current[name] = [subData];
	            current = current[name][0];
	            currentEntity = subEntity;
	        });
	        if (id) {
	            var entities = currentEntity.entities(collectionName);
	            if (!entities) {
	                throw new Error(collectionName + " \u4E3A\u7A7A");
	            }
	            currentEntity = entities.subEntity(id);
	            //console.log(currentEntity.rawData);
	            if (!currentEntity) {
	                throw new Error("\u4E0D\u5B58\u5728 id \u4E3A " + id + " \u7684 " + collectionName);
	            }
	            currentEntity = currentEntity.topLevelEntity;
	            currentEntity.rawData['commandType'] = 'Create';
	            current[collectionName] = [currentEntity.rawData];
	        }
	        else {
	            current[collectionName] = [{ 'commandType': 'Create' }];
	        }
	        var entity = new Entity_1.default(hierarchies.concat([{
	                name: collectionName,
	                id: id
	            }]), current[collectionName][0]);
	        return FormModelFactory_1.default.create(entity);
	    };
	    return MergePatchFormModelFactory;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = MergePatchFormModelFactory;


/***/ },
/* 81 */
/***/ function(module, exports) {

	module.exports = "<div class=\"content-wrapper\">\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n        <h1>\r\n            {{title}}\r\n        </h1>\r\n        <navigator :navigator=\"navigator\"></navigator>\r\n    </section>\r\n\r\n    <section class=\"content\">\r\n        <alert :show.sync=\"message.show\" :title=\"message.title\" :content=\"message.content\" :type=\"message.type\"></alert>\r\n        <vv-form v-if=\"form\" :form=\"form\"></vv-form>\r\n        {{postEntity|json}}\r\n    </section>\r\n</div>";

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Form_component_1 = __webpack_require__(67);
	var Navigator_component_1 = __webpack_require__(12);
	var Vue = __webpack_require__(6);
	var Entity_1 = __webpack_require__(23);
	var EntityHierarchies_1 = __webpack_require__(34);
	var MergePatchFormModelFactory_1 = __webpack_require__(80);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	var Alert_component_1 = __webpack_require__(20);
	var hierarchies;
	var aggregate;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(81),
	    data: function () {
	        return {
	            postEntity: {},
	            form: null,
	            navigator: [],
	            message: {
	                show: false,
	                title: "",
	                content: "",
	                type: "",
	            },
	        };
	    },
	    components: {
	        vvForm: Form_component_1.default,
	        Navigator: Navigator_component_1.default,
	        Alert: Alert_component_1.default
	    },
	    computed: {
	        title: function () {
	            return "\u521B\u5EFA " + this.$route.params.name + " \u7684\u5B9E\u4F53";
	        }
	    },
	    events: {
	        submit: function (form) {
	            var _this = this;
	            this.$http.patch(hierarchies.rootName + '/' + aggregate.getStringId(), this.postEntity).then(function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作成功！';
	                _this.message.content = '创建成功！';
	                _this.message.type = 'alert-success';
	            }, function (response) {
	                _this.message.show = true;
	                _this.message.title = '操作失败！';
	                _this.message.content = '创建失败，请重试！';
	                _this.message.type = 'alert-danger';
	            });
	        }
	    },
	    route: {
	        data: function () {
	            var _this = this;
	            hierarchies = EntityHierarchies_1.default.createFromString(this.$route.params.hierarchies);
	            this.$http.get(hierarchies.apiRootPath).then(function (response) {
	                aggregate = new Entity_1.default(hierarchies.rootHierarchies, response.data);
	                var postData = {};
	                _this.form = MergePatchFormModelFactory_1.default.create(hierarchies, _.lowerFirst(_this.$route.params.name), aggregate, postData);
	                _this.postEntity = postData;
	                _this.navigator = NavigatorModelFactory_1.default.createCreateSubEntity(hierarchies, _this.$route.params.name);
	            }, function (response) {
	                // error callback
	            });
	        }
	    }
	});


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	var Tree_component_1 = __webpack_require__(84);
	var trees_1 = __webpack_require__(89);
	var Navigator_component_1 = __webpack_require__(12);
	var TreeNodeModel_1 = __webpack_require__(86);
	var _ = __webpack_require__(92);
	var AggregatesMetadata_1 = __webpack_require__(24);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	var TreeCollection_1 = __webpack_require__(87);
	var DetailModelFactory_1 = __webpack_require__(53);
	var aggregatesMetadata = AggregatesMetadata_1.default.getInstance();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(94),
	    data: function () {
	        return {
	            nodes: [],
	            selected: {},
	            entityMetadata: null,
	            navigator: null,
	        };
	    },
	    props: {},
	    components: {
	        Tree: Tree_component_1.default,
	        Navigator: Navigator_component_1.default
	    },
	    computed: {
	        title: function () {
	            return this.$route.params.name;
	        },
	    },
	    methods: {
	        updateDetail: function (entity) {
	            this.selected = DetailModelFactory_1.default.create(entity);
	        }
	    },
	    route: {
	        data: function () {
	            var _this = this;
	            var entityType = _.find(trees_1.TREES_METADATA, { plural: this.$route.params.name }).nodeContentType;
	            this.entityMetadata = _.find(aggregatesMetadata.all(), { name: entityType });
	            this.$http.get(this.$route.params.name).then(function (response) {
	                var entities = new TreeCollection_1.default(_this.$route.params.name, response.data);
	                _this.nodes = _.map(_.map(entities.all(), function (entity) {
	                    var node = new TreeNodeModel_1.default();
	                    node.title = entity.id.toString();
	                    node.id = entity.id.toString();
	                    node.data = entity;
	                    return node;
	                }));
	                _this.navigator = NavigatorModelFactory_1.default
	                    .createTree(_this.$route.params.name);
	            }, function (response) {
	                // error callback
	            });
	        }
	    },
	    ready: function () {
	        this.$watch('$route.params.name', function () {
	            this.selected = {};
	        });
	    }
	});


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	var TreeNode_component_1 = __webpack_require__(85);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(91),
	    data: function () {
	        return {
	            selectedNode: {},
	        };
	    },
	    props: {
	        nodes: Array,
	    },
	    computed: {
	        container: function () {
	            return this.$parent;
	        },
	        tree: function () {
	            return this;
	        }
	    },
	    components: {
	        TreeNode: TreeNode_component_1.default
	    },
	    methods: {}
	});


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	var TreeNode_component_1 = __webpack_require__(85);
	var TreeNodeModel_1 = __webpack_require__(86);
	var TreeCollection_1 = __webpack_require__(87);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    name: 'tree-node',
	    template: __webpack_require__(90),
	    data: function () {
	        return {};
	    },
	    props: {
	        node: Object
	    },
	    components: {
	        'tree-node': TreeNode_component_1.default,
	    },
	    computed: {
	        container: function () {
	            return this.$parent.container;
	        },
	        tree: function () {
	            return this.$parent.tree;
	        }
	    },
	    methods: {
	        updateChildren: function (node) {
	            var _this = this;
	            if (_.isEmpty(node.children)) {
	                this.$http.get(this.$route.params.name + '?parentId=' + node.id).then(function (response) {
	                    var entities = new TreeCollection_1.default(_this.$route.params.name, response.data);
	                    node.setChildren(_.map(entities.all(), function (entity) {
	                        var node = new TreeNodeModel_1.default();
	                        node.title = entity.id.toString();
	                        node.id = entity.id.toString();
	                        node.data = entity;
	                        return node;
	                    }));
	                }, function (response) {
	                    // error callback
	                });
	            }
	            node.folded = !node.folded;
	        },
	        onSelected: function (node) {
	            if (!_.isEmpty(this.tree.selectedNode)) {
	                this.tree.selectedNode.selected = false;
	            }
	            node.selected = true;
	            this.tree.selectedNode = node;
	            this.container.updateDetail(node.data);
	        },
	    }
	});


/***/ },
/* 86 */
/***/ function(module, exports) {

	"use strict";
	var TreeNodeModel = (function () {
	    function TreeNodeModel() {
	        this.level = 0;
	        this.folded = true; //是否折叠
	        this.children = [];
	        this.selected = false;
	    }
	    Object.defineProperty(TreeNodeModel.prototype, "icon", {
	        get: function () {
	            if (this.folded) {
	                return 'glyphicon-plus';
	            }
	            else {
	                return 'glyphicon-minus';
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TreeNodeModel.prototype.setChildren = function (children) {
	        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
	            var child = children_1[_i];
	            child.level = this.level + 1;
	        }
	        this.children = children;
	    };
	    TreeNodeModel.prototype.addChild = function (child) {
	        child.level = this.level + 1;
	        this.children.push(child);
	    };
	    return TreeNodeModel;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TreeNodeModel;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var TreeMetadata_1 = __webpack_require__(88);
	var trees_1 = __webpack_require__(89);
	var Entity_1 = __webpack_require__(23);
	var AggregatesMetadata_1 = __webpack_require__(24);
	var ValueObject_1 = __webpack_require__(31);
	var EntityHierarchies_1 = __webpack_require__(34);
	var TreeCollection = (function () {
	    function TreeCollection(name, data) {
	        if (data === void 0) { data = []; }
	        this.data = data;
	        this.treeMetadata = new TreeMetadata_1.default(_.find(trees_1.TREES_METADATA, function (metadata) {
	            return metadata.plural == name;
	        }));
	        this.entityMetadata = AggregatesMetadata_1.default.getInstance().entity(this.treeMetadata.nodeContentType);
	    }
	    Object.defineProperty(TreeCollection.prototype, "name", {
	        get: function () {
	            return this.treeMetadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TreeCollection.prototype, "entityName", {
	        get: function () {
	            return this.entityMetadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TreeCollection.prototype, "label", {
	        get: function () {
	            return this.treeMetadata.collectionLabel;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * 获取下级实体
	     *
	     * @param id
	     */
	    TreeCollection.prototype.subEntity = function (id) {
	        return _.find(this.all(), function (entity) {
	            return entity.getStringId(false) == id;
	        });
	    };
	    TreeCollection.prototype.all = function () {
	        var entities = [];
	        for (var _i = 0, _a = this.data; _i < _a.length; _i++) {
	            var entity = _a[_i];
	            var id = entity[this.entityMetadata.id.name];
	            if (_.isObject(id)) {
	                id = new ValueObject_1.default(this.entityMetadata.id.name, id);
	                id = id.toString();
	            }
	            var hierarchies = new EntityHierarchies_1.default([{
	                    name: this.entityName,
	                    id: id
	                }]);
	            entities.push(new Entity_1.default(hierarchies, entity));
	        }
	        return entities;
	    };
	    return TreeCollection;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TreeCollection;


/***/ },
/* 88 */
/***/ function(module, exports) {

	"use strict";
	var TreeMetadata = (function () {
	    function TreeMetadata(metadata) {
	        this.rawMetadata = metadata;
	    }
	    Object.defineProperty(TreeMetadata.prototype, "name", {
	        get: function () {
	            return this.rawMetadata.name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TreeMetadata.prototype, "plural", {
	        get: function () {
	            return this.rawMetadata.plural;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TreeMetadata.prototype, "label", {
	        get: function () {
	            return this.rawMetadata.label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TreeMetadata.prototype, "collectionLabel", {
	        get: function () {
	            return this.rawMetadata.collectionLabel;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TreeMetadata.prototype, "nodeContentType", {
	        get: function () {
	            return this.rawMetadata.nodeContentType;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return TreeMetadata;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = TreeMetadata;


/***/ },
/* 89 */
/***/ function(module, exports) {

	"use strict";
	exports.TREES_METADATA = [
	    {
	        "name": "OrganizationTree",
	        "plural": "OrganizationTrees",
	        "label": "Organization Tree",
	        "collectionLabel": "Organization Trees",
	        "nodeContentType": "Organization"
	    },
	    {
	        "name": "LocatorTree",
	        "plural": "LocatorTrees",
	        "label": "Locator Tree",
	        "collectionLabel": "Locator Trees",
	        "nodeContentType": "Locator"
	    }
	];


/***/ },
/* 90 */
/***/ function(module, exports) {

	module.exports = "<li class=\"list-group-item\" v-on:click=\"onSelected(node)\" :class=\"{'active': node.selected}\">\r\n    <span class=\"indent\" v-for=\"n in node.level\"></span>\r\n    <span class=\"icon expand-icon glyphicon {{node.icon}}\" v-on:click.stop=\"updateChildren(node)\"></span>\r\n    <span class=\"icon node-icon\"></span>\r\n    {{node.title}}\r\n</li>\r\n<template v-if=\"!node.folded\" v-for=\"child in node.children\">\r\n    <tree-node :node=\"child\"></tree-node>\r\n</template>";

/***/ },
/* 91 */
/***/ function(module, exports) {

	module.exports = "<div class=\"treeview\">\r\n    <ul class=\"list-group\">\r\n        <template v-for=\"node in nodes\">\r\n            <tree-node :node=\"node\"></tree-node>\r\n        </template>\r\n    </ul>\r\n</div>";

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * @license
	 * Lodash <https://lodash.com/>
	 * Copyright JS Foundation and other contributors <https://js.foundation/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;

	  /** Used as the semantic version number. */
	  var VERSION = '4.17.4';

	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;

	  /** Error message constants. */
	  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
	      FUNC_ERROR_TEXT = 'Expected a function';

	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';

	  /** Used as the maximum memoize cache size. */
	  var MAX_MEMOIZE_SIZE = 500;

	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';

	  /** Used to compose bitmasks for cloning. */
	  var CLONE_DEEP_FLAG = 1,
	      CLONE_FLAT_FLAG = 2,
	      CLONE_SYMBOLS_FLAG = 4;

	  /** Used to compose bitmasks for value comparisons. */
	  var COMPARE_PARTIAL_FLAG = 1,
	      COMPARE_UNORDERED_FLAG = 2;

	  /** Used to compose bitmasks for function metadata. */
	  var WRAP_BIND_FLAG = 1,
	      WRAP_BIND_KEY_FLAG = 2,
	      WRAP_CURRY_BOUND_FLAG = 4,
	      WRAP_CURRY_FLAG = 8,
	      WRAP_CURRY_RIGHT_FLAG = 16,
	      WRAP_PARTIAL_FLAG = 32,
	      WRAP_PARTIAL_RIGHT_FLAG = 64,
	      WRAP_ARY_FLAG = 128,
	      WRAP_REARG_FLAG = 256,
	      WRAP_FLIP_FLAG = 512;

	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';

	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 800,
	      HOT_SPAN = 16;

	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;

	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;

	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

	  /** Used to associate wrap methods with their bit flags. */
	  var wrapFlags = [
	    ['ary', WRAP_ARY_FLAG],
	    ['bind', WRAP_BIND_FLAG],
	    ['bindKey', WRAP_BIND_KEY_FLAG],
	    ['curry', WRAP_CURRY_FLAG],
	    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	    ['flip', WRAP_FLIP_FLAG],
	    ['partial', WRAP_PARTIAL_FLAG],
	    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	    ['rearg', WRAP_REARG_FLAG]
	  ];

	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      asyncTag = '[object AsyncFunction]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      domExcTag = '[object DOMException]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      nullTag = '[object Null]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      proxyTag = '[object Proxy]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      undefinedTag = '[object Undefined]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';

	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';

	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
	      reUnescapedHtml = /[&<>"']/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      reLeadingDot = /^\./,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);

	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;

	  /** Used to match wrap detail comments. */
	  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
	      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	      reSplitDetails = /,? & /;

	  /** Used to match words composed of alphanumeric characters. */
	  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;

	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;

	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;

	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;

	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;

	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;

	  /** Used to match Latin Unicode letters (excluding mathematical operators). */
	  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;

	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f',
	      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	      rsComboSymbolsRange = '\\u20d0-\\u20ff',
	      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsPunctuationRange = '\\u2000-\\u206f',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';

	  /** Used to compose unicode regexes. */
	  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
	      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');

	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');

	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	  /** Used to match complex or compound words. */
	  var reUnicodeWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
	    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
	    rsUpper + '+' + rsOptContrUpper,
	    rsOrdUpper,
	    rsOrdLower,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');

	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
	    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];

	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;

	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;

	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;

	  /** Used to map Latin Unicode letters to basic Latin letters. */
	  var deburredLetters = {
	    // Latin-1 Supplement block.
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss',
	    // Latin Extended-A block.
	    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	    '\u0134': 'J',  '\u0135': 'j',
	    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	    '\u0174': 'W',  '\u0175': 'w',
	    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	    '\u0132': 'IJ', '\u0133': 'ij',
	    '\u0152': 'Oe', '\u0153': 'oe',
	    '\u0149': "'n", '\u017f': 's'
	  };

	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;'
	  };

	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'"
	  };

	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;

	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	  /** Detect free variable `self`. */
	  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	  /** Used as a reference to the global object. */
	  var root = freeGlobal || freeSelf || Function('return this')();

	  /** Detect free variable `exports`. */
	  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	  /** Detect free variable `module`. */
	  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = freeModule && freeModule.exports === freeExports;

	  /** Detect free variable `process` from Node.js. */
	  var freeProcess = moduleExports && freeGlobal.process;

	  /** Used to access faster Node.js helpers. */
	  var nodeUtil = (function() {
	    try {
	      return freeProcess && freeProcess.binding && freeProcess.binding('util');
	    } catch (e) {}
	  }());

	  /* Node.js helper references. */
	  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
	      nodeIsDate = nodeUtil && nodeUtil.isDate,
	      nodeIsMap = nodeUtil && nodeUtil.isMap,
	      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
	      nodeIsSet = nodeUtil && nodeUtil.isSet,
	      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `map.set` because it's not chainable in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }

	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    // Don't return `set.add` because it's not chainable in IE 11.
	    set.add(value);
	    return set;
	  }

	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    switch (args.length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }

	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array == null ? 0 : array.length;

	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }

	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    var length = array == null ? 0 : array.length;
	    return !!length && baseIndexOf(array, value, 0) > -1;
	  }

	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        result = Array(length);

	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }

	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;

	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array == null ? 0 : array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;

	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  var asciiSize = baseProperty('length');

	  /**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function asciiToArray(string) {
	    return string.split('');
	  }

	  /**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function asciiWords(string) {
	    return string.match(reAsciiWord) || [];
	  }

	  /**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFindKey(collection, predicate, eachFunc) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = key;
	        return false;
	      }
	    });
	    return result;
	  }

	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 1 : -1);

	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    return value === value
	      ? strictIndexOf(array, value, fromIndex)
	      : baseFindIndex(array, baseIsNaN, fromIndex);
	  }

	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */
	  function baseIsNaN(value) {
	    return value !== value;
	  }

	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array == null ? 0 : array.length;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }

	  /**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function baseProperty(key) {
	    return function(object) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function basePropertyOf(object) {
	    return function(key) {
	      return object == null ? undefined : object[key];
	    };
	  }

	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }

	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;

	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }

	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;

	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);

	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }

	  /**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }

	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }

	  /**
	   * Checks if a `cache` value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */
	  function cacheHas(cache, key) {
	    return cache.has(key);
	  }

	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;

	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;

	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;

	    while (length--) {
	      if (array[length] === placeholder) {
	        ++result;
	      }
	    }
	    return result;
	  }

	  /**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  var deburrLetter = basePropertyOf(deburredLetters);

	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  var escapeHtmlChar = basePropertyOf(htmlEscapes);

	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }

	  /**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */
	  function getValue(object, key) {
	    return object == null ? undefined : object[key];
	  }

	  /**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */
	  function hasUnicode(string) {
	    return reHasUnicode.test(string);
	  }

	  /**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */
	  function hasUnicodeWord(string) {
	    return reHasUnicodeWord.test(string);
	  }

	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];

	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }

	  /**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);

	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }

	  /**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function(arg) {
	      return func(transform(arg));
	    };
	  }

	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }

	  /**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }

	  /**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */
	  function setToPairs(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = [value, value];
	    });
	    return result;
	  }

	  /**
	   * A specialized version of `_.indexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictIndexOf(array, value, fromIndex) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * A specialized version of `_.lastIndexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictLastIndexOf(array, value, fromIndex) {
	    var index = fromIndex + 1;
	    while (index--) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return index;
	  }

	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    return hasUnicode(string)
	      ? unicodeSize(string)
	      : asciiSize(string);
	  }

	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return hasUnicode(string)
	      ? unicodeToArray(string)
	      : asciiToArray(string);
	  }

	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

	  /**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  function unicodeSize(string) {
	    var result = reUnicode.lastIndex = 0;
	    while (reUnicode.test(string)) {
	      ++result;
	    }
	    return result;
	  }

	  /**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function unicodeToArray(string) {
	    return string.match(reUnicode) || [];
	  }

	  /**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function unicodeWords(string) {
	    return string.match(reUnicodeWord) || [];
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  var runInContext = (function runInContext(context) {
	    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

	    /** Built-in constructor references. */
	    var Array = context.Array,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;

	    /** Used for built-in method references. */
	    var arrayProto = Array.prototype,
	        funcProto = Function.prototype,
	        objectProto = Object.prototype;

	    /** Used to detect overreaching core-js shims. */
	    var coreJsData = context['__core-js_shared__'];

	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = funcProto.toString;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;

	    /** Used to generate unique IDs. */
	    var idCounter = 0;

	    /** Used to detect methods masquerading as native. */
	    var maskSrcKey = (function() {
	      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	      return uid ? ('Symbol(src)_1.' + uid) : '';
	    }());

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var nativeObjectToString = objectProto.toString;

	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);

	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;

	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );

	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
	        getPrototype = overArg(Object.getPrototypeOf, Object),
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        splice = arrayProto.splice,
	        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
	        symIterator = Symbol ? Symbol.iterator : undefined,
	        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	    var defineProperty = (function() {
	      try {
	        var func = getNative(Object, 'defineProperty');
	        func({}, '', {});
	        return func;
	      } catch (e) {}
	    }());

	    /** Mocked built-ins. */
	    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
	        ctxNow = Date && Date.now !== root.Date.now && Date.now,
	        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetSymbols = Object.getOwnPropertySymbols,
	        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = overArg(Object.keys, Object),
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeNow = Date.now,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReverse = arrayProto.reverse;

	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');

	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;

	    /** Used to lookup unminified function names. */
	    var realNames = {};

	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);

	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array and iteratees accept only
	     * one argument. The heuristic for whether a section qualifies for shortcut
	     * fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} proto The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    var baseCreate = (function() {
	      function object() {}
	      return function(proto) {
	        if (!isObject(proto)) {
	          return {};
	        }
	        if (objectCreate) {
	          return objectCreate(proto);
	        }
	        object.prototype = proto;
	        var result = new object;
	        object.prototype = undefined;
	        return result;
	      };
	    }());

	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }

	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }

	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
	     * following template settings to use alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };

	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;

	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }

	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }

	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }

	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);

	      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];

	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;

	        var iterIndex = -1,
	            value = array[index];

	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);

	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }

	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Hash(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */
	    function hashClear() {
	      this.__data__ = nativeCreate ? nativeCreate(null) : {};
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(key) {
	      var result = this.has(key) && delete this.__data__[key];
	      this.size -= result ? 1 : 0;
	      return result;
	    }

	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(key) {
	      var data = this.__data__;
	      if (nativeCreate) {
	        var result = data[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(data, key) ? data[key] : undefined;
	    }

	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(key) {
	      var data = this.__data__;
	      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	    }

	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */
	    function hashSet(key, value) {
	      var data = this.__data__;
	      this.size += this.has(key) ? 0 : 1;
	      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	      return this;
	    }

	    // Add methods to `Hash`.
	    Hash.prototype.clear = hashClear;
	    Hash.prototype['delete'] = hashDelete;
	    Hash.prototype.get = hashGet;
	    Hash.prototype.has = hashHas;
	    Hash.prototype.set = hashSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function ListCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */
	    function listCacheClear() {
	      this.__data__ = [];
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function listCacheDelete(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = data.length - 1;
	      if (index == lastIndex) {
	        data.pop();
	      } else {
	        splice.call(data, index, 1);
	      }
	      --this.size;
	      return true;
	    }

	    /**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function listCacheGet(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      return index < 0 ? undefined : data[index][1];
	    }

	    /**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function listCacheHas(key) {
	      return assocIndexOf(this.__data__, key) > -1;
	    }

	    /**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */
	    function listCacheSet(key, value) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);

	      if (index < 0) {
	        ++this.size;
	        data.push([key, value]);
	      } else {
	        data[index][1] = value;
	      }
	      return this;
	    }

	    // Add methods to `ListCache`.
	    ListCache.prototype.clear = listCacheClear;
	    ListCache.prototype['delete'] = listCacheDelete;
	    ListCache.prototype.get = listCacheGet;
	    ListCache.prototype.has = listCacheHas;
	    ListCache.prototype.set = listCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function MapCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;

	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapCacheClear() {
	      this.size = 0;
	      this.__data__ = {
	        'hash': new Hash,
	        'map': new (Map || ListCache),
	        'string': new Hash
	      };
	    }

	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapCacheDelete(key) {
	      var result = getMapData(this, key)['delete'](key);
	      this.size -= result ? 1 : 0;
	      return result;
	    }

	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapCacheGet(key) {
	      return getMapData(this, key).get(key);
	    }

	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapCacheHas(key) {
	      return getMapData(this, key).has(key);
	    }

	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapCacheSet(key, value) {
	      var data = getMapData(this, key),
	          size = data.size;

	      data.set(key, value);
	      this.size += data.size == size ? 0 : 1;
	      return this;
	    }

	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapCacheClear;
	    MapCache.prototype['delete'] = mapCacheDelete;
	    MapCache.prototype.get = mapCacheGet;
	    MapCache.prototype.has = mapCacheHas;
	    MapCache.prototype.set = mapCacheSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values == null ? 0 : values.length;

	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.add(values[index]);
	      }
	    }

	    /**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */
	    function setCacheAdd(value) {
	      this.__data__.set(value, HASH_UNDEFINED);
	      return this;
	    }

	    /**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function setCacheHas(value) {
	      return this.__data__.has(value);
	    }

	    // Add methods to `SetCache`.
	    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	    SetCache.prototype.has = setCacheHas;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Stack(entries) {
	      var data = this.__data__ = new ListCache(entries);
	      this.size = data.size;
	    }

	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = new ListCache;
	      this.size = 0;
	    }

	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          result = data['delete'](key);

	      this.size = data.size;
	      return result;
	    }

	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      return this.__data__.get(key);
	    }

	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      return this.__data__.has(key);
	    }

	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__;
	      if (data instanceof ListCache) {
	        var pairs = data.__data__;
	        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	          pairs.push([key, value]);
	          this.size = ++data.size;
	          return this;
	        }
	        data = this.__data__ = new MapCache(pairs);
	      }
	      data.set(key, value);
	      this.size = data.size;
	      return this;
	    }

	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */
	    function arrayLikeKeys(value, inherited) {
	      var isArr = isArray(value),
	          isArg = !isArr && isArguments(value),
	          isBuff = !isArr && !isArg && isBuffer(value),
	          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	          skipIndexes = isArr || isArg || isBuff || isType,
	          result = skipIndexes ? baseTimes(value.length, String) : [],
	          length = result.length;

	      for (var key in value) {
	        if ((inherited || hasOwnProperty.call(value, key)) &&
	            !(skipIndexes && (
	               // Safari 9 has enumerable `arguments.length` in strict mode.
	               key == 'length' ||
	               // Node.js 0.10 has enumerable non-index properties on buffers.
	               (isBuff && (key == 'offset' || key == 'parent')) ||
	               // PhantomJS 2 has enumerable non-index properties on typed arrays.
	               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	               // Skip index properties.
	               isIndex(key, length)
	            ))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `_.sample` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @returns {*} Returns the random element.
	     */
	    function arraySample(array) {
	      var length = array.length;
	      return length ? array[baseRandom(0, length - 1)] : undefined;
	    }

	    /**
	     * A specialized version of `_.sampleSize` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function arraySampleSize(array, n) {
	      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
	    }

	    /**
	     * A specialized version of `_.shuffle` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function arrayShuffle(array) {
	      return shuffleSelf(copyArray(array));
	    }

	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }

	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }

	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }

	    /**
	     * The base implementation of `_.assignIn` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssignIn(object, source) {
	      return object && copyObject(source, keysIn(source), object);
	    }

	    /**
	     * The base implementation of `assignValue` and `assignMergeValue` without
	     * value checks.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function baseAssignValue(object, key, value) {
	      if (key == '__proto__' && defineProperty) {
	        defineProperty(object, key, {
	          'configurable': true,
	          'enumerable': true,
	          'value': value,
	          'writable': true
	        });
	      } else {
	        object[key] = value;
	      }
	    }

	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Array} Returns the picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          length = paths.length,
	          result = Array(length),
	          skip = object == null;

	      while (++index < length) {
	        result[index] = skip ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }

	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Deep clone
	     *  2 - Flatten inherited properties
	     *  4 - Clone symbols
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, bitmask, customizer, key, object, stack) {
	      var result,
	          isDeep = bitmask & CLONE_DEEP_FLAG,
	          isFlat = bitmask & CLONE_FLAT_FLAG,
	          isFull = bitmask & CLONE_SYMBOLS_FLAG;

	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;

	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          result = (isFlat || isFunc) ? {} : initCloneObject(value);
	          if (!isDeep) {
	            return isFlat
	              ? copySymbolsIn(value, baseAssignIn(result, value))
	              : copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);

	      var keysFunc = isFull
	        ? (isFlat ? getAllKeysIn : getAllKeys)
	        : (isFlat ? keysIn : keys);

	      var props = isArr ? undefined : keysFunc(value);
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        // Recursively populate clone (susceptible to call stack limits).
	        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseConforms(source) {
	      var props = keys(source);
	      return function(object) {
	        return baseConformsTo(object, source, props);
	      };
	    }

	    /**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */
	    function baseConformsTo(object, source, props) {
	      var length = props.length;
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (length--) {
	        var key = props[length],
	            predicate = source[key],
	            value = object[key];

	        if ((value === undefined && !(key in object)) || !predicate(value)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;

	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee == null ? value : iteratee(value);

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);

	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);

	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }

	    /**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */
	    function baseExtremum(array, iteratee, comparator) {
	      var index = -1,
	          length = array.length;

	      while (++index < length) {
	        var value = array[index],
	            current = iteratee(value);

	        if (current != null && (computed === undefined
	              ? (current === current && !isSymbol(current))
	              : comparator(current, computed)
	            )) {
	          var computed = current,
	              result = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;

	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;

	      predicate || (predicate = isFlattenable);
	      result || (result = []);

	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);

	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }

	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = castPath(path, object);

	      var index = 0,
	          length = path.length;

	      while (object != null && index < length) {
	        object = object[toKey(path[index++])];
	      }
	      return (index && index == length) ? object : undefined;
	    }

	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	    }

	    /**
	     * The base implementation of `getTag` without fallbacks for buggy environments.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function baseGetTag(value) {
	      if (value == null) {
	        return value === undefined ? undefinedTag : nullTag;
	      }
	      return (symToStringTag && symToStringTag in Object(value))
	        ? getRawTag(value)
	        : objectToString(value);
	    }

	    /**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */
	    function baseGt(value, other) {
	      return value > other;
	    }

	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      return object != null && hasOwnProperty.call(object, key);
	    }

	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return object != null && key in Object(object);
	    }

	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }

	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];

	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];

	      var index = -1,
	          seen = caches[0];

	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      var func = object == null ? object : object[toKey(last(path))];
	      return func == null ? undefined : apply(func, object, args);
	    }

	    /**
	     * The base implementation of `_.isArguments`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     */
	    function baseIsArguments(value) {
	      return isObjectLike(value) && baseGetTag(value) == argsTag;
	    }

	    /**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */
	    function baseIsArrayBuffer(value) {
	      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
	    }

	    /**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */
	    function baseIsDate(value) {
	      return isObjectLike(value) && baseGetTag(value) == dateTag;
	    }

	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Unordered comparison
	     *  2 - Partial comparison
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, bitmask, customizer, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	    }

	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = objIsArr ? arrayTag : getTag(object),
	          othTag = othIsArr ? arrayTag : getTag(other);

	      objTag = objTag == argsTag ? objectTag : objTag;
	      othTag = othTag == argsTag ? objectTag : othTag;

	      var objIsObj = objTag == objectTag,
	          othIsObj = othTag == objectTag,
	          isSameTag = objTag == othTag;

	      if (isSameTag && isBuffer(object)) {
	        if (!isBuffer(other)) {
	          return false;
	        }
	        objIsArr = true;
	        objIsObj = false;
	      }
	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	      }
	      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;

	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	    }

	    /**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */
	    function baseIsMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }

	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;

	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];

	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */
	    function baseIsNative(value) {
	      if (!isObject(value) || isMasked(value)) {
	        return false;
	      }
	      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }

	    /**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */
	    function baseIsRegExp(value) {
	      return isObjectLike(value) && baseGetTag(value) == regexpTag;
	    }

	    /**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */
	    function baseIsSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }

	    /**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */
	    function baseIsTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	    }

	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }

	    /**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      if (!isPrototype(object)) {
	        return nativeKeys(object);
	      }
	      var result = [];
	      for (var key in Object(object)) {
	        if (hasOwnProperty.call(object, key) && key != 'constructor') {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      if (!isObject(object)) {
	        return nativeKeysIn(object);
	      }
	      var isProto = isPrototype(object),
	          result = [];

	      for (var key in object) {
	        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */
	    function baseLt(value, other) {
	      return value < other;
	    }

	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }

	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(toKey(path), srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	      };
	    }

	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      baseFor(source, function(srcValue, key) {
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;

	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      }, keysIn);
	    }

	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);

	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;

	      var isCommon = newValue === undefined;

	      if (isCommon) {
	        var isArr = isArray(srcValue),
	            isBuff = !isArr && isBuffer(srcValue),
	            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

	        newValue = srcValue;
	        if (isArr || isBuff || isTyped) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else if (isBuff) {
	            isCommon = false;
	            newValue = cloneBuffer(srcValue, true);
	          }
	          else if (isTyped) {
	            isCommon = false;
	            newValue = cloneTypedArray(srcValue, true);
	          }
	          else {
	            newValue = [];
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          newValue = objValue;
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            newValue = initCloneObject(srcValue);
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, newValue);
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	        stack['delete'](srcValue);
	      }
	      assignMergeValue(object, key, newValue);
	    }

	    /**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }

	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });

	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }

	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, paths) {
	      return basePickBy(object, paths, function(value, path) {
	        return hasIn(object, path);
	      });
	    }

	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, paths, predicate) {
	      var index = -1,
	          length = paths.length,
	          result = {};

	      while (++index < length) {
	        var path = paths[index],
	            value = baseGet(object, path);

	        if (predicate(value, path)) {
	          baseSet(result, castPath(path, object), value);
	        }
	      }
	      return result;
	    }

	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }

	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;

	      if (array === values) {
	        values = copyArray(values);
	      }
	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;

	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;

	      while (length--) {
	        var index = indexes[length];
	        if (length == lastIndex || index !== previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          } else {
	            baseUnset(array, index);
	          }
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }

	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);

	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);

	      return result;
	    }

	    /**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */
	    function baseRest(func, start) {
	      return setToString(overRest(func, start, identity), func + '');
	    }

	    /**
	     * The base implementation of `_.sample`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     */
	    function baseSample(collection) {
	      return arraySample(values(collection));
	    }

	    /**
	     * The base implementation of `_.sampleSize` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function baseSampleSize(collection, n) {
	      var array = values(collection);
	      return shuffleSelf(array, baseClamp(n, 0, array.length));
	    }

	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      if (!isObject(object)) {
	        return object;
	      }
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;

	      while (nested != null && ++index < length) {
	        var key = toKey(path[index]),
	            newValue = value;

	        if (index != lastIndex) {
	          var objValue = nested[key];
	          newValue = customizer ? customizer(objValue, key, nested) : undefined;
	          if (newValue === undefined) {
	            newValue = isObject(objValue)
	              ? objValue
	              : (isIndex(path[index + 1]) ? [] : {});
	          }
	        }
	        assignValue(nested, key, newValue);
	        nested = nested[key];
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `setData` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };

	    /**
	     * The base implementation of `setToString` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetToString = !defineProperty ? identity : function(func, string) {
	      return defineProperty(func, 'toString', {
	        'configurable': true,
	        'enumerable': false,
	        'value': constant(string),
	        'writable': true
	      });
	    };

	    /**
	     * The base implementation of `_.shuffle`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function baseShuffle(collection) {
	      return shuffleSelf(values(collection));
	    }

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;

	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;

	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;

	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }

	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array == null ? low : array.length;

	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];

	          if (computed !== null && !isSymbol(computed) &&
	              (retHighest ? (computed <= value) : (computed < value))) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }

	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);

	      var low = 0,
	          high = array == null ? 0 : array.length,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsSymbol = isSymbol(value),
	          valIsUndefined = value === undefined;

	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            othIsDefined = computed !== undefined,
	            othIsNull = computed === null,
	            othIsReflexive = computed === computed,
	            othIsSymbol = isSymbol(computed);

	        if (valIsNaN) {
	          var setLow = retHighest || othIsReflexive;
	        } else if (valIsUndefined) {
	          setLow = othIsReflexive && (retHighest || othIsDefined);
	        } else if (valIsNull) {
	          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
	        } else if (valIsSymbol) {
	          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
	        } else if (othIsNull || othIsSymbol) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }

	    /**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array, iteratee) {
	      var index = -1,
	          length = array.length,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (!index || !eq(computed, seen)) {
	          var seen = computed;
	          result[resIndex++] = value === 0 ? 0 : value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */
	    function baseToNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      return +value;
	    }

	    /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */
	    function baseToString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (isArray(value)) {
	        // Recursively convert values (susceptible to call stack limits).
	        return arrayMap(value, baseToString) + '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;

	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The property path to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      return object == null || delete object[toKey(last(path))];
	    }

	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }

	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;

	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}

	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }

	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }

	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var length = arrays.length;
	      if (length < 2) {
	        return length ? baseUniq(arrays[0]) : [];
	      }
	      var index = -1,
	          result = Array(length);

	      while (++index < length) {
	        var array = arrays[index],
	            othIndex = -1;

	        while (++othIndex < length) {
	          if (othIndex != index) {
	            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
	          }
	        }
	      }
	      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
	    }

	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};

	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }

	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }

	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }

	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value, object) {
	      if (isArray(value)) {
	        return value;
	      }
	      return isKey(value, object) ? [value] : stringToPath(toString(value));
	    }

	    /**
	     * A `baseRest` alias which can be replaced with `identity` by module
	     * replacement plugins.
	     *
	     * @private
	     * @type {Function}
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    var castRest = baseRest;

	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }

	    /**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */
	    var clearTimeout = ctxClearTimeout || function(id) {
	      return root.clearTimeout(id);
	    };

	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var length = buffer.length,
	          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

	      buffer.copy(result);
	      return result;
	    }

	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }

	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }

	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }

	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }

	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }

	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }

	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }

	    /**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */
	    function compareAscending(value, other) {
	      if (value !== other) {
	        var valIsDefined = value !== undefined,
	            valIsNull = value === null,
	            valIsReflexive = value === value,
	            valIsSymbol = isSymbol(value);

	        var othIsDefined = other !== undefined,
	            othIsNull = other === null,
	            othIsReflexive = other === other,
	            othIsSymbol = isSymbol(other);

	        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	            (valIsNull && othIsDefined && othIsReflexive) ||
	            (!valIsDefined && othIsReflexive) ||
	            !valIsReflexive) {
	          return 1;
	        }
	        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	            (othIsNull && valIsDefined && valIsReflexive) ||
	            (!othIsDefined && valIsReflexive) ||
	            !othIsReflexive) {
	          return -1;
	        }
	      }
	      return 0;
	    }

	    /**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */
	    function compareMultiple(object, other, orders) {
	      var index = -1,
	          objCriteria = object.criteria,
	          othCriteria = other.criteria,
	          length = objCriteria.length,
	          ordersLength = orders.length;

	      while (++index < length) {
	        var result = compareAscending(objCriteria[index], othCriteria[index]);
	        if (result) {
	          if (index >= ordersLength) {
	            return result;
	          }
	          var order = orders[index];
	          return result * (order == 'desc' ? -1 : 1);
	        }
	      }
	      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	      // that causes it, under certain circumstances, to provide the same value for
	      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	      // for more details.
	      //
	      // This also ensures a stable sort in V8 and other engines.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	      return object.index - other.index;
	    }

	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;

	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;

	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;

	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }

	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      var isNew = !object;
	      object || (object = {});

	      var index = -1,
	          length = props.length;

	      while (++index < length) {
	        var key = props[index];

	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : undefined;

	        if (newValue === undefined) {
	          newValue = source[key];
	        }
	        if (isNew) {
	          baseAssignValue(object, key, newValue);
	        } else {
	          assignValue(object, key, newValue);
	        }
	      }
	      return object;
	    }

	    /**
	     * Copies own symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }

	    /**
	     * Copies own and inherited symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbolsIn(source, object) {
	      return copyObject(source, getSymbolsIn(source), object);
	    }

	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};

	        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
	      };
	    }

	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return baseRest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;

	        customizer = (assigner.length > 3 && typeof customizer == 'function')
	          ? (length--, customizer)
	          : undefined;

	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }

	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);

	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }

	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;

	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBind(func, bitmask, thisArg) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);

	        var strSymbols = hasUnicode(string)
	          ? stringToArray(string)
	          : undefined;

	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);

	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);

	        return chr[methodName]() + trailing;
	      };
	    }

	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }

	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtor(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);

	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurry(func, bitmask, arity) {
	      var Ctor = createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getHolder(wrapper);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);

	        length -= holders.length;
	        if (length < arity) {
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFind(findIndexFunc) {
	      return function(collection, predicate, fromIndex) {
	        var iterable = Object(collection);
	        if (!isArrayLike(collection)) {
	          var iteratee = getIteratee(predicate, 3);
	          collection = keys(collection);
	          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	        }
	        var index = findIndexFunc(collection, predicate, fromIndex);
	        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	      };
	    }

	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return flatRest(function(funcs) {
	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;

	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];

	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;

	          if (data && isLaziable(data[0]) &&
	                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];

	          if (wrapper && args.length == 1 && isArray(value)) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;

	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & WRAP_ARY_FLAG,
	          isBind = bitmask & WRAP_BIND_FLAG,
	          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	          isFlip = bitmask & WRAP_FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtor(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length;

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getHolder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;

	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtor(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }

	    /**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */
	    function createMathOperation(operator, defaultValue) {
	      return function(value, other) {
	        var result;
	        if (value === undefined && other === undefined) {
	          return defaultValue;
	        }
	        if (value !== undefined) {
	          result = value;
	        }
	        if (other !== undefined) {
	          if (result === undefined) {
	            return other;
	          }
	          if (typeof value == 'string' || typeof other == 'string') {
	            value = baseToString(value);
	            other = baseToString(other);
	          } else {
	            value = baseToNumber(value);
	            other = baseToNumber(other);
	          }
	          result = operator(value, other);
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */
	    function createOver(arrayFunc) {
	      return flatRest(function(iteratees) {
	        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
	        return baseRest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }

	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : baseToString(chars);

	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return hasUnicode(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartial(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);

	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toFinite(start);
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toFinite(end);
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	        return baseRange(start, end, step, fromRight);
	      };
	    }

	    /**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */
	    function createRelationalOperation(operator) {
	      return function(value, other) {
	        if (!(typeof value == 'string' && typeof other == 'string')) {
	          value = toNumber(value);
	          other = toNumber(other);
	        }
	        return operator(value, other);
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & WRAP_CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;

	      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

	      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];

	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return setWrapToString(result, func, bitmask);
	    }

	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));

	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }

	    /**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	      return new Set(values);
	    };

	    /**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */
	    function createToPairs(keysFunc) {
	      return function(object) {
	        var tag = getTag(object);
	        if (tag == mapTag) {
	          return mapToArray(object);
	        }
	        if (tag == setTag) {
	          return setToPairs(object);
	        }
	        return baseToPairs(object, keysFunc(object));
	      };
	    }

	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *    1 - `_.bind`
	     *    2 - `_.bindKey`
	     *    4 - `_.curry` or `_.curryRight` of a bound function
	     *    8 - `_.curry`
	     *   16 - `_.curryRight`
	     *   32 - `_.partial`
	     *   64 - `_.partialRight`
	     *  128 - `_.rearg`
	     *  256 - `_.ary`
	     *  512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;

	      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;

	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);

	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];

	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] === undefined
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);

	      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	        var result = createBind(func, bitmask, thisArg);
	      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	        result = createCurry(func, bitmask, arity);
	      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	        result = createPartial(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybrid.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setWrapToString(setter(result, newData), func, bitmask);
	    }

	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
	     * of source objects to the destination object for all destination properties
	     * that resolve to `undefined`.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsAssignIn(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }

	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
	     * objects into destination objects that are passed thru.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, objValue);
	        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
	        stack['delete'](srcValue);
	      }
	      return objValue;
	    }

	    /**
	     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	     * objects.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {string} key The key of the property to inspect.
	     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	     */
	    function customOmitClone(value) {
	      return isPlainObject(value) ? undefined : value;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          arrLength = array.length,
	          othLength = other.length;

	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var index = -1,
	          result = true,
	          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

	      stack.set(array, other);
	      stack.set(other, array);

	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (seen) {
	          if (!arraySome(other, function(othValue, othIndex) {
	                if (!cacheHas(seen, othIndex) &&
	                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	                  return seen.push(othIndex);
	                }
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, bitmask, customizer, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;

	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;

	        case boolTag:
	        case dateTag:
	        case numberTag:
	          // Coerce booleans to `1` or `0` and dates to milliseconds.
	          // Invalid dates are coerced to `NaN`.
	          return eq(+object, +other);

	        case errorTag:
	          return object.name == other.name && object.message == other.message;

	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');

	        case mapTag:
	          var convert = mapToArray;

	        case setTag:
	          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	          convert || (convert = setToArray);

	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= COMPARE_UNORDERED_FLAG;

	          // Recursively compare objects (susceptible to call stack limits).
	          stack.set(object, other);
	          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	          stack['delete'](object);
	          return result;

	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          objProps = getAllKeys(object),
	          objLength = objProps.length,
	          othProps = getAllKeys(other),
	          othLength = othProps.length;

	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);
	      stack.set(other, object);

	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;

	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      stack['delete'](other);
	      return result;
	    }

	    /**
	     * A specialized version of `baseRest` which flattens the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    function flatRest(func) {
	      return setToString(overRest(func, undefined, flatten), func + '');
	    }

	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }

	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }

	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };

	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getHolder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }

	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }

	    /**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */
	    function getMapData(map, key) {
	      var data = map.__data__;
	      return isKeyable(key)
	        ? data[typeof key == 'string' ? 'string' : 'hash']
	        : data.map;
	    }

	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = keys(object),
	          length = result.length;

	      while (length--) {
	        var key = result[length],
	            value = object[key];

	        result[length] = [key, value, isStrictComparable(value)];
	      }
	      return result;
	    }

	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = getValue(object, key);
	      return baseIsNative(value) ? value : undefined;
	    }

	    /**
	     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the raw `toStringTag`.
	     */
	    function getRawTag(value) {
	      var isOwn = hasOwnProperty.call(value, symToStringTag),
	          tag = value[symToStringTag];

	      try {
	        value[symToStringTag] = undefined;
	        var unmasked = true;
	      } catch (e) {}

	      var result = nativeObjectToString.call(value);
	      if (unmasked) {
	        if (isOwn) {
	          value[symToStringTag] = tag;
	        } else {
	          delete value[symToStringTag];
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array of the own enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	      if (object == null) {
	        return [];
	      }
	      object = Object(object);
	      return arrayFilter(nativeGetSymbols(object), function(symbol) {
	        return propertyIsEnumerable.call(object, symbol);
	      });
	    };

	    /**
	     * Creates an array of the own and inherited enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };

	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    var getTag = baseGetTag;

	    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = baseGetTag(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : '';

	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }

	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;

	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;

	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }

	    /**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */
	    function getWrapDetails(source) {
	      var match = source.match(reWrapDetails);
	      return match ? match[1].split(reSplitDetails) : [];
	    }

	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length,
	          result = false;

	      while (++index < length) {
	        var key = toKey(path[index]);
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result || ++index != length) {
	        return result;
	      }
	      length = object == null ? 0 : object.length;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isArguments(object));
	    }

	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);

	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }

	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }

	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);

	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);

	        case dataViewTag:
	          return cloneDataView(object, isDeep);

	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);

	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);

	        case numberTag:
	        case stringTag:
	          return new Ctor(object);

	        case regexpTag:
	          return cloneRegExp(object);

	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);

	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }

	    /**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */
	    function insertWrapDetails(source, details) {
	      var length = details.length;
	      if (!length) {
	        return source;
	      }
	      var lastIndex = length - 1;
	      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	      details = details.join(length > 2 ? ', ' : ' ');
	      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	    }

	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArray(value) || isArguments(value) ||
	        !!(spreadableSymbol && value && value[spreadableSymbol]);
	    }

	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	      length = length == null ? MAX_SAFE_INTEGER : length;
	      return !!length &&
	        (typeof value == 'number' || reIsUint.test(value)) &&
	        (value > -1 && value % 1 == 0 && value < length);
	    }

	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }

	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      if (isArray(value)) {
	        return false;
	      }
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	          value == null || isSymbol(value)) {
	        return true;
	      }
	      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	        (object != null && value in Object(object));
	    }

	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	        ? (value !== '__proto__')
	        : (value === null);
	    }

	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];

	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }

	    /**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */
	    function isMasked(func) {
	      return !!maskSrcKey && (maskSrcKey in func);
	    }

	    /**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */
	    var isMaskable = coreJsData ? isFunction : stubFalse;

	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	      return value === proto;
	    }

	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }

	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }

	    /**
	     * A specialized version of `_.memoize` which clears the memoized function's
	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	     *
	     * @private
	     * @param {Function} func The function to have its output memoized.
	     * @returns {Function} Returns the new memoized function.
	     */
	    function memoizeCapped(func) {
	      var result = memoize(func, function(key) {
	        if (cache.size === MAX_MEMOIZE_SIZE) {
	          cache.clear();
	        }
	        return key;
	      });

	      var cache = result.cache;
	      return result;
	    }

	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

	      var isCombo =
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & WRAP_BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & WRAP_ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;

	      return data;
	    }

	    /**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function nativeKeysIn(object) {
	      var result = [];
	      if (object != null) {
	        for (var key in Object(object)) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a string using `Object.prototype.toString`.
	     *
	     * @private
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     */
	    function objectToString(value) {
	      return nativeObjectToString.call(value);
	    }

	    /**
	     * A specialized version of `baseRest` which transforms the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @param {Function} transform The rest array transform.
	     * @returns {Function} Returns the new function.
	     */
	    function overRest(func, start, transform) {
	      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);

	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        index = -1;
	        var otherArgs = Array(start + 1);
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = transform(array);
	        return apply(func, this, otherArgs);
	      };
	    }

	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }

	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);

	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }

	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = shortOut(baseSetData);

	    /**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    var setTimeout = ctxSetTimeout || function(func, wait) {
	      return root.setTimeout(func, wait);
	    };

	    /**
	     * Sets the `toString` method of `func` to return `string`.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var setToString = shortOut(baseSetToString);

	    /**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */
	    function setWrapToString(wrapper, reference, bitmask) {
	      var source = (reference + '');
	      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	    }

	    /**
	     * Creates a function that'll short out and invoke `identity` instead
	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	     * milliseconds.
	     *
	     * @private
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new shortable function.
	     */
	    function shortOut(func) {
	      var count = 0,
	          lastCalled = 0;

	      return function() {
	        var stamp = nativeNow(),
	            remaining = HOT_SPAN - (stamp - lastCalled);

	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return arguments[0];
	          }
	        } else {
	          count = 0;
	        }
	        return func.apply(undefined, arguments);
	      };
	    }

	    /**
	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @param {number} [size=array.length] The size of `array`.
	     * @returns {Array} Returns `array`.
	     */
	    function shuffleSelf(array, size) {
	      var index = -1,
	          length = array.length,
	          lastIndex = length - 1;

	      size = size === undefined ? length : size;
	      while (++index < size) {
	        var rand = baseRandom(index, lastIndex),
	            value = array[rand];

	        array[rand] = array[index];
	        array[index] = value;
	      }
	      array.length = size;
	      return array;
	    }

	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoizeCapped(function(string) {
	      var result = [];
	      if (reLeadingDot.test(string)) {
	        result.push('');
	      }
	      string.replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });

	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(value) {
	      if (typeof value == 'string' || isSymbol(value)) {
	        return value;
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to convert.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }

	    /**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */
	    function updateWrapDetails(details, bitmask) {
	      arrayEach(wrapFlags, function(pair) {
	        var value = '_.' + pair[0];
	        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	          details.push(value);
	        }
	      });
	      return details.sort();
	    }

	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array == null ? 0 : array.length;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));

	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array == null ? 0 : array.length,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length;
	      if (!length) {
	        return [];
	      }
	      var args = Array(length - 1),
	          array = arguments[0],
	          index = length;

	      while (index--) {
	        args[index - 1] = arguments[index];
	      }
	      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
	    }

	    /**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */
	    var difference = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = baseRest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. The order and
	     * references of result values are determined by the first array. The comparator
	     * is invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = baseRest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }

	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index);
	    }

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length - 1;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = fromIndex < 0
	          ? nativeMax(length + index, 0)
	          : nativeMin(index, length - 1);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
	    }

	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, 1) : [];
	    }

	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }

	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }

	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs == null ? 0 : pairs.length,
	          result = {};

	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }

	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseIndexOf(array, value, index);
	    }

	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 0, -1) : [];
	    }

	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */
	    var intersection = baseRest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee, 2))
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. The order and references
	     * of result values are determined by the first array. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = baseRest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      if (comparator) {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });

	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array == null ? '' : nativeJoin.call(array, separator);
	    }

	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? array[length - 1] : undefined;
	    }

	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
	      }
	      return value === value
	        ? strictLastIndexOf(array, value, index)
	        : baseFindIndex(array, baseIsNaN, index, true);
	    }

	    /**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }

	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    var pull = baseRest(pullAll);

	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee, 2))
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }

	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */
	    var pullAt = flatRest(function(array, indexes) {
	      var length = array == null ? 0 : array.length,
	          result = baseAt(array, indexes);

	      basePullAt(array, arrayMap(indexes, function(index) {
	        return isIndex(index, length) ? +index : index;
	      }).sort(compareAscending));

	      return result;
	    });

	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;

	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }

	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array == null ? array : nativeReverse.call(array);
	    }

	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }

	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
	    }

	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */
	    function sortedIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }

	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
	    }

	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniq(array, getIteratee(iteratee, 2))
	        : [];
	    }

	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 1, length) : [];
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }

	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */
	    var union = baseRest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });

	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each element
	     * is kept. The order of result values is determined by the order they occur
	     * in the array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length) ? baseUniq(array) : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The order of result values is determined by the
	     * order they occur in the array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The order of result values is
	     * determined by the order they occur in the array.The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }

	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }

	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */
	    var without = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });

	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */
	    var xor = baseRest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The order of result values is determined
	     * by the order they occur in the arrays. The iteratee is invoked with one
	     * argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The order of result values is
	     * determined by the order they occur in the arrays. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });

	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */
	    var zip = baseRest(unzip);

	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }

	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }

	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = baseRest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;

	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }

	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }

	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }

	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */
	    var wrapperAt = flatRest(function(paths) {
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };

	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });

	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }

	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }

	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];

	      return { 'done': done, 'value': value };
	    }

	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }

	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;

	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }

	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }

	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        ++result[key];
	      } else {
	        baseAssignValue(result, key, 1);
	      }
	    });

	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    var find = createFind(findIndex);

	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    var findLast = createFind(findLastIndex);

	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }

	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _.forEach([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      var func = isArray(collection) ? arrayEach : baseEach;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      var func = isArray(collection) ? arrayEachRight : baseEachRight;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        baseAssignValue(result, key, [value]);
	      }
	    });

	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }

	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = baseRest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value) {
	        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      baseAssignValue(result, key, value);
	    });

	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }

	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });

	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }

	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }

	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, negate(getIteratee(predicate, 3)));
	    }

	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var func = isArray(collection) ? arraySample : baseSample;
	      return func(collection);
	    }

	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
	      return func(collection, n);
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      var func = isArray(collection) ? arrayShuffle : baseShuffle;
	      return func(collection);
	    }

	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        return isString(collection) ? stringSize(collection) : collection.length;
	      }
	      var tag = getTag(collection);
	      if (tag == mapTag || tag == setTag) {
	        return collection.size;
	      }
	      return baseKeys(collection).length;
	    }

	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, [function(o) { return o.user; }]);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     */
	    var sortBy = baseRest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */
	    var now = ctxNow || function() {
	      return root.Date.now();
	    };

	    /*------------------------------------------------------------------------*/

	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = baseRest(function(func, thisArg, partials) {
	      var bitmask = WRAP_BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bind));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(func, bitmask, thisArg, partials, holders);
	    });

	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = baseRest(function(object, key, partials) {
	      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bindKey));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(key, bitmask, object, partials, holders);
	    });

	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }

	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }

	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }

	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;

	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }

	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }

	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;

	        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	      }

	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;

	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }

	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }

	      function trailingEdge(time) {
	        timerId = undefined;

	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }

	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastInvokeTime = 0;
	        lastArgs = lastCallTime = lastThis = timerId = undefined;
	      }

	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }

	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);

	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;

	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }

	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one millisecond.
	     */
	    var defer = baseRest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });

	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = baseRest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrap(func, WRAP_FLIP_FLAG);
	    }

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;

	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result) || cache;
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }

	    // Expose `MapCache`.
	    memoize.Cache = MapCache;

	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        var args = arguments;
	        switch (args.length) {
	          case 0: return !predicate.call(this);
	          case 1: return !predicate.call(this, args[0]);
	          case 2: return !predicate.call(this, args[0], args[1]);
	          case 3: return !predicate.call(this, args[0], args[1], args[2]);
	        }
	        return !predicate.apply(this, args);
	      };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */
	    function once(func) {
	      return before(2, func);
	    }

	    /**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = castRest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

	      var funcsLength = transforms.length;
	      return baseRest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);

	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });

	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partial));
	      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	    });

	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partialRight));
	      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = flatRest(function(func, indexes) {
	      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? start : toInteger(start);
	      return baseRest(func, start);
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start == null ? 0 : nativeMax(toInteger(start), 0);
	      return baseRest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);

	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }

	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }

	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }

	    /**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      return partial(castFunction(wrapper), value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }

	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, CLONE_SYMBOLS_FLAG);
	    }

	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
	    }

	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
	    }

	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
	    }

	    /**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */
	    function conformsTo(object, source) {
	      return source == null || baseConformsTo(object, source, keys(source));
	    }

	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }

	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    var gt = createRelationalOperation(baseGt);

	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    var gte = createRelationalOperation(function(value, other) {
	      return value >= other;
	    });

	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	        !propertyIsEnumerable.call(value, 'callee');
	    };

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;

	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(value.length) && !isFunction(value);
	    }

	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }

	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && baseGetTag(value) == boolTag);
	    }

	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = nativeIsBuffer || stubFalse;

	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
	    }

	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (value == null) {
	        return true;
	      }
	      if (isArrayLike(value) &&
	          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	        return !value.length;
	      }
	      var tag = getTag(value);
	      if (tag == mapTag || tag == setTag) {
	        return !value.size;
	      }
	      if (isPrototype(value)) {
	        return !baseKeys(value).length;
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return true;
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are compared by strict equality, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }

	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
	    }

	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      var tag = baseGetTag(value);
	      return tag == errorTag || tag == domExcTag ||
	        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
	    }

	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      if (!isObject(value)) {
	        return false;
	      }
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 9 which returns 'object' for typed arrays and other constructors.
	      var tag = baseGetTag(value);
	      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	    }

	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return value != null && (type == 'object' || type == 'function');
	    }

	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return value != null && typeof value == 'object';
	    }

	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }

	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (isMaskable(value)) {
	        throw new Error(CORE_ERROR_TEXT);
	      }
	      return baseIsNative(value);
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }

	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && baseGetTag(value) == numberTag);
	    }

	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	        funcToString.call(Ctor) == objectCtorString;
	    }

	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	    }

	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && baseGetTag(value) == symbolTag);
	    }

	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
	    }

	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    var lt = createRelationalOperation(baseLt);

	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    var lte = createRelationalOperation(function(value, other) {
	      return value <= other;
	    });

	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (symIterator && value[symIterator]) {
	        return iteratorToArray(value[symIterator]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

	      return func(value);
	    }

	    /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */
	    function toFinite(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      return value === value ? value : 0;
	    }

	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */
	    function toInteger(value) {
	      var result = toFinite(value),
	          remainder = result % 1;

	      return result === result ? (remainder ? result - remainder : result) : 0;
	    }

	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }

	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }

	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }

	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return value
	        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
	        : (value === 0 ? value : 0);
	    }

	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      return value == null ? '' : baseToString(value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });

	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      copyObject(source, keysIn(source), object);
	    });

	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });

	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });

	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */
	    var at = flatRest(baseAt);

	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties == null ? result : baseAssign(result, properties);
	    }

	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var defaults = baseRest(function(args) {
	      args.push(undefined, customDefaultsAssignIn);
	      return apply(assignInWith, undefined, args);
	    });

	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */
	    var defaultsDeep = baseRest(function(args) {
	      args.push(undefined, customDefaultsMerge);
	      return apply(mergeWith, undefined, args);
	    });

	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
	    }

	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
	    }

	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
	    }

	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
	    }

	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }

	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }

	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }

	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }

	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));

	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);

	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = baseRest(baseInvoke);

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	    }

	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	    }

	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, iteratee(value, key, object), value);
	      });
	      return result;
	    }

	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, key, iteratee(value, key, object));
	      });
	      return result;
	    }

	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });

	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with six arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });

	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable property paths of `object` that are not omitted.
	     *
	     * **Note:** This method is considerably slower than `_.pick`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = flatRest(function(object, paths) {
	      var result = {};
	      if (object == null) {
	        return result;
	      }
	      var isDeep = false;
	      paths = arrayMap(paths, function(path) {
	        path = castPath(path, object);
	        isDeep || (isDeep = path.length > 1);
	        return path;
	      });
	      copyObject(object, getAllKeysIn(object), result);
	      if (isDeep) {
	        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	      }
	      var length = paths.length;
	      while (length--) {
	        baseUnset(result, paths[length]);
	      }
	      return result;
	    });

	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      return pickBy(object, negate(getIteratee(predicate)));
	    }

	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = flatRest(function(object, paths) {
	      return object == null ? {} : basePick(object, paths);
	    });

	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      if (object == null) {
	        return {};
	      }
	      var props = arrayMap(getAllKeysIn(object), function(prop) {
	        return [prop];
	      });
	      predicate = getIteratee(predicate);
	      return basePickBy(object, props, function(value, path) {
	        return predicate(value, path[0]);
	      });
	    }

	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = castPath(path, object);

	      var index = -1,
	          length = path.length;

	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        length = 1;
	        object = undefined;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[toKey(path[index])];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }

	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }

	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }

	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    var toPairs = createToPairs(keys);

	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */
	    var toPairsIn = createToPairs(keysIn);

	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object),
	          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

	      iteratee = getIteratee(iteratee, 4);
	      if (accumulator == null) {
	        var Ctor = object && object.constructor;
	        if (isArrLike) {
	          accumulator = isArr ? new Ctor : [];
	        }
	        else if (isObject(object)) {
	          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	        }
	        else {
	          accumulator = {};
	        }
	      }
	      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }

	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }

	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }

	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }

	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object == null ? [] : baseValues(object, keys(object));
	    }

	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }

	    /**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toFinite(start);
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toFinite(end);
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }

	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toFinite(lower);
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toFinite(upper);
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });

	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }

	    /**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	    }

	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = baseToString(target);

	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);

	      var end = position;
	      position -= target.length;
	      return position >= 0 && string.slice(position, end) == target;
	    }

	    /**
	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
	     * corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }

	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }

	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');

	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }

	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }

	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }

	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
	    }

	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }

	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);

	      return args.length < 3 ? string : string.replace(args[1], args[2]);
	    }

	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });

	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator = baseToString(separator);
	        if (!separator && hasUnicode(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return string.split(separator, limit);
	    }

	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });

	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = position == null
	        ? 0
	        : baseClamp(toInteger(position), 0, string.length);

	      target = baseToString(target);
	      return string.slice(position, position + target.length) == target;
	    }

	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
	     * // Disable support by replacing the "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;

	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, customDefaultsAssignIn);

	      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);

	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';

	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });

	      source += "';\n";

	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });

	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }

	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }

	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrim, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;

	      return castSlice(strSymbols, start, end).join('');
	    }

	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

	      return castSlice(strSymbols, 0, end).join('');
	    }

	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));

	      return castSlice(strSymbols, start).join('');
	    }

	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;

	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? baseToString(options.omission) : omission;
	      }
	      string = toString(string);

	      var strLength = string.length;
	      if (hasUnicode(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);

	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;

	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(baseToString(separator), end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }

	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }

	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });

	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');

	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;

	      if (pattern === undefined) {
	        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	      }
	      return string.match(pattern) || [];
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = baseRest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = flatRest(function(object, methodNames) {
	      arrayEach(methodNames, function(key) {
	        key = toKey(key);
	        baseAssignValue(object, key, bind(object[key], object));
	      });
	      return object;
	    });

	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs == null ? 0 : pairs.length,
	          toIteratee = getIteratee();

	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });

	      return baseRest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }

	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */
	    function defaultTo(value, defaultValue) {
	      return (value == null || value !== value) ? defaultValue : value;
	    }

	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();

	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);

	    /**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
	    }

	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = baseRest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = baseRest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);

	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);

	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);

	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });

	      return object;
	    }

	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }

	    /**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */
	    function noop() {
	      // No operation performed.
	    }

	    /**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return baseRest(function(args) {
	        return baseNth(args, n);
	      });
	    }

	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);

	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);

	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);

	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	    }

	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();

	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);

	    /**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */
	    function stubArray() {
	      return [];
	    }

	    /**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */
	    function stubFalse() {
	      return false;
	    }

	    /**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */
	    function stubObject() {
	      return {};
	    }

	    /**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */
	    function stubString() {
	      return '';
	    }

	    /**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */
	    function stubTrue() {
	      return true;
	    }

	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);

	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;

	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	    }

	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    }, 0);

	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');

	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    }, 1);

	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');

	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseGt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
	        : undefined;
	    }

	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }

	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee, 2));
	    }

	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseLt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
	        : undefined;
	    }

	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    }, 1);

	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');

	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    }, 0);

	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }

	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee, 2))
	        : 0;
	    }

	    /*------------------------------------------------------------------------*/

	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;

	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;

	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);

	    /*------------------------------------------------------------------------*/

	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.conformsTo = conformsTo;
	    lodash.deburr = deburr;
	    lodash.defaultTo = defaultTo;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.stubArray = stubArray;
	    lodash.stubFalse = stubFalse;
	    lodash.stubObject = stubObject;
	    lodash.stubString = stubString;
	    lodash.stubTrue = stubTrue;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toFinite = toFinite;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;

	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;

	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });

	    /*------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;

	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });

	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

	        var result = (this.__filtered__ && !index)
	          ? new LazyWrapper(this)
	          : this.clone();

	        if (result.__filtered__) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };

	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });

	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });

	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');

	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });

	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');

	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });

	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };

	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };

	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };

	    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });

	    LazyWrapper.prototype.reject = function(predicate) {
	      return this.filter(negate(getIteratee(predicate)));
	    };

	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);

	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };

	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };

	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };

	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);

	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);

	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };

	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;

	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });

	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });

	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);

	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });

	    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];

	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;

	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

	    // Add lazy aliases.
	    lodash.prototype.first = lodash.prototype.head;

	    if (symIterator) {
	      lodash.prototype[symIterator] = wrapperToIterator;
	    }
	    return lodash;
	  });

	  /*--------------------------------------------------------------------------*/

	  // Export lodash.
	  var _ = runInContext();

	  // Some AMD build optimizers, like r.js, check for condition patterns like:
	  if (true) {
	    // Expose Lodash on the global object to prevent errors when Lodash is
	    // loaded by a script tag in the presence of an AMD loader.
	    // See http://requirejs.org/docs/errors.html#mismatch for more details.
	    // Use `_.noConflict` to remove Lodash from the global object.
	    root._ = _;

	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds it.
	  else if (freeModule) {
	    // Export for Node.js.
	    (freeModule.exports = _)._ = _;
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(93)(module)))

/***/ },
/* 93 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 94 */
/***/ function(module, exports) {

	module.exports = "<div class=\"content-wrapper\">\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n        <h1>\r\n            {{title}}\r\n        </h1>\r\n        <navigator :navigator=\"navigator\"></navigator>\r\n    </section>\r\n\r\n    <!-- Main content -->\r\n    <section class=\"content\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-5\">\r\n                <div class=\"box\">\r\n                    <div class=\"box-header with-border\">\r\n                        <h3 class=\"box-title\">{{title}}</h3>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                        <tree :nodes=\"nodes\"></tree>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-7\">\r\n                <div class=\"box\">\r\n                    <div class=\"box-header with-border\">\r\n                        <h3 class=\"box-title\">{{selected.name}}</h3>\r\n                    </div>\r\n                    <div class=\"box-body form-horizontal\">\r\n                        <div class=\"form-group\" v-for=\"field in selected.fields\">\r\n                            <label class=\"col-sm-2 control-label\">{{ field.label }}</label>\r\n                            <div class=\"col-sm-10\">\r\n                                <span class=\"form-control\">{{field.data}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- /.box-body -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <!-- /.content -->\r\n</div>";

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Vue = __webpack_require__(6);
	var Navigator_component_1 = __webpack_require__(12);
	var Table_1 = __webpack_require__(16);
	var NavigatorModelFactory_1 = __webpack_require__(48);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(96),
	    data: function () {
	        return {
	            visible: false,
	            name: 'file',
	            action: '/upload',
	            onChange: function (info) {
	                if (info.file.status !== 'uploading') {
	                    console.log(info.file, info.fileList);
	                }
	                if (info.file.status === 'done') {
	                    console.log(info.file.name + ' 上传成功.');
	                }
	                else if (info.file.status === 'error') {
	                    console.log(info.file.name + ' 上传失败.');
	                }
	            },
	            title: 'admin UI components',
	            navigator: [],
	            createBtn: null,
	            table: null,
	            checkboxDefaultValue: ['Apple', 'Orange'],
	            rateValue: 3,
	            checkboxOptions: [{
	                    label: '苹果',
	                    value: 'Apple'
	                },
	                {
	                    label: '梨',
	                    value: 'Pear'
	                },
	                {
	                    label: '橘',
	                    value: 'Orange'
	                },
	            ],
	            selectOptionsDefaultValue: '1',
	            selectOptions: [
	                {
	                    value: '1',
	                    text: '杨捷锋'
	                },
	                {
	                    value: '2',
	                    text: '刘思作',
	                },
	                {
	                    value: '3',
	                    text: '陈昊励'
	                },
	                {
	                    value: '4',
	                    text: '未知',
	                    disabled: true
	                },
	            ],
	            timeValue: '08:30:00',
	            dataSource1: [
	                {
	                    value: '1',
	                    text: '杨捷锋'
	                },
	                {
	                    value: '2',
	                    text: '刘思作',
	                },
	                {
	                    value: '4',
	                    text: '未知',
	                },
	            ],
	            treedata1: [{
	                    title: 'parent 1',
	                    selected: true,
	                    expand: true,
	                    node: [
	                        {
	                            title: 'parent 1-0',
	                            expand: true,
	                            disabled: true,
	                            node: [
	                                {
	                                    title: 'leaf',
	                                    disableCheckbox: true
	                                },
	                                {
	                                    title: 'leaf',
	                                }
	                            ]
	                        },
	                        {
	                            title: 'parent 1-1',
	                            node: [{
	                                    title: "<span style=",
	                                    color: "#08c>sss</span>"
	                                }]
	                        }]
	                }],
	            targetKeys1: [
	                {
	                    value: '3',
	                    text: '陈昊励'
	                }
	            ],
	            options: [
	                {
	                    value: 'sc',
	                    label: '四川',
	                    children: [
	                        {
	                            value: 'cd',
	                            label: '成都',
	                            children: [
	                                {
	                                    value: 'jyq',
	                                    label: '九眼桥'
	                                },
	                                {
	                                    value: 'cxl',
	                                    label: '春熙路'
	                                }],
	                        },
	                        {
	                            value: 'nc',
	                            label: '南充',
	                            children: [{
	                                    value: 'nbx',
	                                    label: '南部县'
	                                }]
	                        }],
	                },
	                {
	                    value: 'cq',
	                    label: '重庆',
	                    children: [{
	                            value: 'lp',
	                            label: '梁平',
	                            children: [{
	                                    value: 'sgt',
	                                    label: '双桂堂'
	                                }],
	                        }],
	                }]
	        };
	    },
	    methods: {
	        close: function (i) {
	            console.log(i);
	        },
	        onchange: function (val) {
	            console.log(val);
	        },
	        change: function (val) {
	            console.log(val);
	        },
	        render: function (recoder) {
	            return recoder.title;
	        },
	        handleChange1: function (targetKeys, direction, moveKeys) {
	            this.targetKeys1 = targetKeys;
	        },
	        openNotification: function () {
	            this.$notification.open({
	                message: '这是标题',
	                description: '这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案',
	            });
	        },
	        openNotificationWithIcon: function (type) {
	            this.$notification[type]({
	                message: '这是标题',
	                description: '这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案这是提示框的文案'
	            });
	        },
	        openMessage: function () {
	            this.$message.info("这是一条普通的提醒");
	        },
	        success: function () {
	            this.$message.success("这是一条成功提示");
	        },
	        error: function () {
	            this.$message.error("这是一条失败提示");
	        },
	        warning: function () {
	            this.$message.warning("这是一条警告提示");
	        },
	        loading: function () {
	            var instance = this.$message.loading("正在执行中...", 0);
	            setTimeout(instance.remove, 2500);
	        },
	        confirm: function () {
	            this.$message.info('点击了确定');
	        },
	        cancel: function () {
	            this.$message.info('点击了取消');
	        },
	        _showModal: function () {
	            this.visible = true;
	        },
	        _handleOk: function () {
	            this.visible = false;
	        },
	        _handleCancel: function () {
	            this.visible = false;
	        }
	    },
	    components: {
	        Navigator: Navigator_component_1.default,
	        VTable: Table_1.default
	    },
	    route: {
	        data: function () {
	            console.info("UI Page");
	            console.log(this.$route);
	            this.navigator = NavigatorModelFactory_1.default
	                .createEntities(this.$route.params.name);
	            this.createBtn = {
	                styleClasses: 'btn btn-block btn-warning',
	                link: {
	                    label: 'Demo',
	                    route: {
	                        name: 'ui',
	                        params: {
	                            name: 'ui',
	                        }
	                    },
	                },
	            };
	            var ___ = "{\"name\":\"Cars\",\"rows\":[{\"_fields\":[{\"_data\":\"1231231232\"},{\"_data\":true},{\"_data\":[{\"styleClasses\":\"btn btn-sm bg-light-blue\",\"link\":{\"label\":\"\u67E5\u770B\",\"route\":{\"name\":\"entity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%221231231232%22%7D%5D\"}}}},{\"styleClasses\":\"btn btn-sm btn-warning\",\"link\":{\"label\":\"\u7F16\u8F91\",\"route\":{\"name\":\"editEntity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%221231231232%22%7D%5D\"}}}}]}]},{\"_fields\":[{\"_data\":\"1f93d52d-635e-4c27-99b7-10a837b663c9\"},{\"_data\":false},{\"_data\":[{\"styleClasses\":\"btn btn-sm bg-light-blue\",\"link\":{\"label\":\"\u67E5\u770B\",\"route\":{\"name\":\"entity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%221f93d52d-635e-4c27-99b7-10a837b663c9%22%7D%5D\"}}}},{\"styleClasses\":\"btn btn-sm btn-warning\",\"link\":{\"label\":\"\u7F16\u8F91\",\"route\":{\"name\":\"editEntity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%221f93d52d-635e-4c27-99b7-10a837b663c9%22%7D%5D\"}}}}]}]},{\"_fields\":[{\"_data\":\"213123123\"},{\"_data\":true},{\"_data\":[{\"styleClasses\":\"btn btn-sm bg-light-blue\",\"link\":{\"label\":\"\u67E5\u770B\",\"route\":{\"name\":\"entity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%22213123123%22%7D%5D\"}}}},{\"styleClasses\":\"btn btn-sm btn-warning\",\"link\":{\"label\":\"\u7F16\u8F91\",\"route\":{\"name\":\"editEntity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%22213123123%22%7D%5D\"}}}}]}]},{\"_fields\":[{\"_data\":\"2131232\"},{\"_data\":true},{\"_data\":[{\"styleClasses\":\"btn btn-sm bg-light-blue\",\"link\":{\"label\":\"\u67E5\u770B\",\"route\":{\"name\":\"entity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%222131232%22%7D%5D\"}}}},{\"styleClasses\":\"btn btn-sm btn-warning\",\"link\":{\"label\":\"\u7F16\u8F91\",\"route\":{\"name\":\"editEntity\",\"params\":{\"hierarchies\":\"%5B%7B%22name%22%3A%22Cars%22%2C%22id%22%3A%222131232%22%7D%5D\"}}}}]}]}],\"columns\":[{\"name\":\"id\"},{\"name\":\"active\"},{\"name\":\"\u64CD\u4F5C\",\"width\":\"100px\"}]}";
	            this.table = JSON.parse(___);
	            // this.table = {
	            //     name: 'ui',
	            //     rows: [
	            //         {
	            //             _fields: [
	            //                 {
	            //                     _data: 123
	            //                 },
	            //                 {
	            //                     _data: true
	            //                 },
	            //                 {
	            //                     _data: [
	            //                         {
	            //                             styleClasses: "btn btn-sm bg-light-blue",
	            //                             link: {
	            //                                 label: '查看',
	            //                                 route: {
	            //                                     name: 'ui',
	            //                                     params: {
	            //                                         name: 'ui'
	            //                                     }
	            //                                 }
	            //                             }
	            //                         }
	            //                     ]
	            //                 }
	            //             ]
	            //         }
	            //     ],
	            //     columns: [
	            //         {
	            //             name: '1'
	            //         },
	            //         {
	            //             name: '2'
	            //         },
	            //         {
	            //             name: '3'
	            //         }
	            //     ]
	            // }
	        }
	    }
	});


/***/ },
/* 96 */
/***/ function(module, exports) {

	module.exports = "<div class=\"content-wrapper\">\r\n    <!-- Content Header (Page header) -->\r\n    <section class=\"content-header\">\r\n        <h1>\r\n            {{title}}\r\n        </h1>\r\n        <navigator :navigator=\"navigator\"></navigator>\r\n    </section>\r\n\r\n    <!-- Main content -->\r\n    <section class=\"content\">\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"按钮\"><a href=\"/#!/components/card\" slot=\"extra\">More</a>\r\n\r\n                <v-button type=\"primary\">Primary</v-button>\r\n                <v-button type=\"success\">success</v-button>\r\n                <v-button type=\"error\">error</v-button>\r\n                <v-button type=\"warning\">warning</v-button>\r\n                <v-button>default</v-button>\r\n                <v-button type=\"ghost\">Ghost</v-button>\r\n                <v-button type=\"dashed\">Dashed</v-button>\r\n\r\n                <v-button type=\"primary\" size=\"large\">Large</v-button>\r\n                <v-button type=\"primary\">Default</v-button>\r\n                <v-button type=\"primary\" size=\"small\">Small</v-button>\r\n\r\n                <v-button type=\"primary\" loading=\"\">Loading</v-button>\r\n\r\n            </v-card>\r\n        </div>\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"级联\">\r\n                <v-cascader :options=\"options\" @change=\"onchange\"></v-cascader>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"多选框\">\r\n                <v-checkbox>苹果</v-checkbox>\r\n                <v-checkbox>香蕉</v-checkbox>\r\n                <v-checkbox-group :options=\"checkboxOptions\" :value.sync=\"checkboxDefaultValue\"></v-checkbox-group>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"单选框\">\r\n                <v-radio><span>苹果</span></v-radio>\r\n                <v-radio><span>香蕉</span></v-radio>\r\n                <v-radio-group default-value=\"a\"\r\n                               :radios=\"[{value: 'a', name: 'A'},{value: 'b', name: 'B'},{value: 'c', name: 'C'},{value: 'd', name: 'D'}]\"></v-radio-group>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"表单\">\r\n                <v-form>\r\n                    <v-form-item label=\"账户\">\r\n                        <v-input value=\"请输入账户名\"></v-input>\r\n                    </v-form-item>\r\n                    <v-form-item label=\"密码\">\r\n                        <v-input value=\"请输入密码\"></v-input>\r\n                    </v-form-item>\r\n                    <v-form-item>\r\n                        <v-checkbox>记住我</v-checkbox>\r\n                    </v-form-item>\r\n                    <v-button type=\"primary\" html-type=\"submit\">登录</v-button>\r\n                </v-form>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"输入框\">\r\n                <div class=\"admin-title\">邮箱地址:</div>\r\n                <v-input placeholder=\"邮箱\">\r\n                    <span slot=\"after\">.com</span>\r\n                </v-input>\r\n                <div class=\"admin-sep\"></div>\r\n                <div class=\"admin-title\">个人网站:</div>\r\n                <v-input placeholder=\"官网\">\r\n                    <span slot=\"before\">http://</span>\r\n                </v-input>\r\n                <div class=\"admin-sep\"></div>\r\n                <div class=\"admin-title\">数字输入框:</div>\r\n                <v-input-number min=\"1\" max=\"10\" default-value=\"3\" :on-change=\"_handleChange\"></v-input-number>\r\n            </v-card>\r\n        </div>\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"评分\">\r\n                <div class=\"\">\r\n                    <v-rate></v-rate>\r\n                    <span>默认</span>\r\n                </div>\r\n                <div class=\"admin-sep\">\r\n                    <v-rate :default-value.sync=\"rateValue\"></v-rate>\r\n                    <span class=\"ant-rate-text\">{{rateValue}}星</span>\r\n                </div>\r\n                <div class=\"admin-sep\">\r\n                    <v-rate :allow-half=\"true\" :default-value=\"2.5\"></v-rate>\r\n                    <span>支持半星</span>\r\n                </div>\r\n                <div class=\"admin-sep\">\r\n                    <v-rate :disabled=\"true\" :default-value=\"2\"></v-rate>\r\n                    <span>禁用</span>\r\n                </div>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"选择器\">\r\n                <div class=\"admin-sep-20\">\r\n                    <v-select placeholder=\"请选择人员\" style=\"width: 120px;\" :options=\"selectOptions\"\r\n                              value=\"\" @change=\"change\"></v-select>\r\n                    <v-select placement=\"top\" style=\"width: 120px;\" :options=\"selectOptions\"\r\n                              :value.sync=\"selectOptionsDefaultValue\"></v-select>\r\n                    <v-select :disabled=\"true\" style=\"width: 120px;\" value=\"\"></v-select>\r\n                </div>\r\n                <div>\r\n                    <v-select style=\"width: 100%;\" :multiple=\"true\" :options=\"selectOptions\" :value=\"['3']\"></v-select>\r\n                </div>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"滑动输入条\">\r\n                <div>\r\n                    <v-slider :default-value=\"30\"></v-slider>\r\n                    <v-slider :range=\"true\" :default-value=\"[20, 50]\"></v-slider>\r\n                    <v-slider :range=\"true\" :default-value=\"[20, 50]\" :disabled=\"true\"></v-slider>\r\n                </div>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"开关\">\r\n                <v-switch :on-change=\"change\"></v-switch>\r\n                <v-switch :disabled=\"true\"></v-switch>\r\n                <v-switch>\r\n                    <span slot=\"checkedChildren\">开</span>\r\n                    <span slot=\"unCheckedChildren\">关</span>\r\n                </v-switch>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"时间选择器\">\r\n                <div>\r\n                    <v-time-picker :value.sync=\"timeValue\"></v-time-picker>\r\n                    <v-time-picker :disabled=\"true\"></v-time-picker>\r\n                </div>\r\n            </v-card>\r\n        </div>\r\n\r\n        <!--<div class=\"admin-card\">-->\r\n        <!--<v-card title=\"穿梭框\">-->\r\n        <!--<v-transfer :data-source=\"dataSource1\" :target-keys=\"targetKeys1\" :on-change=\"handleChange1\"-->\r\n        <!--:render=\"render\"></v-transfer>-->\r\n        <!--</v-card>-->\r\n        <!--</div>-->\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"树\">\r\n                <v-tree-select :data=\"treedata1\" :allow-clear=\"true\"></v-tree-select>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"文件上传\">\r\n                <v-upload :name=\"name\" :action=\"action\" :on-change=\"onChange\">\r\n                    <v-button type=\"ghost\">\r\n                        <v-icon type=\"upload\"></v-icon>\r\n                        点击上传\r\n                    </v-button>\r\n                </v-upload>\r\n                <v-upload :name=\"name\" :action=\"action\" type=\"drag\" :on-change=\"onChange\">\r\n                    <p class=\"ant-upload-drag-icon\">\r\n                        <v-icon type=\"inbox\"></v-icon>\r\n                    </p>\r\n                    <p class=\"ant-upload-text\">点击或将文件拖拽到此区域上传</p>\r\n                    <p class=\"ant-upload-hint\">支持单个或批量上传，严禁上传公司内部资料及其他违禁文件</p>\r\n                </v-upload>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"日期选择器\">\r\n                <v-datepicker :clearable=\"true\"></v-datepicker>\r\n                <br>\r\n                <br>\r\n                <v-datepicker :range=\"true\" :clearable=\"true\"></v-datepicker>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"提示\">\r\n            <v-card title=\"输入框\">\r\n                <v-alert type=\"success\" message=\"成功提示的文案\" :show-icon=\"true\"></v-alert>\r\n                <v-alert type=\"info\" message=\"消息提示的文案\" :show-icon=\"true\"></v-alert>\r\n                <v-alert type=\"warning\" message=\"警告提示的文案\" :show-icon=\"true\"></v-alert>\r\n                <v-alert type=\"error\" message=\"错误提示的文案\" :show-icon=\"true\"></v-alert>\r\n                <v-alert type=\"success\" message=\"成功提示的文案\" :show-icon=\"true\"\r\n                         description=\"成功提示的辅助性文字介绍成功提示的辅助性文字介绍成功提示的辅助性文字介绍成功提示的辅助性文字介绍\"></v-alert>\r\n                <v-alert type=\"info\" message=\"消息提示的文案\" s:how-icon=\"true\"\r\n                         description=\"消息提示的辅助性文字介绍消息提示的辅助性文字介绍消息提示的辅助性文字介绍\"></v-alert>\r\n                <v-alert type=\"warning\" message=\"警告提示的文案\" :show-icon=\"true\"\r\n                         description=\"警告提示的辅助性文字介绍警告提示的辅助性文字介绍\"></v-alert>\r\n                <v-alert type=\"error\" message=\"错误提示的文案\" :show-icon=\"true\"\r\n                         description=\"错误提示的辅助性文字介绍错误提示的辅助性文字介绍错误提示的辅助性文字介绍错误提示的辅助性文字介绍错误提示的辅助性文字介绍错误提示的辅助性文字介绍\"></v-alert>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"进度条\">\r\n                <v-progress-line :percent=\"30\"></v-progress-line>\r\n                <v-progress-line :percent=\"50\" status=\"active\"></v-progress-line>\r\n                <v-progress-line :percent=\"70\" status=\"exception\"></v-progress-line>\r\n                <v-progress-line :percent=\"100\"></v-progress-line>\r\n                <v-progress-line :percent=\"50\" :show-info=\"false\"></v-progress-line>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=进度框\">\r\n                <v-progress-circle :percent=\"30\"></v-progress-circle>\r\n                <v-progress-circle :percent=\"70\" status=\"exception\"></v-progress-circle>\r\n                <v-progress-circle :percent=\"100\"></v-progress-circle>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"徽标数\">\r\n                <v-badge :count=\"11\" :overflow-count=\"10\"><a class=\"head-example\"></a>\r\n                </v-badge>\r\n                <v-badge :count=\"1000\" :overflow-count=\"999\"><a class=\"head-example\"></a>\r\n                </v-badge>\r\n                <v-badge :count=\"25\"></v-badge>\r\n                <v-badge :count=\"4\"\r\n                         :styles=\"{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }\"></v-badge>\r\n                <v-badge :count=\"109\" :styles=\"{ backgroundColor: '#87d068' }\"></v-badge>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"走马灯\">\r\n                <v-carousel>\r\n                    <div>\r\n                        <h3>1</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3>2</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3>3</h3>\r\n                    </div>\r\n                    <div>\r\n                        <h3>4</h3>\r\n                    </div>\r\n                </v-carousel>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"折叠面板\">\r\n                <v-collapse default-active-key=\"1\">\r\n                    <v-collapse-item header=\"This is panel header 1\" key=\"1\">A dog is a type of domesticated animal.\r\n                        Known for its loyalty and faithfulness,\r\n                        it can be found as a welcome guest in many households across the world.\r\n                    </v-collapse-item>\r\n                    <v-collapse-item\r\n                            header=\"This is panel header 2\" key=\"2\">A dog is a type of domesticated animal. Known for\r\n                        its loyalty and faithfulness,\r\n                        it can be found as a welcome guest in many households across the world.\r\n                    </v-collapse-item>\r\n                    <v-collapse-item\r\n                            header=\"This is panel header 3\" key=\"3\">A dog is a type of domesticated animal. Known for\r\n                        its loyalty and faithfulness,\r\n                        it can be found as a welcome guest in many households across the world.\r\n                    </v-collapse-item>\r\n                </v-collapse>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"通知\">\r\n                <button type=\"button\" class=\"ant-btn ant-btn-primary\" @click=\"openNotification\"><span>打开通知提醒框</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"openNotificationWithIcon('success')\"><span>成 功</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"openNotificationWithIcon('info')\"><span>消 息</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"openNotificationWithIcon('warning')\"><span>警 告</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"openNotificationWithIcon('error')\"><span>错 误</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn ant-btn-primary\" @click=\"openMessage\"><span>显示普通提醒</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"success()\"><span>显示成功信息</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"error()\"><span>显示失败信息</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"warning()\"><span>显示警告信息</span>\r\n                </button>\r\n                <button type=\"button\" class=\"ant-btn\" @click=\"loading\"><span>显示加载中...</span>\r\n                </button>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"输入框\">\r\n                <v-popover placement=\"top\" title=\"简单标题\">\r\n                    <div slot=\"content\">我是普通文本内容</div>\r\n                    <button class=\"ant-btn ant-btn-primary\" slot=\"trigger\">点击弹出卡片</button>\r\n                </v-popover>\r\n\r\n                <v-popover placement=\"left\" title=\"简单标题\" content=\"点击\">\r\n                    <button class=\"ant-btn ant-btn-primary\" slot=\"trigger\">click</button>\r\n                </v-popover>\r\n                <span style=\"display:inline-block;width:80px;\">\r\n                <v-popover placement=\"top\" title=\"简单标题\" trigger=\"focus\" content=\"focus\">\r\n                    <input class=\"ant-input ant-input-lg\" slot=\"trigger\" placeholder=\"focus\">\r\n                </v-popover>\r\n            </span>\r\n                <v-popover placement=\"right\" title=\"简单标题\" content=\"hover\"\r\n                           trigger=\"hover\">\r\n                    <button class=\"ant-btn ant-btn-primary\" slot=\"trigger\">hover</button>\r\n                </v-popover>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"气泡确认框\">\r\n                <v-popconfirm title=\"确定删除吗?\" :on-confirm=\"confirm\" :on-cancel=\"cancel\"> <a href=\"javascript:;\">删除</a>\r\n                </v-popconfirm>\r\n            </v-card>\r\n        </div>\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"模态窗口\">\r\n                <v-button type=\"primary\" @click=\"_showModal\">显示对话框</v-button>\r\n                <v-modal title=\"第一个 Modal\" :visible=\"visible\" :on-ok=\"_handleOk\"\r\n                         :on-cancel=\"_handleCancel\">\r\n                    <p>对话框的内容</p>\r\n                    <p>对话框的内容</p>\r\n                    <p>对话框的内容</p>\r\n                </v-modal>\r\n            </v-card>\r\n        </div>\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"标签\">\r\n                <v-tag>标签一</v-tag>\r\n                <v-tag>标签一</v-tag>\r\n                <v-tag color=\"blue\" :closable=\"true\" @close=\"close(1)\">蓝色</v-tag>\r\n                <v-tag color=\"green\" :closable=\"true\" @close=\"close(2)\">绿色</v-tag>\r\n                <v-tag color=\"yellow\" :closable=\"true\" @close=\"close(3)\">黄色</v-tag>\r\n                <v-tag color=\"red\" :closable=\"true\" @close=\"close(4)\">红色</v-tag>\r\n            </v-card>\r\n        </div>\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"时间轴\">\r\n                <v-timeline>\r\n                    <v-timeline-item>创建服务现场 2015-09-01</v-timeline-item>\r\n                    <v-timeline-item>创建服务现场 2015-09-01</v-timeline-item>\r\n                    <v-timeline-item>创建服务现场 2015-09-01</v-timeline-item>\r\n                    <v-timeline-item>创建服务现场 2015-09-01</v-timeline-item>\r\n                </v-timeline>\r\n                <br>\r\n                <v-timeline>\r\n                    <v-timeline-item color=\"green\">创建服务现场 2015-09-01</v-timeline-item>\r\n                    <v-timeline-item color=\"green\">创建服务现场 2015-09-01</v-timeline-item>\r\n                    <v-timeline-item color=\"red\">\r\n                        <p>初步排除网络异常1</p>\r\n                        <p>初步排除网络异常2</p>\r\n                        <p>初步排除网络异常3 2015-09-01</p>\r\n                    </v-timeline-item>\r\n                    <v-timeline-item>\r\n                        <p>技术测试异常1</p>\r\n                        <p>技术测试异常2</p>\r\n                        <p>技术测试异常3 2015-09-01</p>\r\n                    </v-timeline-item>\r\n                </v-timeline>\r\n            </v-card>\r\n        </div>\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"面包屑\">\r\n                <v-breadcrumbs>\r\n                    <v-breadcrumb name=\"Home\" separator=\">\"></v-breadcrumb>\r\n                    <v-breadcrumb name=\"Application Center\" href=\"\" separator=\">\"></v-breadcrumb>\r\n                    <v-breadcrumb name=\"Application List\" href=\"\" separator=\">\"></v-breadcrumb>\r\n                    <v-breadcrumb name=\"An Application\" separator=\"/\"></v-breadcrumb>\r\n                </v-breadcrumbs>\r\n            </v-card>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"导航\">\r\n                <v-menu mode=\"horizontal\">\r\n                    <v-menu-item>\r\n                        <v-icon type=\"mail\"></v-icon>导航一</v-menu-item>\r\n                    <v-menu-item :disabled=\"true\">\r\n                        <v-icon type=\"appstore\"></v-icon>导航二</v-menu-item>\r\n                    <v-sub-menu title=\"导航 - 子菜单\" icon=\"setting\">\r\n                        <v-menu-item-group title=\"分组1\">\r\n                            <v-menu-item>选项1</v-menu-item>\r\n                            <v-menu-item>选项2</v-menu-item>\r\n                        </v-menu-item-group>\r\n                        <v-menu-item-group title=\"分组2\">\r\n                            <v-menu-item>选项3</v-menu-item>\r\n                            <v-menu-item>选项4</v-menu-item>\r\n                        </v-menu-item-group>\r\n                    </v-sub-menu>\r\n                    <v-menu-item><a href=\"http://www.alipay.com/\" target=\"_blank\">导航四 - 链接</a>\r\n                    </v-menu-item>\r\n                </v-menu>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"步骤条\">\r\n                <v-steps :current=\"1\">\r\n                    <v-step title=\"已完成\" description=\"这里是多信息的描述\"></v-step>\r\n                    <v-step title=\"进行中\" description=\"这里是多信息的描述\"></v-step>\r\n                    <v-step title=\"待运行\" description=\"这里是多信息的描述\"></v-step>\r\n                    <v-step title=\"待运行\" description=\"这里是多信息的描述\"></v-step>\r\n                </v-steps>\r\n            </v-card>\r\n        </div>\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"tabs\">\r\n                <v-tabs active-key=\"1\">\r\n                    <v-tab-pane key=\"1\" tab=\"选项卡一\">选项卡一内容</v-tab-pane>\r\n                    <v-tab-pane key=\"2\" tab=\"选项卡二\">选项卡二内容</v-tab-pane>\r\n                    <v-tab-pane key=\"3\" tab=\"选项卡三\">选项卡三内容</v-tab-pane>\r\n                </v-tabs>\r\n            </v-card>\r\n        </div>\r\n\r\n        <v-back-top></v-back-top>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"admin-card\">\r\n            <v-card title=\"图标库\">\r\n                <v-icon type=\"step-backward\"></v-icon>\r\n                <v-icon type=\"step-forward\"></v-icon>\r\n                <v-icon type=\"fast-backward\"></v-icon>\r\n                <v-icon type=\"fast-forward\"></v-icon>\r\n                <v-icon type=\"shrink\"></v-icon>\r\n                <v-icon type=\"arrow-salt\"></v-icon>\r\n                <v-icon type=\"down\"></v-icon>\r\n                <v-icon type=\"up\"></v-icon>\r\n                <v-icon type=\"left\"></v-icon>\r\n                <v-icon type=\"right\"></v-icon>\r\n                <v-icon type=\"caret-down\"></v-icon>\r\n                <v-icon type=\"caret-up\"></v-icon>\r\n                <v-icon type=\"caret-left\"></v-icon>\r\n                <v-icon type=\"caret-right\"></v-icon>\r\n            </v-card>\r\n        </div>\r\n\r\n        <!--<div class=\"box\">-->\r\n        <!--<div class=\"box-header with-border\">-->\r\n        <!--<h3 class=\"box-title\">{{title}}</h3>-->\r\n        <!--<div class=\"box-tools\">-->\r\n        <!--<a v-if=\"createBtn\" v-link=\"createBtn.link.route\" class=\"{{createBtn.styleClasses}}\">-->\r\n        <!--{{ createBtn.link.label }}-->\r\n        <!--</a>-->\r\n        <!--</div>-->\r\n        <!--</div>-->\r\n        <!--<div v-if=\"table\" class=\"box-body no-padding table-responsive\">-->\r\n        <!--<v-table :table-data=\"table\"></v-table>-->\r\n        <!--</div>-->\r\n        <!--&lt;!&ndash; /.box-body &ndash;&gt;-->\r\n        <!--<div class=\"box-footer\">-->\r\n        <!--脚部-->\r\n        <!--</div>-->\r\n        <!--&lt;!&ndash; /.box-footer&ndash;&gt;-->\r\n        <!--</div>-->\r\n    </section>\r\n</div>";

/***/ },
/* 97 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = {
	    'appClient.baseUrl': '/index_dev.php/api'
	};


/***/ },
/* 98 */
/***/ function(module, exports) {

	/*!
	 * vue-resource v0.9.3
	 * https://github.com/vuejs/vue-resource
	 * Released under the MIT License.
	 */

	'use strict';

	/**
	 * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)
	 */

	var RESOLVED = 0;
	var REJECTED = 1;
	var PENDING = 2;

	function Promise$2(executor) {

	    this.state = PENDING;
	    this.value = undefined;
	    this.deferred = [];

	    var promise = this;

	    try {
	        executor(function (x) {
	            promise.resolve(x);
	        }, function (r) {
	            promise.reject(r);
	        });
	    } catch (e) {
	        promise.reject(e);
	    }
	}

	Promise$2.reject = function (r) {
	    return new Promise$2(function (resolve, reject) {
	        reject(r);
	    });
	};

	Promise$2.resolve = function (x) {
	    return new Promise$2(function (resolve, reject) {
	        resolve(x);
	    });
	};

	Promise$2.all = function all(iterable) {
	    return new Promise$2(function (resolve, reject) {
	        var count = 0,
	            result = [];

	        if (iterable.length === 0) {
	            resolve(result);
	        }

	        function resolver(i) {
	            return function (x) {
	                result[i] = x;
	                count += 1;

	                if (count === iterable.length) {
	                    resolve(result);
	                }
	            };
	        }

	        for (var i = 0; i < iterable.length; i += 1) {
	            Promise$2.resolve(iterable[i]).then(resolver(i), reject);
	        }
	    });
	};

	Promise$2.race = function race(iterable) {
	    return new Promise$2(function (resolve, reject) {
	        for (var i = 0; i < iterable.length; i += 1) {
	            Promise$2.resolve(iterable[i]).then(resolve, reject);
	        }
	    });
	};

	var p$1 = Promise$2.prototype;

	p$1.resolve = function resolve(x) {
	    var promise = this;

	    if (promise.state === PENDING) {
	        if (x === promise) {
	            throw new TypeError('Promise settled with itself.');
	        }

	        var called = false;

	        try {
	            var then = x && x['then'];

	            if (x !== null && typeof x === 'object' && typeof then === 'function') {
	                then.call(x, function (x) {
	                    if (!called) {
	                        promise.resolve(x);
	                    }
	                    called = true;
	                }, function (r) {
	                    if (!called) {
	                        promise.reject(r);
	                    }
	                    called = true;
	                });
	                return;
	            }
	        } catch (e) {
	            if (!called) {
	                promise.reject(e);
	            }
	            return;
	        }

	        promise.state = RESOLVED;
	        promise.value = x;
	        promise.notify();
	    }
	};

	p$1.reject = function reject(reason) {
	    var promise = this;

	    if (promise.state === PENDING) {
	        if (reason === promise) {
	            throw new TypeError('Promise settled with itself.');
	        }

	        promise.state = REJECTED;
	        promise.value = reason;
	        promise.notify();
	    }
	};

	p$1.notify = function notify() {
	    var promise = this;

	    nextTick(function () {
	        if (promise.state !== PENDING) {
	            while (promise.deferred.length) {
	                var deferred = promise.deferred.shift(),
	                    onResolved = deferred[0],
	                    onRejected = deferred[1],
	                    resolve = deferred[2],
	                    reject = deferred[3];

	                try {
	                    if (promise.state === RESOLVED) {
	                        if (typeof onResolved === 'function') {
	                            resolve(onResolved.call(undefined, promise.value));
	                        } else {
	                            resolve(promise.value);
	                        }
	                    } else if (promise.state === REJECTED) {
	                        if (typeof onRejected === 'function') {
	                            resolve(onRejected.call(undefined, promise.value));
	                        } else {
	                            reject(promise.value);
	                        }
	                    }
	                } catch (e) {
	                    reject(e);
	                }
	            }
	        }
	    });
	};

	p$1.then = function then(onResolved, onRejected) {
	    var promise = this;

	    return new Promise$2(function (resolve, reject) {
	        promise.deferred.push([onResolved, onRejected, resolve, reject]);
	        promise.notify();
	    });
	};

	p$1.catch = function (onRejected) {
	    return this.then(undefined, onRejected);
	};

	var PromiseObj = window.Promise || Promise$2;

	function Promise$1(executor, context) {

	    if (executor instanceof PromiseObj) {
	        this.promise = executor;
	    } else {
	        this.promise = new PromiseObj(executor.bind(context));
	    }

	    this.context = context;
	}

	Promise$1.all = function (iterable, context) {
	    return new Promise$1(PromiseObj.all(iterable), context);
	};

	Promise$1.resolve = function (value, context) {
	    return new Promise$1(PromiseObj.resolve(value), context);
	};

	Promise$1.reject = function (reason, context) {
	    return new Promise$1(PromiseObj.reject(reason), context);
	};

	Promise$1.race = function (iterable, context) {
	    return new Promise$1(PromiseObj.race(iterable), context);
	};

	var p = Promise$1.prototype;

	p.bind = function (context) {
	    this.context = context;
	    return this;
	};

	p.then = function (fulfilled, rejected) {

	    if (fulfilled && fulfilled.bind && this.context) {
	        fulfilled = fulfilled.bind(this.context);
	    }

	    if (rejected && rejected.bind && this.context) {
	        rejected = rejected.bind(this.context);
	    }

	    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);
	};

	p.catch = function (rejected) {

	    if (rejected && rejected.bind && this.context) {
	        rejected = rejected.bind(this.context);
	    }

	    return new Promise$1(this.promise.catch(rejected), this.context);
	};

	p.finally = function (callback) {

	    return this.then(function (value) {
	        callback.call(this);
	        return value;
	    }, function (reason) {
	        callback.call(this);
	        return PromiseObj.reject(reason);
	    });
	};

	var debug = false;
	var util = {};
	var array = [];
	function Util (Vue) {
	    util = Vue.util;
	    debug = Vue.config.debug || !Vue.config.silent;
	}

	function warn(msg) {
	    if (typeof console !== 'undefined' && debug) {
	        console.warn('[VueResource warn]: ' + msg);
	    }
	}

	function error(msg) {
	    if (typeof console !== 'undefined') {
	        console.error(msg);
	    }
	}

	function nextTick(cb, ctx) {
	    return util.nextTick(cb, ctx);
	}

	function trim(str) {
	    return str.replace(/^\s*|\s*$/g, '');
	}

	var isArray = Array.isArray;

	function isString(val) {
	    return typeof val === 'string';
	}

	function isBoolean(val) {
	    return val === true || val === false;
	}

	function isFunction(val) {
	    return typeof val === 'function';
	}

	function isObject(obj) {
	    return obj !== null && typeof obj === 'object';
	}

	function isPlainObject(obj) {
	    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;
	}

	function isFormData(obj) {
	    return typeof FormData !== 'undefined' && obj instanceof FormData;
	}

	function when(value, fulfilled, rejected) {

	    var promise = Promise$1.resolve(value);

	    if (arguments.length < 2) {
	        return promise;
	    }

	    return promise.then(fulfilled, rejected);
	}

	function options(fn, obj, opts) {

	    opts = opts || {};

	    if (isFunction(opts)) {
	        opts = opts.call(obj);
	    }

	    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });
	}

	function each(obj, iterator) {

	    var i, key;

	    if (typeof obj.length == 'number') {
	        for (i = 0; i < obj.length; i++) {
	            iterator.call(obj[i], obj[i], i);
	        }
	    } else if (isObject(obj)) {
	        for (key in obj) {
	            if (obj.hasOwnProperty(key)) {
	                iterator.call(obj[key], obj[key], key);
	            }
	        }
	    }

	    return obj;
	}

	var assign = Object.assign || _assign;

	function merge(target) {

	    var args = array.slice.call(arguments, 1);

	    args.forEach(function (source) {
	        _merge(target, source, true);
	    });

	    return target;
	}

	function defaults(target) {

	    var args = array.slice.call(arguments, 1);

	    args.forEach(function (source) {

	        for (var key in source) {
	            if (target[key] === undefined) {
	                target[key] = source[key];
	            }
	        }
	    });

	    return target;
	}

	function _assign(target) {

	    var args = array.slice.call(arguments, 1);

	    args.forEach(function (source) {
	        _merge(target, source);
	    });

	    return target;
	}

	function _merge(target, source, deep) {
	    for (var key in source) {
	        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {
	            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {
	                target[key] = {};
	            }
	            if (isArray(source[key]) && !isArray(target[key])) {
	                target[key] = [];
	            }
	            _merge(target[key], source[key], deep);
	        } else if (source[key] !== undefined) {
	            target[key] = source[key];
	        }
	    }
	}

	function root (options, next) {

	    var url = next(options);

	    if (isString(options.root) && !url.match(/^(https?:)?\//)) {
	        url = options.root + '/' + url;
	    }

	    return url;
	}

	function query (options, next) {

	    var urlParams = Object.keys(Url.options.params),
	        query = {},
	        url = next(options);

	    each(options.params, function (value, key) {
	        if (urlParams.indexOf(key) === -1) {
	            query[key] = value;
	        }
	    });

	    query = Url.params(query);

	    if (query) {
	        url += (url.indexOf('?') == -1 ? '?' : '&') + query;
	    }

	    return url;
	}

	/**
	 * URL Template v2.0.6 (https://github.com/bramstein/url-template)
	 */

	function expand(url, params, variables) {

	    var tmpl = parse(url),
	        expanded = tmpl.expand(params);

	    if (variables) {
	        variables.push.apply(variables, tmpl.vars);
	    }

	    return expanded;
	}

	function parse(template) {

	    var operators = ['+', '#', '.', '/', ';', '?', '&'],
	        variables = [];

	    return {
	        vars: variables,
	        expand: function (context) {
	            return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (_, expression, literal) {
	                if (expression) {

	                    var operator = null,
	                        values = [];

	                    if (operators.indexOf(expression.charAt(0)) !== -1) {
	                        operator = expression.charAt(0);
	                        expression = expression.substr(1);
	                    }

	                    expression.split(/,/g).forEach(function (variable) {
	                        var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
	                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
	                        variables.push(tmp[1]);
	                    });

	                    if (operator && operator !== '+') {

	                        var separator = ',';

	                        if (operator === '?') {
	                            separator = '&';
	                        } else if (operator !== '#') {
	                            separator = operator;
	                        }

	                        return (values.length !== 0 ? operator : '') + values.join(separator);
	                    } else {
	                        return values.join(',');
	                    }
	                } else {
	                    return encodeReserved(literal);
	                }
	            });
	        }
	    };
	}

	function getValues(context, operator, key, modifier) {

	    var value = context[key],
	        result = [];

	    if (isDefined(value) && value !== '') {
	        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
	            value = value.toString();

	            if (modifier && modifier !== '*') {
	                value = value.substring(0, parseInt(modifier, 10));
	            }

	            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));
	        } else {
	            if (modifier === '*') {
	                if (Array.isArray(value)) {
	                    value.filter(isDefined).forEach(function (value) {
	                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));
	                    });
	                } else {
	                    Object.keys(value).forEach(function (k) {
	                        if (isDefined(value[k])) {
	                            result.push(encodeValue(operator, value[k], k));
	                        }
	                    });
	                }
	            } else {
	                var tmp = [];

	                if (Array.isArray(value)) {
	                    value.filter(isDefined).forEach(function (value) {
	                        tmp.push(encodeValue(operator, value));
	                    });
	                } else {
	                    Object.keys(value).forEach(function (k) {
	                        if (isDefined(value[k])) {
	                            tmp.push(encodeURIComponent(k));
	                            tmp.push(encodeValue(operator, value[k].toString()));
	                        }
	                    });
	                }

	                if (isKeyOperator(operator)) {
	                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));
	                } else if (tmp.length !== 0) {
	                    result.push(tmp.join(','));
	                }
	            }
	        }
	    } else {
	        if (operator === ';') {
	            result.push(encodeURIComponent(key));
	        } else if (value === '' && (operator === '&' || operator === '?')) {
	            result.push(encodeURIComponent(key) + '=');
	        } else if (value === '') {
	            result.push('');
	        }
	    }

	    return result;
	}

	function isDefined(value) {
	    return value !== undefined && value !== null;
	}

	function isKeyOperator(operator) {
	    return operator === ';' || operator === '&' || operator === '?';
	}

	function encodeValue(operator, value, key) {

	    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);

	    if (key) {
	        return encodeURIComponent(key) + '=' + value;
	    } else {
	        return value;
	    }
	}

	function encodeReserved(str) {
	    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {
	        if (!/%[0-9A-Fa-f]/.test(part)) {
	            part = encodeURI(part);
	        }
	        return part;
	    }).join('');
	}

	function template (options) {

	    var variables = [],
	        url = expand(options.url, options.params, variables);

	    variables.forEach(function (key) {
	        delete options.params[key];
	    });

	    return url;
	}

	/**
	 * Service for URL templating.
	 */

	var ie = document.documentMode;
	var el = document.createElement('a');

	function Url(url, params) {

	    var self = this || {},
	        options = url,
	        transform;

	    if (isString(url)) {
	        options = { url: url, params: params };
	    }

	    options = merge({}, Url.options, self.$options, options);

	    Url.transforms.forEach(function (handler) {
	        transform = factory(handler, transform, self.$vm);
	    });

	    return transform(options);
	}

	/**
	 * Url options.
	 */

	Url.options = {
	    url: '',
	    root: null,
	    params: {}
	};

	/**
	 * Url transforms.
	 */

	Url.transforms = [template, query, root];

	/**
	 * Encodes a Url parameter string.
	 *
	 * @param {Object} obj
	 */

	Url.params = function (obj) {

	    var params = [],
	        escape = encodeURIComponent;

	    params.add = function (key, value) {

	        if (isFunction(value)) {
	            value = value();
	        }

	        if (value === null) {
	            value = '';
	        }

	        this.push(escape(key) + '=' + escape(value));
	    };

	    serialize(params, obj);

	    return params.join('&').replace(/%20/g, '+');
	};

	/**
	 * Parse a URL and return its components.
	 *
	 * @param {String} url
	 */

	Url.parse = function (url) {

	    if (ie) {
	        el.href = url;
	        url = el.href;
	    }

	    el.href = url;

	    return {
	        href: el.href,
	        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',
	        port: el.port,
	        host: el.host,
	        hostname: el.hostname,
	        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,
	        search: el.search ? el.search.replace(/^\?/, '') : '',
	        hash: el.hash ? el.hash.replace(/^#/, '') : ''
	    };
	};

	function factory(handler, next, vm) {
	    return function (options) {
	        return handler.call(vm, options, next);
	    };
	}

	function serialize(params, obj, scope) {

	    var array = isArray(obj),
	        plain = isPlainObject(obj),
	        hash;

	    each(obj, function (value, key) {

	        hash = isObject(value) || isArray(value);

	        if (scope) {
	            key = scope + '[' + (plain || hash ? key : '') + ']';
	        }

	        if (!scope && array) {
	            params.add(value.name, value.value);
	        } else if (hash) {
	            serialize(params, value, key);
	        } else {
	            params.add(key, value);
	        }
	    });
	}

	function xdrClient (request) {
	    return new Promise$1(function (resolve) {

	        var xdr = new XDomainRequest(),
	            handler = function (event) {

	            var response = request.respondWith(xdr.responseText, {
	                status: xdr.status,
	                statusText: xdr.statusText
	            });

	            resolve(response);
	        };

	        request.abort = function () {
	            return xdr.abort();
	        };

	        xdr.open(request.method, request.getUrl(), true);
	        xdr.timeout = 0;
	        xdr.onload = handler;
	        xdr.onerror = handler;
	        xdr.ontimeout = function () {};
	        xdr.onprogress = function () {};
	        xdr.send(request.getBody());
	    });
	}

	var ORIGIN_URL = Url.parse(location.href);
	var SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();

	function cors (request, next) {

	    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {
	        request.crossOrigin = true;
	    }

	    if (request.crossOrigin) {

	        if (!SUPPORTS_CORS) {
	            request.client = xdrClient;
	        }

	        delete request.emulateHTTP;
	    }

	    next();
	}

	function crossOrigin(request) {

	    var requestUrl = Url.parse(Url(request));

	    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;
	}

	function body (request, next) {

	    if (request.emulateJSON && isPlainObject(request.body)) {
	        request.body = Url.params(request.body);
	        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';
	    }

	    if (isFormData(request.body)) {
	        delete request.headers['Content-Type'];
	    }

	    if (isPlainObject(request.body)) {
	        request.body = JSON.stringify(request.body);
	    }

	    next(function (response) {

	        var contentType = response.headers['Content-Type'];

	        if (isString(contentType) && contentType.indexOf('application/json') === 0) {

	            try {
	                response.data = response.json();
	            } catch (e) {
	                response.data = null;
	            }
	        } else {
	            response.data = response.text();
	        }
	    });
	}

	function jsonpClient (request) {
	    return new Promise$1(function (resolve) {

	        var name = request.jsonp || 'callback',
	            callback = '_jsonp' + Math.random().toString(36).substr(2),
	            body = null,
	            handler,
	            script;

	        handler = function (event) {

	            var status = 0;

	            if (event.type === 'load' && body !== null) {
	                status = 200;
	            } else if (event.type === 'error') {
	                status = 404;
	            }

	            resolve(request.respondWith(body, { status: status }));

	            delete window[callback];
	            document.body.removeChild(script);
	        };

	        request.params[name] = callback;

	        window[callback] = function (result) {
	            body = JSON.stringify(result);
	        };

	        script = document.createElement('script');
	        script.src = request.getUrl();
	        script.type = 'text/javascript';
	        script.async = true;
	        script.onload = handler;
	        script.onerror = handler;

	        document.body.appendChild(script);
	    });
	}

	function jsonp (request, next) {

	    if (request.method == 'JSONP') {
	        request.client = jsonpClient;
	    }

	    next(function (response) {

	        if (request.method == 'JSONP') {
	            response.data = response.json();
	        }
	    });
	}

	function before (request, next) {

	    if (isFunction(request.before)) {
	        request.before.call(this, request);
	    }

	    next();
	}

	/**
	 * HTTP method override Interceptor.
	 */

	function method (request, next) {

	    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {
	        request.headers['X-HTTP-Method-Override'] = request.method;
	        request.method = 'POST';
	    }

	    next();
	}

	function header (request, next) {

	    request.method = request.method.toUpperCase();
	    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);

	    next();
	}

	/**
	 * Timeout Interceptor.
	 */

	function timeout (request, next) {

	    var timeout;

	    if (request.timeout) {
	        timeout = setTimeout(function () {
	            request.abort();
	        }, request.timeout);
	    }

	    next(function (response) {

	        clearTimeout(timeout);
	    });
	}

	function xhrClient (request) {
	    return new Promise$1(function (resolve) {

	        var xhr = new XMLHttpRequest(),
	            handler = function (event) {

	            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {
	                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug
	                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),
	                headers: parseHeaders(xhr.getAllResponseHeaders())
	            });

	            resolve(response);
	        };

	        request.abort = function () {
	            return xhr.abort();
	        };

	        xhr.open(request.method, request.getUrl(), true);
	        xhr.timeout = 0;
	        xhr.onload = handler;
	        xhr.onerror = handler;

	        if (request.progress) {
	            if (request.method === 'GET') {
	                xhr.addEventListener('progress', request.progress);
	            } else if (/^(POST|PUT)$/i.test(request.method)) {
	                xhr.upload.addEventListener('progress', request.progress);
	            }
	        }

	        if (request.credentials === true) {
	            xhr.withCredentials = true;
	        }

	        each(request.headers || {}, function (value, header) {
	            xhr.setRequestHeader(header, value);
	        });

	        xhr.send(request.getBody());
	    });
	}

	function parseHeaders(str) {

	    var headers = {},
	        value,
	        name,
	        i;

	    each(trim(str).split('\n'), function (row) {

	        i = row.indexOf(':');
	        name = trim(row.slice(0, i));
	        value = trim(row.slice(i + 1));

	        if (headers[name]) {

	            if (isArray(headers[name])) {
	                headers[name].push(value);
	            } else {
	                headers[name] = [headers[name], value];
	            }
	        } else {

	            headers[name] = value;
	        }
	    });

	    return headers;
	}

	function Client (context) {

	    var reqHandlers = [sendRequest],
	        resHandlers = [],
	        handler;

	    if (!isObject(context)) {
	        context = null;
	    }

	    function Client(request) {
	        return new Promise$1(function (resolve) {

	            function exec() {

	                handler = reqHandlers.pop();

	                if (isFunction(handler)) {
	                    handler.call(context, request, next);
	                } else {
	                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');
	                    next();
	                }
	            }

	            function next(response) {

	                if (isFunction(response)) {

	                    resHandlers.unshift(response);
	                } else if (isObject(response)) {

	                    resHandlers.forEach(function (handler) {
	                        response = when(response, function (response) {
	                            return handler.call(context, response) || response;
	                        });
	                    });

	                    when(response, resolve);

	                    return;
	                }

	                exec();
	            }

	            exec();
	        }, context);
	    }

	    Client.use = function (handler) {
	        reqHandlers.push(handler);
	    };

	    return Client;
	}

	function sendRequest(request, resolve) {

	    var client = request.client || xhrClient;

	    resolve(client(request));
	}

	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	/**
	 * HTTP Response.
	 */

	var Response = function () {
	    function Response(body, _ref) {
	        var url = _ref.url;
	        var headers = _ref.headers;
	        var status = _ref.status;
	        var statusText = _ref.statusText;
	        classCallCheck(this, Response);


	        this.url = url;
	        this.body = body;
	        this.headers = headers || {};
	        this.status = status || 0;
	        this.statusText = statusText || '';
	        this.ok = status >= 200 && status < 300;
	    }

	    Response.prototype.text = function text() {
	        return this.body;
	    };

	    Response.prototype.blob = function blob() {
	        return new Blob([this.body]);
	    };

	    Response.prototype.json = function json() {
	        return JSON.parse(this.body);
	    };

	    return Response;
	}();

	var Request = function () {
	    function Request(options) {
	        classCallCheck(this, Request);


	        this.method = 'GET';
	        this.body = null;
	        this.params = {};
	        this.headers = {};

	        assign(this, options);
	    }

	    Request.prototype.getUrl = function getUrl() {
	        return Url(this);
	    };

	    Request.prototype.getBody = function getBody() {
	        return this.body;
	    };

	    Request.prototype.respondWith = function respondWith(body, options) {
	        return new Response(body, assign(options || {}, { url: this.getUrl() }));
	    };

	    return Request;
	}();

	/**
	 * Service for sending network requests.
	 */

	var CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };
	var COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };
	var JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };

	function Http(options) {

	    var self = this || {},
	        client = Client(self.$vm);

	    defaults(options || {}, self.$options, Http.options);

	    Http.interceptors.forEach(function (handler) {
	        client.use(handler);
	    });

	    return client(new Request(options)).then(function (response) {

	        return response.ok ? response : Promise$1.reject(response);
	    }, function (response) {

	        if (response instanceof Error) {
	            error(response);
	        }

	        return Promise$1.reject(response);
	    });
	}

	Http.options = {};

	Http.headers = {
	    put: JSON_CONTENT_TYPE,
	    post: JSON_CONTENT_TYPE,
	    patch: JSON_CONTENT_TYPE,
	    delete: JSON_CONTENT_TYPE,
	    custom: CUSTOM_HEADERS,
	    common: COMMON_HEADERS
	};

	Http.interceptors = [before, timeout, method, body, jsonp, header, cors];

	['get', 'delete', 'head', 'jsonp'].forEach(function (method) {

	    Http[method] = function (url, options) {
	        return this(assign(options || {}, { url: url, method: method }));
	    };
	});

	['post', 'put', 'patch'].forEach(function (method) {

	    Http[method] = function (url, body, options) {
	        return this(assign(options || {}, { url: url, method: method, body: body }));
	    };
	});

	function Resource(url, params, actions, options) {

	    var self = this || {},
	        resource = {};

	    actions = assign({}, Resource.actions, actions);

	    each(actions, function (action, name) {

	        action = merge({ url: url, params: params || {} }, options, action);

	        resource[name] = function () {
	            return (self.$http || Http)(opts(action, arguments));
	        };
	    });

	    return resource;
	}

	function opts(action, args) {

	    var options = assign({}, action),
	        params = {},
	        body;

	    switch (args.length) {

	        case 2:

	            params = args[0];
	            body = args[1];

	            break;

	        case 1:

	            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {
	                body = args[0];
	            } else {
	                params = args[0];
	            }

	            break;

	        case 0:

	            break;

	        default:

	            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';
	    }

	    options.body = body;
	    options.params = assign({}, options.params, params);

	    return options;
	}

	Resource.actions = {

	    get: { method: 'GET' },
	    save: { method: 'POST' },
	    query: { method: 'GET' },
	    update: { method: 'PUT' },
	    remove: { method: 'DELETE' },
	    delete: { method: 'DELETE' }

	};

	function plugin(Vue) {

	    if (plugin.installed) {
	        return;
	    }

	    Util(Vue);

	    Vue.url = Url;
	    Vue.http = Http;
	    Vue.resource = Resource;
	    Vue.Promise = Promise$1;

	    Object.defineProperties(Vue.prototype, {

	        $url: {
	            get: function () {
	                return options(Vue.url, this, this.$options.url);
	            }
	        },

	        $http: {
	            get: function () {
	                return options(Vue.http, this, this.$options.http);
	            }
	        },

	        $resource: {
	            get: function () {
	                return Vue.resource.bind(this);
	            }
	        },

	        $promise: {
	            get: function () {
	                var _this = this;

	                return function (executor) {
	                    return new Vue.Promise(executor, _this);
	                };
	            }
	        }

	    });
	}

	if (typeof window !== 'undefined' && window.Vue) {
	    window.Vue.use(plugin);
	}

	module.exports = plugin;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	!function(e,t){ true?module.exports=t(__webpack_require__(6)):"function"==typeof define&&define.amd?define("vue-beauty",["vue"],t):"object"==typeof exports?exports["vue-beauty"]=t(require("vue")):e["vue-beauty"]=t(e.Vue)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="/package/",t(0)}([function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}var r=n(13),o=i(r),s=n(490),a=i(s),l=n(10),u=i(l),c=o.default||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e};n(416);var d=n(363),f=i(d),p=n(364),h=i(p),v=n(365),m=i(v),y=n(366),g=i(y),x=n(369),b=i(x),_=n(52),w=i(_),S=n(118),k=i(S),C=n(370),O=i(C),M=n(371),T=i(M),P=n(81),E=i(P),j=n(372),$=i(j),L=n(373),A=i(L),N=n(374),F=i(N),D=n(375),V=i(D),B=n(376),z=i(B),R=n(21),I=i(R),W=n(377),H=i(W),q=n(378),K=i(q),U=n(120),Y=n(379),G=i(Y),X=n(530),J=i(X),Q=n(383),Z=i(Q),ee=n(386),te=i(ee),ne=n(121),ie=i(ne),re=n(392),oe=i(re),se=n(393),ae=i(se),le=n(394),ue=n(396),ce=i(ue),de=n(122),fe=i(de),pe=n(397),he=i(pe),ve=n(123),me=i(ve),ye=n(398),ge=i(ye),xe=n(124),be=i(xe),_e=n(399),we=i(_e),Se=n(400),ke=i(Se),Ce=n(401),Oe=i(Ce),Me=n(402),Te=i(Me),Pe=n(404),Ee=i(Pe),je=n(403),$e=i(je),Le=n(405),Ae=i(Le),Ne=n(125),Fe=i(Ne),De=n(406),Ve=i(De),Be=n(408),ze=i(Be),Re=n(380),Ie=i(Re),We=n(390),He=i(We),qe=n(385),Ke=i(qe),Ue=n(126),Ye=i(Ue),Ge={affix:f.default,alert:h.default,backTop:m.default,badge:g.default,breadcrumbs:b.default,breadcrumb:b.default.Breadcrumb,button:w.default,buttonGroup:w.default.Group,card:k.default,carousel:O.default,cascader:T.default,checkbox:E.default,checkboxGroup:E.default.Group,collapse:$.default,collapseItem:$.default.Item,datatable:A.default,datepicker:F.default,dropdown:V.default,dropdownMenu:V.default.Menu,dropdownItem:V.default.Item,form:z.default,formItem:z.default.Item,icon:I.default,input:H.default,inputNumber:K.default,col:U.vCol,row:U.vRow,menu:G.default,subMenu:G.default.subMenu,menuItemGroup:G.default.ItemGroup,menuItem:G.default.Item,navMenu:J.default,modal:Z.default,multiselect:te.default,pagination:ie.default,popconfirm:oe.default,popover:ae.default,progressLine:le.vProgressLine,progressCircle:le.vProgressCircle,queueAnim:ce.default,radio:fe.default,radioGroup:fe.default.Group,rate:he.default,select:me.default,slider:ge.default,spin:be.default,steps:we.default,step:we.default.Step,_switch:ke.default,tabs:Oe.default,tabPane:Oe.default.TabPane,tag:Te.default,timeline:Ee.default,timelineItem:Ee.default.Item,timePicker:$e.default,transfer:Ae.default,tree:Fe.default,treeSelect:Ve.default,upload:ze.default,message:Ie.default,notification:He.default,morePanel:Ke.default,tooltip:Ye.default};Ie.default.install=function(e){e.$message=e.prototype.$message=Ie.default},He.default.install=function(e){e.$notification=e.prototype.$notification=He.default};var Xe=!0,Je=!1,Qe=void 0;try{for(var Ze,et=function(){var e=Ze.value;!e.install&&e.name&&(e.install=function(t){t.component(e.name,e)})},tt=(0,u.default)((0,a.default)(Ge));!(Xe=(Ze=tt.next()).done);Xe=!0)et()}catch(e){Je=!0,Qe=e}finally{try{!Xe&&tt.return&&tt.return()}finally{if(Je)throw Qe}}var nt=function e(t){if(!e.installed){var n=!0,i=!1,r=void 0;try{for(var o,s=(0,u.default)((0,a.default)(Ge));!(n=(o=s.next()).done);n=!0){var l=o.value;l.install&&t.use(l)}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}}};"undefined"!=typeof window&&window.Vue&&nt(window.Vue),e.exports=c({version:"0.0.1",install:nt},Ge)},,,function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function r(e){return e&&e.__esModule?e:{default:e}}function o(e){return JSON.parse((0,u.default)(e))}var s=n(13),a=r(s),l=n(53),u=r(l),c=a.default||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},d=n(127),f=i(d),p=n(417),h=i(p),v=n(413),m=i(v),y=n(414),g=i(y),x=n(255),b=r(x),_=n(411),w=r(_),S=n(418),k=r(S);e.exports=c({},f,h,m,g,{cx:b.default,KeyCode:w.default,slotMixin:k.default,getPlainObject:o})},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n(31),o=i(r);t.default=function(e,t,n){return t in e?(0,o.default)(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){"use strict";function i(e,t){t.every(function(e){return"string"==typeof e})&&y(e,t)}function r(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=1,r=t[0],o=t.length;if("function"==typeof r)return r.apply(null,t.slice(1));if("string"==typeof r){for(var s=String(r).replace(m,function(e){if("%%"===e)return"%";if(i>=o)return e;switch(e){case"%s":return String(t[i++]);case"%d":return Number(t[i++]);case"%j":try{return JSON.stringify(t[i++])}catch(e){return"[Circular]"}break;default:return e}}),a=t[i];i<o;a=t[++i])s+=" "+a;return s}return r}function o(e){return"string"===e||"url"===e||"hex"===e||"email"===e||"pattern"===e}function s(e,t){return void 0===e||null===e||(!("array"!==t||!Array.isArray(e)||e.length)||!(!o(t)||"string"!=typeof e||e))}function a(e){return 0===Object.keys(e).length}function l(e,t,n){function i(e){r.push.apply(r,e),o++,o===s&&n(r)}var r=[],o=0,s=e.length;e.forEach(function(e){t(e,i)})}function u(e,t,n){function i(s){if(s&&s.length)return void n(s);var a=r;r+=1,a<o?t(e[a],i):n([])}var r=0,o=e.length;i([])}function c(e){var t=[];return Object.keys(e).forEach(function(n){t.push.apply(t,e[n])}),t}function d(e,t,n,i){if(t.first){var r=c(e);return u(r,n,i)}var o=t.firstFields||[];o===!0&&(o=Object.keys(e));var s=Object.keys(e),a=s.length,d=0,f=[],p=function(e){f.push.apply(f,e),d++,d===a&&i(f)};s.forEach(function(t){var i=e[t];o.indexOf(t)!==-1?u(i,n,p):l(i,n,p)})}function f(e){return function(t){return t&&t.message?(t.field=t.field||e.fullField,t):{message:t,field:t.field||e.fullField}}}function p(e,t){if(t)for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];"object"===("undefined"==typeof i?"undefined":v(i))&&"object"===v(e[n])?e[n]=h({},e[n],i):e[n]=i}return e}Object.defineProperty(t,"__esModule",{value:!0});var h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.warning=i,t.format=r,t.isEmptyValue=s,t.isEmptyObject=a,t.asyncMap=d,t.complementError=f,t.deepMerge=p;var m=/%[sdj%]/g,y=function(){}},function(e,t){var n=e.exports={version:"2.4.0"};"number"==typeof __e&&(__e=n)},function(e,t){var n=e.exports={version:"2.4.0"};"number"==typeof __e&&(__e=n)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={required:n(87),whitespace:n(238),type:n(237),range:n(236),enum:n(234),pattern:n(235)},e.exports=t.default},function(e,t,n){var i=n(64)("wks"),r=n(47),o=n(11).Symbol,s="function"==typeof o,a=e.exports=function(e){return i[e]||(i[e]=s&&o[e]||(s?o:r)("Symbol."+e))};a.store=i},function(e,t,n){e.exports={default:n(272),__esModule:!0}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var i=n(30),r=n(7),o=n(41),s=n(111),a=n(105),l="prototype",u=function(e,t,n){var c,d,f,p,h=e&u.F,v=e&u.G,m=e&u.S,y=e&u.P,g=e&u.B,x=v?i:m?i[t]||(i[t]={}):(i[t]||{})[l],b=v?r:r[t]||(r[t]={}),_=b[l]||(b[l]={});v&&(n=t);for(c in n)d=!h&&x&&void 0!==x[c],f=(d?x:n)[c],p=g&&d?a(f,i):y&&"function"==typeof f?a(Function.call,f):f,x&&s(x,c,f,e&u.U),b[c]!=f&&o(b,c,p),y&&_[c]!=f&&(_[c]=f)};i.core=r,u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t,n){e.exports={default:n(275),__esModule:!0}},,function(e,t,n){var i=n(11),r=n(6),o=n(35),s=n(24),a="prototype",l=function(e,t,n){var u,c,d,f=e&l.F,p=e&l.G,h=e&l.S,v=e&l.P,m=e&l.B,y=e&l.W,g=p?r:r[t]||(r[t]={}),x=g[a],b=p?i:h?i[t]:(i[t]||{})[a];p&&(n=t);for(u in n)c=!f&&b&&void 0!==b[u],c&&u in g||(d=c?b[u]:n[u],g[u]=p&&"function"!=typeof b[u]?n[u]:m&&c?o(d,i):y&&b[u]==d?function(e){var t=function(t,n,i){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,i)}return e.apply(this,arguments)};return t[a]=e[a],t}(d):v&&"function"==typeof d?o(Function.call,d):d,v&&((g.virtual||(g.virtual={}))[u]=d,e&l.R&&x&&!x[u]&&s(x,u,d)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t,n){var i=n(17),r=n(90),o=n(67),s=Object.defineProperty;t.f=n(18)?Object.defineProperty:function(e,t,n){if(i(e),t=o(t,!0),i(n),r)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var i=n(36);e.exports=function(e){if(!i(e))throw TypeError(e+" is not an object!");return e}},function(e,t,n){e.exports=!n(28)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){var i=n(91),r=n(59);e.exports=function(e){return i(r(e))}},function(e,t){"use strict";function n(e){var t=window["page"+(e?"Y":"X")+"Offset"],n="scroll"+(e?"Top":"Left");if("number"!=typeof t){var i=window.document;t=i.documentElement[n],"number"!=typeof t&&(t=i.body[n])}return t}function i(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document.body,i=e.getBoundingClientRect(),r=t.getBoundingClientRect(),o=e.clientTop||t.clientTop||0,s=e.clientLeft||t.clientLeft||0,a=void 0,l=void 0;return t===document.body?(a=n(!0),l=n()):(a=t.scrollTop-r.top,l=t.scrollLeft-r.left),{top:i.top+a-o,left:i.left+l-s,right:i.right+l-s,bottom:i.bottom+a-o}}function r(e,t){return t instanceof Array||(t=[t]),o(e,function(e){return t.some(function(t){return e===t})})}Object.defineProperty(t,"__esModule",{value:!0}),t.getScroll=n,t.getOffset=i,t.closeByElement=r;var o=function e(t,n){return t&&t!==document&&(!!n(t)||e(t.parentNode,n))}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(524),o=i(r);t.default=o.default},function(e,t,n){e.exports={default:n(278),__esModule:!0}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var i=n(16),r=n(38);e.exports=n(18)?function(e,t,n){return i.f(e,t,r(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var i=n(98),r=n(61);e.exports=Object.keys||function(e){return i(e,r)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var i=n(113)("wks"),r=n(79),o=n(30).Symbol,s="function"==typeof o,a=e.exports=function(e){return i[e]||(i[e]=s&&o[e]||(s?o:r)("Symbol."+e))};a.store=i},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports={}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){e.exports={default:n(276),__esModule:!0}},function(e,t){e.exports=function(){var e=[];return e.toString=function(){for(var e=[],t=0;t<this.length;t++){var n=this[t];n[2]?e.push("@media "+n[2]+"{"+n[1]+"}"):e.push(n[1])}return e.join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var i={},r=0;r<this.length;r++){var o=this[r][0];"number"==typeof o&&(i[o]=!0)}for(r=0;r<t.length;r++){var s=t[r];"number"==typeof s[0]&&i[s[0]]||(n&&!s[2]?s[2]=n:n&&(s[2]="("+s[2]+") and ("+n+")"),e.push(s))}},e}},function(e,t,n){function i(e,t){for(var n=0;n<e.length;n++){var i=e[n],r=d[i.id];if(r){r.refs++;for(var o=0;o<r.parts.length;o++)r.parts[o](i.parts[o]);for(;o<i.parts.length;o++)r.parts.push(l(i.parts[o],t))}else{for(var s=[],o=0;o<i.parts.length;o++)s.push(l(i.parts[o],t));d[i.id]={id:i.id,refs:1,parts:s}}}}function r(e){for(var t=[],n={},i=0;i<e.length;i++){var r=e[i],o=r[0],s=r[1],a=r[2],l=r[3],u={css:s,media:a,sourceMap:l};n[o]?n[o].parts.push(u):t.push(n[o]={id:o,parts:[u]})}return t}function o(e,t){var n=h(),i=y[y.length-1];if("top"===e.insertAt)i?i.nextSibling?n.insertBefore(t,i.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),y.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(t)}}function s(e){e.parentNode.removeChild(e);var t=y.indexOf(e);t>=0&&y.splice(t,1)}function a(e){var t=document.createElement("style");return t.type="text/css",o(e,t),t}function l(e,t){var n,i,r;if(t.singleton){var o=m++;n=v||(v=a(t)),i=u.bind(null,n,o,!1),r=u.bind(null,n,o,!0)}else n=a(t),i=c.bind(null,n),r=function(){s(n)};return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else r()}}function u(e,t,n,i){var r=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=g(t,r);else{var o=document.createTextNode(r),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(o,s[t]):e.appendChild(o)}}function c(e,t){var n=t.css,i=t.media,r=t.sourceMap;if(i&&e.setAttribute("media",i),r&&(n+="\n/*# sourceURL="+r.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var d={},f=function(e){var t;return function(){return"undefined"==typeof t&&(t=e.apply(this,arguments)),t}},p=f(function(){return/msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())}),h=f(function(){return document.head||document.getElementsByTagName("head")[0]}),v=null,m=0,y=[];e.exports=function(e,t){t=t||{},"undefined"==typeof t.singleton&&(t.singleton=p()),"undefined"==typeof t.insertAt&&(t.insertAt="bottom");var n=r(e);return i(n,t),function(e){for(var o=[],s=0;s<n.length;s++){var a=n[s],l=d[a.id];l.refs--,o.push(l)}if(e){var u=r(e);i(u,t)}for(var s=0;s<o.length;s++){var l=o[s];if(0===l.refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete d[l.id]}}}};var g=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var i=n(57);e.exports=function(e,t,n){if(i(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){"use strict";var i=n(305)(!0);n(94)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=i(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var i=n(75),r=n(110);e.exports=n(50)?function(e,t,n){return i.f(e,t,r(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var i=n(51),r=Math.min;e.exports=function(e){return e>0?r(i(e),9007199254740991):0}},function(e,t){e.exports=!0},function(e,t,n){var i=n(16).f,r=n(23),o=n(9)("toStringTag");e.exports=function(e,t,n){e&&!r(e=n?e:e.prototype,o)&&i(e,o,{configurable:!0,value:t})}},function(e,t,n){var i=n(59);e.exports=function(e){return Object(i(e))}},function(e,t){var n=0,i=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+i).toString(36))}},function(e,t,n){n(310);for(var i=n(11),r=n(24),o=n(29),s=n(9)("toStringTag"),a=["NodeList","DOMTokenList","MediaList","StyleSheetList","CSSRuleList"],l=0;l<5;l++){var u=a[l],c=i[u],d=c&&c.prototype;d&&!d[s]&&r(d,s,u),o[u]=o.Array}},function(e,t,n){var i=n(27)("unscopables"),r=Array.prototype;void 0==r[i]&&n(41)(r,i,{}),e.exports=function(e){r[i][e]=!0}},function(e,t,n){e.exports=!n(74)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t){var n=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:n)(e)}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(507),o=i(r),s=n(508),a=i(s);o.default.Group=a.default,t.default=o.default},function(e,t,n){e.exports={default:n(274),__esModule:!0}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n(128),o=i(r),s=n(10),a=i(s);t.default=function(){function e(e,t){var n=[],i=!0,r=!1,o=void 0;try{for(var s,l=(0,a.default)(e);!(i=(s=l.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{!i&&l.return&&l.return()}finally{if(r)throw o}}return n}return function(t,n){if(Array.isArray(t))return t;if((0,o.default)(Object(t)))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=e.type,l=[],u=e.required||!e.required&&i.hasOwnProperty(e.field);if(u){if((0,a.isEmptyValue)(t,o)&&!e.required)return n();s.default.required(e,t,i,l,r,o),(0,a.isEmptyValue)(t,o)||s.default.type(e,t,i,l,r)}n(l)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},,function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var i=n(34),r=n(9)("toStringTag"),o="Arguments"==i(function(){return arguments}()),s=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=s(t=Object(e),r))?n:o?i(t):"Object"==(a=i(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var i=n(36),r=n(11).document,o=i(r)&&i(r.createElement);e.exports=function(e){return o?r.createElement(e):{}}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var i=n(64)("keys"),r=n(47);e.exports=function(e){return i[e]||(i[e]=r(e))}},function(e,t,n){var i=n(11),r="__core-js_shared__",o=i[r]||(i[r]={});e.exports=function(e){return o[e]||(o[e]={})}},function(e,t){var n=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:n)(e)}},function(e,t,n){var i=n(65),r=Math.min;e.exports=function(e){return e>0?r(i(e),9007199254740991):0}},function(e,t,n){var i=n(36);e.exports=function(e,t){if(!i(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!i(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var i=n(11),r=n(6),o=n(44),s=n(69),a=n(16).f;e.exports=function(e){var t=r.Symbol||(r.Symbol=o?{}:i.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,n){t.f=n(9)},function(e,t,n){var i=n(58),r=n(9)("iterator"),o=n(29);e.exports=n(6).getIteratorMethod=function(e){if(void 0!=e)return e[r]||e["@@iterator"]||o[i(e)]}},function(e,t,n){var i=n(42);e.exports=function(e){if(!i(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var i=n(27)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[i]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var i=n(71),r=n(324),o=n(339),s=Object.defineProperty;t.f=n(50)?Object.defineProperty:function(e,t,n){if(i(e),t=o(t,!0),i(n),r)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var i=n(113)("keys"),r=n(79);e.exports=function(e){return i[e]||(i[e]=r(e))}},function(e,t,n){var i=n(326),r=n(26);e.exports=function(e,t,n){if(i(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(r(e))}},function(e,t,n){var i=n(108),r=n(26);e.exports=function(e){return i(r(e))}},function(e,t){var n=0,i=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+i).toString(36))}},function(e,t,n){"use strict";var i=n(49),r=n(329),o=n(109),s=n(78);e.exports=n(328)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,r(1)):"keys"==t?r(0,n):"values"==t?r(0,e[n]):r(0,[n,e[n]])},"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(129),o=i(r),s=n(515),a=i(s);o.default.Group=a.default,t.default=o.default},function(e,t,n){e.exports={default:n(277),__esModule:!0}},function(e,t,n){e.exports={default:n(281),__esModule:!0}},function(e,t,n){e.exports={default:n(282),__esModule:!0}},function(e,t,n){var i,r,o={};i=n(441),r=n(177),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(t,n){t.exports=e},function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function r(e,t,n,i,r,o){!e.required||n.hasOwnProperty(e.field)&&!s.isEmptyValue(t,o||e.type)||i.push(s.format(r.messages.required,e.fullField))}Object.defineProperty(t,"__esModule",{value:!0});var o=n(5),s=i(o);t.default=r,e.exports=t.default},,function(e,t,n){e.exports=n(11).document&&document.documentElement},function(e,t,n){e.exports=!n(18)&&!n(28)(function(){return 7!=Object.defineProperty(n(60)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var i=n(34);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==i(e)?e.split(""):Object(e)}},function(e,t,n){var i=n(29),r=n(9)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(i.Array===e||o[r]===e)}},function(e,t,n){var i=n(17);e.exports=function(e,t,n,r){try{return r?t(i(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&i(o.call(e)),t}}},function(e,t,n){"use strict";var i=n(44),r=n(15),o=n(100),s=n(24),a=n(23),l=n(29),u=n(291),c=n(45),d=n(300),f=n(9)("iterator"),p=!([].keys&&"next"in[].keys()),h="@@iterator",v="keys",m="values",y=function(){return this};e.exports=function(e,t,n,g,x,b,_){u(n,t,g);var w,S,k,C=function(e){if(!p&&e in P)return P[e];switch(e){case v:return function(){return new n(this,e)};case m:return function(){return new n(this,e)}}return function(){return new n(this,e)}},O=t+" Iterator",M=x==m,T=!1,P=e.prototype,E=P[f]||P[h]||x&&P[x],j=E||C(x),$=x?M?C("entries"):j:void 0,L="Array"==t?P.entries||E:E;if(L&&(k=d(L.call(new e)),k!==Object.prototype&&(c(k,O,!0),i||a(k,f)||s(k,f,y))),M&&E&&E.name!==m&&(T=!0,j=function(){return E.call(this)}),i&&!_||!p&&!T&&P[f]||s(P,f,j),l[t]=j,l[O]=y,x)if(w={values:M?j:C(m),keys:b?j:C(v),entries:$},_)for(S in w)S in P||o(P,S,w[S]);else r(r.P+r.F*(p||T),t,w);return w}},function(e,t,n){var i=n(9)("iterator"),r=!1;try{var o=[7][i]();o.return=function(){r=!0},Array.from(o,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!r)return!1;var n=!1;try{var o=[7],s=o[i]();s.next=function(){return{done:n=!0}},o[i]=function(){return s},e(o)}catch(e){}return n}},function(e,t,n){var i=n(17),r=n(297),o=n(61),s=n(63)("IE_PROTO"),a=function(){},l="prototype",u=function(){var e,t=n(60)("iframe"),i=o.length,r="<",s=">";for(t.style.display="none",n(89).appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write(r+"script"+s+"document.F=Object"+r+"/script"+s),e.close(),u=e.F;i--;)delete u[l][o[i]];return u()};e.exports=Object.create||function(e,t){var n;return null!==e?(a[l]=i(e),n=new a,a[l]=null,n[s]=e):n=u(),void 0===t?n:r(n,t)}},function(e,t,n){var i=n(98),r=n(61).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return i(e,r)}},function(e,t,n){var i=n(23),r=n(19),o=n(285)(!1),s=n(63)("IE_PROTO");e.exports=function(e,t){var n,a=r(e),l=0,u=[];for(n in a)n!=s&&i(a,n)&&u.push(n);for(;t.length>l;)i(a,n=t[l++])&&(~o(u,n)||u.push(n));return u}},function(e,t,n){var i=n(25),r=n(19),o=n(37).f;e.exports=function(e){return function(t){for(var n,s=r(t),a=i(s),l=a.length,u=0,c=[];l>u;)o.call(s,n=a[u++])&&c.push(e?[n,s[n]]:s[n]);return c}}},function(e,t,n){e.exports=n(24)},function(e,t,n){var i,r,o,s=n(35),a=n(289),l=n(89),u=n(60),c=n(11),d=c.process,f=c.setImmediate,p=c.clearImmediate,h=c.MessageChannel,v=0,m={},y="onreadystatechange",g=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},x=function(e){g.call(e.data)};f&&p||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return m[++v]=function(){a("function"==typeof e?e:Function(e),t)},i(v),v},p=function(e){delete m[e]},"process"==n(34)(d)?i=function(e){d.nextTick(s(g,e,1))}:h?(r=new h,o=r.port2,r.port1.onmessage=x,i=s(o.postMessage,o,1)):c.addEventListener&&"function"==typeof postMessage&&!c.importScripts?(i=function(e){c.postMessage(e+"","*")},c.addEventListener("message",x,!1)):i=y in u("script")?function(e){l.appendChild(u("script"))[y]=function(){l.removeChild(this),g.call(e)}}:function(e){setTimeout(s(g,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){},function(e,t,n){var i=n(78),r=n(43),o=n(338);e.exports=function(e){return function(t,n,s){var a,l=i(t),u=r(l.length),c=o(s,u);if(e&&n!=n){for(;u>c;)if(a=l[c++],a!=a)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}}},function(e,t,n){var i=n(105),r=n(108),o=n(117),s=n(43),a=n(322);e.exports=function(e,t){var n=1==e,l=2==e,u=3==e,c=4==e,d=6==e,f=5==e||d,p=t||a;return function(t,a,h){for(var v,m,y=o(t),g=r(y),x=i(a,h,3),b=s(g.length),_=0,w=n?p(t,b):l?p(t,0):void 0;b>_;_++)if((f||_ in g)&&(v=g[_],m=x(v,_,y),e))if(n)w[_]=m;else if(m)switch(e){case 3:return!0;case 5:return v;case 6:return _;case 2:w.push(v)}else if(c)return!1;return d?-1:u||c?c:w}}},function(e,t,n){var i=n(320);e.exports=function(e,t,n){if(i(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,i){return e.call(t,n,i)};case 3:return function(n,i,r){return e.call(t,n,i,r)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var i=n(42),r=n(30).document,o=i(r)&&i(r.createElement);e.exports=function(e){return o?r.createElement(e):{}}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var i=n(72);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==i(e)?e.split(""):Object(e)}},function(e,t){e.exports={}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var i=n(30),r=n(41),o=n(40),s=n(79)("src"),a="toString",l=Function[a],u=(""+l).split(a);n(7).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,n,a){var l="function"==typeof n;l&&(o(n,"name")||r(n,"name",t)),e[t]!==n&&(l&&(o(n,s)||r(n,s,e[t]?""+e[t]:u.join(String(t)))),e===i?e[t]=n:a?e[t]?e[t]=n:r(e,t,n):(delete e[t],r(e,t,n)))})(Function.prototype,a,function(){return"function"==typeof this&&this[s]||l.call(this)})},function(e,t,n){var i=n(75).f,r=n(40),o=n(27)("toStringTag");e.exports=function(e,t,n){e&&!r(e=n?e:e.prototype,o)&&i(e,o,{configurable:!0,value:t})}},function(e,t,n){var i=n(30),r="__core-js_shared__",o=i[r]||(i[r]={});e.exports=function(e){return o[e]||(o[e]={})}},function(e,t,n){var i=n(43),r=n(115),o=n(26);e.exports=function(e,t,n,s){var a=String(o(e)),l=a.length,u=void 0===n?" ":String(n),c=i(t);if(c<=l||""==u)return a;var d=c-l,f=r.call(u,Math.ceil(d/u.length));return f.length>d&&(f=f.slice(0,d)),s?f+a:a+f}},function(e,t,n){"use strict";var i=n(51),r=n(26);e.exports=function(e){var t=String(r(this)),n="",o=i(e);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(t+=t))1&o&&(n+=t);return n}},function(e,t,n){var i=n(12),r=n(26),o=n(74),s=n(337),a="["+s+"]",l="​",u=RegExp("^"+a+a+"*"),c=RegExp(a+a+"*$"),d=function(e,t,n){var r={},a=o(function(){return!!s[e]()||l[e]()!=l}),u=r[e]=a?t(f):s[e];n&&(r[n]=u),i(i.P+i.F*a,"String",r)},f=d.trim=function(e,t){return e=String(r(e)),1&t&&(e=e.replace(u,"")),2&t&&(e=e.replace(c,"")),e};e.exports=d},function(e,t,n){var i=n(26);e.exports=function(e){return Object(i(e))}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(509),o=i(r);t.default=o.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(3);t.default=(0,i.defaultProps)({prefixCls:"ant-carousel",className:"",autoplay:!1,autoplaySpeed:3e3,centerPadding:"50px",cssEase:"ease",dots:!0,dotsClass:"slick-dots",draggable:!0,effect:"scrollx",easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,infinite:!0,initialSlide:0,listWidth:null,lazyLoad:!1,responsive:Array,rtl:!1,slide:"div",slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,variableWidth:!1,vertical:!1,edgeEvent:null,swipeEvent:null,beforeChange:function(){},afterChange:function(){},clickHandler:function(){}})},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.vRow=t.vCol=void 0;var r=n(523),o=i(r),s=n(522),a=i(s);t.vCol=a.default,t.vRow=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(539),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(134),o=i(r),s=n(544),a=i(s);o.default.Group=a.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(546),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(548),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(562),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(22),o=i(r),s=n(127),a=void 0;t.default={install:function(e,t){var n=e.extend({template:'\n                <div class="ant-tooltip ant-tooltip-placement-{{place}}" v-if="show" transition="fade">\n                    <div class="ant-tooltip-content">\n                            <div class="ant-tooltip-arrow"></div>\n                            <div class="ant-tooltip-inner"><span>{{{tip}}}</span></div>\n                    </div>\n                </div>'
	});e.directive("tooltip",{openTrigger:"mouseenter",closeTrigger:"mouseleave",leftFactor:.5,topFactor:.5,bind:function(){"focus"===this.arg&&(this.openTrigger="focus",this.closeTrigger="blur"),this.place=(0,o.default)(this.modifiers)[0]||"top",this.place.toUpperCase().includes("LEFT")?this.leftFactor=0:this.place.toUpperCase().includes("RIGHT")&&(this.leftFactor=1),this.place.toUpperCase().includes("TOP")?this.topFactor=0:this.place.toUpperCase().includes("BOTTOM")&&(this.topFactor=1),this.el.addEventListener(this.openTrigger,this.open.bind(this)),this.el.addEventListener(this.closeTrigger,this.close.bind(this)),this.el.addEventListener("click",this.close.bind(this))},update:function(e){this.value=e},unbind:function(){this.el.removeEventListener(this.openTrigger,this.open),this.el.removeEventListener(this.closeTrigger,this.close)},getOffset:function(e){for(var t=0,n=0,i=e;i;)t+=parseInt(i.offsetLeft,10),n+=parseInt(i.offsetTop,10),i=i.offsetParent;return{top:n,left:t}},open:function(){var e=this;setTimeout(function(){if(e.el){var t=e.getOffset(e.el),i=e.el.offsetWidth,r=e.el.offsetHeight;a=e.vm=new n({data:{tip:e.value,show:!0,place:e.place}}).$mount().$appendTo("body"),e.tooltip=e.vm.$el.nextElementSibling,e.tooltip.addEventListener("mouseover",function(){clearTimeout(e.closeTimer)}),e.tooltip.addEventListener("mouseout",e.close.bind(e)),e.tooltip.addEventListener("click",e.close.bind(e)),(0,s.addStyle)(e.tooltip,{left:t.left+i*e.leftFactor+"px",top:t.top+r*e.topFactor+"px"})}},100)},close:function(){this.vm&&(this.closeTimer=setTimeout(function(){a.show=!1},100))}})}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t){v.isIE9&&e.hasOwnProperty("className")?e.className=t:e.setAttribute("class",t)}function o(e,t){if(e.classList){var n=t.split(" ");n.map(function(t){return e.classList.add(t)})}else{var i=" "+(e.getAttribute("class")||"")+" ";i.indexOf(" "+t+" ")<0&&r(e,(i+t).trim())}}function s(e,t){if(e.classList)e.classList.remove(t);else{for(var n=" "+(e.getAttribute("class")||"")+" ",i=" "+t+" ";n.indexOf(i)>=0;)n=n.replace(i," ");r(e,n.trim())}e.className||e.removeAttribute("class")}function a(e,t){(0,h.default)(t).forEach(function(n){e.style[(0,m.camelize)(n)]=t[n]})}function l(e,t){t.parentNode.insertBefore(e,t)}function u(e,t){t.nextSibling?l(e,t.nextSibling):t.parentNode.appendChild(e)}function c(e,t){for(;t;){if(t===e)return!0;t=t.parentNode}return!1}function d(e){var t=e.nextSibling;return 1!==t.nodeType?d(t):t}function f(e){return"none"!==getComputedStyle(e).getPropertyValue("display")}Object.defineProperty(t,"__esModule",{value:!0});var p=n(22),h=i(p);t.addClass=o,t.removeClass=s,t.addStyle=a,t.insertBefore=l,t.insertAfter=u,t.contains=c,t.getTrustSlotNode=d,t.isShow=f;var v=n(412),m=n(415)},function(e,t,n){e.exports={default:n(273),__esModule:!0}},function(e,t,n){var i,r,o={};i=n(435),r=n(170),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(438),r=n(173),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(440),r=n(176),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(358),r=n(193),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(462),r=n(200),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(464),r=n(204),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(478),r=n(217),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(479),r=n(219),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){(function(t){var i="object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this,r=i.regeneratorRuntime&&Object.getOwnPropertyNames(i).indexOf("regeneratorRuntime")>=0,o=r&&i.regeneratorRuntime;if(i.regeneratorRuntime=void 0,e.exports=n(138),r)i.regeneratorRuntime=o;else try{delete i.regeneratorRuntime}catch(e){i.regeneratorRuntime=void 0}}).call(t,function(){return this}())},function(e,t,n){(function(t,n){!function(t){"use strict";function i(e,t,n,i){var r=t&&t.prototype instanceof o?t:o,s=Object.create(r.prototype),a=new p(i||[]);return s._invoke=c(e,n,a),s}function r(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function o(){}function s(){}function a(){}function l(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function u(e){function t(n,i,o,s){var a=r(e[n],e,i);if("throw"!==a.type){var l=a.arg,u=l.value;return u&&"object"==typeof u&&g.call(u,"__await")?Promise.resolve(u.__await).then(function(e){t("next",e,o,s)},function(e){t("throw",e,o,s)}):Promise.resolve(u).then(function(e){l.value=e,o(l)},s)}s(a.arg)}function i(e,n){function i(){return new Promise(function(i,r){t(e,n,i,r)})}return o=o?o.then(i,i):i()}"object"==typeof n&&n.domain&&(t=n.domain.bind(t));var o;this._invoke=i}function c(e,t,n){var i=k;return function(o,s){if(i===O)throw new Error("Generator is already running");if(i===M){if("throw"===o)throw s;return v()}for(;;){var a=n.delegate;if(a){if("return"===o||"throw"===o&&a.iterator[o]===m){n.delegate=null;var l=a.iterator.return;if(l){var u=r(l,a.iterator,s);if("throw"===u.type){o="throw",s=u.arg;continue}}if("return"===o)continue}var u=r(a.iterator[o],a.iterator,s);if("throw"===u.type){n.delegate=null,o="throw",s=u.arg;continue}o="next",s=m;var c=u.arg;if(!c.done)return i=C,c;n[a.resultName]=c.value,n.next=a.nextLoc,n.delegate=null}if("next"===o)n.sent=n._sent=s;else if("throw"===o){if(i===k)throw i=M,s;n.dispatchException(s)&&(o="next",s=m)}else"return"===o&&n.abrupt("return",s);i=O;var u=r(e,t,n);if("normal"===u.type){i=n.done?M:C;var c={value:u.arg,done:n.done};if(u.arg!==T)return c;n.delegate&&"next"===o&&(s=m)}else"throw"===u.type&&(i=M,o="throw",s=u.arg)}}}function d(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function f(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function p(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(d,this),this.reset(!0)}function h(e){if(e){var t=e[b];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,i=function t(){for(;++n<e.length;)if(g.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=m,t.done=!0,t};return i.next=i}}return{next:v}}function v(){return{value:m,done:!0}}var m,y=Object.prototype,g=y.hasOwnProperty,x="function"==typeof Symbol?Symbol:{},b=x.iterator||"@@iterator",_=x.toStringTag||"@@toStringTag",w="object"==typeof e,S=t.regeneratorRuntime;if(S)return void(w&&(e.exports=S));S=t.regeneratorRuntime=w?e.exports:{},S.wrap=i;var k="suspendedStart",C="suspendedYield",O="executing",M="completed",T={},P={};P[b]=function(){return this};var E=Object.getPrototypeOf,j=E&&E(E(h([])));j&&j!==y&&g.call(j,b)&&(P=j);var $=a.prototype=o.prototype=Object.create(P);s.prototype=$.constructor=a,a.constructor=s,a[_]=s.displayName="GeneratorFunction",S.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===s||"GeneratorFunction"===(t.displayName||t.name))},S.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,a):(e.__proto__=a,_ in e||(e[_]="GeneratorFunction")),e.prototype=Object.create($),e},S.awrap=function(e){return{__await:e}},l(u.prototype),S.AsyncIterator=u,S.async=function(e,t,n,r){var o=new u(i(e,t,n,r));return S.isGeneratorFunction(t)?o:o.next().then(function(e){return e.done?e.value:o.next()})},l($),$[_]="Generator",$.toString=function(){return"[object Generator]"},S.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},S.values=h,p.prototype={constructor:p,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=m,this.done=!1,this.delegate=null,this.tryEntries.forEach(f),!e)for(var t in this)"t"===t.charAt(0)&&g.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=m)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){function t(t,i){return o.type="throw",o.arg=e,n.next=t,!!i}if(this.done)throw e;for(var n=this,i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],o=r.completion;if("root"===r.tryLoc)return t("end");if(r.tryLoc<=this.prev){var s=g.call(r,"catchLoc"),a=g.call(r,"finallyLoc");if(s&&a){if(this.prev<r.catchLoc)return t(r.catchLoc,!0);if(this.prev<r.finallyLoc)return t(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return t(r.catchLoc,!0)}else{if(!a)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return t(r.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&g.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var r=i;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var o=r?r.completion:{};return o.type=e,o.arg=t,r?this.next=r.finallyLoc:this.complete(o),T},complete:function(e,t){if("throw"===e.type)throw e.arg;"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=e.arg,this.next="end"):"normal"===e.type&&t&&(this.next=t)},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),f(n),T}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var r=i.arg;f(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:h(e),resultName:t,nextLoc:n},T}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(t,function(){return this}(),n(139))},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function r(e){if(c===setTimeout)return setTimeout(e,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(e,0);try{return c(e,0)}catch(t){try{return c.call(null,e,0)}catch(t){return c.call(this,e,0)}}}function o(e){if(d===clearTimeout)return clearTimeout(e);if((d===i||!d)&&clearTimeout)return d=clearTimeout,clearTimeout(e);try{return d(e)}catch(t){try{return d.call(null,e)}catch(t){return d.call(this,e)}}}function s(){v&&p&&(v=!1,p.length?h=p.concat(h):m=-1,h.length&&a())}function a(){if(!v){var e=r(s);v=!0;for(var t=h.length;t;){for(p=h,h=[];++m<t;)p&&p[m].run();m=-1,t=h.length}p=null,v=!1,o(e)}}function l(e,t){this.fun=e,this.array=t}function u(){}var c,d,f=e.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:n}catch(e){c=n}try{d="function"==typeof clearTimeout?clearTimeout:i}catch(e){d=i}}();var p,h=[],v=!1,m=-1;f.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];h.push(new l(e,t)),1!==h.length||v||r(a)},l.prototype.run=function(){this.fun.apply(null,this.array)},f.title="browser",f.browser=!0,f.env={},f.argv=[],f.version="",f.versions={},f.on=u,f.addListener=u,f.once=u,f.off=u,f.removeListener=u,f.removeAllListeners=u,f.emit=u,f.binding=function(e){throw new Error("process.binding is not supported")},f.cwd=function(){return"/"},f.chdir=function(e){throw new Error("process.chdir is not supported")},f.umask=function(){return 0}},function(e,t,n){t=e.exports=n(32)(),t.push([e.id,"",""])},function(e,t,n){t=e.exports=n(32)(),t.push([e.id,"",""])},function(e,t,n){t=e.exports=n(32)(),t.push([e.id,"",""])},function(e,t,n){t=e.exports=n(32)(),t.push([e.id,".ant-select-selection__choice__remove[_v-1b9f1c67]{top:0}",""])},function(e,t,n){t=e.exports=n(32)(),t.push([e.id,'.ant-calendar .ant-calendar-month-panel[_v-59e23a72],.ant-calendar .ant-calendar-year-panel[_v-59e23a72]{top:34px}.ant-calendar .ant-calendar-month-panel-table[_v-59e23a72]{height:208px}.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker[_v-59e23a72]{top:34px}.ant-calendar-top[_v-59e23a72]{color:#616161;padding:8px;border-bottom:1px solid #f3f3f3}.ant-calendar-top a[_v-59e23a72]{display:inline-block;vertical-align:middle;height:16px;cursor:pointer}.ant-calendar-top a[_v-59e23a72]:hover{color:#77bdfb}.ant-calendar-top a.on[_v-59e23a72]{font-weight:700;color:#1284e7}.ant-calendar-top i[_v-59e23a72]{content:"|";display:inline-block;width:1px;margin:0 10px;height:16px;background:#616161;vertical-align:middle}.ant-calendar-year-panel-next[_v-59e23a72],.ant-calendar-year-panel-prev[_v-59e23a72]{display:block;height:20px;text-align:center}.ant-calendar-year-panel-next a[_v-59e23a72],.ant-calendar-year-panel-prev a[_v-59e23a72]{color:#666}.ant-calendar-year-panel-next[_v-59e23a72]:hover,.ant-calendar-year-panel-prev[_v-59e23a72]:hover{background-color:#eaf8fe;cursor:pointer}',""])},function(e,t,n){var i=n(140);"string"==typeof i&&(i=[[e.id,i,""]]);n(33)(i,{});i.locals&&(e.exports=i.locals)},function(e,t,n){var i=n(141);"string"==typeof i&&(i=[[e.id,i,""]]);n(33)(i,{});i.locals&&(e.exports=i.locals)},function(e,t,n){var i=n(142);"string"==typeof i&&(i=[[e.id,i,""]]);n(33)(i,{});i.locals&&(e.exports=i.locals)},function(e,t,n){var i=n(143);"string"==typeof i&&(i=[[e.id,i,""]]);n(33)(i,{});i.locals&&(e.exports=i.locals)},function(e,t,n){var i=n(144);"string"==typeof i&&(i=[[e.id,i,""]]);n(33)(i,{});i.locals&&(e.exports=i.locals)},function(e,t){e.exports=' <div :style=placeholderStyle> <div :class="{[prefix]: isAffix}" :style=affixStyle> <slot></slot> </div> </div> '},function(e,t){e.exports=" <div class=ant-alert :class=\"['ant-alert-'+type,{'ant-alert-with-description':description, 'ant-alert-no-icon':!showIcon}]\" transition=bounce> <i class=\"ant-alert-icon anticon\" :class=\"'anticon-'+iconClass\" v-if=showIcon></i> <span class=ant-alert-message>{{message}}</span> <span class=ant-alert-description>{{description}}</span> <a class=ant-alert-close-icon v-if=closable @click=handleClose> {{closeText}} <i class=\"anticon anticon-cross\" v-if=!closeText></i> </a> </div> "},function(e,t){e.exports=' <div class=ant-back-top v-show=visible @click=scrollToTop> <slot> <div class=ant-back-top-content> <i class="ant-back-top-icon anticon anticon-to-top"></i> </div> </slot> </div> '},function(e,t){e.exports=" <span class=ant-badge :class=\"{'ant-badge-not-a-wrapper':!slot}\"> <slot></slot> <sup class=ant-scroll-number :class=\"[ dot ? 'ant-badge-dot':'ant-badge-count']\" :style=styles v-if=\"show && count> 0\" transition=badge>{{num}}</sup> </span> "},function(e,t){e.exports=' <div :class=wrapCls style="width: 120px" @click.stop=openDropdown v-el:input-area> <span :class=selectionCls role=combobox aria-autocomplete=list aria-haspopup=true aria-expanded=true tabindex=0> <ul v-if=multiple class=ant-select-selection__rendered> <li v-for="item in value" unselectable=unselectable class=ant-select-selection__choice title={{item.text}} style="-webkit-user-select: none"> <span class=ant-select-selection__choice__remove @click=clearSingle($index)></span> <span class=ant-select-selection__choice__content v-text=item.text></span> </li> <li class="ant-select-search ant-select-search--inline"> <span class=ant-select-search__field__wrap> <input value="" class=ant-select-search__field role=textbox> </span> </li> </ul> <div v-else class=ant-select-selection__rendered> <span v-show=value.length v-text="value.length?value[0].text:\'\'"></span> </div> <span class=ant-select-search__field__placeholder v-show=!value.length style=padding-left:8px>请选择</span> <span v-if="allowClear && value.length" class=ant-select-selection__clear @click.stop=clearSelected></span> <span class=ant-select-arrow unselectable=unselectable style="-webkit-user-select: none"><b></b></span> </span> <div :class=dropdownCls style="max-height: 300px; overflow: auto" :style=style transition=slide-up v-show=open @click=hide v-el:dropdown> <div> <slot></slot> </div> </div> </div> '},function(e,t){e.exports=' <div :class="prefixCls + \'-step\'"> <span v-for="item in dotsArr" :class=item.pointClass :style=item.style :key=item.point></span> </div> '},function(e,t){e.exports=" <div v-if=noTip :class=className :style=\"{left: offset + '%'}\" @mouseup=_showTooltip @mouseenter=_showTooltip @mouseleave=_hideTooltip></div> <div v-else v-tooltip=tipValue :class=className :style=\"{left: offset + '%'}\" @mouseup=_showTooltip @mouseenter=_showTooltip @mouseleave=_hideTooltip></div> "},function(e,t){e.exports=' <div :class=className> <span v-for="item in marksArr" :class=item.className :style=item.style :key=item.point> {{marks[item.point]}} </span> </div> '},function(e,t){e.exports=' <div :class=sliderClasses @touchstart=_onTouchStart @mousedown=_onMouseDown> <handle :class-name="prefixCls + \'-handle\'" :no-tip=isNoTip :tip-transition-name=tipTransitionName :tip-formatter=tipFormatter :offset=upperOffset :value=upperBound :dragging="handle === \'upperBound\'"></handle> <handle v-if=range :class-name="prefixCls + \'-handle\'" :no-tip=isNoTip :tip-transition-name=tipTransitionName :tip-formatter=tipFormatter :offset=lowerOffset :value=lowerBound :dragging="handle === \'lowerBound\'"></handle> <track :class="prefixCls + \'-track\'" :included=included :offset=lowerOffset :length="upperOffset - lowerOffset"> <dots :prefix-cls=prefixCls :marks=marks :dots=dots :step=step :included=included :lower-bound=lowerBound :upper-bound=upperBound :max=max :min=min></dots> <marks :class="prefixCls + \'-mark\'" :marks=marks :included=included :lower-bound=lowerBound :upper-bound=upperBound :max=max :min=min></marks> <slot></slot> </div> '},function(e,t){e.exports=" <div :class=className :style=wrapStyle></div> "},function(e,t){e.exports=" <span> <span class=ant-breadcrumb-link v-if=\"!(typeof this.href==='string')\"><i :class=\"'anticon anticon-'+icon\"></i>{{name}}</span> <span class=ant-breadcrumb-link v-else><a href={{href}}><i :class=\"'anticon anticon-'+icon\"></i>{{name}}</a></span> <span class=ant-breadcrumb-separator>{{separator?separator:'/'}}</span> </span> "},function(e,t){e.exports=" <div :class=wrapClasses> <slot></slot> </div> "},function(e,t){e.exports=" <button :type=htmlType :class=\"['ant-btn', type, size, shape, {'ant-btn-loading': loading}, {'ant-btn-clicked': clicked}]\" disabled={{disabled}} @click=_click> <i class=\"anticon anticon-spin anticon-loading\" v-if=loading></i> <i class=\"anticon anticon-{{icon}}\" v-if=icon></i> <slot></slot> </button> "},function(e,t){e.exports=" <div :class=wrapClasses> <slot></slot> </div> "},function(e,t){e.exports=" <div class=ant-card :class=\"{'ant-card-bordered': bordered}\"> <div class=ant-card-head v-if=title><h3 class=ant-card-head-title>{{title}}</h3></div> <template v-if=extra> <div class=ant-card-extra> <slot name=extra></slot> </div> </template> <div class=ant-card-body :style=bodyStyle><slot></slot></div> </div> "},function(e,t){e.exports=' <div :class=wrapClasses> <div v-el:list class=slick-list @mousedown=_swipeStart @mousemove=_swipeMove @mouseup=_swipeEnd @mouseleave=_swipeEnd @touchstart=_swipeStart @touchmove=_swipeMove @touchend=_swipeEnd @touchcancel=_swipeEnd> <v-track v-ref:track :fade=fade :css-ease=cssEase :speed=speed :infinite=infinite :current-slide=currentSlide :lazy-load=lazyLoad :lazy-loaded-list=lazyLoadedList :slide-width=slideWidth :slides-to-show=slidesToShow :slide-count.sync=slideCount :track-style=trackStyle :variable-width=variableWidth> <slot></slot> </v-track> </div> <ul :class=dotsClass v-if=dots :style="{display: \'block\'}"> <li v-for="dot in dotsArray" track-by=$index :key=$index :class="{\'slick-active\': currentSlide === $index * slidesToScroll}"> <button @click=_dotHandler($index)>{{$index}}</button> </li> </ul> </div> '},function(e,t){e.exports=" <div class=slick-track :style=trackStyle> <slot></slot> </div> "},function(e,t){e.exports=" <div :class=wrapClasses> <inner-slider :dots=dots :fade=fade :autoplay=autoplay :easing=easing :draggable=draggable :vertical=vertical :before-change=beforeChange :after-change=afterChange> <slot></slot> </inner-slider> </div> "},function(e,t){e.exports=' <span :class=pickerCls> <input type=text :placeholder="label?\'\':placeholder" :class=inpCls value="" readonly="" autocomplete=off @click.stop=toggleMenu> <span class=ant-cascader-picker-label>{{label}}</span> <i v-if="allowClear && value.length" class="anticon anticon-cross-circle ant-cascader-picker-clear" @click.stop=clear></i> <i class="anticon anticon-down ant-cascader-picker-arrow"></i> <div v-el:menu v-show=open transition=slide-up style="max-height: 300px; overflow: auto" :style=style class="ant-cascader-menus ant-cascader-menus-placement-bottomLeft"> <div> <menu v-for="i in path" :value=i :data=getMenuData($index) :key=$index @change=changeMenuValue track-by=$index></menu> </div> </div> </span> '},function(e,t){e.exports=" <ul class=ant-cascader-menu> <li v-for=\"item in data\" :class=\"['ant-cascader-menu-item', {[prefix+'-item-expand']: item.children, },{[prefix+'-item-disabled']: item.disabled, }, {[prefix+'-item-active']: value == $index}]\" :title=item.label @click.stop=select($index,item.disabled)> {{item.label}} </li> </ul> "},function(e,t){e.exports=" <label class=ant-checkbox-wrapper> <span class=ant-checkbox :class=\"{'ant-checkbox-checked': checked, 'ant-checkbox-disabled': disabled}\" @click=_check> <span class=ant-checkbox-inner></span> <input type=checkbox class=ant-checkbox-input> </span> <span v-if=\"_slotContents && _slotContents.default\"> <slot></slot> </span> </label> "},function(e,t){e.exports=' <div class=ant-checkbox-group> <v-checkbox class=ant-checkbox-group-item v-for="option in options" :disabled=option.disabled :checked.sync=option.checked :on-change=change :value=option.value> {{option.label}} </v-checkbox> </div> '},function(e,t){e.exports=" <div class=ant-collapse> <slot></slot> </div> "},function(e,t){e.exports=" <div class=ant-collapse-item :class=\"{'ant-collapse-item-active': open}\"> <div class=ant-collapse-header @click=handleOpen><i class=arrow></i>{{header}}</div> <div class=ant-collapse-content :class=\"[prefix+'-anim-active',open ? 'ant-collapse-content-active': 'ant-collapse-content-inactive']\" :style=\"{height: h}\"> <div class=ant-collapse-content-box> <slot></slot> </div> </div> </div> "},function(e,t){e.exports=' <div :class="[prefix, sizeClass, borderClass]"> <div :class="[contentClass, scrollClass]"> <div v-if=tableBodyHeight class={{prefix}}-header :style="{left:-tableBodyScrollLeft+\'px\',width:tableBodyWidth}"> <table :style={width:tableBodyWidth}> <thead class={{prefix}}-thead> <tr> <th v-if=rowSelection class={{prefix}}-selection-column> <v-checkbox v-if="rowSelection.type==\'checkbox\'" :checked.sync=checkAllState :on-change=checkAllChange></v-checkbox> </th> <template v-for="column in columns"> <th :style={width:column.width} class={{column.className}}> {{column.title}} <template v-if=column.sort> <div class={{prefix}}-column-sorter> <span @click="sort(column,\'asc\')" class="{{prefix}}-column-sorter-up {{column.sort == \'asc\' ? \'on\' : \'off\' }}" title=↑><v-icon type=caret-up></v-icon></span> <span @click="sort(column,\'desc\')" class="{{prefix}}-column-sorter-down {{column.sort == \'desc\' ? \'on\' : \'off\' }}" title=↓><v-icon type=caret-down></v-icon></span> </div> </template> </th> </template> </tr> </thead> </table> </div> <div class={{prefix}}-body :style="{height:tableBodyHeight+\'px\'}" @scroll=scrollTableBody> <v-spin :spinning=loading> <table v-el:tbody> <thead class={{prefix}}-thead> <tr> <th v-if=rowSelection class={{prefix}}-selection-column> <v-checkbox v-if="rowSelection.type==\'checkbox\'" :checked.sync=checkAllState :on-change=checkAllChange></v-checkbox> </th> <template v-for="column in columns"> <th :style={width:column.width} class={{column.className}}> {{column.title}} <template v-if=column.sort> <div class={{prefix}}-column-sorter> <span @click="sort(column,\'asc\')" class="{{prefix}}-column-sorter-up {{column.sort == \'asc\' ? \'on\' : \'off\' }}" title=↑><v-icon type=caret-up></v-icon></span> <span @click="sort(column,\'desc\')" class="{{prefix}}-column-sorter-down {{column.sort == \'desc\' ? \'on\' : \'off\' }}" title=↓><v-icon type=caret-down></v-icon></span> </div> </template> </th> </template> </tr> </thead> <tbody class={{prefix}}-tbody v-show=current.length> <template v-for="(index, item) in current"> <tr v-show="!treeTable || item.vshow"> <td v-if=rowSelection class={{prefix}}-selection-column> <v-checkbox v-if="rowSelection.type==\'checkbox\'" :checked.sync=rowSelectionStates[index] @click=rowSelectionChange(index)></v-checkbox> </td> <td v-for="(cindex,column) in columns"> <template v-if="treeTable && cindex==treeTableOption.position"> <span class="{{prefix}}-row-indent indent-level-{{item.level}}" :style="{\'padding-left\':item.paddingLeft}"></span> <span v-if=item.isparent @click=toggle(item) class="{{prefix}}-row-expand-icon {{prefix}}-row-{{item.vopen}}"></span> </template> <template v-if=column.component> <component :is=ghost[column.component] :index=index :value=item[column.field] :item=item @datatable=datatable></component> </template> <template v-else> <template v-if=column.render> {{{column.render(item[column.field],item,index)}}} </template> <template v-else> {{{item[column.field]}}} </template> </template> </td> </tr> </template> </tbody> <tbody class={{prefix}}-tbody v-if="current.length==0"> <tr> <td v-else colspan="{{rowSelection ? columns.length+1 : columns.length}}" style=text-align:center> {{emptyText}} </td> </tr> </tbody> </table> </v-spin> </div> </div> <div v-if="pagination && total" class={{prefix}}-footer> <div class={{prefix}}-pagination> <v-pagination :current=pageNum :total=total :on-change=pageChange :show-size-changer=true :on-show-size-change=pageSizeChange :page-size-options=pageSizeOptions :page-size=pageSize></v-pagination> </div> <div class={{prefix}}-description> 共有{{total}}条数据 </div> <div class=clearfix></div> </div> </div> '},function(e,t){e.exports=' <div v-el:dropdown style=display:inline-block> <slot></slot> <div v-el:content :style=style class="ant-dropdown ant-dropdown-placement-bottomLeft" v-show=isOpen transition=slide-up> <v-dropdown-menu :options=options :trigger=trigger></v-dropdown-menu> </div> </div> '},function(e,t){e.exports=" <li v-if=divided class=ant-dropdown-menu-item-divider></li> <li v-if=option.children :class=itemCls> <div v-el:item class=ant-dropdown-menu-submenu-title @click=click> <slot></slot> </div> <v-dropdown-menu :options=option.children :trigger=trigger type=sub></v-dropdown-menu> </li> <li v-else :class=itemCls @click=handleClick> <slot></slot> </li> "},function(e,t){e.exports=' <ul v-el:list v-if=options class="ant-dropdown-menu ant-dropdown-menu-vertical" :class=dropdownMenuCls transition=slide-up> <v-dropdown-item v-for="item in options" :trigger=trigger :option=item :disabled=item.disabled :divided=item.divided> {{ item.content }} </v-dropdown-item> </ul> '},function(e,t){e.exports=" <form :class=wrapClasses> <slot></slot> </form> "},function(e,t){e.exports=" <div :class=itemCls> <v-col :class=labelCls v-if=label :span=labelCol.span :offset=labelCol.offset> <label for=userName :class=\"[{'ant-form-item-required':required}]\" v-text=label></label> </v-col> <v-col :span=wrapperCol.span :offset=wrapperCol.offset> <div :class=controlCls> <slot></slot> <div v-if=help v-text=help class={{this.prefixCls}}-explain></div> </div> </v-col> </div> "},function(e,t){e.exports=" <div :class=classes> <slot></slot> </div> "},function(e,t){e.exports=" <div class=ant-row :class=classes> <slot></slot> </div> "},function(e,t){e.exports=" <i :class=iconClasses> <slot></slot> </i> "},function(e,t){e.exports=" <span :class=wrapClasses> <span v-if=hasbefore class=ant-input-group-addon><slot name=before><slot></slot></slot></span> <textarea v-if=\"type ==='textarea'\" type=textarea :class=inpClasses :placeholder=placeholder :disabled=disabled v-model=value :debounce=debounce @blur=blur></textarea> <input v-else :type=type :class=inpClasses :placeholder=placeholder :disabled=disabled v-model=value autocomplete=off @blur=blur :debounce=debounce /> <span v-if=hasafter class=ant-input-group-addon><slot name=after></slot></span> </span> "},function(e,t){e.exports=" <div :class=wrapClasses style=\"width: 90px\"> <div :class=\"prefixCls + '-handler-wrap'\"> <a unselectable=unselectable ref=up @click=_up @mouse.down=preventDefault :class=\"prefixCls + '-handler ' + prefixCls + '-handler-up ' + upDisabledClass\"> <span unselectable=unselectable :class=\"prefixCls + '-handler-up-inner'\" @click=preventDefault></span> </a> <a unselectable=unselectable ref=down @mouse.down=preventDefault @click=_down :class=\"prefixCls + '-handler ' + prefixCls + '-handler-down ' + downDisabledClass\"> <span unselectable=unselectable :class=\"prefixCls + '-handler-down-inner'\" @click=preventDefault></span> </a> </div> <div :class=\"prefixCls + '-input-wrap'\"> <input v-el:input ref=input autocomplete=off @focus=_onFocus @blur=_onBlur @keydown.stop=_onKeyDown @change=_onChange :class=\"prefixCls + '-input'\" :autofocus=autoFocus :readonly=readOnly :disabled=disabled :max=max :min=min :name=name :value=value /> </div> </div> "},function(e,t){e.exports=' <ul class="ant-menu ant-menu-{{mode}} ant-menu-{{theme}} ant-menu-root" :title=title> <slot></slot> </ul> '},function(e,t){e.exports=' <li :class=itemCls :style=itemSty @click=select> <i v-if=icon class="anticon anticon-{{icon}}"></i> <a :href="\'#!\'+link" style=display:inline v-if=link><slot></slot></a> <slot v-else></slot> </li> '},function(e,t){e.exports=" <li class=ant-menu-item-group> <div class=ant-menu-item-group-title> {{title}} </div> <ul class=ant-menu-item-group-list> <slot></slot> </ul> </li> "},function(e,t){e.exports=" <ul :class=menuCls> <template v-if=isItemGroup> <li v-for=\"item in data\" class={{prefix}}-item-group> <div class={{prefix}}-item-group-title> {{item.groupName}} </div> <v-nav-menu :data=item.list type=item-group-list :mode=mode :a-tag=aTag :level=level></v-nav-menu> </li> </template> <template v-else> <template v-for=\"item in data\"> <li v-if=\"!item.children && !item.groups\" :class=\"[prefix+'-item',{[prefix+'-item-disabled']: item.disabled,[prefix+'-item-selected']: item.selected}]\" :style=paddingSty v-link=item.link @click=select($index)> <i v-if=item.icon class=\"anticon anticon-{{item.icon}}\"></i> <a v-if=aTag :href=\"'#!'+item.link\" style=display:inline>{{item.name}}</a> <template v-else>{{item.name}}</template> </li> <li v-else :class=\"[prefix+'-submenu',prefix+'-submenu-'+mode,{[prefix+'-submenu-open']: item.open}]\" @mouseover=mouseTriggerOpen(item.disabled,$index,true) @mouseout=mouseTriggerOpen(item.disabled,$index,false)> <div :class=\"[prefix+'-submenu-title',{[prefix+'-submenu-disabled']: item.disabled}]\" :style=paddingSty :title=item.name @click=clickTriggerOpen(item.disabled,$index)> <span> <i v-if=item.icon class=\"anticon anticon-{{item.icon}}\"></i> <span>{{item.name}}</span> </span> </div> <v-nav-menu v-if=item.children :data=item.children type=sub :mode=mode :a-tag=aTag :level=level+1 :transition=\"mode=='inline'?'slide-up':'fade'\" v-show=item.open></v-nav-menu> <v-nav-menu v-else :is-item-group=true :data=item.groups type=sub :mode=mode :a-tag=aTag :level=level+1 :transition=\"mode=='inline'?'slide-up':'fade'\" v-show=item.open></v-nav-menu> </li> </template> </template> </ul> ";
	},function(e,t){e.exports=" <li :class=subMenuCls @mouseover=mouseTriggerOpen(true) @mouseout=mouseTriggerOpen(false)> <div :class=titleCls @click=clickTriggerOpen :style=titleSty :title=title> <span> <i v-if=icon class=\"anticon anticon-{{icon}}\"></i> <span>{{title}}</span> </span> </div> <ul :class=itemCls :transition=\"mode=='inline'?'slide-up':'fade'\" v-show=expand> <slot></slot> </ul> </li> "},function(e,t){e.exports=' <div class=ant-message :style="{ top: top + \'px\' }" v-el:content> <span> <notice v-for="notice in notices" :content=notice.content :duration=notice.duration :type=notice.type :show.sync=notice.show><notice> </notice></notice></span> </div> '},function(e,t){e.exports=" <div class=ant-message-notice v-if=show transition=message> <div class=ant-message-notice-content> <div class=\"ant-message-custom-content ant-message-{{type}}\"> <i :class=\"['anticon','anticon-'+icon,{'anticon-spin': icon=='loading'}]\"></i> <span v-text=content></span> </div> </div> </div> "},function(e,t){e.exports=" <div> <div v-if=visible :class=\"prefixCls + '-mask'\" transition=fade></div> <div :class=\"[prefixCls + '-wrap', wrapClassName]\" v-if=visible tabindex=-1 @click.stop=_onMaskClick transition=zoom> <div v-el:dialog role=dialog :style=\"[modalStyle, {width: modalWidth +'px'}]\" :class=prefixCls @keydown=_onKeyDown @click.stop> <div :class=\"prefixCls + '-content'\"> <a v-if=closable tabindex=0 @click=_close :class=\"prefixCls + '-close'\"> <span :class=\"prefixCls + '-close-x'\"></span> </a> <div v-if=title :class=\"prefixCls + '-header'\"> <div :class=\"prefixCls + '-title'\">{{title}}</div> </div> <div :class=\"prefixCls + '-body'\"> <slot></slot> </div> <div v-show=hasFooter :class=\"prefixCls + '-footer'\"> <slot name=footer></slot> </div> </div> <div tabindex=0 v-el:sentinel :style=\"{width: 0, height: 0, overflow: 'hidden'}\"> sentinel </div> </div> </div> </div> "},function(e,t){e.exports=" <dialog :visible=visible :title=title :closable=closable :mask-closable=maskClosable :on-close=_handleCancel :modal-width=modalWidth :prefix-cls=prefixCls :modal-style=modalStyle :has-footer=hasFooter :wrap-class-name=wrapClassName :mouse-position=mousePosition> <slot></slot> <div slot=footer> <slot name=footer> <v-button key=cancel type=ghost size=large @click=_handleCancel> {{cancelText}} </v-button> <v-button key=confirm type=primary size=large :loading=confirmLoading @click=_handleOk> {{okText}} </v-button> </slot> </div> </dialog> "},function(e,t){e.exports=' <div :class=prefix> <div :class="prefix+\'-body\'" :style={height:height}> <div :class="prefix+\'-form\'" v-el:panel-form :style="{paddingRight: panelPR}"> <slot name=form></slot> <div :class="prefix+\'-control\'" :style=controlStyle v-el:panel-control> <slot name=control></slot> </div> </div> </div> <slot></slot> <div href=javascript:; :class="prefix+\'-btn\'" @click=click v-show=showBtn> <span class=anticon :class="\'anticon-\'+btnIcon"></span> </div> </div> '},function(e,t){e.exports=' <div tabindex=0 :class="{ \'multiselect--active\': isOpen, \'multiselect--disabled\': disabled, [\'multiselect-\'+size]: size }" @focus=activate() @blur="searchable ? false : deactivate()" @keydown.self.down.prevent=pointerForward() @keydown.self.up.prevent=pointerBackward() @keydown.enter.stop.prevent.self=addPointerElement() @keydown.tab.stop=addPointerElement() @keyup.esc=deactivate() class=multiselect> <div @mousedown.prevent=toggle() class=multiselect__select></div> <div v-el:tags class=multiselect__tags> <span v-for="option in visibleValue" track-by=$index onmousedown=event.preventDefault() class=multiselect__tag> <span v-text=getOptionLabel(option)></span> <i aria-hidden=true tabindex=1 @keydown.enter.prevent=removeElement(option) @mousedown.prevent=removeElement(option) class=multiselect__tag-icon> </i> </span> <template v-if="value && value.length > limit"> <strong v-text="limitText(value.length - limit)"></strong> </template> <div v-show=loading transition=multiselect__loading class=multiselect__spinner></div> <input name=search type=text autocomplete=off :placeholder=placeholder v-el:search v-if=searchable v-model=search :disabled=disabled @focus.prevent=activate() @blur.prevent=deactivate() @keyup.esc=deactivate() @keyup.down=pointerForward() @keyup.up=pointerBackward() @keydown.enter.stop.prevent.self=addPointerElement() @keydown.tab.stop=addPointerElement() @keydown.delete=removeLastElement() class=multiselect__input /> <span v-if="!searchable && !multiple" class=multiselect__single v-text="currentOptionLabel || placeholder"> </span> </div> <ul transition=multiselect :style=listSty v-el:list v-show=isOpen @mousedown.stop.prevent="" class=multiselect__content> <slot name=beforeList></slot> <li v-if="multiple && max !== 0 && max === value.length"> <span class=multiselect__option> <slot name=maxElements>Maximum of {{ max }} options selected. First remove a selected option to select another.</slot> </span> </li> <template v-if="!max || value.length < max"> <li v-for="option in filteredOptions" track-by=$index tabindex=0 :class="{ \'multiselect__option--highlight\': $index === pointer && this.showPointer, \'multiselect__option--selected\': !isNotSelected(option) }" class=multiselect__option @mousedown.prevent=select(option) @mouseenter=pointerSet($index) :data-select="option.isTag ? tagPlaceholder : selectLabel" :data-selected=selectedLabel :data-deselect=deselectLabel> <partial :name=optionPartial v-if=optionPartial.length></partial> <span v-else v-text=getOptionLabel(option)></span> </li> </template> <li v-show="filteredOptions.length === 0 && search"> <span class=multiselect__option> <slot name=noResult>No elements found. Consider changing the search query.</slot> </span> </li> <slot name=afterList></slot> </ul> </div> '},function(e,t){e.exports=' <div class="ant-notification-notice ant-notification-notice-closable" v-if=show transition=notification> <div class=ant-notification-notice-content> <div class=ant-notification-notice-content :class="{\'ant-notification-notice-with-icon\': type != \'open\'}"> <i class="ant-notification-notice-icon ant-notification-notice-icon-{{type}} anticon anticon-{{icon}}" v-if="type != \'open\'"></i> <div class=ant-notification-notice-message v-text=message></div> <div class=ant-notification-notice-description v-text=description></div> </div> </div> <a class=ant-notification-notice-close @click=_close> <span class=ant-notification-notice-close-x></span> </a> </div> '},function(e,t){e.exports=' <div class=ant-notification :style="{ top: top + \'px\' }"> <span> <notice v-for="notice in notices" :message=notice.message :description=notice.description :duration=notice.duration :type=notice.type :show.sync=notice.show><notice> </notice></notice></span> </div> '},function(e,t){e.exports=" <div> <ul v-if=simple :class=\"[prefixCls, prefixCls + '-simple']\"> <li title=上一页 @click=\"_handleChange(current - 1)\" :class=\"prefixCls + '-prev'\"> <a></a> </li> <div title={{current}}/{{allPages}} :class=\"prefixCls + `-simple-pager`\"> <input type=text v-model=currentForSimple @keyup.prevent=_handleKeyUp($event) @keydown.down.up.prevent @change=_handleKeyUp> <span class=ant-pagination-slash>／</span> {{allPages}} </div> <li title=下一页 @click=\"_handleChange(current + 1)\" :class=\"prefixCls + '-next'\"> <a></a> </li> </ul> <ul v-else :class=\"[prefixCls, {'mini':!!size}]\"> <span :class=\"prefixCls + '-total-text'\">{{totalText}}</span> <li title=上一页 @click=_prev :class=\"[\n\t  \t\t\tprefixCls + '-prev', \n\t  \t\t\t_hasPrev() ? '' : prefixCls + '-disabled'\n\t  \t\t]\"> <a></a> </li> <li v-if=showFirstPager title=1 @click=_handleChange(1) :class=\"[\n\t  \t\t\tprefixCls + '-item', \n\t  \t\t\tprefixCls + '-item-1',\n\t  \t\t\tcurrent == 1 ? prefixCls + '-item-active' : ''\n\t  \t\t]\"> <a>1</a> </li> <li v-if=showJumpPrev title=向前5页 @click=_jumpPrev :class=\"prefixCls + '-jump-prev'\"> <a></a></li> <li v-for=\"index in pageList\" @click=_handleChange(index) title={{index}} :class=\"[\n\t  \t\t\tprefixCls + '-item', \n\t  \t\t\tprefixCls + '-item-' + index, \n\t  \t\t\tcurrent == index ? prefixCls + '-item-active' : ''\n\t  \t\t]\"> <a>{{index}}</a> </li> <li v-if=showJumpNext title=向后5页 @click=_jumpNext :class=\"prefixCls + '-jump-next'\"> <a></a> </li> <li v-if=showLastPager title={{allPages}} @click=_handleChange(allPages) :class=\"[\n\t  \t\t\tprefixCls + '-item', \n\t  \t\t\tprefixCls + '-item-' + allPages, \n\t  \t\t\tcurrent == allPages ? prefixCls + '-item-active' : ''\n\t  \t\t]\"> <a>{{allPages}}</a> </li> <li title=下一页 @click=_next :class=\"[\n\t  \t\t\tprefixCls + '-next',\n\t  \t\t\t_hasNext() ? '' : prefixCls + '-disabled'\n\t  \t\t]\"> <a></a> </li> <div :class=\"prefixCls + '-options'\"> <div v-if=showSizeChanger :class=\"prefixCls + '-options-size-changer'\"> <v-select :size=\"!!size ? 'sm' : ''\" :options=options :value.sync=pageSize :allow-clear=false placement=top></v-select> </div> <div v-if=showQuickJumper :class=\"prefixCls + '-options-quick-jumper'\"> 跳至 <input type=text :value=currentForSimple @keyup=_handleKeyUp($event) @change=_handleKeyUp> 页 </div> </div> </ul> </div> "},function(e,t){e.exports=' <v-popover :open-class-name=openClassName :visible.sync=visible :placement=placement :skip-func=onConfirm :skip.sync=skip> <template slot=trigger><slot></slot></template> <template slot=content> <div class=ant-popover-message> <i class="anticon anticon-exclamation-circle"></i> <div class=ant-popover-message-title>{{ title }}</div> </div> <div class=ant-popover-buttons> <button type=button class="ant-btn ant-btn-ghost ant-btn-sm" @click.stop=doCancel><span>{{ cancelText }}</span></button> <button type=button class="ant-btn ant-btn-primary ant-btn-sm" @click.stop=doConfirm><span>{{ okText }}</span></button> </div> </template> </v-popover> '},function(e,t){e.exports=' <slot name=trigger></slot> <div class="ant-popover ant-popover-placement-{{ placement }} {{clazz}}" @click.stop transition=fade v-show=visible> <div class=ant-popover-content> <div class=ant-popover-arrow></div> <div class=ant-popover-inner> <div class=ant-popover-title v-if="title != \'\'">{{ title }}</div> <div class=ant-popover-inner-content> <template v-if=content>{{ content }}</template> <template v-else> <slot name=content></slot> </template> </div> </div> </div> </div> '},function(e,t){e.exports=" <div :class=wrapClasses> <div :class=\"prefixCls + '-inner'\" :style=\"{\n            'width': width + 'px',\n            'height': width + 'px',\n            'fontSize': width * 0.16 + 6 + 'px'\n        }\"> <svg class=rc-progress-circle viewBox=\"0 0 100 100\"> <path class=rc-progress-circle-trail :d=pathString :stroke=trailColor :stroke-width=trailWidth fill-opacity=0 /> <path class=rc-progress-circle-path :d=pathString stroke-linecap=round :stroke=strokeColor :stroke-width=strokeWidth fill-opacity=0 :style=pathStyle /> </svg> <span :class=\"prefixCls + '-text'\"> <template v-if=format> {{ format }} </template> <template v-else> <template v-if=\"progressStatus === 'exception' || progressStatus === 'success'\"> <v-icon :type=progressStatusIcon></v-icon> </template> <template v-else> {{ percent }}% </template> </template> </span> </div> </div> "},function(e,t){e.exports=" <div :class=wrapClasses> <div> <div :class=\"prefixCls + '-outer'\"> <div :class=\"prefixCls + '-inner'\"> <div :class=\"prefixCls + '-bg'\" :style=\"{width: percent + '%', height: strokeWidth + 'px'}\"></div> </div> </div> <template v-if=\"showInfo === true\"> <span :class=\"prefixCls + '-text'\"> <template v-if=format> {{ format }} </template> <template v-else> <template v-if=\"progressStatus === 'exception' || progressStatus === 'success'\"> <v-icon :type=progressStatusIcon></v-icon> </template> <template v-else> {{ percent }}% </template> </template> </span> </template> </div> </div> "},function(e,t){e.exports=" <div> <slot></slot> </div> "},function(e,t){e.exports=" <label :class=wrapClasses> <span :class=radioClasses> <span :class=\"prefixCls + '-inner'\"></span> <input type=radio :disabled=disabled :value=value :checked=!!checked :class=\"prefixCls + '-input'\" @change=_handleChange> </span> <slot>Radio</slot> </label> "},function(e,t){e.exports=' <div :class=wrapClasses> <v-radio v-for="radio in radios" :type=type :class-name=radioClasses :disabled=radio.disabled :value=radio.value :on-change="_onRadioChange.bind(radio, $index)" :checked="value == radio.value"><span>{{radio.name}}</span></v-radio> </div> '},function(e,t){e.exports=' <ul :class="[prefix,{[prefix+\'-disabled\']: disabled}]" @mouseout=recovery> <li class="{{prefix}}-star {{item}}" v-for="item in lightArr" track-by=$index @mouseover=allLight($index) @click=selected> <div :class="prefix+\'-star-content\'" @mouseover=halfLight($index,$event)></div> </li> </ul> '},function(e,t){e.exports=" <slider :prefix-cls=prefixCls :tip-transition-name=tipTransitionName :min=min :max=max :step=step :marks=marks :default-value=defaultValue :value=value :range=range :included=included :disabled=disabled :on-change=onChange :tip-formatter=tipFormatter></slider> "},function(e,t){e.exports=' <template v-if=hasSlot> <div :class="{[`${prefix}-nested-loading`]:spinning}"> <spin-inner :size=size :spinning=spinning :tip=tip :prefix=prefix></spin-inner> <div :class=containerCls> <slot></slot> </div> </div> </template> <spin-inner v-else :size=size :spinning=spinning :tip=tip :prefix=prefix></spin-inner> '},function(e,t){e.exports=" <div :class=wrapClasses> <span class={{prefix}}-dot> <i></i> <i></i> <i></i> <i></i> </span> <div class={{prefix}}-text>{{tip}}</div> </div> "},function(e,t){e.exports=" <div :class=wrapClasses :style=\"{'width': tailWidth}\"> <div class=ant-steps-tail v-if=!stepLast><i></i></div> <div class=ant-steps-head> <div class=ant-steps-head-inner> <span v-if=\"!icon && status !== 'finish'\" class=ant-steps-icon>{{stepNumber}}</span> <span v-else :class=\"'ant-steps-icon anticon anticon-' + iconName\"></span> </div> </div> <div class=ant-steps-main :style=\"{'maxWidth': maxDescriptionWidth}\"> <div class=ant-steps-title>{{title}}</div> <div v-if=description class=ant-steps-description>{{description}}</div> </div> </div> "},function(e,t){e.exports=" <div :class=wrapClasses> <slot></slot> </div> "},function(e,t){e.exports=" <span :class=wrapClasses @click=_toggle> <span :class=\"prefix + '-inner'\"> <slot v-if=checked name=checkedChildren></slot> <slot v-if=!checked name=unCheckedChildren></slot> </span> </span> "},function(e,t){e.exports=" <div role=tabpanel aria-hidden=false :class=wrapCls> <slot></slot> </div> "},function(e,t){e.exports=" <div :class=tabsCls> <div role=tablist class=ant-tabs-bar tabindex=0> <div :class=containerCls> <span v-if=isScroll unselectable=unselectable :class=\"['ant-tabs-tab-prev',{'ant-tabs-tab-btn-disabled': tab_transform == 0}]\" @click=before> <span class=ant-tabs-tab-prev-icon></span> </span> <span v-if=isScroll unselectable=unselectable :class=\"['ant-tabs-tab-next',{'ant-tabs-tab-btn-disabled': tab_transform + tabWrap >= nav_w}]\" @click=next><span class=ant-tabs-tab-next-icon></span></span> <div class=ant-tabs-nav-wrap> <div class=ant-tabs-nav-scroll v-el:nav-scroll> <div class=ant-tabs-nav v-el:nav :style=\"{ transform: 'translate3d(-' + tab_transform + 'px, 0px, 0px)' }\"> <div class=\"ant-tabs-ink-bar ant-tabs-ink-bar-transition-forward\" :style=barSty></div> <div role=tab aria-disabled=false aria-selected=false :class=\"['ant-tabs-tab',{'ant-tabs-tab-active': $index == activeIndex},{'ant-tabs-tab-disabled':tab.disabled}]\" v-for=\"tab in tabs\" @click=selectTab($index)> <div class=ant-tabs-tab-inner> <i v-if=\"tab.icon !== ''\" class=\"anticon anticon-{{tab.icon}}\"></i> {{tab.tab}} </div> </div> </div> </div> </div> </div> </div> <div class=\"ant-tabs-content ant-tabs-content-animated\" :style=contentSty> <slot></slot> </div> </div> "},function(e,t){e.exports=' <div v-if=show :class=wrapClasses transition=fade> <span class=ant-tag-text><slot></slot></span> <i class="anticon anticon-cross" v-if=closable @click=remove></i> </div> '},function(e,t){e.exports=" <span :class=wrapClasses> <input type=text class=ant-time-picker-input placeholder=请选择时间 @click=timePicker v-model=value v-el:time-picker readonly=readonly disabled={{disabled}}> <span class=ant-time-picker-icon></span> <time-picker-node transition=fade v-show=selected :selected.sync=selected :hide-disabled=hideDisabledOptions :style=style :time-value.sync=value :local-format=format :disabled-h=disabledHours :disabled-m=disabledMinutes :disabled-s=disabledSeconds v-el:time-picker-option></time-picker-node> </span> "},function(e,t){e.exports=' <div :class=wrapClasses> <div :class="[prefix+\'-inner\',{[prefix+\'-2-columns\']: !hasSeconds}]"> <div :class="prefix+\'-input-wrap\'"> <input :class="prefix+\'-input\'" placeholder=请选择时间 v-el:time-picker-panel v-model=timeValue> <a :class="prefix+\'-clear-btn\'" role=button title=清除 @click=clearTime></a> </div> <div :class="prefix+\'-combobox\'"> <div :class="prefix+\'-select\'"> <ul @mouseover="createSelection($els.timePickerPanel, 0, 2)"> <template v-for="$index in 24"> <li v-if="showLi($index, \'H\')" @click="timePicker(\'H\', $event)" :class="selectedCls(H, $index, \'H\')" v-text="($index<10?\'0\':\'\')+$index"></li> </template> </ul> </div> <div :class="prefix+\'-select\'"> <ul @mouseover="createSelection($els.timePickerPanel, 3, 5)"> <template v-for="$index in 60"> <li v-if="showLi($index, \'M\')" @click="timePicker(\'M\', $event)" :class="selectedCls(M, $index, \'M\')" v-text="($index<10?\'0\':\'\')+$index"></li> </template> </ul> </div> <div :class="prefix+\'-select\'" v-if=hasSeconds> <ul @mouseover="createSelection($els.timePickerPanel, 6, 8)"> <template v-for="$index in 60"> <li v-if="showLi($index, \'S\')" @click="timePicker(\'S\', $event)" :class="selectedCls(S, $index, \'S\')" v-text="($index<10?\'0\':\'\')+$index"></li> </template> </ul> </div> </div> </div> </div> '},function(e,t){e.exports=" <ul :class=wrapClasses> <slot></slot> </ul> "},function(e,t){e.exports=" <li :class=itemClassName> <div :class=\"prefixCls + '-item-tail'\"></div> <div :class=dotClassName :style=\"{ borderColor: 'blue|red|green'.indexOf(color) > -1 ? null : color }\">{{{ compile(dot) }}}</div> <div class=ant-timeline-item-content> <slot></slot> </div> </li> "},function(e,t){e.exports=" <div :class=\"[\n\t\tprefixCls, \n\t\tclassName ? className : '',\n\t\thasFooter ? prefixCls + '-with-footer' : ''\n\t]\" :style=style> <div :class=\"prefixCls + '-header'\"> <span :class=\"[\n\t  \t\t'ant-transfer-checkbox',\n\t  \t\t{'ant-transfer-checkbox-indeterminate': checkPart},\n\t  \t\t{'ant-transfer-checkbox-checked': checkAll},\n\t  \t\t{'ant-transfer-checkbox-disabled': disabled}\n\t  \t]\" @click=selectAll> <span class=ant-transfer-checkbox-inner></span> <input type=checkbox class=ant-checkbox-input> </span> <span :class=\"prefixCls + '-header-selected'\"> <span> {{(checkedKeys.length > 0 ? `${checkedKeys.length}/` : '') + dataSource.length + '条'}} </span> <span :class=\"prefixCls + '-header-title'\">{{titleText}}</span> </span> </div> <div :class=\"[\n\t  \tprefixCls + '-body',\n\t  \t{'ant-transfer-list-body-with-search': showSearch}\n\t  ]\"> <div v-if=showSearch :class=\"prefixCls + '-body-search-wrapper'\"> <v-search :prefix-cls=\"prefixCls + '-search'\" :value.sync=filter :on-change=handleFilter :search-placeholder=searchPlaceholder :handle-clear=handleClear></v-search> </div> <ul class=ant-transfer-list-content v-if=showItems.length> <li v-for=\"item in showItems\" track-by=key class=ant-transfer-list-content-item :transition=\"prefixCls + '-highlight'\" @click=select(item)> <v-checkbox :checked=isCheck(item)></v-checkbox> <span>{{ showLabel(item) }}</span> </li> </ul> <div v-else :class=\"prefixCls + '-body-not-found'\">{{notFoundContent || '列表为空'}}</div> </div> <div v-if=hasFooter :class=\"prefixCls + '-footer'\"> <slot></slot> </div> </div> "},function(e,t){e.exports=" <div :class=\"prefixCls + '-operation'\"> <v-button type=primary size=small :disabled=!rightActive @click=moveToLeft> <span><v-icon type=left></v-icon>{{operations[0]}}</span> </v-button> <v-button type=primary size=small :disabled=!leftActive @click=moveToRight> <span>{{operations[1]}}<v-icon type=right></v-icon> </span> </v-button> </div> "},function(e,t){e.exports=' <div> <input placeholder={{searchPlaceholder}} :class="[prefixCls, \'ant-input\']" @input=handleChange v-model=value> <a href=# v-if="value && value.length > 0" :class="`${prefixCls}-action`" @click=clear($event)> <v-icon type=cross-circle></v-icon> </a> <span v-else :class="prefixCls + \'-action\'"> <v-icon type=search></v-icon> </span> </div> '},function(e,t){e.exports=" <div :class=prefixCls> <list :filter=leftFilter :handle-filter=handleLeftFilter :handle-clear=handleLeftClear :prefix-cls=\"prefixCls + '-list'\" :data-source=leftDataSource :handle-select=handleLeftSelect :handle-select-all=handleLeftSelectAll :checked-keys=leftCheckedKeys :render=render :title-text=titles[0] :style=listStyle :class-name=className :show-search=showSearch :search-placeholder=searchPlaceholder :not-found-content=notFoundContent :filter-option=filterOption :has-footer=hasFooter><slot></slot></list> <operation :prefix-cls=prefixCls :operations=operations :left-active=leftActive :right-active=rightActive :move-to-left=moveToLeft :move-to-right=moveToRight></operation> <list :filter=rightFilter :handle-filter=handleRightFilter :handle-clear=handleRightClear :prefix-cls=\"prefixCls + '-list'\" :data-source=rightDataSource :handle-select=handleRightSelect :handle-select-all=handleRightSelectAll :checked-keys=rightCheckedKeys :render=render :title-text=titles[1] :style=listStyle :class-name=className :show-search=showSearch :search-placeholder=searchPlaceholder :not-found-content=notFoundContent :filter-option=filterOption :has-footer=hasFooter><slot></slot></list> </div> "},function(e,t){e.exports=" <ul :class=treeCls> <li v-for=\"item in dataSource\" :class=\"[{[prefix+'-treenode-disabled']: item.disabled}]\"> <span :class=\"[prefix+'-switcher',{[prefix+'-switcher-disabled']: item.disabled,[prefix+'-noline_close']: !item.expand && !item.isLeaf,[prefix+'-noline_open']: item.expand && !item.isLeaf,[prefix+'-switcher-noop']: item.isLeaf}]\" @click=setExpand(item.disabled,$index)></span> <span v-if=checkable :class=\"[prefix+'-checkbox',{[prefix+'-checkbox-disabled']: item.disabled || item.disableCheckbox,[prefix+'-checkbox-checked']: item.checked && item.childrenCheckedStatus == 2, [prefix+'-checkbox-indeterminate']: item.checked && item.childrenCheckedStatus == 1}]\" @click=setCheck(item.disabled||item.disableCheckbox,$index)> <span :class=\"prefix+'-checkbox-inner'\"></span> </span> <a :title=item.title :class=\"[{[prefix+'-node-selected']: item.selected}]\" @click=setSelect(item.disabled,$index)> <span :class=\"prefix+'-title'\" v-html=item.title></span> </a> <v-tree v-if=!item.isLeaf :data-source.sync=item.node :key=\"this.key+'.'+$index\" :multiple=multiple :checkable=checkable :class=\"{[prefix+'-child-tree-open']: item.expand}\" v-show=item.expand transition=slide-up></v-tree> </li> </ul> "},function(e,t){e.exports=" <span style=display:inline-block;position:relative> <base-select :value=value :popup-container=popupContainer :open.sync=open :position=position :multiple=multiple :allow-clear=allowClear :on-clear=clear v-ref:select> <v-tree :data-source=data :on-select=select :on-check=check :multiple=multiple :checkable=treeCheckable v-ref:tree></v-tree> </base-select> </span> "},function(e,t){e.exports=' <span role=button tabindex=0 class=ant-upload-btn @click=_onClick @keydown=_onKeyDown @drop=_onFileDrop @dragover=_onFileDrop> <input v-el:file type=file style="display: none" :accept=accept :multiple=multiple @change=_onChange> <slot></slot> </span> '},function(e,t){e.exports=' <div :class="prefixCls + \'-list\'"> <div v-for="file in items" :class="prefixCls + \'-list-item\'" :key=file.uid> <v-icon v-if="file.status === \'done\'" type=check :class="prefixCls + \'-success-icon\'"></v-icon> <v-icon v-if="file.status !== \'done\'" type=loading></v-icon> <a v-if=file.url :class="prefixCls + \'-item-name\'" :href=file.url target=_blank>{{file.name}}</a> <b v-if=!file.url :class="prefixCls + \'-item-name\'">{{file.name}}</b> <v-icon type=cross @click=_handleClose(file)></v-icon> </div> </div> '},function(e,t){e.exports=" <div :class=wrapClasses> <ajax-upload :action=action :name=name :data=data :multiple=multiple :on-start=_onStart :on-progress=_onProgress :on-success=_onSuccess :on-error=_onError :before-upload=beforeUpload> <div :class=containerClasses> <slot></slot> </div> </ajax-upload> </div> <upload-list :items=fileList :on-remove=_handleManualRemove></upload-list> "},function(e,t){e.exports=' <div :class=wrapCls @click.stop=toggleDropdown _v-1b9f1c67=""> <div :class=selectionCls role=combobox aria-autocomplete=list aria-haspopup=true aria-expanded=false tabindex=0 _v-1b9f1c67=""> <div class=ant-select-selection__rendered _v-1b9f1c67=""> <template v-if=labels> <ul v-if=multiple _v-1b9f1c67=""> <li v-for="(i,text) in labels" unselectable=unselectable class=ant-select-selection__choice title={{text}} style="user-select: none" _v-1b9f1c67=""> <div class=ant-select-selection__choice__content _v-1b9f1c67="">{{text}}</div> <span class=ant-select-selection__choice__remove @click=remove(i,text) _v-1b9f1c67=""></span> </li> <li v-if="search &amp;&amp; multiple" class="ant-select-search ant-select-search--inline" _v-1b9f1c67=""> <div class=ant-select-search__field__wrap _v-1b9f1c67=""> <input class=ant-select-search__field v-model=searchVal :style=multipleSearchStyle @focus="isSearchFocus = true" @blur=searchBlur v-el:search-input="" _v-1b9f1c67=""> <span class=ant-select-search__field__mirror v-el:search-mirror="" _v-1b9f1c67="">{{searchVal}}</span> </div> </li> </ul> <div v-else="" class=ant-select-selection-selected-value title=Lucy :style="{opacity: isSearchFocus?0.4:1};" _v-1b9f1c67="">{{labels}}</div> </template> <div v-show="((multiple &amp;&amp; !labels.length) || (!multiple &amp;&amp; !labels)) &amp;&amp; !searchVal" unselectable=unselectable class=ant-select-selection__placeholder style="user-select: none" _v-1b9f1c67="">{{placeholder}}</div> <div v-if="search &amp;&amp; !multiple" class="ant-select-search ant-select-search--inline" _v-1b9f1c67=""> <div class=ant-select-search__field__wrap _v-1b9f1c67=""> <input class=ant-select-search__field v-model=searchVal @focus="isSearchFocus = true" @blur=searchBlur v-el:search-input="" _v-1b9f1c67=""> <span class=ant-select-search__field__mirror _v-1b9f1c67=""></span> </div> </div> </div> <span v-if="allowClear &amp;&amp; labels &amp;&amp; !multiple" unselectable=unselectable class=ant-select-selection__clear style="-webkit-user-select: none" @click.stop=clear _v-1b9f1c67=""></span> <span v-if=!multiple class=ant-select-arrow unselectable=unselectable style="user-select: none" _v-1b9f1c67=""> <b _v-1b9f1c67=""> </b> </span> </div> <div v-el:dropdown="" v-show=show transition=slide-up style="overflow: auto" :style=style :class=dropdownCls _v-1b9f1c67=""> <div style="overflow: auto" _v-1b9f1c67=""> <ul class="ant-select-dropdown-menu ant-select-dropdown-menu-vertical ant-select-dropdown-menu-root" role=menu aria-activedescendant="" _v-1b9f1c67=""> <li v-if=loading unselectable=unselectable class="ant-select-dropdown-menu-item ant-select-dropdown-menu-item-disabled" role=menuitem aria-selected=false style="user-select: none" _v-1b9f1c67="">{{loadingText}}</li> <template v-else=""> <li v-if="searchVal &amp;&amp; remoteMethod &amp;&amp; !options.length" unselectable=unselectable class="ant-select-dropdown-menu-item ant-select-dropdown-menu-item-disabled" role=menuitem aria-selected=false style="user-select: none" _v-1b9f1c67="">{{notFoundContent}}</li> <li v-if="searchVal &amp;&amp; !remoteMethod &amp;&amp; !searchFound" unselectable=unselectable class="ant-select-dropdown-menu-item ant-select-dropdown-menu-item-disabled" role=menuitem aria-selected=false style="user-select: none" _v-1b9f1c67="">{{notFoundContent}}</li> <template v-for="(i,option) in ori_options"> <template v-if=option[groupLabel]> <li v-show=option.show class=ant-select-dropdown-menu-item-group _v-1b9f1c67=""> <div class=ant-select-dropdown-menu-item-group-title _v-1b9f1c67=""> {{option[groupLabel]}} </div> <ul v-if="option.data &amp;&amp; option.data.length" class=ant-select-dropdown-menu-item-group-list _v-1b9f1c67=""> <li v-show=option.show v-for="item in option.data" unselectable=unselectable :class="[\'ant-select-dropdown-menu-item\', {\'ant-select-dropdown-menu-item-disabled\': item.disabled}, {\'ant-select-dropdown-menu-item-selected\': item.selected}]" role=menuitem aria-selected=false style="user-select: none" @click=select([i,$index]) _v-1b9f1c67=""> {{item[label]}} <span v-if=item.icon style="float: right" _v-1b9f1c67=""><span class="anticon anticon-{{item.icon}}" _v-1b9f1c67=""></span></span> </li> </ul> </li> </template> <template v-else=""> <li v-show=option.show unselectable=unselectable :class="[\'ant-select-dropdown-menu-item\', {\'ant-select-dropdown-menu-item-disabled\': option.disabled}, {\'ant-select-dropdown-menu-item-selected\': option.selected}]" role=menuitem aria-selected=false style="user-select: none" @click=select(i) _v-1b9f1c67=""> {{option[label]}} <span v-if=option.icon style="float: right" _v-1b9f1c67=""><span class="anticon anticon-{{option.icon}}" _v-1b9f1c67=""></span></span> </li> </template> </template> </template> </ul> </div> </div> </div> '},function(e,t){e.exports=' <span :class="prefix+\'-picker\'" :style=style _v-59e23a72=""> <span _v-59e23a72=""> <input :value=value :placeholder=placeholder readonly="" :disabled=disabled :class="[\'ant-calendar-range-picker\',\'ant-input\',{[\'ant-input-\'+size]:size},{focus:show}]" @click=click @mousedown=$event.preventDefault() _v-59e23a72=""> <i v-if=clearable&amp;&amp;value @click.stop=clear class="anticon anticon-cross-circle ant-calendar-picker-clear" _v-59e23a72=""></i> <span class=ant-calendar-picker-icon _v-59e23a72=""></span> </span> <div class=ant-calendar-picker-container :class="{\'ant-calendar-picker-container-placement-bottomLeft\':left}" v-show=show transition=slide-up tabindex=-1 @blur="show = false" @mousedown=$event.preventDefault() @keyup.up=changeMonth(-1,1) @keyup.down=changeMonth(1,1) @keyup.left=changeYear(-1,1) @keyup.right=changeYear(1,1) :style=containerStyle v-el:container="" _v-59e23a72=""> <div :class="[prefix,{[prefix+\'-range\']:range},{[prefix+\'-time\']:showTime}]" _v-59e23a72=""> <div class=ant-calendar-top v-if=range&amp;&amp;!en _v-59e23a72=""> <template v-for="item in ranges"> <i v-if=$index _v-59e23a72=""></i><a v-text=item.name :class="item.active?\'on\':\'\'" @click=selectRange($index) _v-59e23a72=""></a> </template> </div> <div class=ant-calendar-date-panel _v-59e23a72=""> <template v-for="no in count"> <div :class="range?\'ant-calendar-range-part ant-calendar-range-left\':\'\'" _v-59e23a72=""> <div class=ant-calendar-header _v-59e23a72=""> <a class=ant-calendar-prev-year-btn :title=prevYearTitle @click=changeYear(-1,no+1) _v-59e23a72=""></a> <a class=ant-calendar-prev-month-btn :title=prevMonthTitle @click=changeMonth(-1,no+1) _v-59e23a72=""></a> <span class=ant-calendar-my-select _v-59e23a72=""> <a v-if=!en class=ant-calendar-year-select :title=selectYearTitle @click=showYear(no+1) _v-59e23a72="">{{this[\'now\'+(no+1)].getFullYear()+(en?"":"年")}}</a> <a v-if=!en class=ant-calendar-month-select :title=selectMonthTitle @click=showMonth(no+1) _v-59e23a72="">{{months[this[\'now\'+(no+1)].getMonth()]}}</a> <a v-if=en class=ant-calendar-month-select :title=selectMonthTitle @click=showMonth(no+1) _v-59e23a72="">{{months[this[\'now\'+(no+1)].getMonth()]}}</a> <a v-if=en class=ant-calendar-year-select :title=selectYearTitle @click=showYear(no+1) _v-59e23a72="">{{this[\'now\'+(no+1)].getFullYear()+(en?"":"年")}}</a> </span> <a class=ant-calendar-next-month-btn :title=nextMonthTitle @click=changeMonth(1,no+1) _v-59e23a72=""></a> <a class=ant-calendar-next-year-btn :title=nextYearTitle @click=changeYear(1,no+1) _v-59e23a72=""></a> </div> <div class=ant-calendar-body _v-59e23a72=""> <table class=ant-calendar-table cellspacing=0 role=grid _v-59e23a72=""> <thead _v-59e23a72=""> <tr _v-59e23a72=""> <th v-for="day in days" class=ant-calendar-column-header _v-59e23a72=""> <span class=ant-calendar-column-header-inner v-text=day _v-59e23a72=""></span> </th> </tr> </thead> <template v-if="this[\'date\'+(no+1)]"> <tbody class=ant-calendar-tbody _v-59e23a72=""> <tr v-for="i in 6" _v-59e23a72=""> <td v-for="j in 7" :title="this[\'date\'+(no+1)][i * 7 + j].title" :class="[prefix+\'-cell\',this[\'date\'+(no+1)][i * 7 + j].status]" @click="select(this[\'date\'+(no+1)][i * 7 + j], no+1)" _v-59e23a72=""> <div v-text="this[\'date\'+(no+1)][i * 7 + j].text" :class="prefix+\'-date\'" aria-selected=false aria-disabled=false _v-59e23a72="">18</div> </td> </tr> </tbody> </template> </table> </div> <div v-if=showTime v-show=timeSelected transition=fade :class="prefix+\'-time-picker\'" _v-59e23a72=""> <time-picker-panel prefix=ant-calendar-time-picker :time-value.sync=timeVal[no] :selected.sync=timeSelected :disabled-h=disabledTime[no].disabledHours :disabled-m=disabledTime[no].disabledMinutes local-format=HH:mm _v-59e23a72=""></time-picker-panel> </div> <div class=ant-calendar-year-panel transition=fade v-if="this[\'showYear\'+(no+1)]" _v-59e23a72=""> <span class=ant-calendar-year-panel-prev @click=changeYearRange(no+1,-1) _v-59e23a72=""><a class="anticon anticon-up" _v-59e23a72=""></a></span> <span class=ant-calendar-year-panel-cell v-for="item in this[\'years\'+(no+1)]" :class=item.status @click=selectYear($index,no+1) style="width:33.33%; display:inline-block;padding:9px 0" _v-59e23a72=""> <a class=ant-calendar-year-panel-year _v-59e23a72="">{{item.year+(en?"":"年")}}</a> </span> <span class=ant-calendar-year-panel-next @click=changeYearRange(no+1,1) _v-59e23a72=""><a class="anticon anticon-down" _v-59e23a72=""></a></span> </div> <div class=ant-calendar-month-panel transition=fade v-if="this[\'showMonth\'+(no+1)]" _v-59e23a72=""> <div class=ant-calendar-month-panel-body _v-59e23a72=""> <table class=ant-calendar-month-panel-table _v-59e23a72=""> <tbody class=ant-calendar-month-panel-tbody _v-59e23a72=""> <tr v-for="n in 4" _v-59e23a72=""> <td class=ant-calendar-month-panel-cell v-for="m in 3" :class="this[\'months\'+(no+1)][3*n+m].status" _v-59e23a72=""> <a class=ant-calendar-month-panel-month @click=selectMonth(3*n+m,no+1) _v-59e23a72="">{{months[this[\'months\'+(no+1)][3*n+m].month-1].substr(0,3)}}</a> </td> </tr> </tbody> </table> </div> </div> </div> </template> </div> <div v-if="range || showTime" :class="[prefix+\'-footer\',{[prefix+\'-range-bottom\']:range}]" _v-59e23a72=""> <div class=ant-calendar-footer-btn _v-59e23a72=""> <a v-if=showTime :class="[prefix+\'-time-picker-btn\', {[prefix+\'-time-picker-btn-disabled\']: !timeBtnEnable}]" role=button @click=selectTime _v-59e23a72="">{{timeSelected?\'选择日期\':\'选择时间\'}}</a> <a :class="{[prefix+\'-ok-btn\']: showTime}" role=button @click=confirm _v-59e23a72="">{{confirmTitle}}</a> </div> </div> </div> </div> </span> ';
	},function(e,t,n){var i,r;/*! VelocityJS.org (1.4.0). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */
	/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */
	!function(e){"use strict";function t(e){var t=e.length,i=n.type(e);return"function"!==i&&!n.isWindow(e)&&(!(1!==e.nodeType||!t)||("array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e))}if(!e.jQuery){var n=function(e,t){return new n.fn.init(e,t)};n.isWindow=function(e){return e&&e===e.window},n.type=function(e){return e?"object"==typeof e||"function"==typeof e?r[s.call(e)]||"object":typeof e:e+""},n.isArray=Array.isArray||function(e){return"array"===n.type(e)},n.isPlainObject=function(e){var t;if(!e||"object"!==n.type(e)||e.nodeType||n.isWindow(e))return!1;try{if(e.constructor&&!o.call(e,"constructor")&&!o.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(e){return!1}for(t in e);return void 0===t||o.call(e,t)},n.each=function(e,n,i){var r,o=0,s=e.length,a=t(e);if(i){if(a)for(;o<s&&(r=n.apply(e[o],i),r!==!1);o++);else for(o in e)if(e.hasOwnProperty(o)&&(r=n.apply(e[o],i),r===!1))break}else if(a)for(;o<s&&(r=n.call(e[o],o,e[o]),r!==!1);o++);else for(o in e)if(e.hasOwnProperty(o)&&(r=n.call(e[o],o,e[o]),r===!1))break;return e},n.data=function(e,t,r){if(void 0===r){var o=e[n.expando],s=o&&i[o];if(void 0===t)return s;if(s&&t in s)return s[t]}else if(void 0!==t){var a=e[n.expando]||(e[n.expando]=++n.uuid);return i[a]=i[a]||{},i[a][t]=r,r}},n.removeData=function(e,t){var r=e[n.expando],o=r&&i[r];o&&(t?n.each(t,function(e,t){delete o[t]}):delete i[r])},n.extend=function(){var e,t,i,r,o,s,a=arguments[0]||{},l=1,u=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[l]||{},l++),"object"!=typeof a&&"function"!==n.type(a)&&(a={}),l===u&&(a=this,l--);l<u;l++)if(o=arguments[l])for(r in o)o.hasOwnProperty(r)&&(e=a[r],i=o[r],a!==i&&(c&&i&&(n.isPlainObject(i)||(t=n.isArray(i)))?(t?(t=!1,s=e&&n.isArray(e)?e:[]):s=e&&n.isPlainObject(e)?e:{},a[r]=n.extend(c,s,i)):void 0!==i&&(a[r]=i)));return a},n.queue=function(e,i,r){function o(e,n){var i=n||[];return e&&(t(Object(e))?!function(e,t){for(var n=+t.length,i=0,r=e.length;i<n;)e[r++]=t[i++];if(n!==n)for(;void 0!==t[i];)e[r++]=t[i++];return e.length=r,e}(i,"string"==typeof e?[e]:e):[].push.call(i,e)),i}if(e){i=(i||"fx")+"queue";var s=n.data(e,i);return r?(!s||n.isArray(r)?s=n.data(e,i,o(r)):s.push(r),s):s||[]}},n.dequeue=function(e,t){n.each(e.nodeType?[e]:e,function(e,i){t=t||"fx";var r=n.queue(i,t),o=r.shift();"inprogress"===o&&(o=r.shift()),o&&("fx"===t&&r.unshift("inprogress"),o.call(i,function(){n.dequeue(i,t)}))})},n.fn=n.prototype={init:function(e){if(e.nodeType)return this[0]=e,this;throw new Error("Not a DOM node.")},offset:function(){var t=this[0].getBoundingClientRect?this[0].getBoundingClientRect():{top:0,left:0};return{top:t.top+(e.pageYOffset||document.scrollTop||0)-(document.clientTop||0),left:t.left+(e.pageXOffset||document.scrollLeft||0)-(document.clientLeft||0)}},position:function(){function e(e){for(var t=e.offsetParent;t&&"html"!==t.nodeName.toLowerCase()&&t.style&&"static"===t.style.position;)t=t.offsetParent;return t||document}var t=this[0],i=e(t),r=this.offset(),o=/^(?:body|html)$/i.test(i.nodeName)?{top:0,left:0}:n(i).offset();return r.top-=parseFloat(t.style.marginTop)||0,r.left-=parseFloat(t.style.marginLeft)||0,i.style&&(o.top+=parseFloat(i.style.borderTopWidth)||0,o.left+=parseFloat(i.style.borderLeftWidth)||0),{top:r.top-o.top,left:r.left-o.left}}};var i={};n.expando="velocity"+(new Date).getTime(),n.uuid=0;for(var r={},o=r.hasOwnProperty,s=r.toString,a="Boolean Number String Function Array Date RegExp Object Error".split(" "),l=0;l<a.length;l++)r["[object "+a[l]+"]"]=a[l].toLowerCase();n.fn.init.prototype=n.fn,e.Velocity={Utilities:n}}}(window),function(o){"use strict";"object"==typeof e&&"object"==typeof e.exports?e.exports=o():(i=o,r="function"==typeof i?i.call(t,n,t,e):i,!(void 0!==r&&(e.exports=r)))}(function(){"use strict";return function(e,t,n,i){function r(e){for(var t=-1,n=e?e.length:0,i=[];++t<n;){var r=e[t];r&&i.push(r)}return i}function o(e){return g.isWrapped(e)?e=[].slice.call(e):g.isNode(e)&&(e=[e]),e}function s(e){var t=h.data(e,"velocity");return null===t?i:t}function a(e,t){var n=s(e);n&&n.delayTimer&&!n.delayPaused&&(n.delayRemaining=n.delay-t+n.delayBegin,n.delayPaused=!0,clearTimeout(n.delayTimer.setTimeout))}function l(e,t){var n=s(e);n&&n.delayTimer&&n.delayPaused&&(n.delayPaused=!1,n.delayTimer.setTimeout=setTimeout(n.delayTimer.next,n.delayRemaining))}function u(e){return function(t){return Math.round(t*e)*(1/e)}}function c(e,n,i,r){function o(e,t){return 1-3*t+3*e}function s(e,t){return 3*t-6*e}function a(e){return 3*e}function l(e,t,n){return((o(t,n)*e+s(t,n))*e+a(t))*e}function u(e,t,n){return 3*o(t,n)*e*e+2*s(t,n)*e+a(t)}function c(t,n){for(var r=0;r<v;++r){var o=u(n,e,i);if(0===o)return n;var s=l(n,e,i)-t;n-=s/o}return n}function d(){for(var t=0;t<x;++t)S[t]=l(t*b,e,i)}function f(t,n,r){var o,s,a=0;do s=n+(r-n)/2,o=l(s,e,i)-t,o>0?r=s:n=s;while(Math.abs(o)>y&&++a<g);return s}function p(t){for(var n=0,r=1,o=x-1;r!==o&&S[r]<=t;++r)n+=b;--r;var s=(t-S[r])/(S[r+1]-S[r]),a=n+s*b,l=u(a,e,i);return l>=m?c(t,a):0===l?a:f(t,n,n+b)}function h(){k=!0,e===n&&i===r||d()}var v=4,m=.001,y=1e-7,g=10,x=11,b=1/(x-1),_="Float32Array"in t;if(4!==arguments.length)return!1;for(var w=0;w<4;++w)if("number"!=typeof arguments[w]||isNaN(arguments[w])||!isFinite(arguments[w]))return!1;e=Math.min(e,1),i=Math.min(i,1),e=Math.max(e,0),i=Math.max(i,0);var S=_?new Float32Array(x):new Array(x),k=!1,C=function(t){return k||h(),e===n&&i===r?t:0===t?0:1===t?1:l(p(t),n,r)};C.getControlPoints=function(){return[{x:e,y:n},{x:i,y:r}]};var O="generateBezier("+[e,n,i,r]+")";return C.toString=function(){return O},C}function d(e,t){var n=e;return g.isString(e)?w.Easings[e]||(n=!1):n=g.isArray(e)&&1===e.length?u.apply(null,e):g.isArray(e)&&2===e.length?S.apply(null,e.concat([t])):!(!g.isArray(e)||4!==e.length)&&c.apply(null,e),n===!1&&(n=w.Easings[w.defaults.easing]?w.defaults.easing:_),n}function f(e){if(e){var t=w.timestamp&&e!==!0?e:y.now(),n=w.State.calls.length;n>1e4&&(w.State.calls=r(w.State.calls),n=w.State.calls.length);for(var o=0;o<n;o++)if(w.State.calls[o]){var a=w.State.calls[o],l=a[0],u=a[2],c=a[3],d=!!c,m=null,x=a[5],b=a[6];if(c||(c=w.State.calls[o][3]=t-16),x){if(x.resume!==!0)continue;c=a[3]=Math.round(t-b-16),a[5]=null}b=a[6]=t-c;for(var _=Math.min(b/u.duration,1),S=0,C=l.length;S<C;S++){var M=l[S],T=M.element;if(s(T)){var P=!1;if(u.display!==i&&null!==u.display&&"none"!==u.display){if("flex"===u.display){var E=["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex"];h.each(E,function(e,t){k.setPropertyValue(T,"display",t)})}k.setPropertyValue(T,"display",u.display)}u.visibility!==i&&"hidden"!==u.visibility&&k.setPropertyValue(T,"visibility",u.visibility);for(var j in M)if(M.hasOwnProperty(j)&&"element"!==j){var $,L=M[j],A=g.isString(L.easing)?w.Easings[L.easing]:L.easing;if(g.isString(L.pattern)){var N=1===_?function(e,t,n){var i=L.endValue[t];return n?Math.round(i):i}:function(e,t,n){var i=L.startValue[t],r=L.endValue[t]-i,o=i+r*A(_,u,r);return n?Math.round(o):o};$=L.pattern.replace(/{(\d+)(!)?}/g,N)}else if(1===_)$=L.endValue;else{var F=L.endValue-L.startValue;$=L.startValue+F*A(_,u,F)}if(!d&&$===L.currentValue)continue;if(L.currentValue=$,"tween"===j)m=$;else{var D;if(k.Hooks.registered[j]){D=k.Hooks.getRoot(j);var V=s(T).rootPropertyValueCache[D];V&&(L.rootPropertyValue=V)}var B=k.setPropertyValue(T,j,L.currentValue+(v<9&&0===parseFloat($)?"":L.unitType),L.rootPropertyValue,L.scrollData);k.Hooks.registered[j]&&(k.Normalizations.registered[D]?s(T).rootPropertyValueCache[D]=k.Normalizations.registered[D]("extract",null,B[1]):s(T).rootPropertyValueCache[D]=B[1]),"transform"===B[0]&&(P=!0)}}u.mobileHA&&s(T).transformCache.translate3d===i&&(s(T).transformCache.translate3d="(0px, 0px, 0px)",P=!0),P&&k.flushTransformCache(T)}}u.display!==i&&"none"!==u.display&&(w.State.calls[o][2].display=!1),u.visibility!==i&&"hidden"!==u.visibility&&(w.State.calls[o][2].visibility=!1),u.progress&&u.progress.call(a[1],a[1],_,Math.max(0,c+u.duration-t),c,m),1===_&&p(o)}}w.State.isTicking&&O(f)}function p(e,t){if(!w.State.calls[e])return!1;for(var n=w.State.calls[e][0],r=w.State.calls[e][1],o=w.State.calls[e][2],a=w.State.calls[e][4],l=!1,u=0,c=n.length;u<c;u++){var d=n[u].element;t||o.loop||("none"===o.display&&k.setPropertyValue(d,"display",o.display),"hidden"===o.visibility&&k.setPropertyValue(d,"visibility",o.visibility));var f=s(d);if(o.loop!==!0&&(h.queue(d)[1]===i||!/\.velocityQueueEntryFlag/i.test(h.queue(d)[1]))&&f){f.isAnimating=!1,f.rootPropertyValueCache={};var p=!1;h.each(k.Lists.transforms3D,function(e,t){var n=/^scale/.test(t)?1:0,r=f.transformCache[t];f.transformCache[t]!==i&&new RegExp("^\\("+n+"[^.]").test(r)&&(p=!0,delete f.transformCache[t])}),o.mobileHA&&(p=!0,delete f.transformCache.translate3d),p&&k.flushTransformCache(d),k.Values.removeClass(d,"velocity-animating")}if(!t&&o.complete&&!o.loop&&u===c-1)try{o.complete.call(r,r)}catch(e){setTimeout(function(){throw e},1)}a&&o.loop!==!0&&a(r),f&&o.loop===!0&&!t&&(h.each(f.tweensContainer,function(e,t){if(/^rotate/.test(e)&&(parseFloat(t.startValue)-parseFloat(t.endValue))%360===0){var n=t.startValue;t.startValue=t.endValue,t.endValue=n}/^backgroundPosition/.test(e)&&100===parseFloat(t.endValue)&&"%"===t.unitType&&(t.endValue=0,t.startValue=100)}),w(d,"reverse",{loop:!0,delay:o.delay})),o.queue!==!1&&h.dequeue(d,o.queue)}w.State.calls[e]=!1;for(var v=0,m=w.State.calls.length;v<m;v++)if(w.State.calls[v]!==!1){l=!0;break}l===!1&&(w.State.isTicking=!1,delete w.State.calls,w.State.calls=[])}var h,v=function(){if(n.documentMode)return n.documentMode;for(var e=7;e>4;e--){var t=n.createElement("div");if(t.innerHTML="<!--[if IE "+e+"]><span></span><![endif]-->",t.getElementsByTagName("span").length)return t=null,e}return i}(),m=function(){var e=0;return t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||function(t){var n,i=(new Date).getTime();return n=Math.max(0,16-(i-e)),e=i+n,setTimeout(function(){t(i+n)},n)}}(),y=function(){var e=t.performance||{};if(!e.hasOwnProperty("now")){var n=e.timing&&e.timing.domComplete?e.timing.domComplete:(new Date).getTime();e.now=function(){return(new Date).getTime()-n}}return e}(),g={isNumber:function(e){return"number"==typeof e},isString:function(e){return"string"==typeof e},isArray:Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},isFunction:function(e){return"[object Function]"===Object.prototype.toString.call(e)},isNode:function(e){return e&&e.nodeType},isNodeList:function(e){return"object"==typeof e&&/^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(e))&&e.length!==i&&(0===e.length||"object"==typeof e[0]&&e[0].nodeType>0)},isWrapped:function(e){return e&&(g.isArray(e)||g.isNumber(e.length)&&!g.isString(e)&&!g.isFunction(e))},isSVG:function(e){return t.SVGElement&&e instanceof t.SVGElement},isEmptyObject:function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}},x=!1;if(e.fn&&e.fn.jquery?(h=e,x=!0):h=t.Velocity.Utilities,v<=8&&!x)throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");if(v<=7)return void(jQuery.fn.velocity=jQuery.fn.animate);var b=400,_="swing",w={State:{isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),isAndroid:/Android/i.test(navigator.userAgent),isGingerbread:/Android 2\.3\.[3-7]/i.test(navigator.userAgent),isChrome:t.chrome,isFirefox:/Firefox/i.test(navigator.userAgent),prefixElement:n.createElement("div"),prefixMatches:{},scrollAnchor:null,scrollPropertyLeft:null,scrollPropertyTop:null,isTicking:!1,calls:[],delayedElements:{count:0}},CSS:{},Utilities:h,Redirects:{},Easings:{},Promise:t.Promise,defaults:{queue:"",duration:b,easing:_,begin:i,complete:i,progress:i,display:i,visibility:i,loop:!1,delay:!1,mobileHA:!0,_cacheValues:!0,promiseRejectEmpty:!0},init:function(e){h.data(e,"velocity",{isSVG:g.isSVG(e),isAnimating:!1,computedStyle:null,tweensContainer:null,rootPropertyValueCache:{},transformCache:{}})},hook:null,mock:!1,version:{major:1,minor:4,patch:0},debug:!1,timestamp:!0,pauseAll:function(e){var t=(new Date).getTime();h.each(w.State.calls,function(t,n){if(n){if(e!==i&&(n[2].queue!==e||n[2].queue===!1))return!0;n[5]={resume:!1}}}),h.each(w.State.delayedElements,function(e,n){n&&a(n,t)})},resumeAll:function(e){var t=(new Date).getTime();h.each(w.State.calls,function(t,n){if(n){if(e!==i&&(n[2].queue!==e||n[2].queue===!1))return!0;n[5]&&(n[5].resume=!0)}}),h.each(w.State.delayedElements,function(e,n){n&&l(n,t)})}};t.pageYOffset!==i?(w.State.scrollAnchor=t,w.State.scrollPropertyLeft="pageXOffset",w.State.scrollPropertyTop="pageYOffset"):(w.State.scrollAnchor=n.documentElement||n.body.parentNode||n.body,w.State.scrollPropertyLeft="scrollLeft",w.State.scrollPropertyTop="scrollTop");var S=function(){function e(e){return-e.tension*e.x-e.friction*e.v}function t(t,n,i){var r={x:t.x+i.dx*n,v:t.v+i.dv*n,tension:t.tension,friction:t.friction};return{dx:r.v,dv:e(r)}}function n(n,i){var r={dx:n.v,dv:e(n)},o=t(n,.5*i,r),s=t(n,.5*i,o),a=t(n,i,s),l=1/6*(r.dx+2*(o.dx+s.dx)+a.dx),u=1/6*(r.dv+2*(o.dv+s.dv)+a.dv);return n.x=n.x+l*i,n.v=n.v+u*i,n}return function e(t,i,r){var o,s,a,l={x:-1,v:0,tension:null,friction:null},u=[0],c=0,d=1e-4,f=.016;for(t=parseFloat(t)||500,i=parseFloat(i)||20,r=r||null,l.tension=t,l.friction=i,o=null!==r,o?(c=e(t,i),s=c/r*f):s=f;;)if(a=n(a||l,s),u.push(1+a.x),c+=16,!(Math.abs(a.x)>d&&Math.abs(a.v)>d))break;return o?function(e){return u[e*(u.length-1)|0]}:c}}();w.Easings={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},spring:function(e){return 1-Math.cos(4.5*e*Math.PI)*Math.exp(6*-e)}},h.each([["ease",[.25,.1,.25,1]],["ease-in",[.42,0,1,1]],["ease-out",[0,0,.58,1]],["ease-in-out",[.42,0,.58,1]],["easeInSine",[.47,0,.745,.715]],["easeOutSine",[.39,.575,.565,1]],["easeInOutSine",[.445,.05,.55,.95]],["easeInQuad",[.55,.085,.68,.53]],["easeOutQuad",[.25,.46,.45,.94]],["easeInOutQuad",[.455,.03,.515,.955]],["easeInCubic",[.55,.055,.675,.19]],["easeOutCubic",[.215,.61,.355,1]],["easeInOutCubic",[.645,.045,.355,1]],["easeInQuart",[.895,.03,.685,.22]],["easeOutQuart",[.165,.84,.44,1]],["easeInOutQuart",[.77,0,.175,1]],["easeInQuint",[.755,.05,.855,.06]],["easeOutQuint",[.23,1,.32,1]],["easeInOutQuint",[.86,0,.07,1]],["easeInExpo",[.95,.05,.795,.035]],["easeOutExpo",[.19,1,.22,1]],["easeInOutExpo",[1,0,0,1]],["easeInCirc",[.6,.04,.98,.335]],["easeOutCirc",[.075,.82,.165,1]],["easeInOutCirc",[.785,.135,.15,.86]]],function(e,t){w.Easings[t[0]]=c.apply(null,t[1])});var k=w.CSS={RegEx:{isHex:/^#([A-f\d]{3}){1,2}$/i,valueUnwrap:/^[A-z]+\((.*)\)$/i,wrappedValueAlreadyExtracted:/[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,valueSplit:/([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi},Lists:{colors:["fill","stroke","stopColor","color","backgroundColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor"],transformsBase:["translateX","translateY","scale","scaleX","scaleY","skewX","skewY","rotateZ"],transforms3D:["transformPerspective","translateZ","scaleZ","rotateX","rotateY"],units:["%","em","ex","ch","rem","vw","vh","vmin","vmax","cm","mm","Q","in","pc","pt","px","deg","grad","rad","turn","s","ms"],colorNames:{aliceblue:"240,248,255",antiquewhite:"250,235,215",aquamarine:"127,255,212",aqua:"0,255,255",azure:"240,255,255",beige:"245,245,220",bisque:"255,228,196",black:"0,0,0",blanchedalmond:"255,235,205",blueviolet:"138,43,226",blue:"0,0,255",brown:"165,42,42",burlywood:"222,184,135",cadetblue:"95,158,160",chartreuse:"127,255,0",chocolate:"210,105,30",coral:"255,127,80",cornflowerblue:"100,149,237",cornsilk:"255,248,220",crimson:"220,20,60",cyan:"0,255,255",darkblue:"0,0,139",darkcyan:"0,139,139",darkgoldenrod:"184,134,11",darkgray:"169,169,169",darkgrey:"169,169,169",darkgreen:"0,100,0",darkkhaki:"189,183,107",darkmagenta:"139,0,139",darkolivegreen:"85,107,47",darkorange:"255,140,0",darkorchid:"153,50,204",darkred:"139,0,0",darksalmon:"233,150,122",darkseagreen:"143,188,143",darkslateblue:"72,61,139",darkslategray:"47,79,79",darkturquoise:"0,206,209",darkviolet:"148,0,211",deeppink:"255,20,147",deepskyblue:"0,191,255",dimgray:"105,105,105",dimgrey:"105,105,105",dodgerblue:"30,144,255",firebrick:"178,34,34",floralwhite:"255,250,240",forestgreen:"34,139,34",fuchsia:"255,0,255",gainsboro:"220,220,220",ghostwhite:"248,248,255",gold:"255,215,0",goldenrod:"218,165,32",gray:"128,128,128",grey:"128,128,128",greenyellow:"173,255,47",green:"0,128,0",honeydew:"240,255,240",hotpink:"255,105,180",indianred:"205,92,92",indigo:"75,0,130",ivory:"255,255,240",khaki:"240,230,140",lavenderblush:"255,240,245",lavender:"230,230,250",lawngreen:"124,252,0",lemonchiffon:"255,250,205",lightblue:"173,216,230",lightcoral:"240,128,128",lightcyan:"224,255,255",lightgoldenrodyellow:"250,250,210",lightgray:"211,211,211",lightgrey:"211,211,211",lightgreen:"144,238,144",lightpink:"255,182,193",lightsalmon:"255,160,122",lightseagreen:"32,178,170",lightskyblue:"135,206,250",lightslategray:"119,136,153",lightsteelblue:"176,196,222",lightyellow:"255,255,224",limegreen:"50,205,50",lime:"0,255,0",linen:"250,240,230",magenta:"255,0,255",maroon:"128,0,0",mediumaquamarine:"102,205,170",mediumblue:"0,0,205",mediumorchid:"186,85,211",mediumpurple:"147,112,219",mediumseagreen:"60,179,113",mediumslateblue:"123,104,238",mediumspringgreen:"0,250,154",mediumturquoise:"72,209,204",mediumvioletred:"199,21,133",midnightblue:"25,25,112",mintcream:"245,255,250",mistyrose:"255,228,225",moccasin:"255,228,181",navajowhite:"255,222,173",navy:"0,0,128",oldlace:"253,245,230",olivedrab:"107,142,35",olive:"128,128,0",orangered:"255,69,0",orange:"255,165,0",orchid:"218,112,214",palegoldenrod:"238,232,170",palegreen:"152,251,152",paleturquoise:"175,238,238",palevioletred:"219,112,147",papayawhip:"255,239,213",peachpuff:"255,218,185",peru:"205,133,63",pink:"255,192,203",plum:"221,160,221",powderblue:"176,224,230",purple:"128,0,128",red:"255,0,0",rosybrown:"188,143,143",royalblue:"65,105,225",saddlebrown:"139,69,19",salmon:"250,128,114",sandybrown:"244,164,96",seagreen:"46,139,87",seashell:"255,245,238",sienna:"160,82,45",silver:"192,192,192",skyblue:"135,206,235",slateblue:"106,90,205",slategray:"112,128,144",snow:"255,250,250",springgreen:"0,255,127",steelblue:"70,130,180",tan:"210,180,140",teal:"0,128,128",thistle:"216,191,216",tomato:"255,99,71",turquoise:"64,224,208",violet:"238,130,238",wheat:"245,222,179",whitesmoke:"245,245,245",white:"255,255,255",yellowgreen:"154,205,50",yellow:"255,255,0"}},Hooks:{templates:{textShadow:["Color X Y Blur","black 0px 0px 0px"],boxShadow:["Color X Y Blur Spread","black 0px 0px 0px 0px"],clip:["Top Right Bottom Left","0px 0px 0px 0px"],backgroundPosition:["X Y","0% 0%"],transformOrigin:["X Y Z","50% 50% 0px"],perspectiveOrigin:["X Y","50% 50%"]},registered:{},register:function(){for(var e=0;e<k.Lists.colors.length;e++){var t="color"===k.Lists.colors[e]?"0 0 0 1":"255 255 255 1";k.Hooks.templates[k.Lists.colors[e]]=["Red Green Blue Alpha",t]}var n,i,r;if(v)for(n in k.Hooks.templates)if(k.Hooks.templates.hasOwnProperty(n)){i=k.Hooks.templates[n],r=i[0].split(" ");var o=i[1].match(k.RegEx.valueSplit);"Color"===r[0]&&(r.push(r.shift()),o.push(o.shift()),k.Hooks.templates[n]=[r.join(" "),o.join(" ")])}for(n in k.Hooks.templates)if(k.Hooks.templates.hasOwnProperty(n)){i=k.Hooks.templates[n],r=i[0].split(" ");for(var s in r)if(r.hasOwnProperty(s)){var a=n+r[s],l=s;k.Hooks.registered[a]=[n,l]}}},getRoot:function(e){var t=k.Hooks.registered[e];return t?t[0]:e},getUnit:function(e,t){var n=(e.substr(t||0,5).match(/^[a-z%]+/)||[])[0]||"";return n&&k.Lists.units.indexOf(n)>=0?n:""},fixColors:function(e){return e.replace(/(rgba?\(\s*)?(\b[a-z]+\b)/g,function(e,t,n){return k.Lists.colorNames.hasOwnProperty(n)?(t?t:"rgba(")+k.Lists.colorNames[n]+(t?"":",1)"):t+n})},cleanRootPropertyValue:function(e,t){return k.RegEx.valueUnwrap.test(t)&&(t=t.match(k.RegEx.valueUnwrap)[1]),k.Values.isCSSNullValue(t)&&(t=k.Hooks.templates[e][1]),t},extractValue:function(e,t){var n=k.Hooks.registered[e];if(n){var i=n[0],r=n[1];return t=k.Hooks.cleanRootPropertyValue(i,t),t.toString().match(k.RegEx.valueSplit)[r]}return t},injectValue:function(e,t,n){var i=k.Hooks.registered[e];if(i){var r,o,s=i[0],a=i[1];return n=k.Hooks.cleanRootPropertyValue(s,n),r=n.toString().match(k.RegEx.valueSplit),r[a]=t,o=r.join(" ")}return n}},Normalizations:{registered:{clip:function(e,t,n){switch(e){case"name":return"clip";case"extract":var i;return k.RegEx.wrappedValueAlreadyExtracted.test(n)?i=n:(i=n.toString().match(k.RegEx.valueUnwrap),i=i?i[1].replace(/,(\s+)?/g," "):n),i;case"inject":return"rect("+n+")"}},blur:function(e,t,n){switch(e){case"name":return w.State.isFirefox?"filter":"-webkit-filter";case"extract":var i=parseFloat(n);if(!i&&0!==i){var r=n.toString().match(/blur\(([0-9]+[A-z]+)\)/i);i=r?r[1]:0}return i;case"inject":return parseFloat(n)?"blur("+n+")":"none"}},opacity:function(e,t,n){if(v<=8)switch(e){case"name":return"filter";case"extract":var i=n.toString().match(/alpha\(opacity=(.*)\)/i);return n=i?i[1]/100:1;case"inject":return t.style.zoom=1,parseFloat(n)>=1?"":"alpha(opacity="+parseInt(100*parseFloat(n),10)+")"}else switch(e){case"name":return"opacity";case"extract":return n;case"inject":return n}}},register:function(){function e(e,t,n){var i="border-box"===k.getPropertyValue(t,"boxSizing").toString().toLowerCase();if(i===(n||!1)){var r,o,s=0,a="width"===e?["Left","Right"]:["Top","Bottom"],l=["padding"+a[0],"padding"+a[1],"border"+a[0]+"Width","border"+a[1]+"Width"];for(r=0;r<l.length;r++)o=parseFloat(k.getPropertyValue(t,l[r])),isNaN(o)||(s+=o);return n?-s:s}return 0}function t(t,n){return function(i,r,o){switch(i){case"name":return t;case"extract":return parseFloat(o)+e(t,r,n);case"inject":return parseFloat(o)-e(t,r,n)+"px"}}}v&&!(v>9)||w.State.isGingerbread||(k.Lists.transformsBase=k.Lists.transformsBase.concat(k.Lists.transforms3D));for(var n=0;n<k.Lists.transformsBase.length;n++)!function(){var e=k.Lists.transformsBase[n];k.Normalizations.registered[e]=function(t,n,r){switch(t){case"name":return"transform";case"extract":return s(n)===i||s(n).transformCache[e]===i?/^scale/i.test(e)?1:0:s(n).transformCache[e].replace(/[()]/g,"");case"inject":var o=!1;switch(e.substr(0,e.length-1)){case"translate":o=!/(%|px|em|rem|vw|vh|\d)$/i.test(r);break;case"scal":case"scale":w.State.isAndroid&&s(n).transformCache[e]===i&&r<1&&(r=1),o=!/(\d)$/i.test(r);break;case"skew":o=!/(deg|\d)$/i.test(r);break;case"rotate":o=!/(deg|\d)$/i.test(r)}return o||(s(n).transformCache[e]="("+r+")"),s(n).transformCache[e]}}}();for(var r=0;r<k.Lists.colors.length;r++)!function(){var e=k.Lists.colors[r];k.Normalizations.registered[e]=function(t,n,r){switch(t){case"name":return e;case"extract":var o;if(k.RegEx.wrappedValueAlreadyExtracted.test(r))o=r;else{var s,a={black:"rgb(0, 0, 0)",blue:"rgb(0, 0, 255)",gray:"rgb(128, 128, 128)",green:"rgb(0, 128, 0)",red:"rgb(255, 0, 0)",white:"rgb(255, 255, 255)"};/^[A-z]+$/i.test(r)?s=a[r]!==i?a[r]:a.black:k.RegEx.isHex.test(r)?s="rgb("+k.Values.hexToRgb(r).join(" ")+")":/^rgba?\(/i.test(r)||(s=a.black),o=(s||r).toString().match(k.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g," ")}return(!v||v>8)&&3===o.split(" ").length&&(o+=" 1"),o;case"inject":return/^rgb/.test(r)?r:(v<=8?4===r.split(" ").length&&(r=r.split(/\s+/).slice(0,3).join(" ")):3===r.split(" ").length&&(r+=" 1"),(v<=8?"rgb":"rgba")+"("+r.replace(/\s+/g,",").replace(/\.(\d)+(?=,)/g,"")+")")}}}();k.Normalizations.registered.innerWidth=t("width",!0),k.Normalizations.registered.innerHeight=t("height",!0),k.Normalizations.registered.outerWidth=t("width"),k.Normalizations.registered.outerHeight=t("height")}},Names:{camelCase:function(e){return e.replace(/-(\w)/g,function(e,t){return t.toUpperCase()})},SVGAttribute:function(e){var t="width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";return(v||w.State.isAndroid&&!w.State.isChrome)&&(t+="|transform"),new RegExp("^("+t+")$","i").test(e)},prefixCheck:function(e){if(w.State.prefixMatches[e])return[w.State.prefixMatches[e],!0];for(var t=["","Webkit","Moz","ms","O"],n=0,i=t.length;n<i;n++){var r;if(r=0===n?e:t[n]+e.replace(/^\w/,function(e){return e.toUpperCase()}),g.isString(w.State.prefixElement.style[r]))return w.State.prefixMatches[e]=r,[r,!0]}return[e,!1]}},Values:{hexToRgb:function(e){var t,n=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,i=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;return e=e.replace(n,function(e,t,n,i){return t+t+n+n+i+i}),t=i.exec(e),t?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]:[0,0,0]},isCSSNullValue:function(e){return!e||/^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(e)},getUnitType:function(e){return/^(rotate|skew)/i.test(e)?"deg":/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(e)?"":"px"},getDisplayType:function(e){var t=e&&e.tagName.toString().toLowerCase();return/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(t)?"inline":/^(li)$/i.test(t)?"list-item":/^(tr)$/i.test(t)?"table-row":/^(table)$/i.test(t)?"table":/^(tbody)$/i.test(t)?"table-row-group":"block"},addClass:function(e,t){if(e)if(e.classList)e.classList.add(t);else if(g.isString(e.className))e.className+=(e.className.length?" ":"")+t;else{var n=e.getAttribute(v<=7?"className":"class")||"";e.setAttribute("class",n+(n?" ":"")+t)}},removeClass:function(e,t){if(e)if(e.classList)e.classList.remove(t);else if(g.isString(e.className))e.className=e.className.toString().replace(new RegExp("(^|\\s)"+t.split(" ").join("|")+"(\\s|$)","gi")," ");else{var n=e.getAttribute(v<=7?"className":"class")||"";e.setAttribute("class",n.replace(new RegExp("(^|s)"+t.split(" ").join("|")+"(s|$)","gi")," "))}}},getPropertyValue:function(e,n,r,o){function a(e,n){var r=0;if(v<=8)r=h.css(e,n);else{var l=!1;/^(width|height)$/.test(n)&&0===k.getPropertyValue(e,"display")&&(l=!0,k.setPropertyValue(e,"display",k.Values.getDisplayType(e)));var u=function(){l&&k.setPropertyValue(e,"display","none")};if(!o){if("height"===n&&"border-box"!==k.getPropertyValue(e,"boxSizing").toString().toLowerCase()){var c=e.offsetHeight-(parseFloat(k.getPropertyValue(e,"borderTopWidth"))||0)-(parseFloat(k.getPropertyValue(e,"borderBottomWidth"))||0)-(parseFloat(k.getPropertyValue(e,"paddingTop"))||0)-(parseFloat(k.getPropertyValue(e,"paddingBottom"))||0);return u(),c}if("width"===n&&"border-box"!==k.getPropertyValue(e,"boxSizing").toString().toLowerCase()){var d=e.offsetWidth-(parseFloat(k.getPropertyValue(e,"borderLeftWidth"))||0)-(parseFloat(k.getPropertyValue(e,"borderRightWidth"))||0)-(parseFloat(k.getPropertyValue(e,"paddingLeft"))||0)-(parseFloat(k.getPropertyValue(e,"paddingRight"))||0);return u(),d}}var f;f=s(e)===i?t.getComputedStyle(e,null):s(e).computedStyle?s(e).computedStyle:s(e).computedStyle=t.getComputedStyle(e,null),"borderColor"===n&&(n="borderTopColor"),r=9===v&&"filter"===n?f.getPropertyValue(n):f[n],""!==r&&null!==r||(r=e.style[n]),u()}if("auto"===r&&/^(top|right|bottom|left)$/i.test(n)){var p=a(e,"position");("fixed"===p||"absolute"===p&&/top|left/i.test(n))&&(r=h(e).position()[n]+"px")}return r}var l;if(k.Hooks.registered[n]){var u=n,c=k.Hooks.getRoot(u);r===i&&(r=k.getPropertyValue(e,k.Names.prefixCheck(c)[0])),k.Normalizations.registered[c]&&(r=k.Normalizations.registered[c]("extract",e,r)),l=k.Hooks.extractValue(u,r)}else if(k.Normalizations.registered[n]){var d,f;d=k.Normalizations.registered[n]("name",e),"transform"!==d&&(f=a(e,k.Names.prefixCheck(d)[0]),k.Values.isCSSNullValue(f)&&k.Hooks.templates[n]&&(f=k.Hooks.templates[n][1])),l=k.Normalizations.registered[n]("extract",e,f)}if(!/^[\d-]/.test(l)){var p=s(e);if(p&&p.isSVG&&k.Names.SVGAttribute(n))if(/^(height|width)$/i.test(n))try{l=e.getBBox()[n]}catch(e){l=0}else l=e.getAttribute(n);else l=a(e,k.Names.prefixCheck(n)[0])}return k.Values.isCSSNullValue(l)&&(l=0),w.debug>=2&&console.log("Get "+n+": "+l),l},setPropertyValue:function(e,n,i,r,o){var a=n;if("scroll"===n)o.container?o.container["scroll"+o.direction]=i:"Left"===o.direction?t.scrollTo(i,o.alternateValue):t.scrollTo(o.alternateValue,i);else if(k.Normalizations.registered[n]&&"transform"===k.Normalizations.registered[n]("name",e))k.Normalizations.registered[n]("inject",e,i),a="transform",i=s(e).transformCache[n];else{if(k.Hooks.registered[n]){var l=n,u=k.Hooks.getRoot(n);r=r||k.getPropertyValue(e,u),i=k.Hooks.injectValue(l,i,r),n=u}if(k.Normalizations.registered[n]&&(i=k.Normalizations.registered[n]("inject",e,i),n=k.Normalizations.registered[n]("name",e)),a=k.Names.prefixCheck(n)[0],v<=8)try{e.style[a]=i}catch(e){w.debug&&console.log("Browser does not support ["+i+"] for ["+a+"]")}else{var c=s(e);c&&c.isSVG&&k.Names.SVGAttribute(n)?e.setAttribute(n,i):e.style[a]=i}w.debug>=2&&console.log("Set "+n+" ("+a+"): "+i)}return[a,i]},flushTransformCache:function(e){var t="",n=s(e);if((v||w.State.isAndroid&&!w.State.isChrome)&&n&&n.isSVG){var i=function(t){return parseFloat(k.getPropertyValue(e,t))},r={translate:[i("translateX"),i("translateY")],skewX:[i("skewX")],skewY:[i("skewY")],scale:1!==i("scale")?[i("scale"),i("scale")]:[i("scaleX"),i("scaleY")],rotate:[i("rotateZ"),0,0]};h.each(s(e).transformCache,function(e){/^translate/i.test(e)?e="translate":/^scale/i.test(e)?e="scale":/^rotate/i.test(e)&&(e="rotate"),r[e]&&(t+=e+"("+r[e].join(" ")+") ",delete r[e])})}else{var o,a;h.each(s(e).transformCache,function(n){return o=s(e).transformCache[n],"transformPerspective"===n?(a=o,!0):(9===v&&"rotateZ"===n&&(n="rotate"),void(t+=n+o+" "))}),a&&(t="perspective"+a+" "+t)}k.setPropertyValue(e,"transform",t)}};k.Hooks.register(),k.Normalizations.register(),w.hook=function(e,t,n){var r;return e=o(e),h.each(e,function(e,o){if(s(o)===i&&w.init(o),n===i)r===i&&(r=k.getPropertyValue(o,t));else{var a=k.setPropertyValue(o,t,n);"transform"===a[0]&&w.CSS.flushTransformCache(o),r=a}}),r};var C=function(){function e(){return c?O.promise||null:v}function r(e,r){function o(o){var c,p;if(l.begin&&0===T)try{l.begin.call(y,y)}catch(e){setTimeout(function(){throw e},1)}if("scroll"===j){var v,m,b,S=/^x$/i.test(l.axis)?"Left":"Top",C=parseFloat(l.offset)||0;l.container?g.isWrapped(l.container)||g.isNode(l.container)?(l.container=l.container[0]||l.container,v=l.container["scroll"+S],b=v+h(e).position()[S.toLowerCase()]+C):l.container=null:(v=w.State.scrollAnchor[w.State["scrollProperty"+S]],m=w.State.scrollAnchor[w.State["scrollProperty"+("Left"===S?"Top":"Left")]],b=h(e).offset()[S.toLowerCase()]+C),u={scroll:{rootPropertyValue:!1,startValue:v,currentValue:v,endValue:b,unitType:"",easing:l.easing,scrollData:{container:l.container,direction:S,alternateValue:m}},element:e},w.debug&&console.log("tweensContainer (scroll): ",u.scroll,e)}else if("reverse"===j){if(c=s(e),!c)return;if(!c.tweensContainer)return void h.dequeue(e,l.queue);"none"===c.opts.display&&(c.opts.display="auto"),"hidden"===c.opts.visibility&&(c.opts.visibility="visible"),c.opts.loop=!1,c.opts.begin=null,c.opts.complete=null,_.easing||delete l.easing,_.duration||delete l.duration,l=h.extend({},c.opts,l),p=h.extend(!0,{},c?c.tweensContainer:null);for(var P in p)if(p.hasOwnProperty(P)&&"element"!==P){var E=p[P].startValue;p[P].startValue=p[P].currentValue=p[P].endValue,p[P].endValue=E,g.isEmptyObject(_)||(p[P].easing=l.easing),w.debug&&console.log("reverse tweensContainer ("+P+"): "+JSON.stringify(p[P]),e)}u=p}else if("start"===j){c=s(e),c&&c.tweensContainer&&c.isAnimating===!0&&(p=c.tweensContainer);var $=function(t,n){var i,o,s;return g.isFunction(t)&&(t=t.call(e,r,M)),g.isArray(t)?(i=t[0],!g.isArray(t[1])&&/^[\d-]/.test(t[1])||g.isFunction(t[1])||k.RegEx.isHex.test(t[1])?s=t[1]:g.isString(t[1])&&!k.RegEx.isHex.test(t[1])&&w.Easings[t[1]]||g.isArray(t[1])?(o=n?t[1]:d(t[1],l.duration),s=t[2]):s=t[1]||t[2]):i=t,n||(o=o||l.easing),g.isFunction(i)&&(i=i.call(e,r,M)),g.isFunction(s)&&(s=s.call(e,r,M)),[i||0,o,s]},L=function(r,o){var s,d=k.Hooks.getRoot(r),f=!1,v=o[0],m=o[1],y=o[2];
	if(!(c&&c.isSVG||"tween"===d||k.Names.prefixCheck(d)[1]!==!1||k.Normalizations.registered[d]!==i))return void(w.debug&&console.log("Skipping ["+d+"] due to a lack of browser support."));(l.display!==i&&null!==l.display&&"none"!==l.display||l.visibility!==i&&"hidden"!==l.visibility)&&/opacity|filter/.test(r)&&!y&&0!==v&&(y=0),l._cacheValues&&p&&p[r]?(y===i&&(y=p[r].endValue+p[r].unitType),f=c.rootPropertyValueCache[d]):k.Hooks.registered[r]?y===i?(f=k.getPropertyValue(e,d),y=k.getPropertyValue(e,r,f)):f=k.Hooks.templates[d][1]:y===i&&(y=k.getPropertyValue(e,r));var x,b,_,S=!1,C=function(e,t){var n,i;return i=(t||"0").toString().toLowerCase().replace(/[%A-z]+$/,function(e){return n=e,""}),n||(n=k.Values.getUnitType(e)),[i,n]};if(y!==v&&g.isString(y)&&g.isString(v)){s="";var O=0,M=0,T=[],P=[],E=0,j=0,$=0;for(y=k.Hooks.fixColors(y),v=k.Hooks.fixColors(v);O<y.length&&M<v.length;){var L=y[O],A=v[M];if(/[\d\.]/.test(L)&&/[\d\.]/.test(A)){for(var N=L,F=A,V=".",B=".";++O<y.length;){if(L=y[O],L===V)V="..";else if(!/\d/.test(L))break;N+=L}for(;++M<v.length;){if(A=v[M],A===B)B="..";else if(!/\d/.test(A))break;F+=A}var z=k.Hooks.getUnit(y,O),R=k.Hooks.getUnit(v,M);if(O+=z.length,M+=R.length,z===R)N===F?s+=N+z:(s+="{"+T.length+(j?"!":"")+"}"+z,T.push(parseFloat(N)),P.push(parseFloat(F)));else{var I=parseFloat(N),W=parseFloat(F);s+=(E<5?"calc":"")+"("+(I?"{"+T.length+(j?"!":"")+"}":"0")+z+" + "+(W?"{"+(T.length+1)+(j?"!":"")+"}":"0")+R+")",I&&(T.push(parseFloat(N)),T.push(parseFloat(0))),W&&(P.push(parseFloat(0)),P.push(parseFloat(F)))}}else{if(L!==A){E=0;break}s+=L,O++,M++,0===E&&"c"===L||1===E&&"a"===L||2===E&&"l"===L||3===E&&"c"===L||E>=4&&"("===L?E++:(E&&E<5||E>=4&&")"===L&&--E<5)&&(E=0),0===j&&"r"===L||1===j&&"g"===L||2===j&&"b"===L||3===j&&"a"===L||j>=3&&"("===L?(3===j&&"a"===L&&($=1),j++):$&&","===L?++$>3&&(j=$=0):($&&j<($?5:4)||j>=($?4:3)&&")"===L&&--j<($?5:4))&&(j=$=0)}}O===y.length&&M===v.length||(w.debug&&console.error('Trying to pattern match mis-matched strings ["'+v+'", "'+y+'"]'),s=i),s&&(T.length?(w.debug&&console.log('Pattern found "'+s+'" -> ',T,P,"["+y+","+v+"]"),y=T,v=P,b=_=""):s=i)}s||(x=C(r,y),y=x[0],_=x[1],x=C(r,v),v=x[0].replace(/^([+-\/*])=/,function(e,t){return S=t,""}),b=x[1],y=parseFloat(y)||0,v=parseFloat(v)||0,"%"===b&&(/^(fontSize|lineHeight)$/.test(r)?(v/=100,b="em"):/^scale/.test(r)?(v/=100,b=""):/(Red|Green|Blue)$/i.test(r)&&(v=v/100*255,b="")));var H=function(){var i={myParent:e.parentNode||n.body,position:k.getPropertyValue(e,"position"),fontSize:k.getPropertyValue(e,"fontSize")},r=i.position===D.lastPosition&&i.myParent===D.lastParent,o=i.fontSize===D.lastFontSize;D.lastParent=i.myParent,D.lastPosition=i.position,D.lastFontSize=i.fontSize;var s=100,a={};if(o&&r)a.emToPx=D.lastEmToPx,a.percentToPxWidth=D.lastPercentToPxWidth,a.percentToPxHeight=D.lastPercentToPxHeight;else{var l=c&&c.isSVG?n.createElementNS("http://www.w3.org/2000/svg","rect"):n.createElement("div");w.init(l),i.myParent.appendChild(l),h.each(["overflow","overflowX","overflowY"],function(e,t){w.CSS.setPropertyValue(l,t,"hidden")}),w.CSS.setPropertyValue(l,"position",i.position),w.CSS.setPropertyValue(l,"fontSize",i.fontSize),w.CSS.setPropertyValue(l,"boxSizing","content-box"),h.each(["minWidth","maxWidth","width","minHeight","maxHeight","height"],function(e,t){w.CSS.setPropertyValue(l,t,s+"%")}),w.CSS.setPropertyValue(l,"paddingLeft",s+"em"),a.percentToPxWidth=D.lastPercentToPxWidth=(parseFloat(k.getPropertyValue(l,"width",null,!0))||1)/s,a.percentToPxHeight=D.lastPercentToPxHeight=(parseFloat(k.getPropertyValue(l,"height",null,!0))||1)/s,a.emToPx=D.lastEmToPx=(parseFloat(k.getPropertyValue(l,"paddingLeft"))||1)/s,i.myParent.removeChild(l)}return null===D.remToPx&&(D.remToPx=parseFloat(k.getPropertyValue(n.body,"fontSize"))||16),null===D.vwToPx&&(D.vwToPx=parseFloat(t.innerWidth)/100,D.vhToPx=parseFloat(t.innerHeight)/100),a.remToPx=D.remToPx,a.vwToPx=D.vwToPx,a.vhToPx=D.vhToPx,w.debug>=1&&console.log("Unit ratios: "+JSON.stringify(a),e),a};if(/[\/*]/.test(S))b=_;else if(_!==b&&0!==y)if(0===v)b=_;else{a=a||H();var q=/margin|padding|left|right|width|text|word|letter/i.test(r)||/X$/.test(r)||"x"===r?"x":"y";switch(_){case"%":y*="x"===q?a.percentToPxWidth:a.percentToPxHeight;break;case"px":break;default:y*=a[_+"ToPx"]}switch(b){case"%":y*=1/("x"===q?a.percentToPxWidth:a.percentToPxHeight);break;case"px":break;default:y*=1/a[b+"ToPx"]}}switch(S){case"+":v=y+v;break;case"-":v=y-v;break;case"*":v*=y;break;case"/":v=y/v}u[r]={rootPropertyValue:f,startValue:y,currentValue:y,endValue:v,unitType:b,easing:m},s&&(u[r].pattern=s),w.debug&&console.log("tweensContainer ("+r+"): "+JSON.stringify(u[r]),e)};for(var A in x)if(x.hasOwnProperty(A)){var N=k.Names.camelCase(A),F=$(x[A]);if(k.Lists.colors.indexOf(N)>=0){var B=F[0],z=F[1],R=F[2];if(k.RegEx.isHex.test(B)){for(var I=["Red","Green","Blue"],W=k.Values.hexToRgb(B),H=R?k.Values.hexToRgb(R):i,q=0;q<I.length;q++){var K=[W[q]];z&&K.push(z),H!==i&&K.push(H[q]),L(N+I[q],K)}continue}}L(N,F)}u.element=e}u.element&&(k.Values.addClass(e,"velocity-animating"),V.push(u),c=s(e),c&&(""===l.queue&&(c.tweensContainer=u,c.opts=l),c.isAnimating=!0),T===M-1?(w.State.calls.push([V,y,l,null,O.resolver,null,0]),w.State.isTicking===!1&&(w.State.isTicking=!0,f())):T++)}var a,l=h.extend({},w.defaults,_),u={};switch(s(e)===i&&w.init(e),parseFloat(l.delay)&&l.queue!==!1&&h.queue(e,l.queue,function(t){w.velocityQueueEntryFlag=!0;var n=w.State.delayedElements.count++;w.State.delayedElements[n]=e;var i=function(e){return function(){w.State.delayedElements[e]=!1,t()}}(n);s(e).delayBegin=(new Date).getTime(),s(e).delay=parseFloat(l.delay),s(e).delayTimer={setTimeout:setTimeout(t,parseFloat(l.delay)),next:i}}),l.duration.toString().toLowerCase()){case"fast":l.duration=200;break;case"normal":l.duration=b;break;case"slow":l.duration=600;break;default:l.duration=parseFloat(l.duration)||1}if(w.mock!==!1&&(w.mock===!0?l.duration=l.delay=1:(l.duration*=parseFloat(w.mock)||1,l.delay*=parseFloat(w.mock)||1)),l.easing=d(l.easing,l.duration),l.begin&&!g.isFunction(l.begin)&&(l.begin=null),l.progress&&!g.isFunction(l.progress)&&(l.progress=null),l.complete&&!g.isFunction(l.complete)&&(l.complete=null),l.display!==i&&null!==l.display&&(l.display=l.display.toString().toLowerCase(),"auto"===l.display&&(l.display=w.CSS.Values.getDisplayType(e))),l.visibility!==i&&null!==l.visibility&&(l.visibility=l.visibility.toString().toLowerCase()),l.mobileHA=l.mobileHA&&w.State.isMobile&&!w.State.isGingerbread,l.queue===!1)if(l.delay){var c=w.State.delayedElements.count++;w.State.delayedElements[c]=e;var p=function(e){return function(){w.State.delayedElements[e]=!1,o()}}(c);s(e).delayBegin=(new Date).getTime(),s(e).delay=parseFloat(l.delay),s(e).delayTimer={setTimeout:setTimeout(o,parseFloat(l.delay)),next:p}}else o();else h.queue(e,l.queue,function(e,t){return t===!0?(O.promise&&O.resolver(y),!0):(w.velocityQueueEntryFlag=!0,void o(e))});""!==l.queue&&"fx"!==l.queue||"inprogress"===h.queue(e)[0]||h.dequeue(e)}var u,c,v,m,y,x,_,S=arguments[0]&&(arguments[0].p||h.isPlainObject(arguments[0].properties)&&!arguments[0].properties.names||g.isString(arguments[0].properties));g.isWrapped(this)?(c=!1,m=0,y=this,v=this):(c=!0,m=1,y=S?arguments[0].elements||arguments[0].e:arguments[0]);var O={promise:null,resolver:null,rejecter:null};if(c&&w.Promise&&(O.promise=new w.Promise(function(e,t){O.resolver=e,O.rejecter=t})),S?(x=arguments[0].properties||arguments[0].p,_=arguments[0].options||arguments[0].o):(x=arguments[m],_=arguments[m+1]),y=o(y),!y)return void(O.promise&&(x&&_&&_.promiseRejectEmpty===!1?O.resolver():O.rejecter()));var M=y.length,T=0;if(!/^(stop|finish|finishAll|pause|resume)$/i.test(x)&&!h.isPlainObject(_)){var P=m+1;_={};for(var E=P;E<arguments.length;E++)g.isArray(arguments[E])||!/^(fast|normal|slow)$/i.test(arguments[E])&&!/^\d/.test(arguments[E])?g.isString(arguments[E])||g.isArray(arguments[E])?_.easing=arguments[E]:g.isFunction(arguments[E])&&(_.complete=arguments[E]):_.duration=arguments[E]}var j;switch(x){case"scroll":j="scroll";break;case"reverse":j="reverse";break;case"pause":var $=(new Date).getTime();return h.each(y,function(e,t){a(t,$)}),h.each(w.State.calls,function(e,t){var n=!1;t&&h.each(t[1],function(e,r){var o=_===i?"":_;return o!==!0&&t[2].queue!==o&&(_!==i||t[2].queue!==!1)||(h.each(y,function(e,i){if(i===r)return t[5]={resume:!1},n=!0,!1}),!n&&void 0)})}),e();case"resume":return h.each(y,function(e,t){l(t,$)}),h.each(w.State.calls,function(e,t){var n=!1;t&&h.each(t[1],function(e,r){var o=_===i?"":_;return o!==!0&&t[2].queue!==o&&(_!==i||t[2].queue!==!1)||(!t[5]||(h.each(y,function(e,i){if(i===r)return t[5].resume=!0,n=!0,!1}),!n&&void 0))})}),e();case"finish":case"finishAll":case"stop":h.each(y,function(e,t){s(t)&&s(t).delayTimer&&(clearTimeout(s(t).delayTimer.setTimeout),s(t).delayTimer.next&&s(t).delayTimer.next(),delete s(t).delayTimer),"finishAll"!==x||_!==!0&&!g.isString(_)||(h.each(h.queue(t,g.isString(_)?_:""),function(e,t){g.isFunction(t)&&t()}),h.queue(t,g.isString(_)?_:"",[]))});var L=[];return h.each(w.State.calls,function(e,t){t&&h.each(t[1],function(n,r){var o=_===i?"":_;return o!==!0&&t[2].queue!==o&&(_!==i||t[2].queue!==!1)||void h.each(y,function(n,i){if(i===r)if((_===!0||g.isString(_))&&(h.each(h.queue(i,g.isString(_)?_:""),function(e,t){g.isFunction(t)&&t(null,!0)}),h.queue(i,g.isString(_)?_:"",[])),"stop"===x){var a=s(i);a&&a.tweensContainer&&o!==!1&&h.each(a.tweensContainer,function(e,t){t.endValue=t.currentValue}),L.push(e)}else"finish"!==x&&"finishAll"!==x||(t[2].duration=1)})})}),"stop"===x&&(h.each(L,function(e,t){p(t,!0)}),O.promise&&O.resolver(y)),e();default:if(!h.isPlainObject(x)||g.isEmptyObject(x)){if(g.isString(x)&&w.Redirects[x]){u=h.extend({},_);var A=u.duration,N=u.delay||0;return u.backwards===!0&&(y=h.extend(!0,[],y).reverse()),h.each(y,function(e,t){parseFloat(u.stagger)?u.delay=N+parseFloat(u.stagger)*e:g.isFunction(u.stagger)&&(u.delay=N+u.stagger.call(t,e,M)),u.drag&&(u.duration=parseFloat(A)||(/^(callout|transition)/.test(x)?1e3:b),u.duration=Math.max(u.duration*(u.backwards?1-e/M:(e+1)/M),.75*u.duration,200)),w.Redirects[x].call(t,t,u||{},e,M,y,O.promise?O:i)}),e()}var F="Velocity: First argument ("+x+") was not a property map, a known action, or a registered redirect. Aborting.";return O.promise?O.rejecter(new Error(F)):console.log(F),e()}j="start"}var D={lastParent:null,lastPosition:null,lastFontSize:null,lastPercentToPxWidth:null,lastPercentToPxHeight:null,lastEmToPx:null,remToPx:null,vwToPx:null,vhToPx:null},V=[];h.each(y,function(e,t){g.isNode(t)&&r(t,e)}),u=h.extend({},w.defaults,_),u.loop=parseInt(u.loop,10);var B=2*u.loop-1;if(u.loop)for(var z=0;z<B;z++){var R={delay:u.delay,progress:u.progress};z===B-1&&(R.display=u.display,R.visibility=u.visibility,R.complete=u.complete),C(y,"reverse",R)}return e()};w=h.extend(C,w),w.animate=C;var O=t.requestAnimationFrame||m;if(!w.State.isMobile&&n.hidden!==i){var M=function(){n.hidden?(O=function(e){return setTimeout(function(){e(!0)},16)},f()):O=t.requestAnimationFrame||m};M(),n.addEventListener("visibilitychange",M)}return e.Velocity=w,e!==t&&(e.fn.velocity=C,e.fn.velocity.defaults=w.defaults),h.each(["Down","Up"],function(e,t){w.Redirects["slide"+t]=function(e,n,r,o,s,a){var l=h.extend({},n),u=l.begin,c=l.complete,d={},f={height:"",marginTop:"",marginBottom:"",paddingTop:"",paddingBottom:""};l.display===i&&(l.display="Down"===t?"inline"===w.CSS.Values.getDisplayType(e)?"inline-block":"block":"none"),l.begin=function(){0===r&&u&&u.call(s,s);for(var n in f)if(f.hasOwnProperty(n)){d[n]=e.style[n];var i=k.getPropertyValue(e,n);f[n]="Down"===t?[i,0]:[0,i]}d.overflow=e.style.overflow,e.style.overflow="hidden"},l.complete=function(){for(var t in d)d.hasOwnProperty(t)&&(e.style[t]=d[t]);r===o-1&&(c&&c.call(s,s),a&&a.resolver(s))},w(e,f,l)}}),h.each(["In","Out"],function(e,t){w.Redirects["fade"+t]=function(e,n,r,o,s,a){var l=h.extend({},n),u=l.complete,c={opacity:"In"===t?1:0};0!==r&&(l.begin=null),r!==o-1?l.complete=null:l.complete=function(){u&&u.call(s,s),a&&a.resolver(s)},l.display===i&&(l.display="In"===t?"auto":"none"),w(this,c,l)}}),w}(window.jQuery||window.Zepto||window,window,window?window.document:void 0)})},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){this.rules=null,this._messages=c.messages,this.define(e)}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=n(5),l=n(244),u=i(l),c=n(233),d=n(8);r.prototype={messages:function(e){return e&&(this._messages=(0,a.deepMerge)((0,c.newMessages)(),e)),this._messages},define:function(e){if(!e)throw new Error("Cannot configure a schema with no rules");if("object"!==("undefined"==typeof e?"undefined":s(e))||Array.isArray(e))throw new Error("Rules must be an object");this.rules={};var t=void 0,n=void 0;for(t in e)e.hasOwnProperty(t)&&(n=e[t],this.rules[t]=Array.isArray(n)?n:[n])},validate:function(e){function t(e){function t(e){Array.isArray(e)?r=r.concat.apply(r,e):r.push(e)}var n=void 0,i=void 0,r=[],o={};for(n=0;n<e.length;n++)t(e[n]);if(r.length)for(n=0;n<r.length;n++)i=r[n].field,o[i]=o[i]||[],o[i].push(r[n]);else r=null,o=null;p(r,o)}var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},l=arguments[2],u=e,f=i,p=l;if("function"==typeof f&&(p=f,f={}),!this.rules||0===Object.keys(this.rules).length)return void(p&&p());if(f.messages){var h=this.messages();h===c.messages&&(h=(0,c.newMessages)()),(0,a.deepMerge)(h,f.messages),f.messages=h}else f.messages=this.messages();f.error=d.error;var v=void 0,m=void 0,y={},g=f.keys||Object.keys(this.rules);g.forEach(function(t){v=n.rules[t],m=u[t],v.forEach(function(i){var r=i;"function"==typeof r.transform&&(u===e&&(u=o({},u)),m=u[t]=r.transform(m)),r="function"==typeof r?{validator:r}:o({},r),r.validator=n.getValidationMethod(r),r.field=t,r.fullField=r.fullField||t,r.type=n.getType(r),r.validator&&(y[t]=y[t]||[],y[t].push({rule:r,value:m,source:u,field:t}))})});var x={};(0,a.asyncMap)(y,f,function(e,t){function n(e,t){return o({},t,{fullField:l.fullField+"."+e})}function i(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],s=i;if(Array.isArray(s)||(s=[s]),s.length&&(0,a.warning)("async-validator:",s),s.length&&l.message&&(s=[].concat(l.message)),s=s.map((0,a.complementError)(l)),(f.first||f.fieldFirst)&&s.length)return x[l.field]=1,t(s);if(u){if(l.required&&!e.value)return s=l.message?[].concat(l.message).map((0,a.complementError)(l)):[f.error(l,(0,a.format)(f.messages.required,l.field))],t(s);var c={};if(l.defaultField)for(var d in e.value)e.value.hasOwnProperty(d)&&(c[d]=l.defaultField);c=o({},c,e.rule.fields);for(var p in c)if(c.hasOwnProperty(p)){var h=Array.isArray(c[p])?c[p]:[c[p]];c[p]=h.map(n.bind(null,p))}var v=new r(c);v.messages(f.messages),e.rule.options&&(e.rule.options.messages=f.messages,e.rule.options.error=f.error),v.validate(e.value,e.rule.options||f,function(e){t(e&&e.length?s.concat(e):e)})}else t(s)}var l=e.rule,u=!("object"!==l.type&&"array"!==l.type||"object"!==s(l.fields)&&"object"!==s(l.defaultField));u=u&&(l.required||!l.required&&e.value),l.field=e.field,l.validator(l,e.value,i,e.source,f)},function(e){t(e)})},getType:function(e){if(void 0===e.type&&e.pattern instanceof RegExp&&(e.type="pattern"),"function"!=typeof e.validator&&e.type&&!u.default.hasOwnProperty(e.type))throw new Error((0,a.format)("Unknown rule type %s",e.type));return e.type||"string"},getValidationMethod:function(e){if("function"==typeof e.validator)return e.validator;var t=Object.keys(e),n=t.indexOf("message");return n!==-1&&t.splice(n,1),1===t.length&&"required"===t[0]?u.default.required:u.default[this.getType(e)]||!1}},r.register=function(e,t){if("function"!=typeof t)throw new Error("Cannot register a validator by type, validator is not a function");u.default[e]=t},r.messages=c.messages,t.default=r,e.exports=t.default},function(e,t){"use strict";function n(){return{default:"Validation error on field %s",required:"%s is required",enum:"%s must be one of %s",whitespace:"%s cannot be empty",date:{format:"%s date %s is invalid for format %s",parse:"%s date could not be parsed, %s is invalid ",invalid:"%s date %s is invalid"},types:{string:"%s is not a %s",method:"%s is not a %s (function)",array:"%s is not an %s",object:"%s is not an %s",number:"%s is not a %s",date:"%s is not a %s",boolean:"%s is not a %s",integer:"%s is not an %s",float:"%s is not a %s",regexp:"%s is not a valid %s",email:"%s is not a valid %s",url:"%s is not a valid %s",hex:"%s is not a valid %s"},string:{len:"%s must be exactly %s characters",min:"%s must be at least %s characters",max:"%s cannot be longer than %s characters",range:"%s must be between %s and %s characters"},number:{len:"%s must equal %s",min:"%s cannot be less than %s",max:"%s cannot be greater than %s",range:"%s must be between %s and %s"},array:{len:"%s must be exactly %s in length",min:"%s cannot be less than %s in length",max:"%s cannot be greater than %s in length",range:"%s must be between %s and %s in length"},pattern:{mismatch:"%s value %s does not match pattern %s"},clone:function(){var e=JSON.parse(JSON.stringify(this));return e.clone=this.clone,e}}}Object.defineProperty(t,"__esModule",{value:!0}),t.newMessages=n;t.messages=n()},function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function r(e,t,n,i,r){e[a]=Array.isArray(e[a])?e[a]:[],e[a].indexOf(t)===-1&&i.push(s.format(r.messages[a],e.fullField,e[a].join(", ")))}Object.defineProperty(t,"__esModule",{value:!0});var o=n(5),s=i(o),a="enum";t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function r(e,t,n,i,r){e.pattern instanceof RegExp&&(e.pattern.test(t)||i.push(s.format(r.messages.pattern.mismatch,e.fullField,t,e.pattern)))}Object.defineProperty(t,"__esModule",{value:!0});var o=n(5),s=i(o);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function r(e,t,n,i,r){var o="number"==typeof e.len,a="number"==typeof e.min,l="number"==typeof e.max,u=t,c=null,d="number"==typeof t,f="string"==typeof t,p=Array.isArray(t);return d?c="number":f?c="string":p&&(c="array"),!!c&&((f||p)&&(u=t.length),void(o?u!==e.len&&i.push(s.format(r.messages[c].len,e.fullField,e.len)):a&&!l&&u<e.min?i.push(s.format(r.messages[c].min,e.fullField,e.min)):l&&!a&&u>e.max?i.push(s.format(r.messages[c].max,e.fullField,e.max)):a&&l&&(u<e.min||u>e.max)&&i.push(s.format(r.messages[c].range,e.fullField,e.min,e.max))))}Object.defineProperty(t,"__esModule",{value:!0});var o=n(5),s=i(o);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function o(e,t,n,i,r){if(e.required&&void 0===t)return void(0,c.default)(e,t,n,i,r);var o=["integer","float","array","regexp","object","method","email","number","date","url","hex"],a=e.type;o.indexOf(a)>-1?f[a](t)||i.push(l.format(r.messages.types[a],e.fullField,e.type)):a&&("undefined"==typeof t?"undefined":s(t))!==e.type&&i.push(l.format(r.messages.types[a],e.fullField,e.type))}Object.defineProperty(t,"__esModule",{value:!0});var s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=n(5),l=r(a),u=n(87),c=i(u),d={email:/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/,url:new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$","i"),hex:/^#?([a-f0-9]{6}|[a-f0-9]{3})$/i},f={integer:function(e){return f.number(e)&&parseInt(e,10)===e},float:function(e){return f.number(e)&&!f.integer(e)},array:function(e){return Array.isArray(e)},regexp:function(e){if(e instanceof RegExp)return!0;try{return!!new RegExp(e)}catch(e){return!1}},date:function(e){return"function"==typeof e.getTime&&"function"==typeof e.getMonth&&"function"==typeof e.getYear},number:function(e){return!isNaN(e)&&"number"==typeof e},object:function(e){return"object"===("undefined"==typeof e?"undefined":s(e))&&!f.array(e)},method:function(e){return"function"==typeof e},email:function(e){return"string"==typeof e&&!!e.match(d.email)},url:function(e){return"string"==typeof e&&!!e.match(d.url)},hex:function(e){return"string"==typeof e&&!!e.match(d.hex)}};t.default=o,e.exports=t.default},function(e,t,n){"use strict";function i(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function r(e,t,n,i,r){(/^\s+$/.test(t)||""===t)&&i.push(s.format(r.messages.whitespace,e.fullField))}Object.defineProperty(t,"__esModule",{value:!0});var o=n(5),s=i(o);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t,"array")&&!e.required)return n();s.default.required(e,t,i,o,r,"array"),(0,a.isEmptyValue)(t,"array")||(s.default.type(e,t,i,o,r),s.default.range(e,t,i,o,r))}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var s=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,o.isEmptyValue)(t)&&!e.required)return n();a.default.required(e,t,i,s,r),void 0!==t&&a.default.type(e,t,i,s,r)}n(s)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(5),s=n(8),a=i(s);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),(0,a.isEmptyValue)(t)||(s.default.type(e,t,i,o,r),t&&s.default.range(e,t.getTime(),i,o,r))}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],u=e.required||!e.required&&i.hasOwnProperty(e.field);if(u){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),t&&s.default[l](e,t,i,o,r)}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5),l="enum";t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),void 0!==t&&(s.default.type(e,t,i,o,r),s.default.range(e,t,i,o,r))}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";e.exports={string:n(252),method:n(246),number:n(247),boolean:n(240),regexp:n(250),integer:n(245),float:n(243),array:n(239),object:n(248),enum:n(242),pattern:n(249),email:n(55),url:n(55),date:n(241),hex:n(55),required:n(251)}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),void 0!==t&&(s.default.type(e,t,i,o,r),s.default.range(e,t,i,o,r))}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),void 0!==t&&s.default.type(e,t,i,o,r)}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),void 0!==t&&(s.default.type(e,t,i,o,r),s.default.range(e,t,i,o,r))}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),void 0!==t&&s.default.type(e,t,i,o,r)}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t,"string")&&!e.required)return n();s.default.required(e,t,i,o,r),(0,a.isEmptyValue)(t,"string")||s.default.pattern(e,t,i,o,r)}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t)&&!e.required)return n();s.default.required(e,t,i,o,r),(0,a.isEmptyValue)(t)||s.default.type(e,t,i,o,r)}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var s=[],l=Array.isArray(t)?"array":"undefined"==typeof t?"undefined":o(t);a.default.required(e,t,i,s,r,l),n(s)}Object.defineProperty(t,"__esModule",{value:!0});var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s=n(8),a=i(s);t.default=r,e.exports=t.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n,i,r){var o=[],l=e.required||!e.required&&i.hasOwnProperty(e.field);if(l){if((0,a.isEmptyValue)(t,"string")&&!e.required)return n();s.default.required(e,t,i,o,r,"string"),(0,a.isEmptyValue)(t,"string")||(s.default.type(e,t,i,o,r),s.default.range(e,t,i,o,r),s.default.pattern(e,t,i,o,r),e.whitespace===!0&&s.default.whitespace(e,t,i,o,r))}n(o)}Object.defineProperty(t,"__esModule",{value:!0});var o=n(8),s=i(o),a=n(5);t.default=r,e.exports=t.default},,,function(e,t,n){var i,r;/*!
		  Copyright (c) 2016 Jed Watson.
		  Licensed under the MIT License (MIT), see
		  http://jedwatson.github.io/classnames
		*/
	!function(){"use strict";function n(){for(var e=[],t=0;t<arguments.length;t++){var i=arguments[t];if(i){var r=typeof i;if("string"===r||"number"===r)e.push(i);else if(Array.isArray(i))e.push(n.apply(null,i));else if("object"===r)for(var s in i)o.call(i,s)&&i[s]&&e.push(s)}}return e.join(" ")}var o={}.hasOwnProperty;"undefined"!=typeof e&&e.exports?e.exports=n:(i=[],r=function(){return n}.apply(t,i),!(void 0!==r&&(e.exports=r)))}()},function(e,t,n){n(80),e.exports=n(7).Array.entries},function(e,t,n){n(340),e.exports=n(7).Array.findIndex},function(e,t,n){n(341),e.exports=n(7).Array.find},function(e,t,n){n(346),e.exports=n(7).Array.includes},function(e,t,n){n(80),e.exports=n(7).Array.keys},function(e,t,n){n(80),e.exports=n(7).Array.values},function(e,t,n){n(347),e.exports=n(7).String.at},function(e,t,n){n(342),e.exports=n(7).String.endsWith},function(e,t,n){n(343),e.exports=n(7).String.includes},function(e,t,n){n(348),e.exports=n(7).String.padEnd},function(e,t,n){n(349),e.exports=n(7).String.padStart},function(e,t,n){n(344),e.exports=n(7).String.repeat},function(e,t,n){n(345),e.exports=n(7).String.startsWith},function(e,t,n){n(351),e.exports=n(7).String.trimRight},function(e,t,n){n(350),e.exports=n(7).String.trimLeft},function(e,t,n){n(39),n(309),e.exports=n(6).Array.from},function(e,t,n){n(48),n(39),e.exports=n(307)},function(e,t,n){n(48),n(39),e.exports=n(308)},function(e,t,n){var i=n(6),r=i.JSON||(i.JSON={stringify:JSON.stringify});e.exports=function(e){return r.stringify.apply(r,arguments)}},function(e,t,n){n(311),e.exports=n(6).Object.assign},function(e,t,n){n(312);var i=n(6).Object;e.exports=function(e,t,n){return i.defineProperty(e,t,n)}},function(e,t,n){n(316),e.exports=n(6).Object.entries},function(e,t,n){n(313),e.exports=n(6).Object.keys},function(e,t,n){n(317),e.exports=n(6).Object.values},function(e,t,n){n(102),n(39),n(48),n(314),e.exports=n(6).Promise},function(e,t,n){n(315),n(102),n(318),n(319),e.exports=n(6).Symbol},function(e,t,n){n(39),n(48),e.exports=n(69).f("iterator")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t,n,i){if(!(e instanceof t)||void 0!==i&&i in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var i=n(19),r=n(66),o=n(306);e.exports=function(e){return function(t,n,s){var a,l=i(t),u=r(l.length),c=o(s,u);if(e&&n!=n){for(;u>c;)if(a=l[c++],a!=a)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}}},function(e,t,n){"use strict";var i=n(16),r=n(38);e.exports=function(e,t,n){t in e?i.f(e,t,r(0,n)):e[t]=n}},function(e,t,n){var i=n(25),r=n(62),o=n(37);e.exports=function(e){var t=i(e),n=r.f;if(n)for(var s,a=n(e),l=o.f,u=0;a.length>u;)l.call(e,s=a[u++])&&t.push(s);return t}},function(e,t,n){var i=n(35),r=n(93),o=n(92),s=n(17),a=n(66),l=n(70),u={},c={},t=e.exports=function(e,t,n,d,f){var p,h,v,m,y=f?function(){return e}:l(e),g=i(n,d,t?2:1),x=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(o(y)){for(p=a(e.length);p>x;x++)if(m=t?g(s(h=e[x])[0],h[1]):g(e[x]),m===u||m===c)return m}else for(v=y.call(e);!(h=v.next()).done;)if(m=r(v,g,h.value,t),m===u||m===c)return m};t.BREAK=u,t.RETURN=c},function(e,t){e.exports=function(e,t,n){var i=void 0===n;switch(t.length){case 0:return i?e():e.call(n);case 1:return i?e(t[0]):e.call(n,t[0]);case 2:return i?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return i?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return i?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var i=n(34);e.exports=Array.isArray||function(e){return"Array"==i(e)}},function(e,t,n){"use strict";var i=n(96),r=n(38),o=n(45),s={};n(24)(s,n(9)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=i(s,{next:r(1,n)}),o(e,t+" Iterator")}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){var i=n(25),r=n(19);e.exports=function(e,t){for(var n,o=r(e),s=i(o),a=s.length,l=0;a>l;)if(o[n=s[l++]]===t)return n}},function(e,t,n){var i=n(47)("meta"),r=n(36),o=n(23),s=n(16).f,a=0,l=Object.isExtensible||function(){return!0},u=!n(28)(function(){return l(Object.preventExtensions({}))}),c=function(e){s(e,i,{value:{i:"O"+ ++a,w:{}}})},d=function(e,t){if(!r(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,i)){if(!l(e))return"F";if(!t)return"E";c(e)}return e[i].i},f=function(e,t){if(!o(e,i)){if(!l(e))return!0;if(!t)return!1;c(e)}return e[i].w},p=function(e){return u&&h.NEED&&l(e)&&!o(e,i)&&c(e),e},h=e.exports={KEY:i,NEED:!1,fastKey:d,getWeak:f,onFreeze:p}},function(e,t,n){var i=n(11),r=n(101).set,o=i.MutationObserver||i.WebKitMutationObserver,s=i.process,a=i.Promise,l="process"==n(34)(s);e.exports=function(){var e,t,n,u=function(){var i,r;for(l&&(i=s.domain)&&i.exit();e;){r=e.fn,e=e.next;try{r()}catch(i){throw e?n():t=void 0,i}}t=void 0,i&&i.enter()};if(l)n=function(){s.nextTick(u)};else if(o){var c=!0,d=document.createTextNode("");new o(u).observe(d,{characterData:!0}),n=function(){d.data=c=!c}}else if(a&&a.resolve){var f=a.resolve();n=function(){f.then(u)}}else n=function(){r.call(i,u)};return function(i){var r={fn:i,next:void 0};t&&(t.next=r),e||(e=r,n()),t=r}}},function(e,t,n){"use strict";var i=n(25),r=n(62),o=n(37),s=n(46),a=n(91),l=Object.assign;e.exports=!l||n(28)(function(){var e={},t={},n=Symbol(),i="abcdefghijklmnopqrst";return e[n]=7,i.split("").forEach(function(e){t[e]=e}),7!=l({},e)[n]||Object.keys(l({},t)).join("")!=i})?function(e,t){for(var n=s(e),l=arguments.length,u=1,c=r.f,d=o.f;l>u;)for(var f,p=a(arguments[u++]),h=c?i(p).concat(c(p)):i(p),v=h.length,m=0;v>m;)d.call(p,f=h[m++])&&(n[f]=p[f]);return n}:l},function(e,t,n){var i=n(16),r=n(17),o=n(25);e.exports=n(18)?Object.defineProperties:function(e,t){r(e);for(var n,s=o(t),a=s.length,l=0;a>l;)i.f(e,n=s[l++],t[n]);return e}},function(e,t,n){var i=n(37),r=n(38),o=n(19),s=n(67),a=n(23),l=n(90),u=Object.getOwnPropertyDescriptor;t.f=n(18)?u:function(e,t){if(e=o(e),t=s(t,!0),l)try{return u(e,t)}catch(e){}if(a(e,t))return r(!i.f.call(e,t),e[t])}},function(e,t,n){var i=n(19),r=n(97).f,o={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],a=function(e){try{return r(e)}catch(e){return s.slice()}};e.exports.f=function(e){return s&&"[object Window]"==o.call(e)?a(e):r(i(e))}},function(e,t,n){var i=n(23),r=n(46),o=n(63)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=r(e),i(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,n){var i=n(15),r=n(6),o=n(28);e.exports=function(e,t){var n=(r.Object||{})[e]||Object[e],s={};s[e]=t(n),i(i.S+i.F*o(function(){n(1)}),"Object",s)}},function(e,t,n){var i=n(24);e.exports=function(e,t,n){for(var r in t)n&&e[r]?e[r]=t[r]:i(e,r,t[r]);return e}},function(e,t,n){"use strict";var i=n(11),r=n(6),o=n(16),s=n(18),a=n(9)("species");e.exports=function(e){var t="function"==typeof r[e]?r[e]:i[e];s&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,n){var i=n(17),r=n(57),o=n(9)("species");e.exports=function(e,t){var n,s=i(e).constructor;return void 0===s||void 0==(n=i(s)[o])?t:r(n)}},function(e,t,n){var i=n(65),r=n(59);e.exports=function(e){return function(t,n){var o,s,a=String(r(t)),l=i(n),u=a.length;return l<0||l>=u?e?"":void 0:(o=a.charCodeAt(l),o<55296||o>56319||l+1===u||(s=a.charCodeAt(l+1))<56320||s>57343?e?a.charAt(l):o:e?a.slice(l,l+2):(o-55296<<10)+(s-56320)+65536)}}},function(e,t,n){var i=n(65),r=Math.max,o=Math.min;e.exports=function(e,t){return e=i(e),e<0?r(e+t,0):o(e,t)}},function(e,t,n){var i=n(17),r=n(70);e.exports=n(6).getIterator=function(e){var t=r(e);if("function"!=typeof t)throw TypeError(e+" is not iterable!");return i(t.call(e))}},function(e,t,n){var i=n(58),r=n(9)("iterator"),o=n(29);e.exports=n(6).isIterable=function(e){var t=Object(e);return void 0!==t[r]||"@@iterator"in t||o.hasOwnProperty(i(t))}},function(e,t,n){"use strict";var i=n(35),r=n(15),o=n(46),s=n(93),a=n(92),l=n(66),u=n(286),c=n(70);r(r.S+r.F*!n(95)(function(e){Array.from(e)}),"Array",{from:function(e){var t,n,r,d,f=o(e),p="function"==typeof this?this:Array,h=arguments.length,v=h>1?arguments[1]:void 0,m=void 0!==v,y=0,g=c(f);if(m&&(v=i(v,h>2?arguments[2]:void 0,2)),void 0==g||p==Array&&a(g))for(t=l(f.length),n=new p(t);t>y;y++)u(n,y,m?v(f[y],y):f[y]);else for(d=g.call(f),n=new p;!(r=d.next()).done;y++)u(n,y,m?s(d,v,[r.value,y],!0):r.value);return n.length=y,n}})},function(e,t,n){"use strict";var i=n(283),r=n(292),o=n(29),s=n(19);e.exports=n(94)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,r(1)):"keys"==t?r(0,n):"values"==t?r(0,e[n]):r(0,[n,e[n]])},"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(e,t,n){var i=n(15);i(i.S+i.F,"Object",{assign:n(296)})},function(e,t,n){var i=n(15);i(i.S+i.F*!n(18),"Object",{defineProperty:n(16).f})},function(e,t,n){var i=n(46),r=n(25);n(301)("keys",function(){return function(e){return r(i(e))}})},function(e,t,n){"use strict";var i,r,o,s=n(44),a=n(11),l=n(35),u=n(58),c=n(15),d=n(36),f=n(57),p=n(284),h=n(288),v=n(304),m=n(101).set,y=n(295)(),g="Promise",x=a.TypeError,b=a.process,_=a[g],b=a.process,w="process"==u(b),S=function(){},k=!!function(){try{var e=_.resolve(1),t=(e.constructor={})[n(9)("species")]=function(e){e(S,S)};return(w||"function"==typeof PromiseRejectionEvent)&&e.then(S)instanceof t}catch(e){}}(),C=function(e,t){return e===t||e===_&&t===o},O=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},M=function(e){return C(_,e)?new T(e):new r(e)},T=r=function(e){var t,n;this.promise=new e(function(e,i){if(void 0!==t||void 0!==n)throw x("Bad Promise constructor");t=e,n=i}),this.resolve=f(t),this.reject=f(n)},P=function(e){try{e()}catch(e){return{error:e}}},E=function(e,t){if(!e._n){e._n=!0;var n=e._c;y(function(){for(var i=e._v,r=1==e._s,o=0,s=function(t){var n,o,s=r?t.ok:t.fail,a=t.resolve,l=t.reject,u=t.domain;try{s?(r||(2==e._h&&L(e),e._h=1),s===!0?n=i:(u&&u.enter(),n=s(i),u&&u.exit()),n===t.promise?l(x("Promise-chain cycle")):(o=O(n))?o.call(n,a,l):a(n)):l(i)}catch(e){l(e)}};n.length>o;)s(n[o++]);e._c=[],e._n=!1,t&&!e._h&&j(e)})}},j=function(e){m.call(a,function(){var t,n,i,r=e._v;if($(e)&&(t=P(function(){w?b.emit("unhandledRejection",r,e):(n=a.onunhandledrejection)?n({promise:e,reason:r}):(i=a.console)&&i.error&&i.error("Unhandled promise rejection",r)}),e._h=w||$(e)?2:1),e._a=void 0,t)throw t.error})},$=function(e){if(1==e._h)return!1;for(var t,n=e._a||e._c,i=0;n.length>i;)if(t=n[i++],t.fail||!$(t.promise))return!1;return!0},L=function(e){m.call(a,function(){var t;w?b.emit("rejectionHandled",e):(t=a.onrejectionhandled)&&t({promise:e,reason:e._v})})},A=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),E(t,!0))},N=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw x("Promise can't be resolved itself");(t=O(e))?y(function(){var i={_w:n,_d:!1};try{t.call(e,l(N,i,1),l(A,i,1))}catch(e){A.call(i,e)}}):(n._v=e,n._s=1,E(n,!1))}catch(e){A.call({_w:n,_d:!1},e)}}};k||(_=function(e){p(this,_,g,"_h"),f(e),i.call(this);try{e(l(N,this,1),l(A,this,1))}catch(e){A.call(this,e)}},i=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},i.prototype=n(302)(_.prototype,{then:function(e,t){var n=M(v(this,_));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=w?b.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&E(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),T=function(){var e=new i;this.promise=e,this.resolve=l(N,e,1),this.reject=l(A,e,1)}),c(c.G+c.W+c.F*!k,{Promise:_}),n(45)(_,g),n(303)(g),o=n(6)[g],c(c.S+c.F*!k,g,{reject:function(e){var t=M(this),n=t.reject;return n(e),t.promise}}),c(c.S+c.F*(s||!k),g,{resolve:function(e){if(e instanceof _&&C(e.constructor,this))return e;var t=M(this),n=t.resolve;return n(e),t.promise}}),c(c.S+c.F*!(k&&n(95)(function(e){_.all(e).catch(S)})),g,{all:function(e){var t=this,n=M(t),i=n.resolve,r=n.reject,o=P(function(){var n=[],o=0,s=1;h(e,!1,function(e){var a=o++,l=!1;n.push(void 0),s++,t.resolve(e).then(function(e){l||(l=!0,n[a]=e,--s||i(n))},r)}),--s||i(n)});return o&&r(o.error),n.promise},race:function(e){var t=this,n=M(t),i=n.reject,r=P(function(){h(e,!1,function(e){t.resolve(e).then(n.resolve,i)})});return r&&i(r.error),n.promise}})},function(e,t,n){"use strict";var i=n(11),r=n(23),o=n(18),s=n(15),a=n(100),l=n(294).KEY,u=n(28),c=n(64),d=n(45),f=n(47),p=n(9),h=n(69),v=n(68),m=n(293),y=n(287),g=n(290),x=n(17),b=n(19),_=n(67),w=n(38),S=n(96),k=n(299),C=n(298),O=n(16),M=n(25),T=C.f,P=O.f,E=k.f,j=i.Symbol,$=i.JSON,L=$&&$.stringify,A="prototype",N=p("_hidden"),F=p("toPrimitive"),D={}.propertyIsEnumerable,V=c("symbol-registry"),B=c("symbols"),z=c("op-symbols"),R=Object[A],I="function"==typeof j,W=i.QObject,H=!W||!W[A]||!W[A].findChild,q=o&&u(function(){return 7!=S(P({},"a",{get:function(){return P(this,"a",{value:7}).a}})).a})?function(e,t,n){var i=T(R,t);i&&delete R[t],P(e,t,n),i&&e!==R&&P(R,t,i)}:P,K=function(e){var t=B[e]=S(j[A]);return t._k=e,t},U=I&&"symbol"==typeof j.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof j},Y=function(e,t,n){return e===R&&Y(z,t,n),x(e),t=_(t,!0),x(n),r(B,t)?(n.enumerable?(r(e,N)&&e[N][t]&&(e[N][t]=!1),n=S(n,{enumerable:w(0,!1)})):(r(e,N)||P(e,N,w(1,{})),e[N][t]=!0),q(e,t,n)):P(e,t,n)},G=function(e,t){x(e);for(var n,i=y(t=b(t)),r=0,o=i.length;o>r;)Y(e,n=i[r++],t[n]);return e},X=function(e,t){return void 0===t?S(e):G(S(e),t)},J=function(e){var t=D.call(this,e=_(e,!0));return!(this===R&&r(B,e)&&!r(z,e))&&(!(t||!r(this,e)||!r(B,e)||r(this,N)&&this[N][e])||t)},Q=function(e,t){if(e=b(e),t=_(t,!0),e!==R||!r(B,t)||r(z,t)){var n=T(e,t);return!n||!r(B,t)||r(e,N)&&e[N][t]||(n.enumerable=!0),n}},Z=function(e){for(var t,n=E(b(e)),i=[],o=0;n.length>o;)r(B,t=n[o++])||t==N||t==l||i.push(t);return i},ee=function(e){for(var t,n=e===R,i=E(n?z:b(e)),o=[],s=0;i.length>s;)!r(B,t=i[s++])||n&&!r(R,t)||o.push(B[t]);return o};I||(j=function(){if(this instanceof j)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===R&&t.call(z,n),r(this,N)&&r(this[N],e)&&(this[N][e]=!1),q(this,e,w(1,n))};return o&&H&&q(R,e,{configurable:!0,set:t}),K(e)},a(j[A],"toString",function(){return this._k}),C.f=Q,O.f=Y,n(97).f=k.f=Z,n(37).f=J,n(62).f=ee,o&&!n(44)&&a(R,"propertyIsEnumerable",J,!0),h.f=function(e){return K(p(e))}),s(s.G+s.W+s.F*!I,{Symbol:j});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)p(te[ne++]);for(var te=M(p.store),ne=0;te.length>ne;)v(te[ne++]);s(s.S+s.F*!I,"Symbol",{for:function(e){return r(V,e+="")?V[e]:V[e]=j(e)},keyFor:function(e){if(U(e))return m(V,e);throw TypeError(e+" is not a symbol!")},useSetter:function(){H=!0},useSimple:function(){H=!1}}),s(s.S+s.F*!I,"Object",{create:X,defineProperty:Y,defineProperties:G,getOwnPropertyDescriptor:Q,getOwnPropertyNames:Z,getOwnPropertySymbols:ee}),$&&s(s.S+s.F*(!I||u(function(){var e=j();return"[null]"!=L([e])||"{}"!=L({a:e})||"{}"!=L(Object(e))})),"JSON",{stringify:function(e){if(void 0!==e&&!U(e)){for(var t,n,i=[e],r=1;arguments.length>r;)i.push(arguments[r++]);return t=i[1],"function"==typeof t&&(n=t),!n&&g(t)||(t=function(e,t){if(n&&(t=n.call(this,e,t)),!U(t))return t}),i[1]=t,L.apply($,i)}}}),j[A][F]||n(24)(j[A],F,j[A].valueOf),d(j,"Symbol"),d(Math,"Math",!0),d(i.JSON,"JSON",!0)},function(e,t,n){var i=n(15),r=n(99)(!0);i(i.S,"Object",{entries:function(e){return r(e)}})},function(e,t,n){var i=n(15),r=n(99)(!1);i(i.S,"Object",{values:function(e){return r(e)}})},function(e,t,n){n(68)("asyncIterator")},function(e,t,n){n(68)("observable")},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var i=n(42),r=n(325),o=n(27)("species");e.exports=function(e){var t;return r(e)&&(t=e.constructor,"function"!=typeof t||t!==Array&&!r(t.prototype)||(t=void 0),i(t)&&(t=t[o],null===t&&(t=void 0))),void 0===t?Array:t}},function(e,t,n){var i=n(321);e.exports=function(e,t){return new(i(e))(t)}},function(e,t,n){e.exports=n(30).document&&document.documentElement},function(e,t,n){e.exports=!n(50)&&!n(74)(function(){return 7!=Object.defineProperty(n(106)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var i=n(72);e.exports=Array.isArray||function(e){return"Array"==i(e)}},function(e,t,n){var i=n(42),r=n(72),o=n(27)("match");e.exports=function(e){var t;return i(e)&&(void 0!==(t=e[o])?!!t:"RegExp"==r(e))}},function(e,t,n){"use strict";var i=n(331),r=n(110),o=n(112),s={};n(41)(s,n(27)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=i(s,{next:r(1,n)}),o(e,t+" Iterator")}},function(e,t,n){"use strict";var i=n(330),r=n(12),o=n(111),s=n(41),a=n(40),l=n(109),u=n(327),c=n(112),d=n(333),f=n(27)("iterator"),p=!([].keys&&"next"in[].keys()),h="@@iterator",v="keys",m="values",y=function(){return this};e.exports=function(e,t,n,g,x,b,_){u(n,t,g);var w,S,k,C=function(e){if(!p&&e in P)return P[e];switch(e){case v:return function(){return new n(this,e)};case m:return function(){return new n(this,e)}}return function(){return new n(this,e)}},O=t+" Iterator",M=x==m,T=!1,P=e.prototype,E=P[f]||P[h]||x&&P[x],j=E||C(x),$=x?M?C("entries"):j:void 0,L="Array"==t?P.entries||E:E;if(L&&(k=d(L.call(new e)),k!==Object.prototype&&(c(k,O,!0),i||a(k,f)||s(k,f,y))),M&&E&&E.name!==m&&(T=!0,j=function(){return E.call(this)}),i&&!_||!p&&!T&&P[f]||s(P,f,j),l[t]=j,l[O]=y,x)if(w={values:M?j:C(m),keys:b?j:C(v),entries:$},_)for(S in w)S in P||o(P,S,w[S]);else r(r.P+r.F*(p||T),t,w);return w}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t){e.exports=!1},function(e,t,n){var i=n(71),r=n(332),o=n(107),s=n(76)("IE_PROTO"),a=function(){},l="prototype",u=function(){var e,t=n(106)("iframe"),i=o.length,r="<",s=">";for(t.style.display="none",n(323).appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write(r+"script"+s+"document.F=Object"+r+"/script"+s),e.close(),u=e.F;i--;)delete u[l][o[i]];return u()};e.exports=Object.create||function(e,t){var n;return null!==e?(a[l]=i(e),n=new a,a[l]=null,n[s]=e):n=u(),void 0===t?n:r(n,t)}},function(e,t,n){var i=n(75),r=n(71),o=n(335);e.exports=n(50)?Object.defineProperties:function(e,t){r(e);for(var n,s=o(t),a=s.length,l=0;a>l;)i.f(e,n=s[l++],t[n]);return e}},function(e,t,n){var i=n(40),r=n(117),o=n(76)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=r(e),i(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,n){var i=n(40),r=n(78),o=n(103)(!1),s=n(76)("IE_PROTO");e.exports=function(e,t){var n,a=r(e),l=0,u=[];for(n in a)n!=s&&i(a,n)&&u.push(n);for(;t.length>l;)i(a,n=t[l++])&&(~o(u,n)||u.push(n));return u}},function(e,t,n){var i=n(334),r=n(107);e.exports=Object.keys||function(e){return i(e,r)}},function(e,t,n){var i=n(51),r=n(26);e.exports=function(e){return function(t,n){var o,s,a=String(r(t)),l=i(n),u=a.length;return l<0||l>=u?e?"":void 0:(o=a.charCodeAt(l),o<55296||o>56319||l+1===u||(s=a.charCodeAt(l+1))<56320||s>57343?e?a.charAt(l):o:e?a.slice(l,l+2):(o-55296<<10)+(s-56320)+65536)}}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,n){var i=n(51),r=Math.max,o=Math.min;e.exports=function(e,t){return e=i(e),e<0?r(e+t,0):o(e,t)}},function(e,t,n){var i=n(42);e.exports=function(e,t){if(!i(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!i(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!i(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){"use strict";var i=n(12),r=n(104)(6),o="findIndex",s=!0;o in[]&&Array(1)[o](function(){s=!1}),i(i.P+i.F*s,"Array",{findIndex:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),n(49)(o)},function(e,t,n){"use strict";var i=n(12),r=n(104)(5),o="find",s=!0;o in[]&&Array(1)[o](function(){s=!1}),i(i.P+i.F*s,"Array",{find:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),n(49)(o)},function(e,t,n){"use strict";var i=n(12),r=n(43),o=n(77),s="endsWith",a=""[s];i(i.P+i.F*n(73)(s),"String",{endsWith:function(e){var t=o(this,e,s),n=arguments.length>1?arguments[1]:void 0,i=r(t.length),l=void 0===n?i:Math.min(r(n),i),u=String(e);return a?a.call(t,u,l):t.slice(l-u.length,l)===u}})},function(e,t,n){"use strict";var i=n(12),r=n(77),o="includes";i(i.P+i.F*n(73)(o),"String",{includes:function(e){return!!~r(this,e,o).indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var i=n(12);i(i.P,"String",{repeat:n(115)})},function(e,t,n){"use strict";var i=n(12),r=n(43),o=n(77),s="startsWith",a=""[s];i(i.P+i.F*n(73)(s),"String",{startsWith:function(e){var t=o(this,e,s),n=r(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),i=String(e);return a?a.call(t,i,n):t.slice(n,n+i.length)===i}})},function(e,t,n){"use strict";var i=n(12),r=n(103)(!0);i(i.P,"Array",{includes:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}}),n(49)("includes")},function(e,t,n){"use strict";var i=n(12),r=n(336)(!0);i(i.P,"String",{at:function(e){return r(this,e)}})},function(e,t,n){"use strict";var i=n(12),r=n(114);i(i.P,"String",{padEnd:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,n){"use strict";var i=n(12),r=n(114);i(i.P,"String",{padStart:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,n){"use strict";n(116)("trimLeft",function(e){return function(){return e(this,1)}},"trimStart")},function(e,t,n){"use strict";n(116)("trimRight",function(e){return function(){return e(this,2)}},"trimEnd")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(20);t.default={name:"v-affix",props:{offsetTop:Number,offsetBottom:Number},data:function(){return{prefix:"ant-affix",isTop:!0,isAffix:!1}},ready:function(){void 0===this.offsetTop&&(void 0===this.offsetBottom?this.offsetTop=0:this.isTop=!1),document.addEventListener("scroll",this.handleScroll),document.addEventListener("resize",this.handleScroll)},beforeDestroy:function(){document.removeEventListener("scroll",this.handleScroll),document.removeEventListener("resize",this.handleScroll)},computed:{placeholderStyle:function(){return this.isAffix?{width:this.$el.offsetWidth+"px",height:this.$el.offsetHeight+"px"}:null},affixStyle:function(){var e=null;return this.isAffix&&(e={position:"fixed",left:(0,i.getOffset)(this.$el).left+"px",width:this.$el.offsetWidth+"px"},this.isTop?e.top=this.offsetTop+"px":e.bottom=this.offsetBottom+"px"),e}},watch:{isAffix:function(e){this.$emit("change",e)}},methods:{handleScroll:function(){var e=!1,t=((0,i.getScroll)(!0),this.$el.children[0],this.$el.getBoundingClientRect());if(this.isTop)t.top<this.offsetTop&&(e=!0);else{var n=document.documentElement.clientHeight;n-t.bottom<this.offsetBottom&&(e=!0)}this.isAffix=e}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){return t in e?(0,s.default)(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0});var o=n(31),s=i(o),a=n(13),l=i(a),u=n(3),c=n(511),d=i(c),f=n(119),p=i(f),h=function(e,t){return t.reduce(function(t,n){return t&&e.hasOwnProperty(n)},!0)?null:console.error("Keys Missing",e)},v=function(e){h(e,["left","variableWidth","slideCount","slidesToShow","slideWidth"]);var t=void 0;t=e.variableWidth?(e.slideCount+2*e.slidesToShow)*e.slideWidth+"px":e.centerMode?(e.slideCount+2*(e.slidesToShow+1))*e.slideWidth+"px":(e.slideCount+2*e.slidesToShow)*e.slideWidth+"px";var n={opacity:1,width:t,WebkitTransform:"translate3d("+e.left+"px, 0px, 0px)",transform:"translate3d("+e.left+"px, 0px, 0px)",transition:"",WebkitTransition:"",msTransform:"translateX("+e.left+"px)"};return!window.addEventListener&&window.attachEvent&&(n.marginLeft=e.left+"px"),n},m=function(e){h(e,["left","variableWidth","slideCount","slidesToShow","slideWidth","speed","cssEase"]);var t=v(e);return t.WebkitTransition="-webkit-transform "+e.speed+"ms "+e.cssEase,t.transition="transform "+e.speed+"ms "+e.cssEase,t},y=function(e){h(e,["slideIndex","trackRef","infinite","slideCount","slidesToShow","slidesToScroll","slideWidth","listWidth","variableWidth"]);var t=0,n=void 0,i=void 0;if(e.fade)return 0;if(e.infinite&&(e.slideCount>e.slidesToShow&&(t=e.slideWidth*e.slidesToShow*-1),e.slideCount%e.slidesToScroll!==0&&e.slideIndex+e.slidesToScroll>e.slideCount&&e.slideCount>e.slidesToShow&&(t=e.slideIndex>e.slideCount?(e.slidesToShow-(e.slideIndex-e.slideCount))*e.slideWidth*-1:e.slideCount%e.slidesToScroll*e.slideWidth*-1)),e.centerMode&&(e.infinite?t+=e.slideWidth*Math.floor(e.slidesToShow/2):t=e.slideWidth*Math.floor(e.slidesToShow/2)),n=e.slideIndex*e.slideWidth*-1+t,e.variableWidth===!0){var r=void 0;e.slideCount<=e.slidesToShow||e.infinite===!1?i=e.trackRef.childNodes[e.slideIndex]:(r=e.slideIndex+e.slidesToShow,i=e.trackRef.childNodes[r]),n=i?i.offsetLeft*-1:0,e.centerMode===!0&&(i=e.infinite===!1?e.trackRef.children[e.slideIndex]:e.trackRef.children[e.slideIndex+e.slidesToShow+1],n=i?i.offsetLeft*-1:0,n+=(e.listWidth-i.offsetWidth)/2)}return n};t.default={props:p.default,components:{vTrack:d.default},data:function(){return{animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,slideCount:null,slideWidth:null,swipeLeft:null,touchObject:{startX:0,startY:0,curX:0,curY:0},lazyLoadedList:[],mounted:!1,initialized:!1,edgeDragged:!1,swiped:!1,trackStyle:{},trackWidth:0}},computed:{wrapClasses:function(){return["slick-initialized","slick-slider",r({},""+this.className,!!this.className)]},dotsArray:function(){if(this.dots){var e=Math.ceil(this.slideCount/this.slidesToScroll);return Array.apply(null,Array(e+1).join("0").split(""))}return[]}},ready:function(){this.children=this.$refs.track.$el.children,this._initialize();for(var e=[],t=0;t<this.children.length;t++)t>=this.currentSlide&&t<this.currentSlide+this.slidesToShow&&e.push(t);this.lazyLoadedList&&0===this.lazyLoadedList.length&&(this.lazyLoadedList=e)},beforeDestory:function(){this.autoPlayTimer&&window.clearTimeout(this.autoPlayTimer)},methods:{_initialize:function(){this.mounted=!0;var e=this.children.length,t=this._getWidth(this.$els.list),n=this._getWidth(this.$refs.track.$el),i=this._getWidth(this.$el)/this.slidesToShow,r=this.rtl?e-1-this.initialSlide:this.initialSlide;this.slideWidth=i,this.listWidth=t,this.trackWidth=n,this.currentSlide=r,(0,l.default)(this.$data,this);var o=y((0,l.default)({slideIndex:this.currentSlide,trackRef:this.$refs.track},this.$data)),s=v((0,l.default)({left:o},this));this.trackStyle=s,this._autoPlay()},_getWidth:function(e){return e.getBoundingClientRect().width||e.offsetWidth},_slideHandler:function(e){var t=this,n=void 0,i=void 0,r=void 0,o=void 0,s=void 0;if(this.currentSlide!==e){if(this.fade)return i=this.currentSlide,n=e<0?e+this.slideCount:e>=this.slideCount?e-this.slideCount:e,this.lazyLoad&&this.lazyLoadedList.indexOf(n)<0&&(this.lazyLoadedList=this.lazyLoadedList.concat(n)),s=function(){t.animating=!1,t.afterChange&&t.afterChange(i),(0,u.removeEndEventListener)(t.$refs.track.$el.children[i],s)},this.animating=!0,this.currentSlide=n,(0,u.addEndEventListener)(this.$refs.track.$el.children[i],s),this.beforeChange&&this.beforeChange(this.currentSlide,i),void this._autoPlay();if(n=e,i=n<0?this.infinite===!1?0:this.slideCount%this.slidesToScroll!==0?this.slideCount-this.slideCount%this.slidesToScroll:this.slideCount+n:n>=this.slideCount?this.infinite===!1?this.slideCount-this.slidesToShow:this.slideCount%this.slidesToScroll!==0?0:n-this.slideCount:n,r=y((0,l.default)({slideIndex:n,trackRef:this.$refs.track},this.$data)),o=y((0,l.default)({slideIndex:i,trackRef:this.$refs.track},this.$data)),this.infinite===!1&&(r=o),this.beforeChange&&this.beforeChange(this.currentSlide,i),this.lazyLoad){for(var a=!0,c=[],d=n;d<n+this.slidesToShow;d++)a=a&&this.lazyLoadedList.indexOf(d)>=0,a||c.push(d);a||(this.lazyLoadedList=this.lazyLoadedList.concat(c))}if(this.useCSS===!1)this.currentSlide=i,this.trackStyle=getTrackCss((0,l.default)({left:o},this.$data)),this.afterChange&&this.afterChange(i);else{var f={animating:!1,currentSlide:i,trackStyle:v((0,l.default)({left:o},this.$data)),swipeLeft:null};s=function(){t.animating=f.animating,t.currentSlide=f.currentSlide,t.trackStyle=f.trackStyle,t.swipeLeft=f.swipeLeft,t.afterChange&&t.afterChange(i),(0,u.removeEndEventListener)(t.$refs.track.$el,s)},this.animating=!0,this.currentSlide=n,this.trackStyle=m((0,l.default)({left:r},this.$data)),this.$refs.track.$el&&(0,u.addEndEventListener)(this.$refs.track.$el,s)}this._autoPlay()}},_swipeDirection:function(e){var t=void 0,n=void 0,i=void 0,r=void 0;return t=e.startX-e.curX,n=e.startY-e.curY,i=Math.atan2(n,t),r=Math.round(180*i/Math.PI),r<0&&(r=360-Math.abs(r)),r<=45&&r>=0||r<=360&&r>=315?"left":r>=135&&r<=225?"right":"vertical"},_autoPlay:function(){var e=this,t=function(){e.mounted&&e._slideHandler(e.currentSlide+e.slidesToScroll)};this.autoplay&&(window.clearTimeout(this.autoPlayTimer),this.autoPlayTimer=window.setTimeout(t,this.autoplaySpeed))},_clickHandler:function(e,t){t&&t.preventDefault(),this._changeSlide(e),this.clickHandler(e,t)},_dotHandler:function(e){this._clickHandler({message:"dots",index:e,slidesToScroll:this.slidesToScroll,currentSlide:this.currentSlide})},_changeSlide:function(e){var t=void 0,n=void 0,i=void 0;n=this.slideCount%this.slidesToScroll!==0,t=n?0:(this.slideCount-this.currentSlide)%this.slidesToScroll,"dots"===e.message&&(i=e.index*e.slidesToScroll,i===e.currentSlide)||this._slideHandler(i)},_swipeStart:function(e){var t=void 0,n=void 0;this.swipe===!1||"ontouchend"in document&&this.swipe===!1||this.draggable===!1&&e.type.indexOf("mouse")!==-1||(t=void 0!==e.touches?e.touches[0].pageX:e.clientX,n=void 0!==e.touches?e.touches[0].pageY:e.clientY,this.dragging=!0,this.touchObject={startX:t,startY:n,curX:t,curY:n})},_swipeMove:function(e){if(this.dragging&&!this.animating){var t=void 0,n=void 0,i=void 0,r=this.touchObject;n=y((0,l.default)({slideIndex:this.currentSlide,trackRef:this.$refs.track},this.$data)),r.curX=e.touches?e.touches[0].pageX:e.clientX,r.curY=e.touches?e.touches[0].pageY:e.clientY,r.swipeLength=Math.round(Math.sqrt(Math.pow(r.curX-r.startX,2))),i=r.curX>r.startX?1:-1;var o=this.currentSlide,s=Math.ceil(this.slideCount/this.slidesToScroll),a=this._swipeDirection(this.touchObject),u=r.swipeLength;this.infinite===!1&&(0===o&&"right"===a||o+1>=s&&"left"===a)&&(u=r.swipeLength*this.edgeFriction),this.swiped===!1&&this.swipeEvent&&(this.swipeEvent(a),this.swiped=!0),t=n+u*i,this.touchObject=r,this.swipeLeft=t,this.trackStyle=v((0,l.default)({left:t},this.$data)),Math.abs(r.curX-r.startX)<.8*Math.abs(r.curY-r.startY)||r.swipeLength>4&&e.preventDefault()}},_swipeEnd:function(e){if(this.dragging){var t=this.touchObject,n=this.listWidth/this.touchThreshold,i=this._swipeDirection(t);if(this.dragging=!1,this.edgeDragged=!1,this.swiped=!1,this.swipeLeft=null,this.touchObject={},t.swipeLength)if(t.swipeLength>n)e.preventDefault(),"left"===i?this._slideHandler(this.currentSlide+this.slidesToScroll):"right"===i?this._slideHandler(this.currentSlide-this.slidesToScroll):this._slideHandler(this.currentSlide);else{var r=y((0,l.default)({slideIndex:this.currentSlide,trackRef:this.$refs.track},this.$data));this.trackStyle=m((0,l.default)({left:r},this.$data))}}}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(13),o=i(r),s=n(22),a=i(s),l=n(3),u=function(e){
	var t=e.split(" "),n={};return t.forEach(function(e){n[e]=1}),n},c=function(e){var t=void 0,n=void 0,i=e.index;return n=i<0||i>=e.slideCount,t=e.currentSlide<=i&&i<e.currentSlide+e.slidesToShow,(0,l.cx)({"slick-slide":!0,"slick-active":t,"slick-cloned":n})},d=function(e){var t={};return void 0!==e.variableWidth&&e.variableWidth!==!1||(t.width=e.slideWidth+"px"),e.fade&&(t.position="relative",t.left=-e.index*e.slideWidth+"px",t.opacity=e.currentSlide===e.index?1:0,t.transition="opacity "+e.speed+"ms "+e.cssEase,t.WebkitTransition="opacity "+e.speed+"ms "+e.cssEase),t};t.default={props:["fade","cssEase","speed","infinite","currentSlide","lazyLoad","lazyLoadedList","slideWidth","slidesToShow","slideCount","trackStyle","variableWidth"],data:function(){return{hasPreInit:!1,hasPostInit:!1}},ready:function(){var e=this;this.children=[];for(var t=0;t<this.$el.children.length;t++)this.children.push(this.$el.children[t]);this.preClone=this.children[0].cloneNode(!0),this.postClone=this.children[this.children.length-1].cloneNode(!0),this.slideCount=this.children.length,this._mapPropsToChild(),(0,a.default)(this.$data).map(function(t){e.$watch(t,e._mapPropsToChild)})},methods:{_mapPropsToChild:function(){var e=this;if((0,o.default)(this.$data,this),this.children.forEach(function(t,n){var i=void 0;i=!e.lazyLoad|(e.lazyLoad&&e.lazyLoadedList.indexOf(n)>=0)?t:document.createElement("div");var r=d((0,o.default)({},e.$data,{index:n})),s=c((0,o.default)({index:n},e.$data)),a=void 0;(0,l.removeClass)(i,"slick-active"),a=i.className?(0,l.cx)((0,o.default)(u(s),u(i.className))):s,i.setAttribute("key",n),i.setAttribute("data-index",n),(0,l.addClass)(i,a),(0,l.addStyle)(i,r)}),this.infinite&&this.fade===!1){this.variableWidth?this.slidesToShow+1:this.slidesToShow;(function(){(0,l.removeClass)(this.preClone,"slick-active");var e=this.children[this.slideCount-1],t=this.slideCount;this.preClone.setAttribute("key",t),this.preClone.setAttribute("data-index",t);var n=d((0,o.default)({},this.$data,{index:this.slideCount-1}));(0,l.addClass)(this.preClone,c((0,o.default)({index:t},this))),(0,l.addStyle)(this.preClone,n),this.hasPreInit||((0,l.insertAfter)(this.preClone,e),this.hasPreInit=!0)}).bind(this)(),function(){(0,l.removeClass)(this.postClone,"slick-active");var e=this.children[0],t=-1;this.postClone.setAttribute("key",t),this.postClone.setAttribute("data-index",t);var n=d((0,o.default)({},this.$data,{index:0}));(0,l.addClass)(this.postClone,c((0,o.default)({index:t},this))),(0,l.addStyle)(this.postClone,n),this.hasPostInit||((0,l.insertBefore)(this.postClone,e),this.hasPostInit=!0)}.bind(this)()}}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){return t in e?(0,s.default)(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0});var o=n(31),s=i(o),a=n(510),l=i(a),u=n(119),c=i(u);if("undefined"!=typeof window){var d=function(){return{matches:!1,addListener:function(){},removeListener:function(){}}};window.matchMedia=window.matchMedia||d}t.default={name:"v-carousel",props:c.default,components:{InnerSlider:l.default},data:function(){return{}},computed:{wrapClasses:function(){return[this.prefixCls,r({},this.prefixCls+"-vertical",!!this.vertical)]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){return function(){var t=e.apply(this,arguments);return new l.default(function(e,n){function i(r,o){try{var s=t[r](o),a=s.value}catch(e){return void n(e)}return s.done?void e(a):l.default.resolve(a).then(function(e){i("next",e)},function(e){i("throw",e)})}return i("next")})}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(128),s=i(o),a=n(491),l=i(a),u=n(494),c=i(u),d=n(10),f=i(d),p=n(13),h=i(p),v=function(){function e(e,t){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=(0,f.default)(e);!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{!i&&a.return&&a.return()}finally{if(r)throw o}}return n}return function(t,n){if(Array.isArray(t))return t;if((0,s.default)(Object(t)))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),m=n(121),y=i(m),g=n(124),x=i(g),b=n(21),_=i(b),w=n(81),S=i(w),k=n(122),C=i(k);t.default={name:"v-datatable",props:{size:{type:String,default:"middle"},dataSource:{type:String,required:!0},columns:{type:Array,required:!0},pagination:{type:Boolean,default:!0},pageSize:{type:Number,default:10},pageNum:{type:Number,default:1},fuck:{type:Number,default:10},formatter:{type:Function},pageSizeOptions:{type:Array,default:function(){return[10,20,30,40,50]}},paramsName:{type:Object,default:function(){return{pageNumber:"pageNo",pageSize:"pageSize",total:"totalCount",results:"result",sortColumns:"sortColumns"}}},otherParams:{type:Object,default:function(){return{}}},rowSelection:{type:Object,validator:function(e){return"checkbox"==e.type||"radio"==e.type}},emptyText:{type:String,default:"老板,没有找到你想要的信息......"},ghost:{type:Object},bottomGap:{type:Number,default:""},height:{type:Number,default:null},treeTable:{type:Boolean,default:!1},httpType:{type:String,default:"post"},treeTableOption:{type:Object,default:function(){return{idKey:"id",pidKey:"pid",indent:4,position:0,sortKey:null,order:"asc",isAsync:!1}}}},data:function(){return{current:[],total:0,prefix:"ant-table",borderClass:"ant-table-bordered",contentClass:"ant-table-content",loading:!1,sortParams:{},sortModel:"single",rowSelectionStates:[],tableBodyScrollLeft:0,tableBodyWidth:"100%",tableBodyHeight:null}},created:function(){this.getSortParams(),this.loadData({pageNum:this.pageNum})},ready:function(){var e=this;this.calculateSize(),this.bindResize||(window.addEventListener("resize",function(){e.calculateSize()},!1),e.bindResize=!0)},methods:{clickCheck:function(e,t){var n=this.items[e],i=(0,h.default)({index:e,checked:t.target.checked},n);this.$dispatch("select",i)},pageChange:function(e){this.pageNum=e,this.loadData({pageNum:this.pageNum})},pageSizeChange:function(e,t){this.pageNum=e,this.pageSize=t,this.loadData({pageNum:this.pageNum})},sort:function(e,t){"single"==this.sortModel?this.setCurrentSort(e,t):this.setSortParams(e,t),this.loadData()},setCurrentSort:function(e,t){var n=!0,i=!1,r=void 0;try{for(var o,s=(0,f.default)(this.columns);!(n=(o=s.next()).done);n=!0){var a=o.value;"string"==typeof a.sort&&(a.sort=!0)}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}this.currentSort=e,e.sort=t;var l={};l[this.paramsName.sortColumns]=e.field+" "+e.sort+" ",this.sortParams=l},setSortParams:function(e,t){e.sort=t;var n="",i=!0,r=!1,o=void 0;try{for(var s,a=(0,f.default)(this.columns);!(i=(s=a.next()).done);i=!0){var l=s.value;"string"==typeof l.sort&&(n+=l.field+" "+l.sort+" ")}}catch(e){r=!0,o=e}finally{try{!i&&a.return&&a.return()}finally{if(r)throw o}}var u={};u[this.paramsName.sortColumns]=n,this.sortParams=u},getSortParams:function(){var e="",t=!0,n=!1,i=void 0;try{for(var r,o=(0,f.default)(this.columns);!(t=(r=o.next()).done);t=!0){var s=r.value;"string"==typeof s.sort&&(e+=s.field+" "+s.sort+" ")}}catch(e){n=!0,i=e}finally{try{!t&&o.return&&o.return()}finally{if(n)throw i}}var a={};return a[this.paramsName.sortColumns]=e,this.sortParams=a,this.sortParams},loadData:function(e){var t=this;return r(c.default.mark(function n(){var i,r,o,s,a;return c.default.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return e=(0,h.default)({},e),t.loading=!0,i=t.dataSource,r=(0,h.default)({},t.sortParams,t.otherParams),r[t.paramsName.pageNumber]=e.pageNum||self.pageNum,r[t.paramsName.pageSize]=t.pageSize,n.next=8,t.$http[t.httpType](i,r,{emulateJSON:!0}).catch(function(){t.loading=!1});case 8:if(o=n.sent){n.next=11;break}return n.abrupt("return");case 11:return n.next=13,o.json();case 13:s=n.sent.data,a=t.formatter?t.formatter(s[t.paramsName.results]):s[t.paramsName.results],t.treeTable?t.dealTreeData(a):t.current=a,t.total=1*s[t.paramsName.total],t.pageNum=1*s[t.paramsName.pageNumber],t.rowSelectionStates=new Array(t.current.length||0).fill(!1),t.loading=!1,t.calculateSize();case 21:case"end":return n.stop()}},n,t)}))()},rowSelectionChange:function(e){this.rowSelection.onSelect&&this.rowSelection.onSelect(e,this.rowSelectionStates[e],this.current[e])},checkAllChange:function(e){this.rowSelectionStates=new Array(this.current.length||0).fill(e.checked),this.rowSelection.onSelectAll&&this.rowSelection.onSelectAll(e.checked,this.current)},datatable:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];this[e].apply(this,n)},reload:function(e){this.loadData({pageNum:e||this.pageNum})},scrollTableBody:function(e){var t=e.target||e.srcElement;this.tableBodyScrollLeft=t.scrollLeft},calculateSize:function(){this.$el&&this.$nextTick(function(){var e=56;this.height?(this.tableBodyHeight=this.height-e,this.getBodyWidth()):this.bottomGap&&(this.fixGapHeight(e),this.getBodyWidth())})},getBodyWidth:function(){var e=this.$els.tbody;e&&(this.tableBodyWidth=e.offsetWidth+"px"),this.fixHeaderWidth()},fixHeaderWidth:function(){var e=this.$el.querySelectorAll("div.ant-table-header table>thead>tr>th"),t=this.$el.querySelectorAll("div.ant-table-body table>thead>tr>th");if(e.length&&t.length){var n=!0,i=!1,r=void 0;try{for(var o,s=(0,f.default)(e.entries());!(n=(o=s.next()).done);n=!0){var a=v(o.value,2),l=a[0],u=a[1];l!=e.length-1&&(u.style.width=t[l].offsetWidth+"px")}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}}},fixGapHeight:function(e){var t=this,n=t.$el.getBoundingClientRect(),i=window.innerHeight,r=i-1*this.bottomGap-n.top-e;n.top>0&&r>=200&&(this.tableBodyHeight=r)},dealTreeData:function(e){this.originData=e.slice(),this.newData=[];var t=this.transTreeData(0);this.sortTrData(t),this.current=this.newData},transTreeData:function(e){for(var t=this,n=this.treeTableOption,i=[],r=this.findChildren(e),o=0;o<r.length;o++){var s=r[o];s.children=t.transTreeData(s[n.idKey]),s.level=t.getLevel(s.id),s.vshow=!(s.level>1),s.vopen=s.level>0?"collapsed":"expanded",s.paddingLeft=5*(s.level-1)*t.treeTableOption.indent+"px",i.push(s)}return n.sortKey&&i.sort(t.sortData),i},sortTrData:function(e){for(var t=this,n=0;n<e.length;n++){var i=e[n],r=i.children;t.treeTableOption.isAsync||(i.isparent=!!r.length),t.newData.push(i),r.length&&t.sortTrData(r)}},sortData:function(e,t){var n=this.treeTableOption.sortKey;return"asc"==this.treeTableOption.order?e[n]>t[n]?1:-1:e[n]<t[n]?1:-1},findChildren:function(e){for(var t=this,n=[],i=this.originData,r=0;r<i.length;r++)i[r][t.treeTableOption.pidKey]==e&&n.push(i[r]);return n},getLevel:function(e){for(var t=this,n=this.originData,i=this.treeTableOption,r=0;r<n.length;r++){var o=n[r],s=(o[i.idKey],o[i.pidKey]);if(o[i.idKey]==e)return 0==e?0:0==o[i.pidKey]?1:t.getLevel(s)+1}return 0},toggle:function(e){"collapsed"==e.vopen?this.expand(e):"expanded"==e.vopen&&this.collapse(e)},expand:function(e){var t=this;t.treeTableOption.isAsync&&!e.loadChildren?t.loadChildren(e):t.expandChildren(e)},collapse:function(e){var t=this;e.vopen="collapsed";for(var n=!1,i=e.children||[],r=0;r<i.length;r++)i[r].vshow=n,t.collapse(i[r]);this.calculateSize()},expandChildren:function(e){e.vopen="expanded";for(var t=!0,n=e.children||[],i=0;i<n.length;i++)n[i].vshow=t;this.calculateSize()},loadChildren:function(e){var t=this;return r(c.default.mark(function n(){var i,r,o,s,a,l,u,d;return c.default.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return t.loading=!0,i=t.dataSource,r=(0,h.default)({parentid:e.id},t.sortParams,t.otherParams),n.next=5,t.$http[t.httpType](i,r,{emulateJSON:!0}).catch(function(){t.loading=!1});case 5:if(o=n.sent){n.next=8;break}return n.abrupt("return");case 8:return n.next=10,o.json();case 10:if(s=n.sent.data,a=t.formatter?t.formatter(s[t.paramsName.results]):s[t.paramsName.results],!a.length){n.next=25;break}if(e.loadChildren=!0,e.children=t.transAsyncTreeData(a,e.level),l=t.current.findIndex(function(t,n,i){return t.id==e.id})+1,0!=l){n.next=18;break}return n.abrupt("return",!1);case 18:u=t.current.slice(0,l).concat(a,t.current.slice(l)),t.current=u,d=t.rowSelectionStates.slice(0,l).concat(new Array(a.length||0).fill(!1),t.rowSelectionStates.slice(l)),t.rowSelectionStates=d,t.expandChildren(e),t.loading=!1,t.calculateSize();case 25:case"end":return n.stop()}},n,t)}))()},transAsyncTreeData:function(e,t){for(var n=this,i=0;i<e.length;i++){var r=e[i];r.level=t+1,r.vopen="collapsed",r.vshow=!0,r.paddingLeft=5*(r.level-1)*n.treeTableOption.indent+"px"}return e}},events:{reload:function(e){this.reload(e)}},computed:{sizeClass:function(){return this.prefix+"-"+this.size},scrollClass:function(){return this.tableBodyHeight?this.prefix+"-scroll":""},checkAllState:function e(){for(var e=!1,t=0;t<this.rowSelectionStates.length;t++){if(0==this.rowSelectionStates[t]){e=!1;break}e=!0}return e}},components:{vPagination:y.default,vSpin:x.default,vIcon:_.default,vCheckbox:S.default,vRadio:C.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(84),o=i(r),s=n(83),a=i(s),l="function"==typeof a.default&&"symbol"==typeof o.default?function(e){return typeof e}:function(e){return e&&"function"==typeof a.default&&e.constructor===a.default&&e!==a.default.prototype?"symbol":typeof e},u=n(20),c=n(135),d=i(c);t.default={name:"v-datepicker",components:{timePickerPanel:d.default},props:{placeholder:{type:String,default:"请选择日期"},range:{type:Boolean,default:!1},style:{type:Object,default:function(){return{}}},size:{type:String,coerce:function(e){return{large:"lg",small:"sm"}[e]}},time:{twoWay:!0},position:{type:String,default:"absolute"},popupContainer:{type:Function,default:function(){return document.body}},showTime:{type:Boolean,default:!1},startTime:{twoWay:!0},endTime:{twoWay:!0},maxRange:{coerce:function(e){return+e}},clearable:{type:Boolean,default:!1},format:{type:String,default:"yyyy-MM-dd"},disabled:{type:Boolean,default:!1},disabledDate:Function,en:{type:Boolean,default:!1},disabledTime:{type:Array,default:function(){return[{},{}]}}},data:function(){return{prefix:"ant-calendar",container:null,timeSelected:!1,timeBtnEnable:!1,containerStyle:{},show:!1,showYear1:!1,showYear2:!1,showMonth1:!1,showMonth2:!1,prevYearTitle:this.en?"last year":"上一年",prevMonthTitle:this.en?"last month":"上个月",selectYearTitle:this.en?"select year":"选择年份",selectMonthTitle:this.en?"select month":"选择月份",nextMonthTitle:this.en?"next month":"下个月",nextYearTitle:this.en?"next year":"下一年",toTitle:this.en?"TO":"至",confirmTitle:this.en?"OK":"确定",left:!1,ranges:[],days:this.en?["Mo","Tu","We","Th","Fr","Sa","Su"]:["一","二","三","四","五","六","日"],months:this.en?["January","February","March","April","May","June","July","August","September","October","November","December"]:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],years1:[],years2:[],months1:[],months2:[],date1:null,date2:null,time1:this.parse(this.startTime,!1)||this.parse(this.time,!1),time2:this.parse(this.endTime,!0),now1:this.parse(new Date,!1),now2:this.parse(new Date,!0),timeVal:["00:00","00:00"],count:this.range?2:1}},computed:{value:function(){var e="";if(this.range){var t="",n="";this.startTime&&this.endTime&&(t=this.stringify(this.parse(this.startTime,!1)),n=this.stringify(this.parse(this.endTime,!1)),this.showTime&&(t=t+" "+this.timeVal[0],n=n+" "+this.timeVal[1]),e=t+" ~ "+n)}else this.time&&(e=this.stringify(this.parse(this.time,!1)),this.showTime&&(e=e+" "+this.timeVal[0]));return e}},ready:function(){var e=this;if(this.container=this.popupContainer(),this.$els.container.style.position=this.position,this.container.appendChild(this.$els.container),this.$nextTick(function(){e.setPosition()}),window.addEventListener("resize",function(){clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.setPosition()},200)}),this.range&&!this.style.width&&this.$set("style.width","240px"),this.showTime){var t=["00:00","00:00"];if(this.range){if(this.startTime){var n=this.startTime.split(" ")[1];n&&(t[0]=n)}if(this.endTime){var i=this.endTime.split(" ")[1];i&&(t[1]=i)}}else if(this.time){var r=this.time.split(" ")[1];r&&(t[0]=r)}}},watch:{show:function(e){this.hidePanel(),e&&this.$els.container.focus()},now1:function(){this.updateAll()},now2:function(){this.updateAll()},value:function(e){if(this.timeBtnEnable=!!e,this.range){var t=e.split(" ~ ");this.$emit("change",t[0],t[1]||"")}else this.$emit("change",e)}},methods:{selectTime:function(){this.timeBtnEnable&&(this.timeSelected=!this.timeSelected)},setPosition:function(){if(this.$el){var e=(0,u.getOffset)(this.$el,this.container);this.$set("containerStyle",{top:e.bottom+"px",left:e.left+"px"})}},parse:function(e,t){if(e){var n=new Date(e);return void 0===t?n:t?new Date(n.getFullYear(),n.getMonth(),n.getDate(),23,59,59,999):new Date(n.getFullYear(),n.getMonth(),n.getDate())}return null},initRanges:function(){var e=new Date,t=[];t.push({name:"今天",start:this.parse(e,!1),end:this.parse(e,!0),active:!0}),e.setDate(e.getDate()-1),t.push({name:"昨天",start:this.parse(e,!1),end:this.parse(e,!0)}),e=new Date,e.setDate(e.getDate()-6),t.push({name:"最近7天",start:this.parse(e,!1),end:this.parse(new Date,!0)}),e=new Date,e.setMonth(e.getMonth()+1,0),t.push({name:"本月",start:new Date(e.getFullYear(),e.getMonth(),1),end:this.parse(e,!0)}),e=new Date,e.setMonth(e.getMonth(),0),t.push({name:"上个月",start:new Date(e.getFullYear(),e.getMonth(),1),end:this.parse(e,!0)}),e=new Date,e.setDate(e.getDate()-29),t.push({name:"最近一个月",start:this.parse(e,!1),end:this.parse(new Date,!0)}),e=new Date,e.setDate(e.getDate()-365),t.push({name:"最近一年",start:this.parse(e,!1),end:this.parse(new Date,!0)}),this.ranges=t},updateAll:function(){this.update(new Date(this.now1),1),this.range&&this.update(new Date(this.now2),2)},click:function(){this.time1=this.parse(this.startTime)||this.parse(this.time),this.now1=this.parse(this.startTime)||this.parse(this.time)||new Date,this.range&&(this.initRanges(),this.time2=this.parse(this.endTime),this.now2=this.parse(this.endTime)||new Date);var e=this.$el.getBoundingClientRect(),t=document.documentElement.clientWidth-e.left;t<(this.range?441:214)&&t<e.left?this.left=!0:this.left=!1,this.show=!this.show},select:function(e,t){this.hidePanel(),e.status.indexOf("ant-calendar-disabled-cell")===-1&&(this["now"+t]=new Date(e.time),this["time"+t]=new Date(e.time),this.range?this[1===t?"startTime":"endTime"]=this.getOutTime(e.time):(this.time=this.getOutTime(e.time),this.showTime||(this.show=!1)))},confirm:function(){this.show=!1,this.$emit("confirm")},selectRange:function(e){for(var t=this.ranges[e],n=0;n<this.ranges.length;n++)this.$set("ranges["+n+"].active",!1);this.$set("ranges["+e+"].active",!0),this.now1=new Date(t.start),this.now2=new Date(t.end),this.time1=new Date(t.start),this.time2=new Date(t.end),this.startTime=this.getOutTime(t.start),this.endTime=this.getOutTime(t.end),this.hidePanel()},getOutTime:function(e){var t=l(this.time?this.time:this.startTime);return"number"===t?e.getTime():"object"===t?new Date(e):this.stringify(e)},update:function(e,t){var n,i,r,o,s,a,l=[];for(e.setDate(0),r=e.getDay(),o=e.getDate(),n=r;n>0;n--)a=o-n+1,i=new Date(e.getFullYear(),e.getMonth(),a),i=this.parse(i,2===t),l.push({status:this.getTimeStatus(i,t)||"ant-calendar-last-month-cell",title:this.stringify(i),text:a,time:i});for(e.setMonth(e.getMonth()+2,0),s=e.getDate(),e.setDate(1),n=1;n<=s;n++)i=new Date(e.getFullYear(),e.getMonth(),n),i=this.parse(i,2===t),l.push({status:this.getTimeStatus(i,t),title:this.stringify(i),text:n,time:i});for(n=1;l.length<42;n++)i=new Date(e.getFullYear(),e.getMonth()+1,n),i=this.parse(i,2===t),l.push({status:this.getTimeStatus(i,t)||"ant-calendar-next-month-btn-day",title:this.stringify(i),text:n,time:i});this["date"+t]=l},getTimeStatus:function(e,t,n){var i="",r=new Date,o=this["time"+t],s=this.stringify(e,n||"yyyy-MM-dd"),a=this.stringify(r,n||"yyyy-MM-dd"),l=this.stringify(o,n||"yyyy-MM-dd");if(s===l?i=this.prefix+"-selected-day":s===a&&(i=this.prefix+"-today"),this.time1&&this.time2&&e>=this.time1&&e<=this.time2&&(i+=" "+this.prefix+"-inrange"),1==t&&this.time2){var u=new Date(this.time2);this.maxRange?(u.setDate(u.getDate()-this.maxRange),"yyyy"===n&&(u=new Date(u.getFullYear(),0,1)),"yyyy-MM"===n&&(u=new Date(u.getFullYear(),0,1)),(e<u||e>this.time2)&&(i+=" "+this.prefix+"-disabled-cell")):e>this.time2&&(i+=" "+this.prefix+"-disabled-cell"),e>this.time2&&(i+=" "+this.prefix+"-disabled-cell")}if(2==t&&this.time1){var c=new Date(this.time1);this.maxRange?(c.setDate(c.getDate()+this.maxRange),"yyyy"===n&&(c=new Date(c.getFullYear(),11,1)),"yyyy-MM"===n&&(c=new Date(c.getFullYear(),c.getMonth()+1,1)),(e>c||e<this.time1)&&(i+=" "+this.prefix+"-disabled-cell")):e<this.time1&&(i+=" "+this.prefix+"-disabled-cell")}return this.disabledDate&&this.disabledDate(e)&&(i+=" "+this.prefix+"-disabled-cell"),i},stringify:function(e,t){if(!e)return"";t=t||this.format;var n=e.getFullYear(),i=e.getMonth()+1,r=e.getDate(),o=e.getHours(),s=o%12===0?12:o%12,a=e.getMinutes(),l=e.getSeconds(),u=e.getMilliseconds(),c={yyyy:n,MM:("0"+i).slice(-2),M:i,dd:("0"+r).slice(-2),d:r,HH:("0"+o).slice(-2),H:o,hh:("0"+s).slice(-2),h:s,mm:("0"+a).slice(-2),m:a,ss:("0"+l).slice(-2),s:l,S:u};return t.replace(/y+|M+|d+|H+|h+|m+|s+|S+/g,function(e){return c[e]})},showYear:function(e){var t="showYear"+e;this.hidePanel(t),this[t]=!this[t];var n=new Date(this["now"+e]||new Date),i=n.getFullYear(),r=Math.floor(i%10),o=[];for(n.setDate(1),n.setFullYear(i-r);o.length<12;)2===e&&n.setMonth(n.getMonth()+1,0),o.push({year:n.getFullYear(),status:n.getFullYear()==i?"ant-calendar-year-panel-selected-cell":""}),n.setDate(1),n.setFullYear(n.getFullYear()+1);this["years"+e]=o},showMonth:function(e){var t="showMonth"+e;this.hidePanel(t),this[t]=!this[t];for(var n=new Date(this["now"+e]||new Date),i=n.getMonth(),r=[];r.length<12;)n.setDate(1),n.setMonth(r.length),2===e&&n.setMonth(n.getMonth()+1,0),r.push({month:r.length+1,status:r.length==i?"ant-calendar-month-panel-selected-cell":""});this["months"+e]=r},changeYearRange:function(e,t){var n=this["years"+e],i=new Date(this["time"+e]||new Date);for(var r in n){var o=n[r],s=o.year+12*t;i.setDate(1),i.setFullYear(s),2===e&&i.setMonth(i.getMonth()+1,0),o.year=s,o.status=s==new Date(this["now"+e]||new Date).getFullYear()?"ant-calendar-year-panel-selected-cell":""}},changeYear:function(e,t){var n=this["now"+t];n.setDate(1),n.setFullYear(n.getFullYear()+e),2===t&&n.setMonth(n.getMonth()+1,0),this["now"+t]=new Date(n),this.hidePanel()},changeMonth:function(e,t){var n=this["now"+t];n.setDate(1),n.setMonth(n.getMonth()+e),2===t&&n.setMonth(n.getMonth()+1,0),this["now"+t]=new Date(n),this.hidePanel()},selectYear:function(e,t){if(this["years"+t][e].status.indexOf("ant-calendar-disabled-cell")===-1){for(var n=0;n<this["years"+t].length;n++)"ant-calendar-year-panel-selected-cell"==this["years"+t][n].status&&this.$set("years"+t+"["+n+"].status","");this.$set("years"+t+"["+e+"].status","ant-calendar-year-panel-selected-cell");var i=this["now"+t];i.setFullYear(this["years"+t][e].year),this["now"+t]=new Date(i),this.hidePanel()}},selectMonth:function(e,t){if(this["months"+t][e].status.indexOf("ant-calendar-disabled-cell")===-1){for(var n=0;n<this["months"+t].length;n++)"ant-calendar-month-panel-selected-cell"==this["months"+t][n].status&&this.$set("years"+t+"["+n+"].status","");this.$set("months"+t+"["+e+"].status","ant-calendar-month-panel-selected-cell");var i=this["now"+t];i.setMonth(this["months"+t][e].month-1),this["now"+t]=new Date(i),this.hidePanel()}},hidePanel:function(e){["showYear1","showYear2","showMonth1","showMonth2"].map(function(t){t!==e&&(this[t]=!1)}.bind(this))},clear:function(){this.time1=this.time2=this.startTime=this.endTime=this.time=null,this.timeVal=["00:00","00:00"],this.timeSelected=!1,this.now1=new Date,this.now2=new Date}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),o=n(534),s=i(o),a=n(52),l=i(a),u=void 0;document.addEventListener("click",function(e){u={x:e.pageX,y:e.pageY},setTimeout(function(){return u=null},20)},!0),t.default={name:"v-modal",props:(0,r.defaultProps)({visible:!1,confirmLoading:!1,title:String,closable:!0,onOk:function(){},onCancel:function(){},modalWidth:520,okText:"确 定",cancelText:"取 消",maskClosable:!0,prefixCls:"ant-modal",modalStyle:{},hasFooter:!0,wrapClassName:String}),data:function(){return{mousePosition:{}}},watch:{visible:function(){this.mousePosition=u}},methods:{_handleCancel:function(){this.onCancel()},_handleOk:function(){this.onOk()}},components:{Dialog:s.default,vButton:l.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(118),o=i(r);t.default={name:"v-more-panel",data:function(){return{prefix:"ant-more-panel",collapse:!0,bindResize:!1,showBtn:!1,panelPR:0}},props:{originalHeight:{type:[Number,String],default:34},controlStyle:{type:Object,default:function(){return{}}}},watch:{showBtn:function(){this.panelPR=this.$els.panelControl.offsetWidth+"px"}},computed:{height:function(){return this.collapse?this.originalHeight+"px":"auto"},btnIcon:function(){return this.collapse?"down":"up"}},ready:function(){var e=this;this.panelPR=this.$els.panelControl.offsetWidth+"px",this.ifShowBtn(),this.bindResize||(window.addEventListener("resize",function(){e.ifShowBtn()},!1),this.bindResize=!0)},methods:{ifShowBtn:function(){var e=this;this.$el&&this.$nextTick(function(){e.showBtn=e.$els.panelForm.offsetHeight>e.originalHeight})},click:function(){this.collapse=!this.collapse}},components:{card:o.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){return t in e?(0,s.default)(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0});var o=n(31),s=i(o),a=n(3),l=n(21),u=i(l),c={normal:"#369BE9",exception:"#E95471",success:"#16C294"};t.default={name:"v-progress-circle",props:(0,a.defaultProps)({prefixCls:"ant-progress",status:(0,a.oneOf)(["normal","exception","success"],"normal"),progressStatus:"normal",width:132,percent:0,format:"",trailWidth:6,strokeWidth:6,trailColor:"#e9e9e9"}),components:{vIcon:u.default},computed:{wrapClasses:function(){return[""+this.prefixCls,this.prefixCls+"-circle",r({},this.prefixCls+"-status-"+this.progressStatus,this.progressStatus),r({},this.prefixCls+"-show-info",this.showInfo)]},strokeColor:function(){return c[this.progressStatus]},radius:function(){return 50-this.strokeWidth/2},pathString:function(){return"M 50,50 m 0,-"+this.radius+"\n          a "+this.radius+","+this.radius+" 0 1 1 0,"+2*this.radius+"\n          a "+this.radius+","+this.radius+" 0 1 1 0,-"+2*this.radius},pathStyle:function(){var e=2*Math.PI*this.radius;return{strokeDasharray:e+"px "+e+"px",strokeDashoffset:(100-this.percent)/100*e+"px",transition:"stroke-dashoffset 0.3s ease 0s, stroke 0.3s ease"}},progressStatusIcon:function(){return"exception"===this.progressStatus?"cross":"check"}},compiled:function(){this._handleStatus()},watch:{percent:function(){this._handleStatus()}},methods:{_handleStatus:function(){100===parseInt(this.percent,10)?this.progressStatus="success":this.progressStatus=this.status||"normal"}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){return t in e?(0,s.default)(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0});var o=n(31),s=i(o),a=n(3),l=n(21),u=i(l);t.default={name:"v-progress-line",props:(0,a.defaultProps)({prefixCls:"ant-progress",status:(0,a.oneOf)(["normal","exception","active","success"],"normal"),progressStatus:"normal",showInfo:!0,percent:0,format:"",strokeWidth:10}),components:{vIcon:u.default},computed:{wrapClasses:function(){return[""+this.prefixCls,this.prefixCls+"-line",r({},this.prefixCls+"-status-"+this.progressStatus,this.progressStatus),r({},this.prefixCls+"-show-info",this.showInfo)]},progressStatusIcon:function(){return"exception"===this.progressStatus?"cross-circle":"check-circle"}},compiled:function(){this._handleStatus()},watch:{percent:function(){this._handleStatus()}},methods:{_handleStatus:function(){100===parseInt(this.percent,10)?this.progressStatus="success":this.progressStatus=this.status||"normal"}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e,t,n){return t in e?(0,s.default)(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0});var o=n(31),s=i(o),a=n(3),l=n(86),u=i(l),c=n(136),d=i(c);t.default={name:"v-timeline",props:(0,a.defaultProps)({prefixCls:"ant-timeline",pending:(0,a.oneOfType)([Boolean,String])}),ready:function(){this._mapPropsToChildComponent()},computed:{wrapClasses:function(){return[""+this.prefixCls,r({},this.prefixCls+"-pending",!!this.pending)]}},methods:{_mapPropsToChildComponent:function(){var e=this.$children.length;if(this.$children.forEach(function(t,n){t.last=n===e-1}),this.pending){var t="boolean"==typeof this.pending?"":this.pending,n=u.default.extend({template:'<v-timeline-item :pending="true">'+t+"</v-timeline-item>",components:{vTimelineItem:d.default}});(new n).$mount().$appendTo(this.$el)}}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(495),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(496),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(497),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(498),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(499),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(503),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(506),o=i(r),s=n(505),a=i(s);o.default.Breadcrumb=a.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(512),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(513),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(516),o=i(r),s=n(130),a=i(s);o.default.Item=a.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(517),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(518),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(519),o=i(r),s=n(85),a=i(s),l=n(131),u=i(l);o.default.Menu=a.default,o.default.Item=u.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(520),o=i(r),s=n(521),a=i(s);o.default.Item=a.default,t.default=o.default;
	},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(525),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(526),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(527),o=i(r),s=n(531),a=i(s),l=n(529),u=i(l),c=n(528),d=i(c);o.default.Item=d.default,o.default.ItemGroup=u.default,o.default.subMenu=a.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(){return d=d||l.default.newInstance({top:c})}function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,n=arguments[2],i=r();return i.notice({key:f,duration:t,content:e,type:n,show:!0}),function(){var e=f++;return{remove:function(){i.removeNotice(e)},setContent:function(t){i.setContent(e,t)}}}()}function s(){var e=r();e.removeNotice(f-1)}Object.defineProperty(t,"__esModule",{value:!0});var a=n(381),l=i(a),u=1.5,c=void 0,d=void 0,f=1;t.default={info:function(e,t){return o(e,t,"info")},success:function(e,t){return o(e,t,"success")},error:function(e,t){return o(e,t,"error")},warning:function(e,t){return o(e,t,"warning")},loading:function(e,t){return o(e,t,"loading")},loaded:function(){return s()},config:function(e){e.top&&(c=e.top)}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(532),o=i(r),s=n(86),a=i(s);o.default.newInstance=function(){var e=document.createElement("div");e.innerHTML="<v-message></v-message>",document.body.appendChild(e);var t=new a.default({el:e,data:{},components:{vMessage:o.default}}).$children[0];return{notice:function(e){t.add(e)},removeNotice:function(e){t.remove(e)},setContent:function(e,n){t.setContent(e,n)},component:t,destory:function(){document.body.removeChild(e)}}},t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(13),o=i(r),s=o.default||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e};t.default=function(){function e(){r.visible=!1,setTimeout(function(){r.$destroy(!0)},350)}var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=(0,p.getConfirmLocale)(),i=s({iconType:"question-circle",width:416,visible:!1},t);i.okText=i.okText||(i.okCancel?n.okText:n.justOkText),i.cancelText=i.cancelText||n.cancelText,"okCancel"in i||(i.okCancel=!0);var r=void 0,o=this.extend({template:'\n      <div>\n        <dialog\n          title=""\n          :wrap-class-name="wrapClasses"\n          :visible="visible"\n          :closable="false"\n          :has-footer="false"\n          :modal-width="width">\n          <div style="zoom: 1; overflow: hidden">\n            <div class="ant-confirm-body">\n              <v-icon :type="iconType"></v-icon>\n              <span class="ant-confirm-title">{{title}}</span>\n              <div class="ant-confirm-content">{{content}}</div>\n            </div>\n            <span> </span>\n            <div class="ant-confirm-btns" v-if="!okCancel">\n              <v-button :type="\'primary\'" :size="\'large\'" @click="_onOk">{{ okText }}</v-button>\n            </div>\n            <div class="ant-confirm-btns" v-else>\n              <v-button :type="\'ghost\'" :size="\'large\'" @click="_onCancel">{{ cancelText }}</v-button>\n              <v-button :type="\'primary\'" :size="\'large\'" @click="_onOk">{{ okText }}</v-button>\n            </div>\n          </div>\n        </dialog>\n      </div>\n    ',components:{Dialog:l.default,vIcon:c.default,vButton:f.default}}),a=document.createElement("div");return document.body.appendChild(a),new o({el:a,data:i,methods:{_onOk:function(){var t=this.onOk;if(t){var n=t();n&&n.then?n.then(e):e()}else e()},_onCancel:function(){var t=this.onCancel;if(t){var n=t();n&&n.then?n.then(e):e()}else e()}},compiled:function(){r=this,this.visible=!0},computed:{wrapClasses:function(){return"ant-confirm ant-confirm-"+this.type}}}),{destroy:e}};var a=n(132),l=i(a),u=n(21),c=i(u),d=n(52),f=i(d),p=n(384)},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(13),o=i(r),s=o.default||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},a=n(132),l=i(a),u=n(382),c=i(u);l.default.install=function(e){e.component(l.default.name,l.default),e.$modal=e.prototype.$modal={confirm:function(t){var n=s({type:"confirm",okCancel:!0},t);return c.default.call(e,n)},info:function(t){var n=s({type:"info",iconType:"info-circle",okCancel:!1},t);return c.default.call(e,n)},success:function(t){var n=s({type:"success",iconType:"check-circle",okCancel:!1},t);return c.default.call(e,n)},error:function(t){var n=s({type:"error",iconType:"exclamation-circle",okCancel:!1},t);return c.default.call(e,n)}}},t.default=l.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){u=e?(0,a.default)({},u,e):(0,a.default)({},l)}function o(){return u}Object.defineProperty(t,"__esModule",{value:!0});var s=n(13),a=i(s);t.changeConfirmLocale=r,t.getConfirmLocale=o;var l={okText:"确定",cancelText:"取消",justOkText:"知道了"},u=(0,a.default)({},l)},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(535),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(536),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}var r=n(84),o=i(r),s=n(83),a=i(s),l="function"==typeof a.default&&"symbol"==typeof o.default?function(e){return typeof e}:function(e){return e&&"function"==typeof a.default&&e.constructor===a.default&&e!==a.default.prototype?"symbol":typeof e},u=n(389),c=i(u);e.exports={data:function(){return{search:"",isOpen:!1,value:this.selected?(0,c.default)(this.selected):this.multiple?[]:null}},props:{localSearch:{type:Boolean,default:!0},options:{type:Array,required:!0},multiple:{type:Boolean,default:!1},selected:{},key:{type:String,default:!1},label:{type:String,default:!1},searchable:{type:Boolean,default:!0},clearOnSelect:{type:Boolean,default:!0},hideSelected:{type:Boolean,default:!1},placeholder:{type:String,default:"请选择"},maxHeight:{type:Number,default:300},allowEmpty:{type:Boolean,default:!0},resetAfter:{type:Boolean,default:!1},closeOnSelect:{type:Boolean,default:!0},customLabel:{type:Function,default:function(e,t){return e&&e.isTag?e.label:t?e[t]:e}},taggable:{type:Boolean,default:!1},tagPlaceholder:{type:String,default:"回车创建一个标签"},max:{type:Number,default:0},id:{default:null},optionsLimit:{type:Number,default:1e3}},created:function(){this.searchable&&this.adjustSearch()},computed:{filteredOptions:function(){var e=this.search||"",t=this.hideSelected?this.options.filter(this.isNotSelected):this.options;return this.localSearch&&(t=this.$options.filters.filterBy(t,this.search)),this.taggable&&e.length&&!this.isExistingOption(e)&&t.unshift({isTag:!0,label:e}),t.slice(0,this.optionsLimit)},valueKeys:function(){var e=this;return this.key?this.multiple?this.value.map(function(t){return t[e.key]}):this.value[this.key]:this.value},optionKeys:function(){var e=this;return this.label?this.options.map(function(t){return t[e.label]}):this.options},currentOptionLabel:function(){var e=this.getOptionLabel(this.value);return e?e.toString():""}},watch:{value:function(){this.resetAfter&&(this.$set("value",null),this.$set("search",null),this.$set("selected",null)),this.adjustSearch()},search:function(){this.search!==this.currentOptionLabel&&this.$emit("search-change",this.search,this.id)},selected:function(e,t){this.value=(0,c.default)(this.selected)}},methods:{isExistingOption:function(e){return!!this.options&&this.optionKeys.indexOf(e)>-1},isSelected:function(e){if(!this.value&&0!==this.value)return!1;var t=this.key?e[this.key]:e;return this.multiple?this.valueKeys.indexOf(t)>-1:this.valueKeys===t},isNotSelected:function(e){return!this.isSelected(e)},getOptionLabel:function(e){return"object"===("undefined"==typeof e?"undefined":l(e))&&null!==e?this.customLabel(e,this.label):e?this.customLabel(e):""},select:function(e){if(0===this.max||!this.multiple||this.value.length!==this.max)if(e.isTag)this.$emit("tag",e.label,this.id),this.search="";else{if(this.multiple){if(this.isSelected(e))return void this.removeElement(e);this.value.push(e)}else{var t=this.isSelected(e);if(t&&!this.allowEmpty)return;this.value=t?null:e}this.$emit("select",(0,c.default)(e),this.id),this.$emit("update",(0,c.default)(this.value),this.id),this.closeOnSelect&&this.deactivate()}},removeElement:function(e){if(this.allowEmpty||!(this.value.length<=1)){if(this.multiple&&"object"===("undefined"==typeof e?"undefined":l(e))){var t=this.valueKeys.indexOf(e[this.key]);this.value.splice(t,1)}else this.value.$remove(e);this.$emit("remove",(0,c.default)(e),this.id),this.$emit("update",(0,c.default)(this.value),this.id)}},removeLastElement:function(){0===this.search.length&&Array.isArray(this.value)&&this.removeElement(this.value[this.value.length-1])},activate:function(){this.isOpen||(this.isOpen=!0,this.searchable?(this.search="",this.$els.search.focus()):this.$el.focus(),this.$emit("open",this.id))},deactivate:function(){this.isOpen&&(this.isOpen=!1,this.searchable?(this.$els.search.blur(),this.adjustSearch()):this.$el.blur(),this.$emit("close",(0,c.default)(this.value),this.id))},adjustSearch:function(){var e=this;this.searchable&&this.clearOnSelect&&this.$nextTick(function(){e.search=e.multiple?"":e.currentOptionLabel})},toggle:function(){this.isOpen?this.deactivate():this.activate()}}}},function(e,t){"use strict";e.exports={data:function(){return{pointer:0,visibleElements:this.maxHeight/this.optionHeight}},props:{showPointer:{type:Boolean,default:!0},optionHeight:{type:Number,default:40}},computed:{pointerPosition:function(){return this.pointer*this.optionHeight}},watch:{filteredOptions:function(){this.pointerAdjust()}},methods:{addPointerElement:function(){this.filteredOptions.length>0&&this.select(this.filteredOptions[this.pointer]),this.pointerReset()},pointerForward:function(){this.pointer<this.filteredOptions.length-1&&(this.pointer++,this.$els.list.scrollTop<=this.pointerPosition-this.visibleElements*this.optionHeight&&(this.$els.list.scrollTop=this.pointerPosition-(this.visibleElements-1)*this.optionHeight))},pointerBackward:function(){this.pointer>0&&(this.pointer--,this.$els.list.scrollTop>=this.pointerPosition&&(this.$els.list.scrollTop=this.pointerPosition))},pointerReset:function(){this.closeOnSelect&&(this.pointer=0,this.$els.list&&(this.$els.list.scrollTop=0))},pointerAdjust:function(){this.pointer>=this.filteredOptions.length-1&&(this.pointer=this.filteredOptions.length?this.filteredOptions.length-1:0)},pointerSet:function(e){this.pointer=e}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}var r=n(84),o=i(r),s=n(83),a=i(s),l=n(22),u=i(l),c="function"==typeof a.default&&"symbol"==typeof o.default?function(e){return typeof e}:function(e){return e&&"function"==typeof a.default&&e.constructor===a.default&&e!==a.default.prototype?"symbol":typeof e},d=function e(t){if(Array.isArray(t))return t.map(e);if(t&&"object"===("undefined"==typeof t?"undefined":c(t))){for(var n={},i=(0,u.default)(t),r=0,o=i.length;r<o;r++){var s=i[r];n[s]=e(t[s])}return n}return t};e.exports=d},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(){return d=d||a.default.newInstance({top:u,duration:c})}function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l,i=arguments[3],o=r();return o.notice({key:f,duration:n,message:e,description:t,type:i,show:!0}),function(){var e=f++;return function(){o.removeNotice(e)}}()}Object.defineProperty(t,"__esModule",{value:!0});var s=n(391),a=i(s),l=4.5,u=24,c=4.5,d=void 0,f=1;t.default={info:function(e){return o(e.message,e.description,e.duration,"info")},success:function(e){return o(e.message,e.description,e.duration,"success")},error:function(e){return o(e.message,e.description,e.duration,"error")},warning:function(e){return o(e.message,e.description,e.duration,"warning")},open:function(e){return o(e.message,e.description,e.duration,"open")},config:function(e){e.top&&(u=e.top),e.duration&&(c=e.duration)}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(538),o=i(r),s=n(86),a=i(s);o.default.newInstance=function(e){var t=document.createElement("div");t.innerHTML="<v-notification :top='"+e.top+"'></v-notification>",document.body.appendChild(t);var n=new a.default({el:t,data:{},components:{vNotification:o.default}}).$children[0];return{notice:function(e){n.add(e)},removeNotice:function(e){n.remove(e)},component:n,destory:function(){document.body.removeChild(t)}}},t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(540),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(133),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.vProgressCircle=t.vProgressLine=void 0;var r=n(542),o=i(r),s=n(541),a=i(s);t.vProgressLine=o.default,t.vProgressCircle=a.default},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={left:{opacity:[1,0],translateX:[0,-30]},top:{opacity:[1,0],translateY:[0,-30]},right:{opacity:[1,0],translateX:[0,30]},bottom:{opacity:[1,0],translateY:[0,30]},alpha:{opacity:[1,0]},scale:{opacity:[1,0],scale:[1,0]},scaleBig:{opacity:[1,0],scale:[1,2]},scaleX:{opacity:[1,0],scaleX:[1,0]},scaleY:{opacity:[1,0],scaleY:[1,0]}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(543),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(545),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(547),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(551),o=i(r),s=n(550),a=i(s);o.default.Step=a.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(552),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(554),o=i(r),s=n(553),a=i(s);o.default.TabPane=a.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(555),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(556),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(557),o=i(r),s=n(136),a=i(s);o.default.Item=a.default,t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(561),o=i(r);t.default=o.default},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(563),o=i(r);t.default=o.default},function(e,t){"use strict";function n(e,t){var n=e.uid?"byUid":"byName",i=t.filter(function(t){return"byName"===n?t.name===e.name:t.uid===e.uid})[0];return i}Object.defineProperty(t,"__esModule",{value:!0}),t.default=n},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(566),o=i(r);t.default=o.default},function(e,t){"use strict";function n(e,t){var n="cannot post "+e.action+" "+t.status+"'",i=new Error(n);return i.status=t.status,i.method="post",i.url=e.action,i}function i(e){var t=e.responseText||e.response;if(!t)return t;try{return JSON.parse(t)}catch(e){return t}}function r(e){if("undefined"!=typeof XMLHttpRequest){var t=new XMLHttpRequest;t.upload&&(t.upload.onprogress=function(t){t.total>0&&(t.percent=t.loaded/t.total*100),e.onProgress(t)});var r=new FormData;if(r.append(e.filename,e.file),e.data)for(var o in e.data)r.append(o,e.data[o]);t.onerror=function(t){e.onError(t)},t.onload=function(){return 200!==t.status?e.onError(n(e,t),i(t)):void e.onSuccess(i(t))},t.open("post",e.action,!0),t.send(r)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r},function(e,t){"use strict";function n(){return"ant-upload-"+i+"-"+ ++r}Object.defineProperty(t,"__esModule",{value:!0}),t.default=n;var i=+new Date,r=0},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={MAC_ENTER:3,BACKSPACE:8,TAB:9,NUM_CENTER:12,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,PRINT_SCREEN:44,INSERT:45,DELETE:46,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,QUESTION_MARK:63,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,META:91,WIN_KEY_RIGHT:92,CONTEXT_MENU:93,NUM_ZERO:96,NUM_ONE:97,NUM_TWO:98,NUM_THREE:99,NUM_FOUR:100,NUM_FIVE:101,NUM_SIX:102,NUM_SEVEN:103,NUM_EIGHT:104,NUM_NINE:105,NUM_MULTIPLY:106,NUM_PLUS:107,NUM_MINUS:109,NUM_PERIOD:110,NUM_DIVISION:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUMLOCK:144,SEMICOLON:186,DASH:189,EQUALS:187,COMMA:188,PERIOD:190,SLASH:191,APOSTROPHE:192,SINGLE_QUOTE:222,OPEN_SQUARE_BRACKET:219,BACKSLASH:220,CLOSE_SQUARE_BRACKET:221,WIN_KEY:224,MAC_FF_META:224,WIN_IME:229};n.isTextModifyingKeyEvent=function(e){var t=e.keyCode;if(e.altKey&&!e.ctrlKey||e.metaKey||t>=n.F1&&t<=n.F12)return!1;switch(t){case n.ALT:case n.CAPS_LOCK:case n.CONTEXT_MENU:case n.CTRL:case n.DOWN:case n.END:case n.ESC:case n.HOME:case n.INSERT:case n.LEFT:case n.MAC_FF_META:case n.META:case n.NUMLOCK:case n.NUM_CENTER:case n.PAGE_DOWN:case n.PAGE_UP:case n.PAUSE:case n.PRINT_SCREEN:case n.RIGHT:case n.SHIFT:case n.UP:case n.WIN_KEY:case n.WIN_KEY_RIGHT:return!1;default:return!0}},n.isCharacterKey=function(e){if(e>=n.ZERO&&e<=n.NINE)return!0;if(e>=n.NUM_ZERO&&e<=n.NUM_MULTIPLY)return!0;if(e>=n.A&&e<=n.Z)return!0;if(window.navigation.userAgent.indexOf("WebKit")!==-1&&0===e)return!0;switch(e){case n.SPACE:case n.QUESTION_MARK:case n.NUM_PLUS:case n.NUM_MINUS:case n.NUM_PERIOD:case n.NUM_DIVISION:case n.SEMICOLON:case n.DASH:case n.EQUALS:case n.COMMA:case n.PERIOD:case n.SLASH:case n.APOSTROPHE:case n.SINGLE_QUOTE:case n.OPEN_SQUARE_BRACKET:case n.BACKSLASH:case n.CLOSE_SQUARE_BRACKET:return!0;default:return!1}},t.default=n},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=t.inBrowser="undefined"!=typeof window&&"[object Object]"!==Object.prototype.toString.call(window);t.isIE9=n&&navigator.userAgent.toLowerCase().indexOf("msie 9.0")>0},function(e,t){"use strict";function n(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0}function i(e,t){return 0===s.length?void window.setTimeout(t,0):void s.forEach(function(i){n(e,i,t)})}function r(e,t){0!==s.length&&s.forEach(function(n){l(e,n,t)})}Object.defineProperty(t,"__esModule",{value:!0}),t.addEventListener=n,t.addEndEventListener=i,t.removeEndEventListener=r;var o={transitionend:{transition:"transitionend",WebkitTransition:"webkitTransitionEnd",MozTransition:"mozTransitionEnd",OTransition:"oTransitionEnd",msTransition:"MSTransitionEnd"},animationend:{animation:"animationend",WebkitAnimation:"webkitAnimationEnd",MozAnimation:"mozAnimationEnd",OAnimation:"oAnimationEnd",msAnimation:"MSAnimationEnd"}},s=[],a=function(){var e=document.createElement("div"),t=e.style;"AnimationEvent"in window||delete o.animationend.animation,"TransitionEvent"in window||delete o.transitionend.transition;for(var n in o){var i=o[n];for(var r in i)if(r in t){s.push(i[r]);break}}};"undefined"!=typeof window&&a();var l=function(e,t,n){e.removeEventListener(t,n,!1)}},function(e,t){"use strict";function n(){return Date.now()+"_"+i++}Object.defineProperty(t,"__esModule",{value:!0}),t.guid=n;var i=0},function(e,t){"use strict";function n(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function i(e){return e.replace(s,a)}function r(e){var t=e.split(" "),n={};return t.forEach(function(e){n[e]=1}),n}function o(e,t,n){var i=void 0,r=void 0,o=void 0,s=null,a=0;n||(n={});var l=function(){a=n.leading===!1?0:Date.now(),s=null,o=e.apply(i,r),s||(i=r=null)};return function(){var u=Date.now();a||n.leading!==!1||(a=u);var c=t-(u-a);return i=this,r=arguments,c<=0||c>t?(s&&(clearTimeout(s),s=null),a=u,o=e.apply(i,r),s||(i=r=null)):s||n.trailing===!1||(s=setTimeout(l,c)),o}}Object.defineProperty(t,"__esModule",{value:!0}),t.camelcaseToHyphen=n,t.camelize=i,t.strToObj=r,t.throttle=o;var s=/-(\w)/g,a=function(e,t){return t?t.toUpperCase():""}},function(e,t,n){"use strict";n(258),n(257),n(261),n(260),n(256),n(264),n(268),n(263),n(267),n(259),n(266),n(265),n(270),n(269),n(262)},function(e,t){"use strict";function n(e){for(var t in e)if(e.hasOwnProperty(t)){var n=function(){var n=e[t];if(n&&n.name&&window[n.name]===n)return e[t]={type:n,default:null},"continue";var i=o.call(n).replace("[object ","").replace("]","");return"Object"!==i||null==n.type&&null==n.default&&null==n.validator&&null==n.twoWay&&null==n.required?"Array"===i||"Object"===i?(e[t]={type:window[i],default:function(){return n}},"continue"):void(e[t]={type:window[i],default:n}):"continue"}();if("continue"===n)continue}return e}function i(e,t){var n={};return n.default=t,n.validator=function(t){if(null==t)return!0;for(var n=0;n<e.length;n++){var i=e[n],r=void 0;if(r="string"==typeof i?i:i.name,o.call(t).indexOf(r)>-1)return!0}return!1},n}function r(e,t){var n={};return n.default=t,n.validator=function(t){if(null==t)return!0;for(var n=0;n<e.length;n++)if(t===e[n])return!0;return!1},n}Object.defineProperty(t,"__esModule",{value:!0}),t.defaultProps=n,t.oneOfType=i,t.oneOf=r;var o=Object.prototype.toString;String.name||(String.name="String"),Number.name||(Number.name="Number"),Boolean.name||(Boolean.name="Boolean"),Object.name||(Object.name="Object"),Array.name||(Array.name="Array");t.any={validator:function(e){return!0}}},function(e,t){"use strict";function n(e){return e?1===e.nodeType&&"trigger"===e.getAttribute("slot")?e:n(e.nextSibling):null}Object.defineProperty(t,"__esModule",{value:!0}),t.default={ready:function(){this._bindTriggerEvent()},methods:{_getTriggerTarget:function(){var e=n(this.$el),t=void 0;t="trigger"===e.getAttribute("slot")?[e]:n(this.$el).querySelectorAll('[slot="trigger"]');var i=t.length;if(i){var r=t[i-1],o=r.children;return o&&1===o.length?o[o.length-1]:r}return null},_bindTriggerEvent:function(){var e=this._getTriggerTarget();e&&(e.addEventListener("blur",this._onBlur.bind(this),!1),e.addEventListener("click",this._onClick.bind(this),!1),e.addEventListener("focus",this._onFocus.bind(this),!1),e.addEventListener("mousedown",this._onMouseDown.bind(this),!1),e.addEventListener("mouseenter",this._onMouseEnter.bind(this),!1),e.addEventListener("mouseleave",this._onMouseLeave.bind(this),!1),e.addEventListener("touchstart",this._onTouchStart.bind(this),!1))}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-alert",props:{type:{type:String,require:!0,default:"info"},closable:{type:Boolean,default:!1},closeText:{type:String,require:!1},message:{type:String,require:!0},description:{type:String,require:!1},showIcon:{type:Boolean,default:!1},onClose:{type:Function,require:!1,default:function(){}}},data:function(){return{iconClass:""}},computed:{iconClass:function e(){var e="";switch(this.type){case"success":e="check-circle";break;case"info":e="info-circle";break;case"warning":e="exclamation-circle";break;case"error":e="cross-circle"}return this.description&&(e+="-o"),e}},methods:{handleClose:function(e){this.$remove(),this.onClose()}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(3);t.default={name:"v-back-top",data:function(){return{prefix:"ant-back-top",visible:!1}},props:(0,i.defaultProps)({visibilityHeight:400,onClick:function(){}}),created:function(){window.addEventListener("scroll",this.handleScroll)},methods:{handleScroll:function(){var e=this.getScroll(window,!0);this.visible=e>this.visibilityHeight},getScroll:function(e,t){var n=e["page"+(t?"Y":"X")+"Offset"],i="scroll"+(t?"Top":"Left");if("number"!=typeof n){var r=e.document;n=r.documentElement[i],"number"!=typeof n&&(n=r.body[i])}return n},scrollToTop:function(){this.setScrollTop(0),this.onClick()},setScrollTop:function(e){document.body.scrollTop=e,document.documentElement.scrollTop=e}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-badge",props:{count:{type:Number,default:1},overflowCount:{type:Number,default:99},dot:{type:Boolean,default:!1},show:{type:Boolean,default:!0},styles:Object},ready:function(){this._slotContents||(this.slot=!1)},computed:{num:function e(){var e=void 0;return this.count>this.overflowCount?e=this.overflowCount+"+":this.dot||(e=this.count),e}},data:function(){return{slot:!0}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(3),a=n(20);t.default={data:function(){return{prefix:"ant-select",style:{},container:null}},props:(0,s.defaultProps)({popupContainer:function(){return document.body},position:"absolute",multiple:!1,allowClear:!1,open:!1,onClear:function(){},value:[]}),ready:function(){var e=this;this.container=this.popupContainer(),this.$els.dropdown.style.position=this.position,this.container.appendChild(this.$els.dropdown),this.$nextTick(function(){e.setPosition()}),window.addEventListener("resize",function(){clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.setPosition()},200)})},computed:{wrapCls:function(){return[this.prefix,this.prefix+"-enabled",(0,o.default)({},this.prefix+"-open",this.open)]},selectionCls:function(){var e=this.multiple?"multiple":"single";return[this.prefix+"-selection",this.prefix+"-selection--"+e]},placeholderCls:function(){return[(0,o.default)({},this.prefix+"-selection__placeholder",!this.value.length)]},dropdownCls:function(){var e=this.multiple?"multiple":"single";return[this.prefix+"-dropdown",this.prefix+"-dropdown--"+e,this.prefix+"-dropdown-placement-bottomLeft"]}},methods:{setPosition:function(){if(this.$el){var e=(0,a.getOffset)(this.$els.inputArea,this.container);this.$set("style",{top:e.bottom+4+"px",left:e.left+"px",minWidth:e.right-e.left+"px"})}},openDropdown:function(){this.open=!this.open},clearSelected:function(){this.onClear(this.value),this.value=[]},clearSingle:function(e){var t=this.value.splice(e,1);this.onClear(t)},hide:function(e){e.stopPropagation()}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(22),a=i(s),l=function(e,t,n,i,r){var o=(0,a.default)(e).map(parseFloat);if(t)for(var s=i;s<=r;s+=n)o.push(s);return o};t.default={props:["prefixCls","marks","dots","step","included","lowerBound","upperBound","max","min"],computed:{dotsArr:function(){var e=this;l(this.marks,this.dots,this.step,this.min,this.max).map(function(t){var n={},i=(t-e.min)/e.range*100+"%";return n.point=t,n.style={left:i},n.isActived=!e.included&&t===e.upperBound||e.included&&t<=e.upperBound&&t>=e.lowerBound,n.pointClass=[prefixCls+"-dot",(0,o.default)({},prefixCls+"-dot-active",n.isActived)],n})}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(126),o=i(r);t.default={props:["className","offset","tipTransitionName","tipFormatter","value","dragging","noTip"],directive:{vTooltip:o.default},data:function(){return{isTooltipVisible:!1}},computed:{tipValue:function(){return this.tipFormatter?this.tipFormatter(this.value):this.value}},methods:{_showTooltip:function(){this.isTooltipVisible=!0},_hideTooltip:function(){this.isTooltipVisible=!1}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(22),a=i(s);t.default={props:["className","marks","included","upperBound","lowerBound","max","min"],computed:{marksKeys:function(){return(0,a.default)(this.marks)},marksArr:function(){var e=this;return this.marksKeys.map(parseFloat).map(function(t){var n={};n.point=t,n.isActived=!e.included&&t===e.upperBound||e.included&&t<=e.upperBound&&t>=e.lowerBound,n.className=[e.className+"-text",(0,o.default)({},e.className+"-text-active",n.isActived)],n.style={width:e.markWidth+"%",left:(t-e.min)/e.range*100-e.markWidth/2+"%"}})},markWidth:function(){return 100/(this.marksKeys.length-1)*.9}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(22),s=i(o),a=n(4),l=i(a),u=n(3),c=n(504),d=i(c),f=n(501),p=i(f),h=n(500),v=i(h),m=n(502),y=i(m),g=function(e){return e.touches.length>1||"touchend"===e.type.toLowerCase()&&e.touches.length>0},x=function(e){return e.touches[0].pageX},b=function(e){return e.pageX},_=function(e){e.stopPropagation(),e.preventDefault()};t.default={props:(0,u.defaultProps)((r={prefixCls:"vc-slider",className:"",tipTransitionName:"",min:0,max:100,step:1,value:(0,u.oneOfType)([Number,Array]),defaultValue:(0,u.oneOfType)([Number,Array],0),marks:{},included:!0,disabled:!1,dots:!1,range:!1},(0,l.default)(r,"tipTransitionName",String),(0,l.default)(r,"tipFormatter",function(e){return e}),(0,l.default)(r,"onBeforeChange",function(){}),(0,l.default)(r,"onChange",function(){}),(0,l.default)(r,"onAfterChange",function(){}),r)),data:function(){return{handle:null,recent:null,lowerBound:null,upperBound:null}},components:{Track:d.default,Handle:p.default,Dots:v.default,Marks:y.default},compiled:function(){var e=this.$data,t=e.range,n=e.min,i=e.max,r=t?[n,n]:n,o=null!=this.defaultValue?this.defaultValue:r,s=null!=this.value?this.value:o,a=void 0,l=void 0;this.range?(l=this._trimAlignValue(s[0]),a=this._trimAlignValue(s[1])):a=this._trimAlignValue(s);var u=void 0;this.range&&a===l?(l===i&&(u="lowerBound"),a===n&&(u="upperBound")):u="upperBound",this.recent=u,this.upperBound=a,this.lowerBound=l||n},computed:{sliderClasses:function(){return[this.prefixCls,(0,l.default)({},this.prefixCls+"-disabled",this.disabled),(0,l.default)({},this.className,!!this.className)]},isNoTip:function(){return null===this.step&&!this.tipFormatter},upperOffset:function(){return this._calcOffset(this.upperBound);
	},lowerOffset:function(){return this._calcOffset(this.lowerBound)}},methods:{_onChange:function(e,t){var n=null==this.value;n&&this.$set(e,t);var i={upperBound:this.upperBound,lowerBound:this.lowerBound};i[e]=t;var r=this.range?[i.lowerBound,i.upperBound]:i.upperBound;this.onChange(r)},_onTouchStart:function(e){if(!this.disabled&&!g(e)){var t=x(e);this._onStart(t),this._addDocumentEvents("touch"),_(e)}},_onTouchMove:function(e){if(g(e))return void this._end("touch");var t=x(e);this._onMove(e,t)},_onMouseDown:function(e){if(!this.disabled){var t=b(e);this._onStart(t),this._addDocumentEvents("mouse"),_(e)}},_onMouseMove:function(e){var t=b(e);this._onMove(e,t)},_onStart:function(e){this.onBeforeChange(this._getValue());var t=this._calcValueByPos(e);this.startValue=t,this.startPosition=e;var n=this.upperBound,i=this.lowerBound,r="upperBound";if(this.range){var o=Math.abs(n-t)>Math.abs(i-t);o&&(r="lowerBound");var s=n===i;s&&(r=this.recent),s&&t!==n&&(r=t<n?"lowerBound":"upperBound")}this.handle=r,this.recent=r;var a=this[r];t!==a&&this._onChange(r,t)},_onMove:function(e,t){_(e);var n=t-this.startPosition,i=n/this._getSliderLength()*(this.max-this.min),r=this._trimAlignValue(this.startValue+i),o=this[this.handle];r!==o&&this._onChange(this.handle,r)},_addDocumentEvents:function(e){"touch"===e?(this.onTouchMoveListener=(0,u.addEventListener)(document,"touchmove",this._onTouchMove.bind(this)),this.onTouchUpListener=(0,u.addEventListener)(document,"touchend",this._end.bind(this,"touch"))):"mouse"===e&&(this.onMouseMoveListener=(0,u.addEventListener)(document,"mousemove",this._onMouseMove.bind(this)),this.onMouseUpListener=(0,u.addEventListener)(document,"mouseup",this._end.bind(this,"mouse")))},_removeEvents:function(e){"touch"===e?(this.onTouchMoveListener.remove(),this.onTouchUpListener.remove()):"mouse"===e&&(this.onMouseMoveListener.remove(),this.onMouseUpListener.remove())},_end:function(e){this._removeEvents(e),this.onAfterChange(this._getValue()),this.handle=null},_getValue:function(){var e=this.lowerBound,t=this.upperBound;return this.range?[e,t]:t},_getSliderLength:function(){var e=this.$el;return e?e.clientWidth:0},_getSliderStart:function(){var e=this.$el,t=e.getBoundingClientRect();return t.left},_getPrecision:function(){var e=this.step.toString(),t=0;return e.indexOf(".")>=0&&(t=e.length-e.indexOf(".")-1),t},_trimAlignValue:function(e){var t=this.handle,n=this.lowerBound,i=this.upperBound,r=this.marks,o=this.step,a=this.min,l=this.max,u=e;u<=a&&(u=a),u>=l&&(u=l),"upperBound"===t&&u<=n&&(u=n),"lowerBound"===t&&u>=i&&(u=i);var c=(0,s.default)(r).map(parseFloat);if(null!==o){var d=Math.round(u/o)*o;c.push(d)}var f=c.map(function(e){return Math.abs(u-e)}),p=c[f.indexOf(Math.min.apply(Math,f))];return null!==o?parseFloat(p.toFixed(this._getPrecision())):p},_calcOffset:function(e){var t=this.min,n=this.max,i=(e-t)/(n-t);return 100*i},_calcValue:function(e){var t=this.min,n=this.max,i=e/this._getSliderLength();return i*(n-t)+t},_calcValueByPos:function(e){var t=e-this._getSliderStart(),n=this._trimAlignValue(this._calcValue(t));return n}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={props:["offset","length","included","className"],computed:{wrapStyle:function(){return{left:this.offset+"%",width:this.length+"%",visibility:this.included?"visible":"hidden"}}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-breadcrumb",props:{name:String,href:String,separator:String,icon:String}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-breadcrumbs",computed:{wrapClasses:function(){return["ant-breadcrumb"]}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-button",data:function(){return{clicked:!1,clickTimer:null}},props:{type:{type:String,coerce:function(e){if(e)return"ant-btn-"+e}},htmlType:{type:String,default:"button"},icon:String,shape:{type:String,coerce:function(e){if(e)return"ant-btn-"+e}},size:{type:String,coerce:function(e){var t={large:"lg",small:"sm"}[e];if(t)return"ant-btn-"+t}},loading:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1}},methods:{_click:function(){var e=this;this.clicked=!0,this.clickTimer&&clearTimeout(this.clickTimer),this.clickTimer=setTimeout(function(){return e.clicked=!1},500)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={name:"v-button-group",data:function(){return{prefix:"ant-btn-group"}},props:{size:String},computed:{wrapClasses:function(){var e={small:"sm",large:"lg"}[this.size];return[this.prefix,(0,o.default)({},this.prefix+"-"+e,e)]}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-card",data:function(){return{prefix:"ant-card",extra:!1}},props:{title:String,bordered:{type:Boolean,default:!0},bodyStyle:Object},ready:function(){this._slotContents&&this._slotContents.extra&&(this.extra=!0)}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(54),o=i(r),s=n(4),a=i(s),l=n(10),u=i(l),c=n(514),d=i(c),f=n(20);t.default={name:"v-cascader",data:function(){return{prefix:"ant-cascader",style:{},container:null,open:!1,label:"",path:[-1]}},props:{popupContainer:{type:Function,default:function(){return document.body}},position:{type:String,default:"absolute"},options:Array,value:{type:Array,default:function(){return[]}},placeholder:{type:String,default:"请选择"},size:String,disabled:{type:Boolean,default:!1},allowClear:{type:Boolean,default:!0}},ready:function(){var e=this;this.init(),this.container=this.popupContainer(),this.$els.menu.style.position=this.position,this.container.appendChild(this.$els.menu),this.$nextTick(function(){e.setPosition()}),window.addEventListener("resize",function(){clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.setPosition()},200)}),this.clickListener=function(){e.setOpen(!1)},window.addEventListener("click",this.clickListener)},beforeDestroy:function(){window.removeEventListener("click",this.clickListener)},watch:{path:function(e){var t=[],n=[],i=this.options,r=!0,o=!1,s=void 0;try{for(var a,l=(0,u.default)(e);!(r=(a=l.next()).done);r=!0){var c=a.value;if(c<0)break;t.push(i[c].value),n.push(i[c].label),i=i[c].children}}catch(e){o=!0,s=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw s}}this.$set("value",t),this.$set("label",n.join(" / "))},value:function(e){this.$emit("change",e)}},computed:{pickerCls:function(){return[this.prefix+"-picker",(0,a.default)({},this.prefix+"-picker-disabled",this.disabled)]},inpCls:function(){var e={large:"lg",small:"sm"}[this.size];return["ant-input","ant-cascader-input",(0,a.default)({},"ant-input-"+e,e)]}},methods:{init:function(){var e=[],t=this.options,n=!0,i=!1,r=void 0;try{for(var s,a=(0,u.default)(this.value);!(n=(s=a.next()).done);n=!0){var l=s.value,c=!0,d=!1,f=void 0;try{for(var p,h=(0,u.default)(t.entries());!(c=(p=h.next()).done);c=!0){var v=(0,o.default)(p.value,2),m=v[0],y=v[1];if(y.value==l){e.push(m),t=t[m].children;break}}}catch(e){d=!0,f=e}finally{try{!c&&h.return&&h.return()}finally{if(d)throw f}}}}catch(e){i=!0,r=e}finally{try{!n&&a.return&&a.return()}finally{if(i)throw r}}t&&e.push(-1),this.$set("path",e)},clear:function(){this.path=[-1]},setPosition:function(){if(this.$el){var e=(0,f.getOffset)(this.$el,this.container);this.$set("style",{top:e.bottom+4+"px",left:e.left+"px"})}},getMenuData:function(e){for(var t=this.options,n=0;n<e;n++){var i=this.path[n];if(!t[i].children){t=null;break}t=t[i].children}return t},setOpen:function(e){this.open=e},toggleMenu:function(){this.disabled||(this.open=!this.open)},changeMenuValue:function(e,t){this.path.$set(e,t),this.getMenuData(e+1)?(this.path.$set(e+1,-1),this.path.splice(e+2,this.path.length-1-e-1)):(this.path.splice(e+1,this.path.length-1-e),this.open=!1)}},components:{menu:d.default}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={data:function(){return{prefix:"ant-cascader-menu"}},props:{key:Number,value:{type:Number,default:-1},data:{type:Array,default:function(){return[]}}},methods:{select:function(e,t){t||(this.value=e,this.$emit("change",this.key,e))}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-checkbox",props:{checked:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},onChange:{type:Function,default:function(){}},value:String},methods:{_check:function(){this.disabled||(this.checked=!this.checked,this.onChange(this))}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),o=i(r),s=n(129),a=i(s);t.default={name:"v-checkbox-group",props:{options:Array,value:{type:Array,twoWay:!0,default:function(){return[]}},onChange:{type:Function,default:function(){}}},data:function(){var e=this;return{change:function(t){var n=[],i=!0,r=!1,s=void 0;try{for(var a,l=(0,o.default)(e.$children);!(i=(a=l.next()).done);i=!0){var u=a.value;u.checked&&n.push(u.value)}}catch(e){r=!0,s=e}finally{try{!i&&l.return&&l.return()}finally{if(r)throw s}}e.$set("value",n),e.onChange(n)}}},watch:{value:function(){this.setChecked()}},created:function(){this.value.length&&this.setChecked()},methods:{setChecked:function(){for(var e=0;e<this.options.length;e++)this.value.includes(this.options[e].value)?this.$set("options["+e+"].checked",!0):this.$set("options["+e+"].checked",!1)}},components:{vCheckbox:a.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),o=i(r),s=n(130);i(s);t.default={name:"v-collapse",props:{accordion:{type:Boolean,default:!1},activeKey:Array,defaultActiveKey:String,onChange:{type:Function,default:function(e){}}},events:{"child-open":function(e){if(this.accordion){var t=!0,n=!1,i=void 0;try{for(var r,s=(0,o.default)(this.$children);!(t=(r=s.next()).done);t=!0){var a=r.value;a.key===e?a.open=!0:a.open=!1}}catch(e){n=!0,i=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw i}}}this.onChange(e)}},watch:{activeKey:function(){}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),o=i(r);t.default={name:"v-collapse-item",data:function(){return{prefix:"ant-collapse",open:!1}},props:{key:String,header:String},ready:function(){var e=this.$parent.activeKey;if(e){var t=!0,n=!1,i=void 0;try{for(var r,s=(0,o.default)(e);!(t=(r=s.next()).done);t=!0){var a=r.value;this.key==a&&(this.open=!0)}}catch(e){n=!0,i=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw i}}}else this.$parent.defaultActiveKey&&this.$parent.defaultActiveKey==this.key&&(this.open=!0)},computed:{h:function e(){var e=void 0;return e=this.open?this.$el.children[1].children[0].clientHeight+"px":"0"}},methods:{handleOpen:function(){this.open=!this.open,this.open&&this.$dispatch("child-open",this.key)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(85),o=i(r),s=n(20),a=["click","hover"];t.default={name:"v-dropdown",components:{vDropdownMenu:o.default},props:{popupContainer:{type:Function,default:function(){return document.body}},position:{type:String,default:"absolute"},options:{required:!1,type:Array},trigger:{validator:function(e){return a.indexOf(e)!=-1},default:"hover"}},data:function(){return{style:{},container:null,isOpen:!1}},ready:function(){var e=this;this.container=this.popupContainer(),this.$els.content.style.position=this.position,this.container.appendChild(this.$els.content),this.$nextTick(function(){e.setPosition()}),window.addEventListener("resize",function(){clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.setPosition()},200)}),this.initEvent()},beforeDestroy:function(){document.removeEventListener("click",this.close)},methods:{setPosition:function(){if(this.$el){var e=(0,s.getOffset)(this.$el,this.container);this.$set("style",{top:e.bottom+"px",left:e.left+"px"})}},initEvent:function(){var e=this.trigger,t=this.mouseEnter,n=this.mouseLeave,i=this.click,r=this.$els.dropdown,o=this.$els.content;"hover"===e?(r.addEventListener("mouseenter",t),r.addEventListener("mouseleave",this.hidden),o.addEventListener("mouseenter",t),o.addEventListener("mouseleave",n)):"click"===e&&r.addEventListener("click",i),document.addEventListener("click",this.close)},click:function(e){e.stopPropagation(),this.isOpen=!this.isOpen},mouseEnter:function(){this.isOpen=!0},hidden:function(e){this.isOpen=!1},mouseLeave:function(){var e=this;this.timeout=setTimeout(function(){e.isOpen=!1},100)},close:function(e){e.stopPropagation(),this.isOpen&&(this.isOpen=!1,this.$broadcast("hideSubmenu",this))}},events:{showSubmenu:function(e){clearTimeout(this.timeout)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(85),o=i(r);t.default={name:"v-dropdown-item",components:{vDropdownMenu:o.default},data:function(){return{}},props:{trigger:{required:!1,type:String,default:"hover"},option:{type:Object,required:!0},disabled:{type:Boolean,default:!1},divided:{type:Boolean,default:!1}},computed:{hasChildren:function(){return!!this.option.children},itemCls:function(){return this.option.children?["ant-dropdown-menu-submenu-vertical","ant-dropdown-menu-submenu"]:[{"ant-dropdown-menu-item-disabled":this.disabled},"ant-dropdown-menu-item"]}},ready:function(){if(this.hasChildren){var e=this.trigger,t=this.mouseEnter,n=this.mouseLeave,i=this.$els.item;"hover"===e&&(i.addEventListener("mouseenter",t),i.addEventListener("mouseleave",n))}},methods:{mouseEnter:function(){this.$broadcast("showSubmenu",this)},mouseLeave:function(){var e=this;this.timeout=setTimeout(function(){e.$broadcast("hideSubmenu",e)},100)},click:function(e){e.stopPropagation(),"click"===this.trigger&&this.$broadcast("toggleSubmenu",this)},handleClick:function(e){this.$dispatch("itemclick",this.option)}},events:{showSubmenu:function(e){e!==this&&(clearTimeout(this.timeout),this.$dispatch("showSubmenu",this))},hideSubmenu:function(e){this.$broadcast("hideSubmenu",this)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(131),o=i(r);t.default={name:"v-dropdown-menu",components:{vDropdownItem:o.default},props:{type:{required:!1,type:String,default:"root"},trigger:{required:!1,type:String,default:"hover"},options:{required:!1,type:Array}},computed:{dropdownMenuCls:function(){return"root"==this.type?["ant-dropdown-menu-light","ant-dropdown-menu-root"]:"sub"==this.type?["ant-dropdown-menu-sub",{"ant-dropdown-menu-hidden":!this.isOpen}]:void 0}},data:function(){return{isOpen:!1}},ready:function(){this.$els.list;if("hover"===this.trigger){var e=this.mouseEnter,t=this.mouseLeave,n=this.$els.list;n.addEventListener("mouseenter",e),n.addEventListener("mouseleave",t)}},methods:{mouseEnter:function(){this.$dispatch("showSubmenu",this)},mouseLeave:function(){var e=this;this.timeout=setTimeout(function(){e.$broadcast("hideSubmenu",e)},100)}},events:{showSubmenu:function(e){this.isOpen=!0,clearTimeout(this.timeout)},hideSubmenu:function(e){this.isOpen=!1,this.$broadcast("hideSubmenu",this)},toggleSubmenu:function(e){this.isOpen=!this.isOpen}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(53),o=i(r);n(3);t.default={name:"v-form",data:function(){return{prefix:"ant-form",fields:{},initModel:{},fieldLength:0}},props:{model:Object,rules:Object,direction:{type:String,default:"inline"}},created:function(){var e=this;this.$on("form.addField",function(t){e.fields[t.prop]=t,e.fieldLength++}),this.$on("form.removeField",function(t){delete e.fields[t.prop],e.fieldLength--})},ready:function(){this.model&&(this.initModel=JSON.parse((0,o.default)(this.model)))},computed:{wrapClasses:function(){return this.prefix+" "+this.prefix+"-"+this.direction}},methods:{resetFields:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(e){var t=JSON.parse((0,o.default)(this.initModel));for(var n in this.model)this.fields[n]?this.fields[n].resetField():this.model[n]=t[n]}else for(var i in this.fields)this.fields[i].resetField()},validate:function(e){var t=this,n=0,i=!0;for(var r in this.fields){var o=this.fields[r];o.validate("",function(r){r&&(i=!1),++n===t.fieldLength&&e(i)})}},validateField:function(e,t){var n=this.fields[e];if(!n)throw new Error("must call validateField with valid prop string!");n.validate("",t)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(53),o=i(r),s=n(4),a=i(s),l=n(232),u=i(l),c=n(120),d=n(3);t.default={name:"v-form-item",data:function(){return{prefix:"ant-form-item",valid:!0,validateDisabled:!1,initialValue:null}},props:(0,d.defaultProps)({prefixCls:"ant-form",prop:String,test:(0,d.oneOfType)([String,Number,Boolean,Object,Array]),label:String,labelCol:{},wrapperCol:{},help:String,validateStatus:String,hasFeedback:!1,required:!1,rules:(0,d.oneOfType)([Object,Array])}),watch:{fieldValue:function(){this.reset||this.validate()}},components:{vRow:c.vRow,vCol:c.vCol},computed:{itemCls:function(){return["ant-row",this.prefix,(0,a.default)({},this.prefix+"-with-help",this.help)]},labelCls:function(){return this.prefix+"-label"},controlCls:function(){var e={error:"has-error",warning:"has-warning",success:"has-success",validating:"is-validating"}[this.validateStatus];return[this.prefix+"-control",{"has-feedback":this.hasFeedback},(0,a.default)({},e,e)]},form:function(){for(var e=this.$parent;"v-form"!==e.$options.name;)e=e.$parent;return e},fieldValue:{cache:!1,get:function(){var e=this.form.model;if(e&&this.prop){var t=this.prop.split(":");return t.length>1?e[t[0]][t[1]]:e[this.prop]}}}},ready:function(){var e=this;if(this.prop){this.$dispatch("form.addField",this),this.initialValue=this.getInitialValue();var t=this.getRules();t.length&&t.every(function(t){if(t.required)return e.required=!0,!1})}},beforeDestroy:function(){this.$dispatch("form.removeField",this)},methods:{validate:function(e,t){var n=this,i=this.getFilteredRule(e);if(!i||0===i.length)return t&&t(),!0;this.validateStatus="validating";var r={};r[this.prop]=i;var o=new u.default(r),s={};s[this.prop]=this.fieldValue,o.validate(s,{firstFields:!0},function(e,i){n.valid=!e,n.help=e?e[0].message:"",t&&t(e),n.validateStatus=n.help?"error":"success"})},resetField:function(){var e=this;this.validateStatus="",this.valid=!0,this.help="",this.reset=!0;var t=this.form.model,n=this.fieldValue;Array.isArray(n)&&n.length?(this.validateDisabled=!0,t[this.prop]=[]):n&&(this.validateDisabled=!0,t[this.prop]=this.initialValue),this.$nextTick(function(){e.reset=!1})},getFilteredRule:function(e){var t=this.getRules();return t.filter(function(t){return!t.trigger||t.trigger.indexOf(e)!==-1})},getRules:function(){var e=this.form.rules,t=this.rules;return e=e?e[this.prop]:[],[].concat(t||e||[])},getInitialValue:function(){var e=this.form.model[this.prop];return void 0===e?e:JSON.parse((0,o.default)(e))}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-col",props:{span:[String,Number],offset:[String,Number],push:[String,Number],pull:[String,Number],order:[String,Number]},computed:{classes:function(){return[this.span?"ant-col-"+this.span:"",this.offset?"ant-col-offset-"+this.offset:"",this.push?"ant-col-push-"+this.push:"",this.pull?"ant-col-pull-"+this.pull:"",this.order?"ant-col-order-"+this.order:""]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),o=i(r),s=n(3);t.default={name:"v-row",props:(0,s.defaultProps)({gutter:Number,pack:String,display:String,align:String}),ready:function(){if(this.gutter){var e=this.gutter/2;this.$el.style.marginLeft=-e+"px",this.$el.style.marginRight=-e+"px";var t=!0,n=!1,i=void 0;try{for(var r,s=(0,o.default)(this.$children);!(t=(r=s.next()).done);t=!0){var a=r.value;a.$el.style.paddingLeft=e+"px",a.$el.style.paddingRight=e+"px"}}catch(e){n=!0,i=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw i}}}},computed:{classes:function(){return[this.display?"ant-row-"+this.display:"",this.pack?"ant-row-flex-"+this.pack:"",this.align?"ant-row-flex-"+this.align:""]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={name:"v-icon",data:function(){return{prefix:"anticon"}},props:{type:{type:String,require:!0},spin:{type:Boolean,default:!1}},computed:{iconClasses:function(){return[this.prefix,this.prefix+"-"+this.type,(0,o.default)({},this.prefix+"-spin",this.spin)]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(3);t.default={name:"v-input",data:function(){return{prefix:"ant-input",hasslot:!1,hasbefore:!1,hasafter:!1}},props:(0,s.defaultProps)({debounce:0,type:"text",id:(0,s.oneOfType)([Number,String]),value:null,placeholder:"",defaultValue:null,size:"default",disabled:!1,onPressEnter:function(){},autosize:(0,s.oneOfType)([Boolean,Object],!1)}),computed:{wrapClasses:function(){return[this.prefix+"-wrapper",(0,o.default)({},this.prefix+"-group",this.hasslot)]},inpClasses:function(){var e={small:"sm",large:"lg"}[this.size];return[this.prefix,(0,o.default)({},this.prefix+"-"+e,e)]}},ready:function(){this._slotContents&&(this.hasslot=!0,this._slotContents.before&&(this.hasbefore=!0),this._slotContents.after&&(this.hasafter=!0))},methods:{blur:function(){this.$emit("blur",this.value)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){return!isNaN(Number(e))}function o(e,t,n){var i,r,o;try{i=e.toString().split(".")[1].length}catch(e){i=0}try{r=t.toString().split(".")[1].length}catch(e){r=0}return o=Math.pow(10,Math.max(i,r)),"+"===n?(e*o+t*o)/o:"-"===n?(e*o-t*o)/o:void 0}function s(e){e.preventDefault()}Object.defineProperty(t,"__esModule",{value:!0});var a=n(4),l=i(a),u=n(3);t.default={name:"v-input-number",props:(0,u.defaultProps)({prefixCls:"ant-input-number",max:(0,u.oneOfType)([Number,String],1/0),min:(0,u.oneOfType)([Number,String],-(1/0)),size:(0,u.oneOfType)([Number,String]),value:(0,u.oneOfType)([Number,String]),step:(0,u.oneOfType)([Number,String],1),defaultValue:(0,u.oneOfType)([Number,String],""),autoFocus:!1,onChange:function(){},readOnly:!1,disabled:!1}),data:function(){return{sizeClass:"",noop:function(){},preventDefault:s,upDisabledClass:"",downDisabledClass:""}},computed:{sizeClass:function(){return"large"===this.size?"ant-input-number-lg":"small"===this.size?"ant-input-number-sm":void 0},wrapClasses:function(){return[this.prefixCls,(0,l.default)({},this.sizeClass,!!this.sizeClass),(0,l.default)({},this.prefixCls+"-disabled",this.disabled),(0,l.default)({},this.prefixCls+"-focused",this.focused)]}},watch:{value:function(e){r(e)?(e=Number(e),e>=this.max?this.upDisabledClass=this.prefixCls+"-handler-up-disabled":e<=this.min?this.downDisabledClass=this.prefixCls+"-handler-down-disabled":(this.upDisabledClass="",this.downDisabledClass="")):(this.upDisabledClass=this.prefixCls+"-handler-up-disabled",this.downDisabledClass=this.prefixCls+"-handler-down-disabled")}},compiled:function(){this.defaultValu||(this.defaultValue=this.min),null==this.value&&(this.value=this.defaultValue),this.focused=this.autoFocus},methods:{_setValue:function(e){this.value=e,this.onChange(e)},_onChange:function(e){var t=e.target.value.trim();if(t){if(r(t)){if(t=Number(t),t<this.min)return;if(t>this.max)return;this._setValue(t)}else if("-"===t){if(this.min>=0)return;this.value=t}}else this._setValue(t)},_onKeyDown:function(e){38===e.keyCode?this._up(e):40===e.keyCode&&this._down(e)},_onFocus:function(){this.focused=!0},_onBlur:function(){this.focused=!1,"-"===this.value&&this._setValue("")},_step:function(e,t){var n=this;if(!this.disabled){var i=Number(this.value),r=Number(this.step);isNaN(i)||("down"==e?i=o(i,r,"-"):"up"===e&&(i=o(i,r,"+")),i>this.max||i<this.min||this._setValue(i,function(){n.$els.input.focus()}))}},_down:function(e){this.downDisabledClass||this._step("down",e)},_up:function(e){this.upDisabledClass||this._step("up",e)}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-menu",props:{title:String,mode:{type:String,default:"vertical"},theme:{type:String,default:"light"},expand:{type:Boolean,default:!1}},ready:function(){var e=this;this.$on("nodeSelected",function(t){e.$broadcast("cancelSelected",t)})},watch:{mode:function(){this.expand=!1,this.$broadcast("modeChange",this.mode)},expand:function(){this.$broadcast("expandChange",this.expand)}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-menu-item",data:function(){return{level:0,mode:"vertical"}},props:{disabled:{type:Boolean,default:!1},selected:{type:Boolean,default:!1},icon:String,link:String},ready:function(){var e=this;this.setLevelAndMode(),this.$on("modeChange",function(t){e.mode=t}),this.$on("cancelSelected",function(t){e!==t&&(e.selected=!1)})},computed:{itemCls:function(){return["ant-menu-item",{"ant-menu-item-disabled":this.disabled,"ant-menu-item-selected":this.selected}]},itemSty:function(){return"inline"==this.mode?{paddingLeft:24*this.level+"px"}:{}}},methods:{setLevelAndMode:function(){for(var e=1,t=this.$parent;"v-menu"!==t.$options.name;)"v-sub-menu"==t.$options.name&&e++,t=t.$parent;this.mode=t.mode,this.level=e},select:function(){this.selected||(this.selected=!0,this.$dispatch("nodeSelected",this))}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-menu-item-group",props:{title:String},ready:function(){var e=this;this.$on("modeChange",function(t){e.$broadcast("modeChange",t)}),this.$on("cancelSelected",function(t){e.$broadcast("cancelSelected",t)})}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={name:"v-nav-menu",data:function(){return{prefix:"ant-menu",timer:[]}},props:{type:{type:String,default:"root"},isItemGroup:{type:Boolean,default:!1},data:{type:Array,default:function(){return[]}},mode:{type:String,default:"vertical"},theme:{type:String,default:"light"},aTag:{type:Boolean,default:!1},level:{type:Number,default:1}},ready:function(){var e=this;this.$on("nodeSelected",function(t){return"root"!==e.type||(e!==t&&e.setAllSelected(!1),void e.$broadcast("cancelSelected",t))}),this.$on("cancelSelected",function(t){e.$broadcast("cancelSelected",t),e!==t&&e.setAllSelected(!1)})},computed:{menuCls:function(){return"root"==this.type||"sub"==this.type?[this.prefix,this.prefix+"-"+this.type,this.prefix+"-"+this.mode,(0,o.default)({},this.prefix+"-"+this.theme,"root"==this.type)]:"item-group-list"==this.type?this.prefix+"-item-group-list":void 0},paddingSty:function(){return"inline"==this.mode?{paddingLeft:24*this.level+"px"}:{}}},watch:{mode:function(){for(var e=0;e<this.data.length;e++)this.$set("data["+e+"].open",!1)}},methods:{setAllSelected:function(e){for(var t=0;t<this.data.length;t++)this.$set("data["+t+"].selected",e)},clickTriggerOpen:function(e,t){e||"inline"!=this.mode||this.setOpen(t,!this.data[t].open)},mouseTriggerOpen:function(e,t,n){var i=this;e||"inline"==this.mode||(this.timer[t]&&clearTimeout(this.timer[t]),this.timer[t]=setTimeout(function(){return i.setOpen(t,n)},300))},setOpen:function(e,t){this.$set("data["+e+"].open",t)},select:function(e){for(var t=0;t<this.data.length;t++)t==e?this.$set("data["+t+"].selected",!0):this.$set("data["+t+"].selected",!1);this.$dispatch("nodeSelected",this)}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-sub-menu",props:{title:String,icon:String,expand:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1}},data:function(){return{level:0,mode:"vertical",timer:null}},ready:function(){var e=this;this.initProp(),this.$on("modeChange",function(t){e.mode=t,e.$broadcast("modeChange",t)}),this.$on("cancelSelected",function(t){e.$broadcast("cancelSelected",t)}),this.$on("expandChange",function(t){e.expand=t})},computed:{subMenuCls:function(){return["ant-menu-submenu","ant-menu-submenu-"+this.mode,{"ant-menu-submenu-open":this.expand}]},titleCls:function(){return["ant-menu-submenu-title",{"ant-menu-submenu-disabled":this.disabled}]},itemCls:function(){return["ant-menu","ant-menu-"+this.mode,"ant-menu-sub"]},titleSty:function(){return"inline"==this.mode?{paddingLeft:24*this.level+"px"}:{}}},methods:{initProp:function(){for(var e=1,t=this.$parent;"v-menu"!==t.$options.name;)"v-sub-menu"==t.$options.name&&e++,t=t.$parent;this.expand=t.expand,this.mode=t.mode,this.level=e},clickTriggerOpen:function(){this.disabled||"inline"!=this.mode||this.setOpen(!this.expand)},mouseTriggerOpen:function(e){var t=this;this.disabled||"inline"==this.mode||(this.timer&&clearTimeout(this.timer),this.timer=setTimeout(function(){return t.setOpen(e)},300))},setOpen:function(e){this.expand=e}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),o=i(r),s=n(13),a=i(s),l=n(533),u=i(l),c=0;t.default={props:{top:""},data:function(){return{notices:[]}},computed:{},ready:function(){},attached:function(){},methods:{add:function(e){var t=e.key=e.key||c++,n=this.notices;if(!n.filter(function(e){return e.key===t}).length){(0,a.default)({show:!0,content:"",duration:.5},e);this.notices=n.concat(e)}},setContent:function(e,t){var n=!0,i=!1,r=void 0;try{for(var s,a=(0,o.default)(this.notices);!(n=(s=a.next()).done);n=!0){var l=s.value;l.key===e&&(l.content=t)}}catch(e){i=!0,r=e}finally{try{!n&&a.return&&a.return()}finally{if(i)throw r}}},remove:function(e){this.notices.map(function(t){t.key===e&&(t.show=!1)})}},components:{notice:u.default}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={props:{content:"",duration:"",type:String,show:{type:Boolean,twoWay:!0}},data:function(){return{}},computed:{icon:function(){var e={info:"info-circle",success:"check-circle",warning:"exclamation-circle",error:"exclamation-circle",loading:"loading"}[this.type];return e}},compiled:function(){var e=this;this._clearCloseTimer(),this.duration&&(this.closeTimer=setTimeout(function(){e._close()},1e3*this.duration))},beforeDestory:function(){this._clearCloseTimer()},methods:{_clearCloseTimer:function(){this.closeTimer&&(clearTimeout(this.closeTimer),this.closeTimer=null)},_close:function(){this._clearCloseTimer(),this.show=!1}}}},function(e,t,n){"use strict";function i(e){var t=e.ownerDocument,n=t.defaultView||t.parentWindow,i={x:n.pageXOffset,y:n.pageYOffset};return i}function r(){if(o()){if(void 0!==l)return l;var e=document.createElement("div");for(var t in u)u.hasOwnProperty(t)&&(e.style[t]=u[t]);document.body.appendChild(e);var n=e.offsetWidth-e.clientWidth;return document.body.removeChild(e),l=n}}function o(){return document.body.clientHeight<document.body.scrollHeight}function s(e,t){var n=e.style;["Webkit","Moz","Ms","ms"].forEach(function(e){n[e+"TransformOrigin"]=t}),n.transformOrigin=t}Object.defineProperty(t,"__esModule",{value:!0});var a=n(3);t.default={props:(0,a.defaultProps)({prefixCls:"vc-dialog",modalStyle:{},wrapClassName:String,onClose:function(){},modalWidth:Number,mask:!0,title:String,closable:!0,maskClosable:!0,hasFooter:!0,visible:Boolean,zIndex:Number,mousePosition:Object}),watch:{mousePosition:function(e){
	this.visible&&e&&(this._startAnimation(this.$el.querySelector("."+this.prefixCls+"-wrap")),this._setScrollbar())}},transitions:{zoom:{afterLeave:function(e){this._resetScrollbar()}}},methods:{_onMaskClick:function(){this.maskClosable&&this._close(),this.$els.dialog.focus()},_onKeyDown:function(e){if(this.closable&&e.keyCode===a.KeyCode.ESC&&this._close(),this.visible&&e.keyCode===a.KeyCode.TAB){var t=document.activeElement,n=this.$els.dialog,i=this.$els.sentinel;e.shiftKey?t===n&&i.focus():t===i&&n.focus()}},_startAnimation:function(e){var t=this.mousePosition;if(this.visible)if(t){var n=i(this.$el);s(e,t.x-n.x+"px "+(t.y-n.y)+"px")}else s(e,"")},_setScrollbar:function(){document.body.style.paddingRight=r()+"px",document.body.style.overflow="hidden"},_resetScrollbar:function(){document.body.style.paddingRight="",document.body.style.overflow=""},_close:function(){this.onClose()}}};var l=void 0,u={position:"absolute",top:"-9999px",width:"50px",height:"50px",overflow:"scroll"}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(492),o=i(r),s=n(387),a=i(s),l=n(388),u=i(l),c=n(20);t.default={name:"v-multiselect",mixins:[a.default,u.default],data:function(){return{style:{},container:null}},props:{popupContainer:{type:Function,default:function(){return document.body}},size:String,position:{type:String,default:"absolute"},optionPartial:{type:String,default:""},selectLabel:{type:String,default:"回车选择"},selectedLabel:{type:String,default:"已选择"},deselectLabel:{type:String,default:"回车删除一个标签"},showLabels:{type:Boolean,default:!0},limit:{type:Number,default:99999},limitText:{type:Function,default:function(e){return"and "+e+" more"}},loading:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1}},computed:{visibleValue:function(){return this.multiple?this.value.slice(0,this.limit):[]},listSty:function(){return(0,o.default)({maxHeight:this.maxHeight+"px"},this.style)}},ready:function(){var e=this;this.container=this.popupContainer(),this.showLabels||(this.deselectLabel=this.selectedLabel=this.selectLabel=""),this.$els.list.style.position=this.position,this.container.appendChild(this.$els.list),this.$nextTick(function(){e.setPosition()}),window.addEventListener("resize",function(){clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.setPosition()},200)})},methods:{setPosition:function(){if(this.$el){var e=(0,c.getOffset)(this.$el,this.container);this.$set("style",{top:e.bottom+"px",left:e.left+"px",width:e.right-e.left+"px"})}}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={props:{message:{type:String,required:!0},description:{type:String,required:!0},type:String,show:{type:Boolean,twoWay:!0},duration:Number},data:function(){return{}},computed:{icon:function(){var e={info:"info-circle-o",success:"check-circle-o",error:"cross-circle-o",warning:"exclamation-circle-o"}[this.type];return e}},compiled:function(){var e=this;this._clearCloseTimer(),this.duration&&(this.closeTimer=setTimeout(function(){e._close()},1e3*this.duration))},beforeDestory:function(){this._clearCloseTimer()},methods:{_clearCloseTimer:function(){this.closeTimer&&(clearTimeout(this.closeTimer),this.closeTimer=null)},_close:function(){this._clearCloseTimer(),this.show=!1}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(13),o=i(r),s=n(537),a=i(s),l=0;t.default={props:{top:""},data:function(){return{notices:[]}},computed:{},attached:function(){},methods:{add:function(e){var t=e.key=e.key||l++,n=this.notices;if(!n.filter(function(e){return e.key===t}).length){(0,o.default)({show:!0,content:"",duration:.5},e);this.notices=n.concat(e)}},remove:function(e){this.notices.map(function(t){t.key===e&&(t.show=!1)})}},components:{notice:a.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),o=n(123),s=i(o);t.default={name:"v-pagination",props:(0,r.defaultProps)({prefixCls:"ant-pagination",current:1,total:0,defaultPageSize:10,pageSize:{type:Number,default:10},onChange:function(){},showSizeChanger:!1,pageSizeOptions:[10,20,30,40],onShowSizeChange:function(){},showQuickJumper:!1,size:"",simple:!1,showTotal:Function}),data:function(){return{currentForSimple:1,totalText:"",pageList:[],allPages:0,showJumpPrev:!1,showJumpNext:!1,showFirstPager:!1,showLastPager:!1,pageLeft:0,pageRight:0}},watch:{current:function(){this.onChange(this.current)},pageSize:function(){var e=this.current,t=this.allPages;e=e>t?t:e,this.current=e,this.onShowSizeChange(e,Number(this.pageSize))}},created:function(){this.current=this.current,this.totalText=this.showTotal&&this.showTotal(this.total,this.allPages),this.options=this.pageSizeOptions.map(function(e,t){return{value:e,text:e+"条/页"}})},computed:{allPages:function(){return Math.floor((this.total-1)/Number(this.pageSize))+1},pageList:function e(){for(var t=this.allPages<=9,e=[],n=t?1:this.pageLeft,i=t?this.allPages:this.pageRight,r=n;r<=i;r++)e.push(r);return e},showJumpPrev:function(){return this.allPages>9&&this.current-1>=4},showJumpNext:function(){return this.allPages>9&&this.allPages-this.current>=4},showFirstPager:function(){return this.allPages>9&&1!==this.pageLeft},showLastPager:function(){return this.allPages>9&&this.pageRight!==this.allPages},pageLeft:function(){var e=Math.max(1,this.current-2);return this.allPages-this.current<=2&&(e=this.allPages-4),e},pageRight:function(){var e=Math.min(this.current+2,this.allPages);return this.current-1<=2&&(e=5),e}},methods:{_handleChange:function(e){this._isValid(e)&&(e>this.allPages&&(e=this.allPages),this.current=e,this.simple&&(this.currentForSimple=e))},_prev:function(){this._hasPrev()&&this._handleChange(this.current-1)},_next:function(){this._hasNext()&&this._handleChange(this.current+1)},_jumpPrev:function(){this._handleChange(Math.max(1,this.current-5))},_jumpNext:function(){this._handleChange(Math.max(this.allPages,this.current+5))},_hasPrev:function(){return this.current>1},_hasNext:function(){return this.current<this.allPages},_isValid:function(e){return"number"==typeof e&&e>=1&&e!==this.current},_handleKeyUp:function(e){var t=e.target.value,n=void 0;n=""===t?t:isNaN(Number(t))?this.currentForSimple:Number(t),this.currentForSimple=n,13===e.keyCode?this._handleChange(n):38===e.keyCode?this._handleChange(n-1):40===e.keyCode&&this._handleChange(n+1)},_pageSizeChange:function(){}},components:{vSelect:s.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),o=n(133),s=i(o);t.default={name:"v-popconfirm",props:(0,r.defaultProps)({title:"",okText:"确 定",cancelText:"取 消",onConfirm:function(){},onCancel:function(){},openClassName:"",visible:!1,placement:"top",skip:!1}),data:function(){return{}},methods:{doCancel:function(){this.onCancel(),this.visible&&(this.visible=!1)},doConfirm:function(){this.onConfirm(),this.visible&&(this.visible=!1)}},components:{vPopover:s.default}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(3),r=document.body;t.default={name:"v-popover",props:(0,i.defaultProps)({title:"",clazz:"",placement:"bottom",visible:!1,trigger:"click",content:"",onVisibleChange:function(){},openClassName:"",disabled:!1,skip:!1,skipFunc:function(){}}),data:function(){return{}},ready:function(){var e=this,t=this.$el.nextElementSibling,n=t.nextElementSibling,o=function(e){var t=e.getBoundingClientRect(),n=document.documentElement,i=window.pageYOffset||n.scrollTop||r.scrollTop,o=window.pageXOffset||n.scrollLeft||r.scrollLeft,s=n.clientTop||r.clientTop,a=n.clientLeft||r.clientLeft;return{top:Math.round(t.top+i-s),left:Math.round(t.left+o-a)}};e.popShow=function(){var r=.5,s=.5,a=o(t),l=t.offsetWidth,u=t.offsetHeight;e.placement.toUpperCase().includes("LEFT")?r=0:e.placement.toUpperCase().includes("RIGHT")&&(r=1),e.placement.toUpperCase().includes("TOP")?s=0:this.placement.toUpperCase().includes("BOTTOM")&&(s=1),(0,i.addStyle)(n,{left:a.left+l*r+"px",top:a.top+u*s+"px"}),e.visible=!0,e.openClassName&&(0,i.addClass)(t,e.openClassName)},e.popHide=function(){e.visible=!1,e.openClassName&&(0,i.removeClass)(t,e.openClassName)},"click"===e.trigger&&(t.addEventListener("click",function(t){if(t.stopPropagation(),!e.disabled)if(e.skip)try{e.skipFunc()}catch(e){console&&console.log(e)}else e.visible=!e.visible},!1),e.bodyClick=function(){e.visible=!1},r.addEventListener("click",e.bodyClick,!1)),"hover"===e.trigger&&!function(){var i=null,r=200;t.addEventListener("mouseover",function(t){if(!e.disabled)if(clearTimeout(i),e.skip)try{e.skipFunc()}catch(e){console&&console.log(e)}else e.visible||(e.visible=!0)},!1),t.addEventListener("mouseout",function(t){i=setTimeout(function(){e.visible=!1},r)},!1),n.addEventListener("mouseover",function(){clearTimeout(i)},!1),n.addEventListener("mouseout",function(){i=setTimeout(function(){e.visible=!1},r)},!1)}(),"focus"===e.trigger&&(t.addEventListener("focus",function(t){e.disabled||(e.visible=!0)},!1),t.addEventListener("blur",function(t){e.disabled||(e.visible=!1)},!1)),e.$nextTick(function(){e.disabled||(e.visible?e.popShow():e.popHide())}),r.appendChild(n)},watch:{visible:function(e){e===!0?this.popShow():this.popHide(),this.onVisibleChange(this.visible)}},destroyed:function(){"click"===this.trigger&&r.removeEventListener("click",this.bodyClick)}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){return Array.isArray(e)&&2===e.length?e:[e,e]}Object.defineProperty(t,"__esModule",{value:!0});var o=n(22),s=i(o),a=n(3),l=n(231),u=i(l),c=n(395),d=i(c),f={easeInBack:[.6,-.28,.735,.045],easeOutBack:[.175,.885,.32,1.275],easeInOutBack:[.68,-.55,.265,1.55]};t.default={name:"v-queue-anim",props:(0,a.defaultProps)({show:!0,interval:(0,a.oneOfType)([Number,Array],100),duration:(0,a.oneOfType)([Number,Array],500),delay:(0,a.oneOfType)([Number,Array],0),type:(0,a.oneOfType)([String,Array],"right"),animConfig:(0,a.oneOfType)([String,Array]),ease:(0,a.oneOfType)([String,Array],"easeOutQuart"),animatingClassName:Array,watchValue:(0,a.oneOfType)([String,Array]),leaveReverse:!1}),data:function(){return{originChildren:[],children:[],childrenShow:{}}},compiled:function(){this.animatingClassName=this.animatingClassName||["queue-anim-entering","queue-anim-leaving"]},ready:function(){var e=this;this.keysAnimating=[];var t=this._getFreeKeysAndChild();this.keysAnimating=(0,s.default)(t),this.children=t,this.originChildren=t,this.$on("queue-anim-hidden",function(){return e._hiddenVelocityNode(),!0}),this.show?this._animateEnter():(this._hiddenVelocityNode(),this.$broadcast("queue-anim-hidden"))},beforeDestory:function(){this.originChildren&&this.originChildren.length>0&&this.originChildren.forEach(function(e){(0,u.default)(e,"stop")})},isActHideAnimate:!1,watch:{show:function(e){var t=this;e?(this.isActHideAnimate=!0,this.$nextTick(function(){t.$broadcast("queue-anim-hidden"),setTimeout(function(){t._animateEnter(),t.isActHideAnimate=!1},50)})):this._animateLeave(function(){t.isActHideAnimate||t.$broadcast("queue-anim-hidden")})},watchValue:function(e,t){var n=this;this.$nextTick(function(){for(var e=[],t=[],i=n._getKeysChild(),r=0;r<n.children.length;r++){for(var o=n.children[r],s=!0,a=0;a<i.length;a++)o.key===i[a].key&&(s=!1);s&&t.push(o)}for(var l=0;l<i.length;l++){for(var u=i[l],c=!0,d=0;d<n.children.length;d++)u.key===n.children[d].key&&(c=!1);c&&e.push(u)}e.forEach(n._performEnter),t.forEach(n._performLeave),n.children=i})}},methods:{_getKeysChild:function(){var e=[],t=Array.prototype.slice.call(this.$el.querySelectorAll("[key]"));return t.forEach(function(t){if(t){t.setAttribute("__scope_key__",1);var n=t.getAttribute("key");n&&e.push({key:n,el:t})}}),e},_getFreeKeysAndChild:function(){var e=[],t=Array.prototype.slice.call(this.$el.querySelectorAll("[key]:not([__scope_key__])"));return t.forEach(function(t){if(t){t.setAttribute("__scope_key__",1);var n=t.getAttribute("key");n&&e.push({key:n,el:t})}}),e},_getVelocityConfig:function(e){return this.animConfig?r(this.animConfig)[e]:d.default[r(this.type)[e]]},_getVelocityEnterConfig:function(){return this._getVelocityConfig(0)},_getVelocityLeaveConfig:function(){var e=this._getVelocityConfig(1),t={};return(0,s.default)(e).forEach(function(n){Array.isArray(e[n])?t[n]=Array.prototype.slice.call(e[n]).reverse():t[n]=e[n]}),t},_getVelocityEasing:function(){return r(this.ease).map(function(e){if("string"==typeof e)return f[e]||e})},_hiddenVelocityNode:function(){this.children.forEach(function(e,t){var n=e.el;n&&(n.style.visibility="hidden",(0,u.default)(n,"stop"))})},_animateEnter:function(){this.children.forEach(this._performEnter)},_performEnter:function(e,t){var n=this,i=e.el,o=e.key;if(i){var s=r(this.interval)[0],a=r(this.delay)[0],l=r(this.duration)[0];i.style.visibility="hidden",(0,u.default)(i,"stop"),(0,u.default)(i,this._getVelocityEnterConfig("enter"),{delay:s*t+a,duration:l,easing:this._getVelocityEasing()[0],visibility:"visible",begin:function(e){if(n._enterBegin(o,e),i.__vue__){var t=i.__vue__._animateEnter;t&&t();var r=i.__vue__.$children;r.forEach(function(e){e._animateEnter&&e._animateEnter()})}},complete:this._enterComplete.bind(this,o)})}},_animateLeave:function(e){var t=this;this.children.forEach(function(n,i){t._performLeave(n,i,e)})},_performLeave:function(e,t,n){var i=this,o=e.el,s=e.key;if(o){var a=r(this.interval)[1],l=r(this.delay)[1],c=r(this.duration)[1],d=this.leaveReverse?this.children.length-t-1:t;(0,u.default)(o,"stop"),(0,u.default)(o,this._getVelocityLeaveConfig("leave"),{delay:a*d+l,duration:c,easing:this._getVelocityEasing()[1],begin:this._leaveBegin.bind(this),complete:function(e){i._leaveComplete(s,e);var r=i.children.length;t===r-1&&n&&"function"==typeof n&&n()}})}},_enterBegin:function(e,t){var n=this;this.keysAnimating.indexOf(e)>=0&&this.keysAnimating.splice(this.keysAnimating.indexOf(e),1),t.forEach(function(e){e.className=e.className.replace(n.animatingClassName[1],"").trim(),e.className+=" "+n.animatingClassName[0]})},_enterComplete:function(e,t){var n=this;this.keysAnimating.indexOf(e)>=0&&this.keysAnimating.splice(this.keysAnimating.indexOf(e),1),t.forEach(function(e){e.className=e.className.replace(n.animatingClassName[0],"").trim()})},_leaveBegin:function(e){var t=this;e.forEach(function(e){e.className=e.className.replace(t.animatingClassName[0],"").trim(),e.className+=" "+t.animatingClassName[1]})},_leaveComplete:function(e,t){var n=this;this.keysAnimating.indexOf(e)<0||(this.keysAnimating.splice(this.keysAnimating.indexOf(e),1),t.forEach(function(e){e.className=e.className.replace(n.animatingClassName[1],"").trim()}))}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(3);t.default={name:"v-radio",props:(0,s.defaultProps)({prefixCls:"ant-radio",type:"radio",checked:Boolean,defaultChecked:!1,value:(0,s.oneOfType)([String,Number,Boolean]),onChange:function(){},disabled:Boolean,style:{},className:""}),computed:{wrapClasses:function(){return[this.className,(0,o.default)({},this.className+"-checked",this.checked),(0,o.default)({},this.className+"-disabled",this.disabled)]},radioClasses:function(){return[this.prefixCls,(0,o.default)({},this.prefixCls+"-checked",this.checked),(0,o.default)({},this.prefixCls+"-checked-"+(this.checked?1:0),!!this.checked),(0,o.default)({},this.prefixCls+"-disabled",this.disabled)]}},compiled:function(){null==this.checked&&(this.checked=this.defaultChecked),"button"===this.type&&(this.prefixCls="ant-radio-button")},methods:{_handleChange:function(e){this.checked=e.target.checked,this.onChange(e)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),o=i(r),s=n(4),a=i(s),l=n(3),u=n(134),c=i(u);t.default={name:"v-radio-group",props:(0,l.defaultProps)({prefixCls:"ant-radio-group",type:"radio",value:(0,l.oneOfType)([String,Number,Boolean]),defaultValue:(0,l.oneOfType)([String,Number,Boolean]),radios:[],disabled:!1,size:String,onChange:function(){}}),components:{vRadio:c.default},computed:{wrapClasses:function(){var e=["small","large"].indexOf(this.size)!==-1?this.size:"";return[this.prefixCls,(0,a.default)({},this.prefixCls+"-"+e,e)]},radioClasses:function(){return"button"===this.type?"ant-radio-button-wrapper":"ant-radio-wrapper"}},created:function(){if(null==this.value&&(this.value=this.defaultValue),this.disabled){var e=!0,t=!1,n=void 0;try{for(var i,r=(0,o.default)(this.radios);!(e=(i=r.next()).done);e=!0){var s=i.value;s.hasOwnProperty("disabled")&&s.disabled===!1||(s.disabled=!0)}}catch(e){t=!0,n=e}finally{try{!e&&r.return&&r.return()}finally{if(t)throw n}}}},methods:{_onRadioChange:function(e,t){t.target.name=this.radios[e].name,this.value=t.target.value,this.onChange(t)}}}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"v-rate",data:function(){return{prefix:"ant-rate",value:0}},props:{count:{type:Number,default:5,coerce:function(e){return Math.round(e)}},defaultValue:{type:Number,default:0},disabled:{type:Boolean,default:!1},onChange:{type:Function,default:function(){}},allowHalf:{type:Boolean,default:!1}},computed:{lightArr:function(){for(var e=new Array(this.count),t=0;t<parseInt(this.value);t++)e[t]=this.prefix+"-star-full";return parseInt(this.value)!==this.value&&(e[t]=this.prefix+"-star-half"),e}},methods:{recovery:function(){this.value=this.defaultValue},allLight:function(e){this.disabled||(this.value=e+1)},halfLight:function(e,t){this.disabled||this.allowHalf&&(this.value=e+.5,t.stopPropagation())},selected:function(){this.disabled||(this.defaultValue=this.value,this.onChange(this.value))},valueHandle:function(e){if(e>this.count)return this.count;if(this.allowHalf){var t=parseInt(e);return t!==e&&(e=t+.5),e}return Math.round(e)}},created:function(){this.value=this.defaultValue=this.valueHandle(this.defaultValue)}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(82),o=i(r),s=n(10),a=i(s),l=n(4),u=i(l),c=n(53),d=i(c),f=n(54),p=i(f),h=n(20);t.default={name:"v-select",data:function(){return{prefix:"ant-select",searchVal:"",multipleSearchStyle:{},searchFound:!1,show:!1,style:{},labels:"",ori_options:[],isSearchFocus:!1,dropdownHeight:0,container:null}},props:{key:{type:String,default:"value"},label:{type:String,default:"text"},groupLabel:{type:String,default:"label"},multiple:{type:Boolean,default:!1},notFoundContent:{type:String,default:"没有找到"},placement:{type:String,default:"bottom"},search:{type:Boolean,default:!1},maxHeight:{type:Number,default:300},disabled:{type:Boolean,default:!1},allowClear:{type:Boolean,default:!0},value:{type:[Number,String,Array],default:""},placeholder:{type:String,default:"请选择"},options:{type:Array,default:function(){return[]}},popupContainer:{type:Function,default:function(){return document.body}},size:String,position:{type:String,default:"absolute"},loading:{type:Boolean,default:!1},loadingText:{type:String,default:"加载中..."},remoteMethod:Function},ready:function(){var e=this;this.init(),this.container=this.popupContainer(),this.$els.dropdown.style.position=this.position,this.container.appendChild(this.$els.dropdown),window.addEventListener("resize",function(){clearTimeout(e.resizeTimer),e.resizeTimer=setTimeout(function(){e.setPosition()},200)}),window.addEventListener("click",this.closeDropdown)},beforeDestroy:function(){window.removeEventListener("click",this.closeDropdown)},watch:{value:function(e){this.$emit("change",e)},searchVal:function(e){var t=this;return this.multiple&&(this.multipleSearchStyle=e?{width:this.$els.searchMirror.offsetWidth+"px"}:{}),this.remoteMethod?this.remoteMethod(e):void(e?!function(){t.searchFound=!1;var n=!1;t.mapOptions(function(i){var r=(0,p.default)(i,3),o=r[0],s=r[1],a=r[2],l=a[t.label].includes(e);l&&(t.searchFound=!0),"item"==o?t.$set("ori_options["+s+"].show",l):(t.$set("ori_options["+s[0]+"].data["+s[1]+"].show",l),l&&(n=!0))},function(e,i){t.$set("ori_options["+e+"].show",n),n=!1})}():this.setOptions({show:!0},{show:!0}))},options:{handler:function(e){var t=this;this.ori_options=JSON.parse((0,d.default)(e)),this.mapOptions(function(e){var n=(0,p.default)(e,3),i=n[0],r=n[1],o=n[2],s=!1;t.multiple&&t.value.includes(o[t.key])?s=!0:t.multiple||t.value!==o[t.key]||(s=!0),"item"==i?(t.$set("ori_options["+r+"].selected",s),t.$set("ori_options["+r+"].show",!0)):(t.$set("ori_options["+r[0]+"].data["+r[1]+"].selected",s),t.$set("ori_options["+r[0]+"].data["+r[1]+"].show",!0))},function(e,n){t.$set("ori_options["+e+"].show",!0)})},deep:!0}},computed:{wrapCls:function(){return[this.prefix,(0,u.default)({},this.prefix+"-disabled",this.disabled),(0,u.default)({},this.prefix+"-"+this.size,this.size)]},selectionCls:function(){return[this.prefix+"-selection",(0,u.default)({},this.prefix+"-selection--single",!this.multiple),(0,u.default)({},this.prefix+"-selection--multiple",this.multiple)]},dropdownCls:function(){return[this.prefix+"-dropdown",this.prefix+"-dropdown-placement-bottomLeft",(0,u.default)({},this.prefix+"-dropdown--single",!this.multiple),(0,u.default)({},this.prefix+"-dropdown--multiple",this.multiple)]}},methods:{mapOptions:function(e,t){var n=!0,i=!1,r=void 0;try{for(var o,s=(0,a.default)(this.ori_options.entries());!(n=(o=s.next()).done);n=!0){var l=(0,p.default)(o.value,2),u=l[0],c=l[1];if(c[this.groupLabel]){if(c.data&&c.data.length){var d=!0,f=!1,h=void 0;try{for(var v,m=(0,a.default)(c.data.entries());!(d=(v=m.next()).done);d=!0){var y=(0,p.default)(v.value,2),g=y[0],x=y[1],b=e(["groupItem",[u,g],x]);if(b)break}}catch(e){f=!0,h=e}finally{try{!d&&m.return&&m.return()}finally{if(f)throw h}}t&&t(u,c)}}else{var _=e(["item",u,c]);if(_)break}}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}},init:function(){var e=this;this.options.length&&(this.ori_options=JSON.parse((0,d.default)(this.options))),this.multiple&&(this.labels=[],this.value||(this.value=[])),this.mapOptions(function(t){var n=(0,p.default)(t,3),i=n[0],r=n[1],o=n[2],s=!1;e.multiple&&e.value.includes(o[e.key])?(s=!0,e.labels.push(o[e.label])):e.multiple||e.value!==o[e.key]||(s=!0,e.labels=o[e.label]),"item"==i?(e.$set("ori_options["+r+"].selected",s),e.$set("ori_options["+r+"].show",!0)):(e.$set("ori_options["+r[0]+"].data["+r[1]+"].selected",s),e.$set("ori_options["+r[0]+"].data["+r[1]+"].show",!0))},function(t,n){e.$set("ori_options["+t+"].show",!0)})},getDropdownHeight:function(){this.dropdownHeight=parseFloat(getComputedStyle(this.$els.dropdown,null).height)},setOptions:function(e,t){var n=this;this.mapOptions(function(t){var i=(0,p.default)(t,3),r=i[0],s=i[1];i[2];if("item"==r){var l=!0,u=!1,c=void 0;try{for(var d,f=(0,a.default)((0,o.default)(e));!(l=(d=f.next()).done);l=!0){var h=(0,p.default)(d.value,2),v=h[0],m=h[1];n.$set("ori_options["+s+"]."+v,m)}}catch(e){u=!0,c=e}finally{try{!l&&f.return&&f.return()}finally{if(u)throw c}}}else{var y=!0,g=!1,x=void 0;try{for(var b,_=(0,a.default)((0,o.default)(e));!(y=(b=_.next()).done);y=!0){var w=(0,p.default)(b.value,2),v=w[0],m=w[1];n.$set("ori_options["+s[0]+"].data["+s[1]+"]."+v,m)}}catch(e){g=!0,x=e}finally{try{!y&&_.return&&_.return()}finally{if(g)throw x}}}},function(e,i){if(t){var r=!0,s=!1,l=void 0;try{for(var u,c=(0,a.default)((0,o.default)(t));!(r=(u=c.next()).done);r=!0){var d=(0,p.default)(u.value,2),f=d[0],h=d[1];n.$set("ori_options["+e+"]."+f,h)}}catch(e){s=!0,l=e}finally{try{!r&&c.return&&c.return()}finally{if(s)throw l}}}})},setPosition:function(){if(this.$el){var e=(0,h.getOffset)(this.$el,this.container);this.$set("style",{top:("top"==this.placement?e.top-this.dropdownHeight-4:e.bottom+4)+"px",left:e.left+"px",width:e.right-e.left+"px",maxHeight:this.maxHeight+"px"})}},closeDropdown:function(){this.show=!1},toggleDropdown:function(){var e=this;this.disabled||(this.search?(this.show=!0,this.$els.searchInput.focus()):this.show=!this.show,!this.dropdownHeight&&this.show&&this.$nextTick(function(){e.getDropdownHeight(),e.setPosition()}))},searchBlur:function(){var e=this;this.isSearchFocus=!1,setTimeout(function(){e.searchVal=""},300)},clear:function(){this.value="",this.labels="",this.setOptions({selected:!1})},remove:function(e,t){var n=this;this.labels.splice(e,1),this.value.splice(e,1),this.mapOptions(function(e){var i=(0,p.default)(e,3),r=i[0],o=i[1],s=i[2];if(s[n.label]==t)return"item"==r?n.$set("ori_options["+o+"].selected",!1):n.$set("ori_options["+o[0]+"].data["+o[1]+"].selected",!1),!0})},select:function(e){var t=void 0;if(t="number"==typeof e?this.ori_options[e]:this.ori_options[e[0]].data[e[1]],!t.disabled)if(this.searchVal="",this.multiple||this.setOptions({selected:!1}),this.multiple){if(t.selected){var n=this.labels.indexOf(t[this.label]);this.labels.splice(n,1),this.value.splice(n,1)}else this.value.push(t[this.key]),this.labels.push(t[this.label]);t.selected=!t.selected}else t.selected=!0,this.value=t[this.key],this.labels=t[this.label]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(368),o=i(r),s=n(3);t.default={name:"v-slider",props:(0,s.defaultProps)({prefixCls:"ant-slider",tipTransitionName:"zoom-down",min:0,max:100,step:1,range:!1,marks:{type:Object,default:function(){return{}}},defaultValue:(0,s.oneOfType)([Number,Array],0),value:(0,s.oneOfType)([Number,Array]),included:!0,disabled:!1,onChange:function(){},tipFormatter:function(e){return e}}),components:{Slider:o.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(549),a=i(s),l=n(3);t.default={name:"v-spin",data:function(){return{prefix:"ant-spin",hasSlot:!1}},props:(0,l.defaultProps)({size:String,spinning:!0,tip:String}),ready:function(){this._slotContents&&this._slotContents.default&&(this.hasSlot=!0)},computed:{containerCls:function(){return[this.prefix+"-container",(0,o.default)({},this.prefix+"-blur",this.spinning)]}},components:{spinInner:a.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(3);t.default={props:(0,s.defaultProps)({prefix:"ant-spin",size:String,spinning:!0,tip:String}),computed:{wrapClasses:function(){var e,t={small:"sm",large:"lg"}[this.size];return[this.prefix,(e={},(0,o.default)(e,this.prefix+"-spinning",this.spinning),(0,o.default)(e,this.prefix+"-show-text",this.tip),(0,o.default)(e,this.prefix+"-"+t,t),e)]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={name:"v-step",props:{status:String,title:String,description:String,icon:String},data:function(){return{stepLast:Boolean,stepNumber:1,iconPrefix:"",maxDescriptionWidth:"",tailWidth:String,rootStatus:!1}},computed:{iconName:function(){return this.icon?this.icon:"check"},wrapClasses:function(){return["ant-steps-item","ant-steps-status-"+this.status,(0,o.default)({},"ant-steps-item-last",this.stepLast),(0,o.default)({},"ant-steps-next-"+this.rootStatus,this.rootStatus),(0,o.default)({},"ant-steps-custom",this.icon)]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={name:"v-steps",props:{current:{type:Number,default:0},status:String,size:{type:String,default:"process"},direction:String},data:function(){return{prefixCls:"ant-steps",maxDescriptionWidth:"100px"}},computed:{wrapClasses:function(){return["ant-steps",(0,o.default)({},"ant-steps-small","small"===this.size),(0,o.default)({},"ant-steps-vertical","vertical"===this.direction)]}},watch:{current:function(){this.handStatus()}},ready:function(){"vertical"===this.direction&&(this.maxDescriptionWidth="auto"),this.handStatus(!0),this.handleTailWidth()},attached:function(){},methods:{handStatus:function(e){var t=this,n=this.$children.length-1;this.$children.forEach(function(i,r){i.maxDescriptionWidth=t.maxDescriptionWidth,i.stepNumber=(r+1).toString(),i.stepLast=r===n,e&&i.status||(t.status?r===t.current?(t.$children[r-1].rootStatus=t.status,i.status=t.status):r<t.current?i.status="finish":i.status="wait":r===t.current?i.status="process":r<t.current?i.status="finish":i.status="wait")})},handleTailWidth:function(){if("vertical"!==this.direction){var e=this.$el,t=this.$el.children.length-1;if(!(t<0)){var n=this.$children[t].$el.offsetWidth;this.$children.forEach(function(i,r){r==t?i.tailWidth="auto":i.tailWidth=Math.floor((e.offsetWidth-n-1)/t)+"px"})}}}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={name:"v-switch",data:function(){return{prefix:"ant-switch"}},props:{size:{type:String},checked:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},onChange:{type:Function,default:function(){}}},computed:{wrapClasses:function(){var e=["small"].indexOf(this.size)!==-1?this.size:"";return[this.prefix,(0,o.default)({},this.prefix+"-checked",this.checked),(0,o.default)({},this.prefix+"-disabled",this.disabled),(0,o.default)({},this.prefix+"-"+e,e)]}},methods:{_toggle:function(){this.disabled||(this.checked=!this.checked,this.onChange(this.checked))}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(3);t.default={name:"v-tab-pane",data:function(){return{prefix:"ant-tabs-tabpane",selected:!1}},props:(0,s.defaultProps)({key:String,icon:String,disabled:!1,tab:String}),ready:function(){var e=this;this.$on("activeKey",function(t){e.selected=t===e.key})},computed:{wrapCls:function(){return[this.prefix,(0,o.default)({},this.prefix+"-active",this.selected),(0,o.default)({},this.prefix+"-inactive",!this.selected)]}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(54),a=i(s),l=n(82),u=i(l),c=n(10),d=i(c),f=n(3);t.default={name:"v-tabs",data:function(){return{prefix:"ant-tabs",activeIndex:0,tabs:[],tabWidth:0,tabMarginRight:0,isScroll:!1,nav_w:0,navScroll_w:0,tabWrap:0,moveWidth:0,tab_transform:0}},props:(0,f.defaultProps)({activeKey:String,size:String}),ready:function(){var e=this,t=[],n=!0,i=!1,r=void 0;try{for(var o,s=(0,d.default)((0,u.default)(this.$children));!(n=(o=s.next()).done);n=!0){var l=(0,a.default)(o.value,2),c=l[0],f=l[1];t.push({tab:f.tab,icon:f.icon||"",key:f.key||c,disabled:f.disabled}),this.activeKey===f.key&&(this.activeIndex=c,this.$broadcast("activeKey",this.activeKey))}}catch(e){i=!0,r=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw r}}this.$set("tabs",t),this.$nextTick(function(){var t=e.$el.querySelector(".ant-tabs-tab");e.tabWidth=t.offsetWidth,e.tabMarginRight=parseInt(getComputedStyle(t,!1).marginRight),e.nav_w=e.$els.nav.offsetWidth,e.navScroll_w=e.$els.navScroll.offsetWidth,e.navScroll_w<e.nav_w&&(e.isScroll=!0)})},methods:{selectTab:function(e){this.activeIndex=e,this.activeKey=this.tabs[e].key,this.$broadcast("activeKey",this.activeKey),this.$emit("tabclick",this.activeKey)},before:function(){this.tab_transform>0&&(this.tab_transform+=-1*this.moveWidth)},next:function(){this.tabWrap=this.$el.querySelector(".ant-tabs-nav-scroll").offsetWidth,this.moveWidth=Math.floor(this.tabWrap/(this.tabWidth+24))*(this.tabWidth+24),this.tab_transform+this.tabWrap<this.nav_w&&(this.tab_transform+=this.moveWidth)}},computed:{tabsCls:function(){var e={small:"mini"}[this.size];return[this.prefix,this.prefix+"-top",this.prefix+"-line",(0,o.default)({},this.prefix+"-"+e,e)];
	},containerCls:function(){return["ant-tabs-nav-container",{"ant-tabs-nav-container-scrolling":this.isScroll}]},barSty:function(){return{transform:"translate3d("+(this.tabWidth+this.tabMarginRight)*this.activeIndex+"px, 0px, 0px)",width:this.tabWidth+"px"}},contentSty:function(){return{"margin-left":-100*this.activeIndex+"%"}},tabSty:function(){return{transform:"translate3d("+this.tabWidth*-5+"px, 0px, 0px)"}}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={name:"v-tag",props:{color:{type:String},closable:{type:Boolean,default:!1}},data:function(){return{prefix:"ant-tag",show:!0}},computed:{wrapClasses:function(){return[this.prefix,(0,o.default)({},this.prefix+"-"+this.color,this.color)]}},methods:{remove:function(){this.show=!1,this.$emit("close")}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(135),o=i(r),s=n(20);t.default={name:"v-time-picker",data:function(){return{prefix:"ant-time-picker",style:{},dropDown:!1,container:null,selected:!1}},props:{popupContainer:{type:Function,default:function(){return document.body}},position:{type:String,default:"absolute"},size:String,format:String,disabled:Boolean,value:String,hideDisabledOptions:{type:Boolean,default:!1},disabledHours:Function,disabledMinutes:Function,disabledSeconds:Function},created:function(){document.addEventListener("click",this.backdrop)},computed:{wrapClasses:function(){return[this.prefix,this.prefix+"-"+this.size]}},ready:function(){var e=this;this.container=this.popupContainer(),this.$els.timePickerOption.style.position=this.position,this.container.appendChild(this.$els.timePickerOption),this.$nextTick(function(){e.setPosition()});var t=null;window.addEventListener("resize",function(){clearTimeout(t),t=setTimeout(function(){e.disabled||e.setPosition()},200)})},beforeDestroy:function(){document.removeEventListener("click",this.backdrop),window.removeEventListener("resize",this.backdrop);var e=this.$els.timePickerOption;e&&document.body.removeChild(e)},methods:{timePicker:function(){this.selected=!this.selected},setPosition:function(){if(this.$el){var e=(0,s.getOffset)(this.$els.timePicker,this.container);this.$set("style",{top:e.top+"px",left:e.left+"px"})}},backdrop:function(e){(0,s.closeByElement)(e.target,[this.$els.timePicker,this.$els.timePickerOption])||this.$set("selected",!1)}},components:{timePickerNode:o.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r);t.default={data:function(){return{H:"00",M:"00",S:"00",hasSeconds:!0}},props:{prefix:{type:String,default:"ant-time-picker-panel"},selected:Boolean,localFormat:{type:String,default:"HH:mm:ss"},value:String,hideDisabled:{type:Boolean,default:!1},timeValue:String,disabledH:Function,disabledM:Function,disabledS:Function},computed:{wrapClasses:function(){return[""+this.prefix+(this.prefix.includes("-panel")?"":"-panel"),this.prefix+"-placement-bottomLeft",(0,o.default)({},this.prefix+"-narrow",!this.hasSeconds)]}},watch:{selected:function(e){if(e){if(this.timeValue){var t=this.timeValue.split(":");t[0]&&this.$set("H",t[0]),t[1]&&this.$set("M",t[1]),t[2]&&this.$set("S",t[2])}else{var n=new Date;this.$set("H",this.dealTime(n.getHours())),this.$set("M",this.dealTime(n.getMinutes())),this.$set("S",this.dealTime(n.getSeconds()))}this.$nextTick(function(){var e=document.getElementsByClassName(this.prefix+"-select-option-selected");for(var t in e)this.setScrollTop(e[t])}),"HH:mm"===this.localFormat&&this.$set("hasSeconds",!1),this.createSelection(this.$els.timePickerPanel)}}},methods:{timePicker:function(e,t){t.target.classList.contains(this.prefix+"-select-option-disabled")||(this.setScrollTop(t.target),this.$set(e,t.target.textContent),this.hasSeconds?this.$set("timeValue",this.H+":"+this.M+":"+this.S):this.$set("timeValue",this.H+":"+this.M))},setScrollTop:function(e){var t=e.offsetTop;e.parentElement&&(e.parentElement.parentElement.scrollTop=t)},selectedCls:function(e,t,n){var i;return i={},(0,o.default)(i,this.prefix+"-select-option-selected",1*t===1*e),(0,o.default)(i,this.prefix+"-select-option-disabled",this["disabled"+n]&&this["disabled"+n](1*t)),i},showLi:function(e,t){var n=!0;return this.hideDisabled&&this["disabled"+t]&&this["disabled"+t](1*e)&&(n=!1),n},clearTime:function(){this.$set("timeValue",""),this.$set("selected",!1)},dealTime:function(e){var t=e;return e<10&&(t="0"+t),t},createSelection:function(e,t,n){if(e.createTextRange){var i=e.createTextRange();i.collapse(!0),i.moveStart("character",t),i.moveEnd("character",n),i.select(),e.focus()}else e.setSelectionRange?(e.focus(),e.setSelectionRange(t,n)):"undefined"!=typeof e.selectionStart&&(e.selectionStart=t,e.selectionEnd=n,e.focus())}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),o=i(r),s=n(3);t.default={name:"v-timeline-item",props:(0,s.defaultProps)({prefixCls:"ant-timeline",color:"blue",last:!1,pending:Boolean,dot:String}),computed:{itemClassName:function(){return[this.prefixCls+"-item",(0,o.default)({},this.prefixCls+"-item-last",this.last),(0,o.default)({},this.prefixCls+"-item-pending",this.pending)]},dotClassName:function(){return[this.prefixCls+"-item-head",this.prefixCls+"-item-head-"+this.color,(0,o.default)({},this.prefixCls+"-item-head-custom",this.dot)]}},methods:{compile:function(e){if(e)return e}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(){}Object.defineProperty(t,"__esModule",{value:!0});var o=n(3),s=n(81),a=i(s),l=n(560),u=i(l);t.default={props:(0,o.defaultProps)({prefixCls:"",dataSource:[],handleSelect:r,handleSelectAll:r,checkedKeys:[],render:r,filter:"",titleText:"",handleFilter:r,handleClear:r,style:Object,className:"",showSearch:!1,searchPlaceholder:"",notFoundContent:"",filterOption:Function,hasFooter:!1}),data:function(){return{checkAll:!1,checkPart:!1,disabled:!1,filteredDataSource:[],showItems:[]}},created:function(){this.setFilteredDataSource()},watch:{checkedKeys:function(){var e=this.getCheckStatus(this.filteredDataSource);this.checkAll="all"===e,this.checkPart="part"===e},dataSource:function(){this.setFilteredDataSource()},filter:function(){this.setFilteredDataSource()}},methods:{showLabel:function(e){var t=this.render(e);return t.label?t.label:t},setFilteredDataSource:function(){var e=this;this.filteredDataSource=[],this.showItems=this.dataSource.map(function(t){var n=e.render(t),i=void 0,r=void 0;return n.value?(i=n.value,r=n.label):(i=n,r=n),e.filter&&e.filter.trim()&&!e.matchFilter(t,i,e.filter)?null:(e.filteredDataSource.push(t),t)}).filter(function(e){return!!e})},isCheck:function(e){return this.checkedKeys.some(function(t){return t===e.key})},select:function(e){var t=this.checkedKeys.some(function(t){return t===e.key});this.handleSelect(e,!t)},selectAll:function(){this.handleSelectAll(this.filteredDataSource,this.checkAll)},getCheckStatus:function(e){var t=this;return 0===this.checkedKeys.length?"none":e.every(function(e){return t.checkedKeys.indexOf(e.key)>=0})?"all":"part"},matchFilter:function(e,t,n){return this.filterOption?this.filterOption(n,e):t.indexOf(n)>=0}},components:{vCheckbox:a.default,vSearch:u.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(){}Object.defineProperty(t,"__esModule",{value:!0});var o=n(3),s=n(52),a=i(s),l=n(21),u=i(l);t.default={props:(0,o.defaultProps)({prefixCls:"",operations:[],leftActive:!1,rightActive:!1,moveToLeft:r,moveToRight:r}),data:function(){return{}},components:{vButton:a.default,vIcon:u.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(){}Object.defineProperty(t,"__esModule",{value:!0});var o=n(3),s=n(21),a=i(s);t.default={props:(0,o.defaultProps)({prefixCls:"",placeholder:[],onChange:r,handleClear:r,value:"",searchPlaceholder:""}),data:function(){return{}},methods:{handleChange:function(){this.onChange(this.value)},clear:function(e){e.preventDefault(),this.handleClear()}},components:{vIcon:a.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(){}Object.defineProperty(t,"__esModule",{value:!0});var o=n(493),s=i(o),a=n(3),l=n(558),u=i(l),c=n(559),d=i(c);t.default={name:"v-transfer",props:(0,a.defaultProps)({prefixCls:"ant-transfer",dataSource:[],render:r,targetKeys:[],onChange:r,listStyle:Object,className:String,titles:["源列表","目的列表"],operations:[],showSearch:!1,filterOption:Function,searchPlaceholder:"请输入搜索内容",notFoundContent:"列表为空",footer:r}),data:function(){return{leftCheckedKeys:[],rightCheckedKeys:[],leftDataSource:[],rightDataSource:[],leftActive:!1,rightActive:!1,leftFilter:"",rightFilter:"",hasFooter:!1}},ready:function(){this.hasFooter=!!this._slotContents&&!!this._slotContents.default},watch:{leftCheckedKeys:function(){this.leftActive=this.leftCheckedKeys.length>0},rightCheckedKeys:function(){this.rightActive=this.rightCheckedKeys.length>0},targetKeys:function(){this.splitDataSource()}},created:function(){var e=this;this.leftCheckedKeys=this.leftCheckedKeys.filter(function(t){return e.dataSource.filter(function(e){return e.key===t}).length}).filter(function(t){return 0===e.targetKeys.filter(function(e){return e===t}).length}),this.rightCheckedKeys=this.rightCheckedKeys.filter(function(t){return e.dataSource.filter(function(e){return e.key===t}).length}).filter(function(t){return e.targetKeys.filter(function(e){return e===t}).length>0}),this.splitDataSource()},methods:{splitDataSource:function(){var e=this;this.leftDataSource=[].concat((0,s.default)(this.dataSource)),this.rightDataSource=[],this.targetKeys.length>0&&this.targetKeys.forEach(function(t){e.rightDataSource.push(e.leftDataSource.filter(function(n,i){return n.key===t&&(e.leftDataSource.splice(i,1),!0)})[0])})},handleLeftSelect:function(e,t){this.handleSelect("left",e,t)},handleRightSelect:function(e,t){this.handleSelect("right",e,t)},handleSelect:function(e,t,n){var i=this.leftCheckedKeys,r=this.rightCheckedKeys,o="left"===e?[].concat((0,s.default)(i)):[].concat((0,s.default)(r)),a=void 0;o.forEach(function(e,n){e===t.key&&(a=n)}),a>-1&&o.splice(a,1),n&&o.push(t.key),this[e+"CheckedKeys"]=o},handleSelectAll:function(e,t,n){var i=n?[]:t.map(function(e){return e.key});this[e+"CheckedKeys"]=i},handleLeftSelectAll:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];this.handleSelectAll.apply(this,["left"].concat(t))},handleRightSelectAll:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];this.handleSelectAll.apply(this,["right"].concat(t))},moveTo:function(e){var t=this.targetKeys,n="right"===e?"leftCheckedKeys":"rightCheckedKeys",i=this[n],r="right"===e?i.concat(t):t.filter(function(e){return!i.some(function(t){return e===t})});this[n]=[],this.onChange(r,e,i)},moveToLeft:function(){this.moveTo("left")},moveToRight:function(){this.moveTo("right")},handleLeftClear:function(){this.leftFilter=""},handleRightClear:function(){this.rightFilter=""},handleLeftFilter:function(e){this.leftFilter=e},handleRightFilter:function(e){this.rightFilter=e}},components:{list:u.default,operation:d.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(82),o=i(r),s=n(54),a=i(s),l=n(10),u=i(l);t.default={name:"v-tree",data:function(){return{prefix:"ant-tree"}},props:{key:{type:String,default:"0"},dataSource:{type:Array,default:function(){return[]}},multiple:{type:Boolean,default:!1},checkable:{type:Boolean,default:!1},onSelect:Function,onCheck:Function},computed:{treeCls:function(){return"0"===this.key?this.prefix:this.prefix+"-child-tree"}},watch:{dataSource:function(){"0"===this.key&&(this.setKey(),this.preHandle())}},ready:function(){var e=this;this.setKey(),this.preHandle(),this.$on("nodeSelected",function(t,n){if("0"!==e.key)return!0;if(!e.multiple&&n){if(e!==t)for(var i=0;i<e.dataSource.length;i++)e.$set("dataSource["+i+"].selected",!1);e.$broadcast("cancelSelected",t)}e.onSelect&&e.$nextTick(function(){e.onSelect(e.getSelectedNodes())})}),this.$on("cancelSelected",function(t){if(e.$broadcast("cancelSelected",t),e!==t)for(var n=0;n<e.dataSource.length;n++)e.$set("dataSource["+n+"].selected",!1)}),this.$on("parentChecked",function(t,n){if(e.key==n||e.key.startsWith(n+".")){for(var i=0;i<e.dataSource.length;i++)e.$set("dataSource["+i+"].checked",t),e.$set("dataSource["+i+"].childrenCheckedStatus",t?2:0);e.$broadcast("parentChecked",t,n)}}),this.$on("childChecked",function(t,n){if("0"===e.key&&e.onCheck&&e.$nextTick(function(){e.onCheck(e.getCheckedNodes())}),e!==t){var i=!0,r=!1,o=void 0;try{for(var s,l=(0,u.default)(e.dataSource.entries());!(i=(s=l.next()).done);i=!0){var c=(0,a.default)(s.value,2),d=c[0],f=c[1];if(e.key+"."+d==n){var p=e.getChildrenCheckedStatus(f.node);p!=f.childrenCheckedStatus&&(e.$set("dataSource["+d+"].checked",!!p),e.$set("dataSource["+d+"].childrenCheckedStatus",p),"0"!==e.key&&e.$dispatch("childChecked",e,e.key))}}}catch(e){r=!0,o=e}finally{try{!i&&l.return&&l.return()}finally{if(r)throw o}}}})},methods:{setKey:function(){for(var e=0;e<this.dataSource.length;e++)this.dataSource[e].key=this.key+"."+e},preHandle:function(){var e=!0,t=!1,n=void 0;try{for(var i,r=(0,u.default)(this.dataSource.entries());!(e=(i=r.next()).done);e=!0){var o=(0,a.default)(i.value,2),s=o[0],l=o[1];if(l.node&&l.node.length)if(l.checked&&!l.childrenCheckedStatus)this.$set("dataSource["+s+"].childrenCheckedStatus",2),this.$broadcast("parentChecked",!0,this.key+"."+s);else{var c=this.getChildrenCheckedStatus(l.node);this.$set("dataSource["+s+"].childrenCheckedStatus",c),0!==c&&this.$set("dataSource["+s+"].checked",!0)}else this.$set("dataSource["+s+"].isLeaf",!0),this.$set("dataSource["+s+"].childrenCheckedStatus",2)}}catch(e){t=!0,n=e}finally{try{!e&&r.return&&r.return()}finally{if(t)throw n}}},setExpand:function(e,t){e||this.$set("dataSource["+t+"].expand",!this.dataSource[t].expand)},setSelect:function(e,t){if(!e){var n=!this.dataSource[t].selected;if(this.multiple||!n)this.$set("dataSource["+t+"].selected",n);else for(var i=0;i<this.dataSource.length;i++)i==t?this.$set("dataSource["+i+"].selected",!0):this.$set("dataSource["+i+"].selected",!1);this.$dispatch("nodeSelected",this,n)}},setCheck:function(e,t){if(!e){var n=!this.dataSource[t].checked;this.$set("dataSource["+t+"].checked",n),this.$set("dataSource["+t+"].childrenCheckedStatus",n?2:0),this.$dispatch("childChecked",this,this.key),this.$broadcast("parentChecked",n,this.key+"."+t)}},getNodes:function(e,t){e=e||this.dataSource;var n=[],i=!0,r=!1,s=void 0;try{for(var l,c=(0,u.default)(e);!(i=(l=c.next()).done);i=!0){var d=l.value,f=!0,p=!0,h=!1,v=void 0;try{for(var m,y=(0,u.default)((0,o.default)(t));!(p=(m=y.next()).done);p=!0){var g=(0,a.default)(m.value,2),x=g[0],b=g[1];if(d[x]!=b){f=!1;break}}}catch(e){h=!0,v=e}finally{try{!p&&y.return&&y.return()}finally{if(h)throw v}}f&&n.push(d),d.node&&d.node.length&&(n=n.concat(this.getNodes(d.node,t)))}}catch(e){r=!0,s=e}finally{try{!i&&c.return&&c.return()}finally{if(r)throw s}}return n},getSelectedNodes:function(){return this.getNodes(this.dataSource,{selected:!0})},getCheckedNodes:function(){return this.getNodes(this.dataSource,{checked:!0,childrenCheckedStatus:2})},getChildrenCheckedStatus:function(e){var t=0,n=!0,i=!0,r=!1,o=void 0;try{for(var s,a=(0,u.default)(e);!(i=(s=a.next()).done);i=!0){var l=s.value;l.checked&&t++,2!==l.childrenCheckedStatus&&(n=!1)}}catch(e){r=!0,o=e}finally{try{!i&&a.return&&a.return()}finally{if(r)throw o}}return t==e.length?n?2:1:t>0?1:0}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),o=i(r),s=n(367),a=i(s),l=n(125),u=i(l),c=n(3);t.default={name:"v-tree-select",props:(0,c.defaultProps)({data:[],open:!1,popupContainer:function(){return document.body},position:"absolute",value:[],multiple:!1,treeCheckable:!1,allowClear:!1,onSelect:function(){}}),ready:function(){var e=this;document.addEventListener("click",function(){return e.open=!1}),this.multiple?(this.setValueByCheck(this.data),this.treeCheckable=!0):this.setValueBySelect(this.data)},methods:{setValueBySelect:function(e){var t=!1,n=!0,i=!1,r=void 0;try{for(var s,a=(0,o.default)(e);!(n=(s=a.next()).done);n=!0){var l=s.value;if(l.selected){var u=[{text:l.title,uid:l.key}];this.value=u,t=!0;break}if(l.node&&this.setValueBySelect(l.node)){t=!0;break}}}catch(e){i=!0,r=e}finally{try{!n&&a.return&&a.return()}finally{if(i)throw r}}return t},setValueByCheck:function(e){var t=!0,n=!1,i=void 0;try{for(var r,s=(0,o.default)(e);!(t=(r=s.next()).done);t=!0){var a=r.value;a.checked&&2==a.childrenCheckedStatus?this.value.push({text:a.title,uid:a.key}):a.node&&this.setValueByCheck(a.node)}}catch(e){n=!0,i=e}finally{try{!t&&s.return&&s.return()}finally{if(n)throw i}}},select:function(e){if(!this.multiple){var t=[];e[0]&&t.push({text:e[0].title,uid:e[0].key}),this.value=t,this.onSelect(e[0]),this.$refs.select.openDropdown()}},check:function(e){if(this.multiple){for(var t=[],n=0;n<e.length;n++)t.push(e[n].key);for(var i=[],r=[],o=function(n){return t.some(function(t){return t!==e[n].key&&e[n].key.startsWith(t)})?"continue":(i.push({text:e[n].title,uid:e[n].key}),void r.push(e[n]))},s=0;s<e.length;s++){o(s)}this.value=i,this.onSelect(r)}},clear:function(e){var t=[],n=!0,i=!1,r=void 0;try{for(var s,a=(0,o.default)(e);!(n=(s=a.next()).done);n=!0){var l=s.value;t.push(l.uid)}}catch(e){i=!0,r=e}finally{try{!n&&a.return&&a.return()}finally{if(i)throw r}}this.resetTreeData(t,this.data)},resetTreeData:function(e,t){for(var n=0;n<t.length;n++){var i=e.indexOf(t[n].key);i!==-1&&(this.multiple?this.setCheck(t[n].key):t[n].selected=!1,e.splice(i,1)),t[n].node&&this.resetTreeData(e,t[n].node)}},setCheck:function(e){for(var t=e.split("."),n=this.$refs.tree,i=1;i<t.length-1;i++)n=n.$children[t[i]];var r=n.dataSource[t[i]];n.setCheck(r.disabled,t[i])}},components:{baseSelect:a.default,vTree:u.default}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),o=n(409),s=i(o),a=n(410),l=i(a);t.default={props:(0,r.defaultProps)({action:String,name:String,multiple:Boolean,data:Object,onStart:function(){},onProgress:function(){},onSuccess:function(){},onError:function(){},beforeUpload:function(){}}),methods:{_onChange:function(e){var t=e.target.files;this._uploadFiles(t)},_onClick:function(){var e=this.$els.file;e&&(e.click(),e.value="")},_onKeyDown:function(e){"Enter"===e.key&&this._onClick()},_onFileDrop:function(e){if("dragover"===e.type)return e.preventDefault();var t=e.dataTransfer.files;this._uploadFiles(t),e.preventDefault()},_uploadFiles:function(e){var t=e.length;if(t>0){for(var n=0;n<t;n++){var i=e.item(n);i.uid=(0,l.default)(),this._upload(i)}this.multiple?this.onStart(Array.prototype.slice.call(e)):this.onStart(Array.prototype.slice.call(e)[0])}},_upload:function(e){var t=this;if(!this.beforeUpload)return this._post(e);var n=this.beforeUpload(e);n&&n.then?n.then(function(){t._post(e)}):n!==!1&&this._post(e)},_post:function(e){var t=this,n=this.data;"function"==typeof n&&(n=n()),(0,s.default)({action:this.action,filename:this.name,file:e,data:n,onProgress:function(n){t.onProgress(n,e)},onSuccess:function(n){t.onSuccess(n,e)},onError:function(n,i){t.onError(n,i,e)}})}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),o=n(21),s=i(o);t.default={props:(0,r.defaultProps)({prefixCls:"ant-upload",items:[],onRemove:function(){}}),components:{vIcon:s.default},methods:{_handleClose:function(e){this.onRemove(e)}}}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){return{lastModified:e.lastModified,lastModifiedDate:e.lastModifiedDate,name:e.filename||e.name,size:e.size,type:e.type,uid:e.uid,response:e.response,error:e.error}}Object.defineProperty(t,"__esModule",{value:!0});var o=n(4),s=i(o),a=n(3),l=n(564),u=i(l),c=n(565),d=i(c),f=n(407),p=i(f);t.default={name:"v-upload",props:(0,a.defaultProps)({prefixCls:"ant-upload",type:"select",name:"",forceAjax:!1,multipart:!1,action:"",data:{},accept:"",multiple:!1,fileList:Array,defaultFileList:Array,beforeUpload:function(){},onChange:function(){}}),components:{AjaxUpload:u.default,UploadList:d.default},computed:{isDrag:function(){return"drag"===this.type},wrapClasses:function(){return[this.prefixCls,(0,s.default)({},this.prefixCls+"-drag",this.isDrag),(0,s.default)({},this.prefixCls+"-select",!this.isDrag)]},containerClasses:function(){return(0,s.default)({},this.prefixCls+"-drag-container",this.isDrag)}},beforeCompile:function(){this.$set("fileList",this.fileList||this.defaultFileList||[])},methods:{_onStart:function(e){var t=void 0,n=this.fileList.concat();e.length>0?(t=e.map(function(e){return e=r(e),e.status="uploading",e}),n=n.concat(e)):(t=r(e),t.status="uploading",n.push(t)),this._onChange({file:t,fileList:n})},_onProgress:function(e,t){var n=this.fileList,i=(0,p.default)(t,n);i&&this._onChange({event:e,file:t,fileList:this.fileList})},_onSuccess:function(e,t){try{"string"==typeof e&&JSON.parse(e)}catch(n){return void this._onError(new Error("No response"),e,t)}var n=this.fileList,i=(0,p.default)(t,n);i&&(i.status="done",i.response=e,this._onChange({file:i,fileList:n}))},_onError:function(e,t,n){var i=this.fileList,r=(0,p.default)(n,i);r.error=e,r.response=t,r.status="error",this._handleRemove(r)},_removeFile:function(e){var t=this.fileList,n=(0,p.default)(e,t),i=t.indexOf(n);return i!==-1?(t.splice(i,1),t):null},_handleRemove:function(e){var t=this._removeFile(e);t&&this._onChange({file:e,fileList:t})},_handleManualRemove:function(e){e.status="removed",this._handleRemove(e)},_getFilePlainObject:function(e){var t=[];return e.forEach(function(e){t.push({name:e.name,size:e.size,status:e.status,type:e.type,uid:e.uid,response:e.response})}),t},_onChange:function(e){if(e.fileList){var t=e.fileList;t=this._getFilePlainObject(t),this.$set("fileList",t)}this.onChange(e)}}}},function(e,t,n){e.exports={default:n(271),__esModule:!0}},function(e,t,n){e.exports={default:n(279),__esModule:!0}},function(e,t,n){e.exports={default:n(280),__esModule:!0}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n(13),o=i(r);t.default=o.default||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n(489),o=i(r);t.default=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return(0,o.default)(e)}},function(e,t,n){e.exports=n(137)},function(e,t,n){var i,r,o={};i=n(352),r=n(150),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(419),r=n(151),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(420),r=n(152),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(421),r=n(153),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(422),r=n(154),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(423),r=n(155),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(424),r=n(156),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(425),r=n(157),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(426),r=n(158),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(427),r=n(159),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(428),r=n(160),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(429),r=n(161),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(430),r=n(162),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};n(146),i=n(431),r=n(163),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(432),r=n(164),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(353),r=n(165),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(354),r=n(166),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(355),r=n(167),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(433),r=n(168),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(434),r=n(169),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(436),r=n(171),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(437),r=n(172),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};n(145),i=n(356),r=n(174),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};n(149),i=n(357),r=n(230),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(439),r=n(175),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(442),r=n(178),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(443),r=n(179),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),
	Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(444),r=n(180),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(445),r=n(181),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(446),r=n(182),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(447),r=n(183),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(448),r=n(184),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(449),r=n(185),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(450),r=n(186),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(451),r=n(187),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(452),r=n(188),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(453),r=n(189),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(454),r=n(190),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(455),r=n(191),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(456),r=n(192),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(359),r=n(194),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(457),r=n(195),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(458),r=n(196),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(459),r=n(197),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(460),r=n(198),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(461),r=n(199),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(360),r=n(201),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(361),r=n(202),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(463),r=n(203),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(465),r=n(205),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(466),r=n(206),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};n(148),i=n(467),r=n(229),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(468),r=n(207),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(469),r=n(208),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(470),r=n(209),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(471),r=n(210),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(472),r=n(211),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(473),r=n(212),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(474),r=n(213),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(475),r=n(214),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};n(147),i=n(476),r=n(215),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(477),r=n(216),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(362),r=n(218),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(480),r=n(220),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(481),r=n(221),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(482),r=n(222),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(483),r=n(223),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(484),r=n(224),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(485),r=n(225),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(486),r=n(226),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(487),r=n(227),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})},function(e,t,n){var i,r,o={};i=n(488),r=n(228),e.exports=i||{},e.exports.__esModule&&(e.exports=e.exports.default);var s="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;r&&(s.template=r),s.computed||(s.computed={}),Object.keys(o).forEach(function(e){var t=o[e];s.computed[e]=function(){return t}})}])});

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	//import Navigator from '../src/Navigator/Navigator';
	var Vue = __webpack_require__(6);
	var Application_1 = __webpack_require__(5);
	var AggregatesMenu_component_1 = __webpack_require__(101);
	var application = Application_1.default.getInstance();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(103),
	    data: function () {
	        return {};
	    },
	    props: {
	        userImg: String
	    },
	    components: {
	        AggregatesMenu: AggregatesMenu_component_1.default
	    }
	});


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var AggregatesMetadata_1 = __webpack_require__(24);
	var Vue = __webpack_require__(6);
	var trees_1 = __webpack_require__(89);
	var aggregatesMetadata = AggregatesMetadata_1.default.getInstance();
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Vue.extend({
	    template: __webpack_require__(102),
	    data: function () {
	        return {
	            links: [],
	        };
	    },
	    ready: function () {
	        var links = [];
	        links.push({
	            label: 'Ui',
	            route: {
	                name: 'ui',
	                params: {
	                    name: 'ui'
	                }
	            }
	        });
	        for (var _i = 0, _a = aggregatesMetadata.all(); _i < _a.length; _i++) {
	            var metadata = _a[_i];
	            links.push({
	                label: metadata.collectionLabel,
	                route: {
	                    name: 'entities',
	                    params: {
	                        name: metadata.plural
	                    }
	                }
	            });
	        }
	        for (var _b = 0, TREES_METADATA_1 = trees_1.TREES_METADATA; _b < TREES_METADATA_1.length; _b++) {
	            var metadata = TREES_METADATA_1[_b];
	            links.push({
	                label: metadata.collectionLabel,
	                route: {
	                    name: 'tree',
	                    params: {
	                        name: metadata.plural
	                    }
	                }
	            });
	        }
	        console.log(links);
	        this.links = links;
	    }
	});


/***/ },
/* 102 */
/***/ function(module, exports) {

	module.exports = "<ul id=\"main-menu\" class=\"sidebar-menu\">\r\n    <li class=\"header\">聚合</li>\r\n    <li v-for=\"link in links\">\r\n        <a v-link=\"link.route\">\r\n            <i class=\"fa fa-th\"></i> <span>{{link.label}}</span>\r\n        </a>\r\n    </li>\r\n</ul>";

/***/ },
/* 103 */
/***/ function(module, exports) {

	module.exports = "<div>\r\n    <div class=\"wrapper admin-root-hook\">\r\n\r\n        <header class=\"main-header\">\r\n            <!-- Logo -->\r\n            <a href=\"#\" class=\"logo\">\r\n                <!-- mini logo for sidebar mini 50x50 pixels -->\r\n                <span class=\"logo-mini\"><b>A</b>LT</span>\r\n                <!-- logo for regular state and mobile devices -->\r\n                <span class=\"logo-lg\" >\r\n                    <span style=\"font-family:'Microsoft YaHei UI'; font-weight: 500\">DDDML</span>\r\n                    <sup style=\"font-weight: 100\">.org</sup>\r\n                </span>\r\n            </a>\r\n            <!-- Header Navbar: style can be found in header.less -->\r\n            <nav class=\"navbar navbar-static-top\" role=\"navigation\">\r\n                <!-- Sidebar toggle button-->\r\n                <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\">\r\n                    <span class=\"sr-only\">Toggle navigation</span>\r\n                    <span class=\"icon-bar\"></span>\r\n                    <span class=\"icon-bar\"></span>\r\n                    <span class=\"icon-bar\"></span>\r\n                </a>\r\n\r\n                <div class=\"navbar-custom-menu\">\r\n                    <ul class=\"nav navbar-nav\">\r\n                        <!-- User Account: style can be found in dropdown.less -->\r\n                        <li class=\"dropdown user user-menu\">\r\n                            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                <img :src=\"userImg | default 'css/admin-lte/img/user2-160x160.jpg'\"\r\n                                     class=\"user-image\" alt=\"User Image\">\r\n                                <!--<img src=\"css/admin-lte/img/user2-160x160.jpg\" class=\"user-image\" alt=\"User Image\">-->\r\n                                <span class=\"hidden-xs\">张三</span>\r\n                            </a>\r\n                            <ul class=\"dropdown-menu\">\r\n                                <!-- User image -->\r\n                                <li class=\"user-header\">\r\n                                    <img :src=\"userImg | default 'css/admin-lte/img/user2-160x160.jpg'\"\r\n                                         class=\"img-circle\"\r\n                                         alt=\"User Image\">\r\n\r\n                                    <p>\r\n                                        张三 - 技术部\r\n                                        <small>注册于 2016-02-12</small>\r\n                                    </p>\r\n                                </li>\r\n                                <li class=\"user-footer\">\r\n                                    <div class=\"pull-left\">\r\n                                        <a href=\"#\" class=\"btn btn-default btn-flat\">修改资料</a>\r\n                                    </div>\r\n                                    <div class=\"pull-right\">\r\n                                        <a href=\"#\" class=\"btn btn-default btn-flat\">退出登录</a>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n\r\n        <!-- =============================================== -->\r\n\r\n        <!-- 整个视图的左侧-->\r\n        <aside class=\"main-sidebar\">\r\n            <!-- sidebar: style can be found in sidebar.less -->\r\n            <section class=\"sidebar\">\r\n                <!-- Sidebar user panel -->\r\n                <div class=\"user-panel\">\r\n                    <div class=\"pull-left image\">\r\n                        <img :src=\"userImg | default 'css/admin-lte/img/user2-160x160.jpg'\" class=\"img-circle\"\r\n                             alt=\"User Image\">\r\n                    </div>\r\n                    <div class=\"pull-left info\">\r\n                        <p>张三</p>\r\n                        <a href=\"#\"><i class=\"fa fa-circle text-success\"></i> 在线</a>\r\n                    </div>\r\n                </div>\r\n                <!-- /.search form -->\r\n                <!-- sidebar menu: : style can be found in sidebar.less -->\r\n                <aggregates-menu></aggregates-menu>\r\n            </section>\r\n        </aside>\r\n\r\n        <!-- =============================================== -->\r\n\r\n        <router-view></router-view>\r\n\r\n        <footer class=\"main-footer\">\r\n            <div class=\"pull-right hidden-xs\">\r\n                <b>Version</b> 0.0.1\r\n            </div>\r\n            <strong>Copyright &copy; 2016 <a href=\"http://jizhijike.com\">DDDML.org</a>.</strong> All rights\r\n            reserved.\r\n        </footer>\r\n    </div>\r\n</div>\r\n";

/***/ }
/******/ ]);